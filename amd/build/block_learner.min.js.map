{"version":3,"sources":["block_learner.js"],"names":["define","$","ApexCharts","Common","CFG","allGraphs","flatpickr","charts","courseprogress","timespentonlms","filter","course","date","lineChartDefault","series","chart","type","height","dropShadow","enabled","color","top","left","blur","opacity","toolbar","show","tools","download","reset","zoom","markers","size","tooltip","enabledOnSeries","undefined","shared","followCursor","intersect","inverseOrder","fillSeriesColor","onDatasetHover","highlightDataSeries","items","display","fixed","position","offsetX","offsetY","y","title","stroke","curve","width","grid","borderColor","xaxis","categories","labels","hideOverlappingLabels","datetimeFormatter","year","month","day","hour","legend","floating","dataLabels","barChartDefault","marker","trim","rotate","noData","text","M","util","get_string","pieChartDefault","SELECTOR","PANEL","DATE","DATEMENU","DATEITEM","DATEPICKER","DATEPICKERINPUT","COURSE","GRAPH","GRAPHS","FILTERS","TIMESPENTONLMS","COURSEPROGRESS","PROMISE","GET_COURSEPROGRESS","ajax","url","requestUrl","requestType","dataType","requestDataType","data","action","secret","local_edwiserreports","JSON","stringify","GET_TIMESPENTONLMS","loadGraph","target","loader","exportFilter","Object","keys","map","key","join","renderGraph","graph","destroy","get","render","setTimeout","hide","find","concat","FORMFILTER","val","done","response","assign","yaxis","max","formatter","progress","name","length","colors","fail","exception","includes","indexOf","timeFormatter","timespent","initEvents","on","this","closest","removeClass","addClass","html","clear","courseid","parseInt","mode","altInput","altFormat","dateFormat","maxDate","appendTo","onOpen","onClose","dateAlternate","next","customDateSelected","init","invalidUser","select2","forEach"],"mappings":"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","sourcesContent":["define([\n    'jquery',\n    './chart/apexcharts',\n    './common',\n    './defaultconfig',\n    './select2'\n], function(\n    $,\n    ApexCharts,\n    Common,\n    CFG\n) {\n    /**\n     * List of graphs in this block.\n     */\n    var allGraphs = ['courseprogress', 'timespentonlms'];\n\n    /**\n     * Date picker.\n     */\n    var flatpickr = null;\n\n    /**\n     * Charts list.\n     */\n    var charts = {\n        'courseprogress': null,\n        'timespentonlms': null\n    };\n\n    /**\n     * Filter for ajax.\n     */\n    var filter = {\n        'courseprogress': {\n            course: 0\n        },\n        'timespentonlms': {\n            date: 'weekly'\n        }\n    };\n\n    /**\n     * Line chart default config.\n     */\n    const lineChartDefault = {\n        series: [],\n        chart: {\n            type: 'line',\n            height: 350,\n            dropShadow: {\n                enabled: true,\n                color: '#000',\n                top: 18,\n                left: 7,\n                blur: 10,\n                opacity: 0.2\n            },\n            toolbar: {\n                show: false,\n                tools: {\n                    download: false,\n                    reset: '<i class=\"fa fa-refresh\"></i>'\n                }\n            },\n            zoom: {\n                enabled: false\n            }\n        },\n        markers: {\n            size: 0\n        },\n        tooltip: {\n            enabled: true,\n            enabledOnSeries: undefined,\n            shared: true,\n            followCursor: false,\n            intersect: false,\n            inverseOrder: false,\n            fillSeriesColor: false,\n            onDatasetHover: {\n                highlightDataSeries: false,\n            },\n            items: {\n                display: 'flex'\n            },\n            fixed: {\n                enabled: false,\n                position: 'topRight',\n                offsetX: 0,\n                offsetY: 0,\n            },\n            y: {\n                title: {}\n            }\n        },\n        stroke: {\n            curve: 'smooth',\n            width: 2\n        },\n        grid: {\n            borderColor: '#e7e7e7'\n        },\n        xaxis: {\n            categories: null,\n            type: 'datetime',\n            labels: {\n                hideOverlappingLabels: true,\n                datetimeFormatter: {\n                    year: 'yyyy',\n                    month: 'MMM \\'yy',\n                    day: 'dd MMM',\n                    hour: ''\n                }\n            },\n            tooltip: {\n                enabled: false\n            }\n        },\n        legend: {\n            position: 'top',\n            floating: true\n        },\n        dataLabels: {\n            enabled: false\n        }\n    };\n\n    /**\n     * Bar chart default config.\n     */\n    const barChartDefault = {\n        series: [],\n        chart: {\n            type: 'bar',\n            height: 350,\n            toolbar: {\n                show: false,\n                tools: {\n                    download: false,\n                    reset: '<i class=\"fa fa-refresh\"></i>'\n                }\n            },\n            zoom: {\n                enabled: false\n            }\n        },\n        tooltip: {\n            enabled: true,\n            enabledOnSeries: undefined,\n            shared: true,\n            followCursor: false,\n            intersect: false,\n            inverseOrder: false,\n            fillSeriesColor: false,\n            onDatasetHover: {\n                highlightDataSeries: false,\n            },\n            marker: {\n                show: true\n            },\n            items: {\n                display: 'flex'\n            },\n            fixed: {\n                enabled: false,\n                position: 'topRight',\n                offsetX: 0,\n                offsetY: 0,\n            },\n            y: {\n                title: {}\n            }\n        },\n        grid: {\n            borderColor: '#e7e7e7'\n        },\n        dataLabels: {\n            enabled: false\n        },\n        xaxis: {\n            categories: null,\n            labels: {\n                hideOverlappingLabels: true,\n                trim: true,\n                rotate: 300\n            }\n        },\n        noData: {\n            text: M.util.get_string('nographdata', 'local_edwiserreports')\n        }\n    };\n\n    /**\n     * Pie chart default config.\n     */\n    const pieChartDefault = {\n        chart: {\n            type: 'pie',\n            height: 350\n        },\n        legend: {\n            position: 'bottom',\n            offsetY: 0\n        },\n        noData: {\n            text: M.util.get_string('nographdata', 'local_edwiserreports')\n        }\n    };\n\n    /**\n     * Selectors list.\n     */\n    var SELECTOR = {\n        PANEL: '#learnerblock',\n        DATE: '.learner-calendar',\n        DATEMENU: '.learner-calendar + .dropdown-menu',\n        DATEITEM: '.learner-calendar + .dropdown-menu .dropdown-item',\n        DATEPICKER: '.learner-calendar + .dropdown-menu .dropdown-calendar',\n        DATEPICKERINPUT: '.learner-calendar + .dropdown-menu .flatpickr',\n        COURSE: '.course-select',\n        GRAPH: '.graph',\n        GRAPHS: '.learner-graphs',\n        FILTERS: '.filters',\n        TIMESPENTONLMS: '.timespentonlms',\n        COURSEPROGRESS: '.courseprogress'\n    };\n\n    /**\n     * All promises.\n     */\n    var PROMISE = {\n        /**\n         * Get course progress using filters.\n         * @param {Object} filter Filter data\n         * @returns {PROMISE}\n         */\n        GET_COURSEPROGRESS: function(filter) {\n            return $.ajax({\n                url: CFG.requestUrl,\n                type: CFG.requestType,\n                dataType: CFG.requestDataType,\n                data: {\n                    action: 'get_learner_courseprogress_graph_data_ajax',\n                    secret: M.local_edwiserreports.secret,\n                    data: JSON.stringify({\n                        filter: filter\n                    })\n                },\n            });\n        },\n        /**\n         * Get timespent on lms using filters.\n         * @param {Object} filter Filter data\n         * @returns {PROMISE}\n         */\n        GET_TIMESPENTONLMS: function(filter) {\n            return $.ajax({\n                url: CFG.requestUrl,\n                type: CFG.requestType,\n                dataType: CFG.requestDataType,\n                data: {\n                    action: 'get_learner_timespentonlms_graph_data_ajax',\n                    secret: M.local_edwiserreports.secret,\n                    data: JSON.stringify({\n                        filter: filter\n                    })\n                },\n            });\n        },\n    }\n\n    /**\n     * Load graph\n     * @param {String} target Graph name\n     */\n    function loadGraph(target) {\n        let data;\n        Common.loader.show('#learnerblock .' + target);\n\n        // Set export filter to download link.\n        let exportFilter = Object.keys(filter[target]).map(key => filter[target][key]).join(\"-\") + '-' + target;\n        $(SELECTOR.PANEL).find(`.${target}`).find(SELECTOR.FORMFILTER).val(exportFilter);\n\n        /**\n         * Render graph.\n         * @param {DOM} graph Graph element\n         * @param {Object} data Graph data\n         */\n        function renderGraph(graph, data) {\n            if (charts[target] !== null) {\n                charts[target].destroy();\n            }\n            charts[target] = new ApexCharts(graph.get(0), data);\n            charts[target].render();\n            setTimeout(function() {\n                Common.loader.hide('#learnerblock .' + target);\n            }, 1000);\n        }\n\n        switch (target) {\n            case 'courseprogress':\n                PROMISE.GET_COURSEPROGRESS(filter[target])\n                    .done(function(response) {\n                        if (filter[target].course == 0) {\n                            data = Object.assign({}, barChartDefault);\n                            data.yaxis = {\n                                max: 100,\n                                labels: {\n                                    formatter: (progress) => {\n                                        return progress + '%';\n                                    }\n                                }\n                            };\n                            data.xaxis.categories = response.labels;\n                            data.series = [{\n                                name: M.util.get_string('courseprogress', 'local_edwiserreports'),\n                                data: response.progress,\n                            }];\n                            data.chart.toolbar.show = response.labels.length > 30;\n                            data.chart.zoom.enabled = response.labels.length > 30;\n                            data.tooltip.y.title.formatter = (title) => {\n                                return M.util.get_string('progress', 'local_edwiserreports') + ': ';\n                            }\n                        } else {\n                            data = Object.assign({}, pieChartDefault);\n                            data.colors = ['rgb(0, 227, 150)', 'rgb(254, 176, 25)'];\n                            data.labels = response.labels;\n                            data.series = response.progress;\n                        }\n                        renderGraph($(SELECTOR.PANEL).find(SELECTOR.COURSEPROGRESS).find(SELECTOR.GRAPH), data);\n                    }).fail(function(exception) {\n                        Common.loader.hide('#learnerblock .' + target);\n                    });\n                break;\n            case 'timespentonlms':\n                PROMISE.GET_TIMESPENTONLMS(filter[target])\n                    .done(function(response) {\n                        if (filter[target].date.includes(\"to\") || ['weekly', 'monthly', 'yearly'].indexOf(filter[target].date) !== -1) {\n                            data = Object.assign({}, lineChartDefault);\n                            data.yaxis = {\n                                labels: {\n                                    formatter: Common.timeFormatter\n                                }\n                            };\n                            data.xaxis.categories = response.labels;\n                            data.series = [{\n                                name: M.util.get_string('timespentonlms', 'local_edwiserreports'),\n                                data: response.timespent,\n                            }];\n                            data.chart.toolbar.show = response.labels.length > 30;\n                            data.chart.zoom.enabled = response.labels.length > 30;\n                            data.tooltip.y.title.formatter = (title) => {\n                                return M.util.get_string('time', 'local_edwiserreports') + ': ';\n                            }\n                        } else {\n                            data = Object.assign({}, pieChartDefault);\n                            data.labels = response.labels;\n                            data.series = response.timespent;\n                            data.tooltip = {\n                                y: {\n                                    formatter: Common.timeFormatter\n                                }\n                            };\n                            data.legend = {\n                                show: false\n                            };\n                        }\n                        renderGraph($(SELECTOR.PANEL).find(SELECTOR.TIMESPENTONLMS).find(SELECTOR.GRAPH), data);\n                        Common.loader.hide('#learnerblock .' + target);\n                    }).fail(function(exception) {\n                        Common.loader.hide('#learnerblock .' + target);\n                    });\n                break;\n            default:\n                Common.loader.hide('#learnerblock .' + target);\n                break;\n        }\n    }\n\n    /**\n     * After Select Custom date get active users details.\n     * @param {String} target Targeted graph\n     */\n    function customDateSelected(target) {\n        let date = $(SELECTOR.PANEL).find('.' + target).find(SELECTOR.DATEPICKERINPUT).val(); // Y-m-d format\n        let dateAlternate = $(SELECTOR.PANEL).find('.' + target).find(SELECTOR.DATEPICKERINPUT).next().val(); // d/m/Y format\n\n        // Set active class to custom date selector item.\n        $(SELECTOR.PANEL).find('.' + target).find(SELECTOR.DATEITEM).removeClass('active');\n        $(SELECTOR.PANEL).find('.' + target).find(SELECTOR.DATEITEM + '.custom').addClass('active');\n\n        // Show custom date to dropdown button.\n        $(SELECTOR.PANEL).find('.' + target).find(SELECTOR.DATE).html(dateAlternate);\n        filter[target].date = date;\n        loadGraph(target);\n    }\n\n    /**\n     * Initialize event listeners.\n     */\n    function initEvents() {\n\n        /* Date selector listener */\n        $('body').on('click', SELECTOR.DATEITEM + \":not(.custom)\", function() {\n            let target = $(this).closest(SELECTOR.FILTERS).data('id');\n            // Set custom selected item as active.\n            $(SELECTOR.PANEL).find('.' + target).find(SELECTOR.DATEITEM).removeClass('active');\n            $(this).addClass('active');\n\n            // Show selected item on dropdown button.\n            $(SELECTOR.PANEL).find('.' + target).find(SELECTOR.DATE).html($(this).text());\n\n            // Clear custom date.\n            flatpickr.clear();\n\n            // Set date.\n            filter[target].date = $(this).data('value');\n\n            // Load graph data.\n            loadGraph(target);\n        });\n\n        // Course selector listener.\n        $('body').on('change', `${SELECTOR.PANEL} ${SELECTOR.COURSE}`, function() {\n            let target = $(this).closest(SELECTOR.FILTERS).data('id');\n            let courseid = parseInt($(this).val());\n            filter[target].course = courseid;\n\n            // Load graph data.\n            loadGraph(target);\n        });\n\n        // Initialize date selector.\n        let target = 'timespentonlms';\n        flatpickr = $(SELECTOR.PANEL).find('.' + target).find(SELECTOR.DATEPICKERINPUT).flatpickr({\n            mode: 'range',\n            altInput: true,\n            altFormat: \"d/m/Y\",\n            dateFormat: \"Y-m-d\",\n            maxDate: \"today\",\n            appendTo: $(SELECTOR.PANEL).find('.' + target).find(SELECTOR.DATEPICKER).get(0),\n            onOpen: function() {\n                $(SELECTOR.PANEL).find('.' + target).find(SELECTOR.DATEMENU).addClass('withcalendar');\n            },\n            onClose: function() {\n                $(SELECTOR.PANEL).find('.' + target).find(SELECTOR.DATEMENU).removeClass('withcalendar');\n                customDateSelected(target);\n            }\n        });\n    }\n\n    /**\n     * Initialize\n     * @param {function} invalidUser Callback function\n     */\n    function init(invalidUser) {\n        if ($(SELECTOR.PANEL).length == 0) {\n            return;\n        }\n        $(SELECTOR.PANEL).find('.singleselect').select2();\n        initEvents();\n        allGraphs.forEach(function(target) {\n            loadGraph(target);\n        });\n    }\n    return {\n        init: init\n    };\n});\n"],"file":"block_learner.min.js"}