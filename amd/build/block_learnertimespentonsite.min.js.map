{"version":3,"sources":["block_learnertimespentonsite.js"],"names":["define","$","ApexCharts","Common","CFG","flatpickr","chart","filter","date","lineChartDefault","series","type","height","dropShadow","enabled","color","top","left","blur","opacity","toolbar","show","tools","download","reset","zoom","tooltip","enabledOnSeries","undefined","shared","followCursor","intersect","inverseOrder","fillSeriesColor","onDatasetHover","highlightDataSeries","items","display","fixed","position","offsetX","offsetY","y","title","stroke","curve","grid","borderColor","markers","size","xaxis","categories","labels","hideOverlappingLabels","datetimeFormatter","year","month","day","hour","legend","floating","dataLabels","colors","getColorPalette","pieChartDefault","noData","text","M","util","get_string","theme","monochrome","shadeTo","shadeIntensity","SELECTOR","PANEL","DATE","DATEMENU","DATEITEM","DATEPICKER","DATEPICKERINPUT","GRAPH","PROMISE","GET_TIMESPENTONSITE","ajax","url","requestUrl","requestType","dataType","requestDataType","data","action","secret","local_edwiserreports","JSON","stringify","loadGraph","loader","done","response","includes","indexOf","Object","assign","yaxis","formatter","timeFormatter","name","timespent","length","graph","destroy","get","render","setTimeout","hide","renderGraph","find","fail","exception","initEvents","on","this","closest","FILTERS","removeClass","addClass","html","clear","mode","altInput","altFormat","dateFormat","maxDate","appendTo","onOpen","onClose","dateAlternate","val","next","init","invalidUser"],"mappings":"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","sourcesContent":["define([\n    'jquery',\n    './chart/apexcharts',\n    './common',\n    './defaultconfig',\n    './select2'\n], function(\n    $,\n    ApexCharts,\n    Common,\n    CFG\n) {\n    /**\n     * Date picker.\n     */\n    var flatpickr = null;\n\n    /**\n     * Charts list.\n     */\n    var chart = null;\n\n    /**\n     * Filter for ajax.\n     */\n    var filter = {\n        date: 'weekly'\n    };\n\n    /**\n     * Line chart default config.\n     */\n    const lineChartDefault = {\n        series: [],\n        chart: {\n            type: 'area',\n            height: 350,\n            dropShadow: {\n                enabled: true,\n                color: '#000',\n                top: 18,\n                left: 7,\n                blur: 10,\n                opacity: 0.2\n            },\n            toolbar: {\n                show: false,\n                tools: {\n                    download: false,\n                    reset: '<i class=\"fa fa-refresh\"></i>'\n                }\n            },\n            zoom: {\n                enabled: false\n            }\n        },\n        tooltip: {\n            enabled: true,\n            enabledOnSeries: undefined,\n            shared: true,\n            followCursor: false,\n            intersect: false,\n            inverseOrder: false,\n            fillSeriesColor: false,\n            onDatasetHover: {\n                highlightDataSeries: false,\n            },\n            items: {\n                display: 'flex'\n            },\n            fixed: {\n                enabled: false,\n                position: 'topRight',\n                offsetX: 0,\n                offsetY: 0,\n            },\n            y: {\n                title: {}\n            }\n        },\n        stroke: {\n            curve: 'smooth'\n        },\n        grid: {\n            borderColor: '#e7e7e7'\n        },\n        markers: {\n            size: 1\n        },\n        xaxis: {\n            categories: null,\n            type: 'datetime',\n            labels: {\n                hideOverlappingLabels: true,\n                datetimeFormatter: {\n                    year: 'yyyy',\n                    month: 'MMM \\'yy',\n                    day: 'dd MMM',\n                    hour: ''\n                }\n            },\n            tooltip: {\n                enabled: false\n            }\n        },\n        legend: {\n            position: 'top',\n            floating: true\n        },\n        dataLabels: {\n            enabled: false\n        },\n        colors: [CFG.getColorPalette()[2]]\n    };\n\n    /**\n     * Pie chart default config.\n     */\n    const pieChartDefault = {\n        chart: {\n            type: 'pie',\n            height: 350\n        },\n        legend: {\n            position: 'bottom',\n            offsetY: 0\n        },\n        noData: {\n            text: M.util.get_string('nographdata', 'local_edwiserreports')\n        },\n        theme: {\n            monochrome: {\n                enabled: true,\n                color: CFG.getColorPalette()[2],\n                shadeTo: 'light',\n                shadeIntensity: 0.65\n            },\n        }\n    };\n\n    /**\n     * Selectors list.\n     */\n    var SELECTOR = {\n        PANEL: '#learnertimespentonsiteblock',\n        DATE: '.learnertimespentonsite-calendar',\n        DATEMENU: '.learnertimespentonsite-calendar + .dropdown-menu',\n        DATEITEM: '.learnertimespentonsite-calendar + .dropdown-menu .dropdown-item',\n        DATEPICKER: '.learnertimespentonsite-calendar + .dropdown-menu .dropdown-calendar',\n        DATEPICKERINPUT: '.learnertimespentonsite-calendar + .dropdown-menu .flatpickr',\n        GRAPH: '#apex-chart-learnertimespentonsite-block',\n    };\n\n    /**\n     * All promises.\n     */\n    var PROMISE = {\n        /**\n         * Get timespent on site using filters.\n         * @param {Object} filter Filter data\n         * @returns {PROMISE}\n         */\n        GET_TIMESPENTONSITE: function(filter) {\n            return $.ajax({\n                url: CFG.requestUrl,\n                type: CFG.requestType,\n                dataType: CFG.requestDataType,\n                data: {\n                    action: 'get_learnertimespentonsite_graph_data_ajax',\n                    secret: M.local_edwiserreports.secret,\n                    data: JSON.stringify({\n                        filter: filter\n                    })\n                },\n            });\n        },\n    }\n\n    /**\n     * Load graph\n     */\n    function loadGraph() {\n        let data;\n        Common.loader.show(SELECTOR.PANEL);\n\n        /**\n         * Render graph.\n         * @param {DOM} graph Graph element\n         * @param {Object} data Graph data\n         */\n        function renderGraph(graph, data) {\n            if (chart !== null) {\n                chart.destroy();\n            }\n            chart = new ApexCharts(graph.get(0), data);\n            chart.render();\n            setTimeout(function() {\n                Common.loader.hide(SELECTOR.PANEL);\n            }, 1000);\n        }\n        PROMISE.GET_TIMESPENTONSITE(filter)\n            .done(function(response) {\n                if (filter.date.includes(\"to\") || ['weekly', 'monthly', 'yearly'].indexOf(filter.date) !== -1) {\n                    data = Object.assign({}, lineChartDefault);\n                    data.yaxis = {\n                        labels: {\n                            formatter: Common.timeFormatter\n                        }\n                    };\n                    data.xaxis.categories = response.labels;\n                    data.series = [{\n                        name: M.util.get_string('timespentonlms', 'local_edwiserreports'),\n                        data: response.timespent,\n                    }];\n                    data.chart.toolbar.show = response.labels.length > 30;\n                    data.chart.zoom.enabled = response.labels.length > 30;\n                    data.tooltip.y.title.formatter = (title) => {\n                        return M.util.get_string('time', 'local_edwiserreports') + ': ';\n                    }\n                } else {\n                    data = Object.assign({}, pieChartDefault);\n                    data.labels = response.labels;\n                    data.series = response.timespent;\n                    data.tooltip = {\n                        y: {\n                            formatter: Common.timeFormatter\n                        }\n                    };\n                    data.legend = {\n                        show: false\n                    };\n                }\n                renderGraph($(SELECTOR.PANEL).find(SELECTOR.GRAPH), data);\n                Common.loader.hide(SELECTOR.PANEL);\n            }).fail(function(exception) {\n                Common.loader.hide(SELECTOR.PANEL);\n            });\n    }\n\n    /**\n     * After Select Custom date get active users details.\n     * @param {String} target Targeted graph\n     */\n    function customDateSelected(target) {\n        let date = $(SELECTOR.PANEL).find(SELECTOR.DATEPICKERINPUT).val(); // Y-m-d format\n        let dateAlternate = $(SELECTOR.PANEL).find(SELECTOR.DATEPICKERINPUT).next().val(); // d/m/Y format\n\n        // Set active class to custom date selector item.\n        $(SELECTOR.PANEL).find(SELECTOR.DATEITEM).removeClass('active');\n        $(SELECTOR.PANEL).find(SELECTOR.DATEITEM + '.custom').addClass('active');\n\n        // Show custom date to dropdown button.\n        $(SELECTOR.PANEL).find(SELECTOR.DATE).html(dateAlternate);\n        filter.date = date;\n        loadGraph(target);\n    }\n\n    /**\n     * Initialize event listeners.\n     */\n    function initEvents() {\n\n        /* Date selector listener */\n        $('body').on('click', SELECTOR.DATEITEM + \":not(.custom)\", function() {\n            let target = $(this).closest(SELECTOR.FILTERS).data('id');\n            // Set custom selected item as active.\n            $(SELECTOR.PANEL).find(SELECTOR.DATEITEM).removeClass('active');\n            $(this).addClass('active');\n\n            // Show selected item on dropdown button.\n            $(SELECTOR.PANEL).find(SELECTOR.DATE).html($(this).text());\n\n            // Clear custom date.\n            flatpickr.clear();\n\n            // Set date.\n            filter.date = $(this).data('value');\n\n            // Load graph data.\n            loadGraph();\n        });\n\n        flatpickr = $(SELECTOR.PANEL).find(SELECTOR.DATEPICKERINPUT).flatpickr({\n            mode: 'range',\n            altInput: true,\n            altFormat: \"d/m/Y\",\n            dateFormat: \"Y-m-d\",\n            maxDate: \"today\",\n            appendTo: $(SELECTOR.PANEL).find(SELECTOR.DATEPICKER).get(0),\n            onOpen: function() {\n                $(SELECTOR.PANEL).find(SELECTOR.DATEMENU).addClass('withcalendar');\n            },\n            onClose: function() {\n                $(SELECTOR.PANEL).find(SELECTOR.DATEMENU).removeClass('withcalendar');\n                customDateSelected();\n            }\n        });\n    }\n\n    /**\n     * Initialize\n     * @param {function} invalidUser Callback function\n     */\n    function init(invalidUser) {\n        if ($(SELECTOR.PANEL).length == 0) {\n            return;\n        }\n\n        initEvents();\n\n        loadGraph();\n    }\n    return {\n        init: init\n    };\n});"],"file":"block_learnertimespentonsite.min.js"}