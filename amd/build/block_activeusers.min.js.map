{"version":3,"sources":["block_activeusers.js"],"names":["define","$","ApexCharts","Notification","CFG","common","activeUsersData","activeUsersGraph","panelBody","getPanel","panelFooter","chart","loader","refreshBtn","filter","timer","lineChartDefault","series","type","height","dropShadow","enabled","color","top","left","blur","opacity","toolbar","show","tools","download","reset","zoom","markers","size","tooltip","enabledOnSeries","undefined","shared","followCursor","intersect","inverseOrder","fillSeriesColor","onDatasetHover","highlightDataSeries","y","formatter","title","items","display","fixed","position","offsetX","offsetY","custom","_ref","seriesIndex","dataPointIndex","w","concat","formatDate","Date","config","xaxis","categories","index","length","data","colors","name","M","util","get_string","stroke","curve","width","lineCap","grid","borderColor","labels","hideOverlappingLabels","datetimeFormatter","year","month","day","hour","yaxis","val","toFixed","legend","horizontalAlign","itemMargin","horizontal","vertical","getColorTheme","dataLabels","init","invalidUser","getActiveUsersBlockData","hide","ajax","url","requestUrl","requestType","dataType","requestDataType","action","secret","local_edwiserreports","lang","attr","JSON","stringify","precalculated","indexOf","graphajax","done","response","error","exception","errorcode","graph","dates","map","date","insight","fail","always","destroy","get","Object","assign","labelName","activeUsers","enrolments","completionRate","getGraphData","render","find","html","clearInterval","setInterval","inceamentUpdateTime","removeClass","fadeIn","parseInt","text","getActiveUsersBlock","on","this","addClass","dateChange"],"mappings":"AAAA,aAwBAA,OAAO,CAAC,SAAU,qBAAsB,oBAAqB,kBAAmB,WAAY,eAAgB,SAAUC,EAAGC,EAAYC,EAAcC,EAAKC,GAEtJ,IAAIC,EAAkB,KAClBC,EAAmB,KACnBC,EAAYJ,EAAIK,SAAS,oBAAqB,QAC9CC,EAAcN,EAAIK,SAAS,oBAAqB,UAChDE,EAAQH,EAAY,aACpBI,EAASJ,EAAY,WACrBK,EAAaL,EAAY,YACzBM,EAAS,YACTC,EAAQ,KAKRC,EAAmB,CACrBC,OAAQ,GACRN,MAAO,CACLO,KAAM,OACNC,OAAQ,IACRC,WAAY,CACVC,SAAS,EACTC,MAAO,OACPC,IAAK,GACLC,KAAM,EACNC,KAAM,GACNC,QAAS,IAEXC,QAAS,CACPC,MAAM,EACNC,MAAO,CACLC,UAAU,EACVC,MAAO,kCAGXC,KAAM,CACJX,SAAS,IAGbY,QAAS,CACPC,KAAM,GAERC,QAAS,CACPd,SAAS,EACTe,qBAAiBC,EACjBC,QAAQ,EACRC,cAAc,EACdC,WAAW,EACXC,cAAc,EACdC,iBAAiB,EACjBC,eAAgB,CACdC,qBAAqB,GAEvBC,EAAG,CACDC,eAAWT,EACXU,MAAO,IAETC,MAAO,CACLC,QAAS,QAEXC,MAAO,CACL7B,SAAS,EACT8B,SAAU,WACVC,QAAS,EACTC,QAAS,GAEXC,OAAQ,SAAgBC,GACTA,EAAKtC,OACFsC,EAAKC,YAIrB,IALA,IAEEC,EAAiBF,EAAKE,eACtBC,EAAIH,EAAKG,EACPvB,EAAU,qJAAyJwB,OAAOtD,EAAOuD,WAAW,IAAIC,KAAKH,EAAEI,OAAOC,MAAMC,WAAWP,IAAkB,cAAe,4BAC3PQ,EAAQ,EAAGA,EAAQP,EAAEI,OAAO7C,OAAOiD,OAAQD,IAAS,CAEhC,GADbP,EAAEI,OAAO7C,OAAOgD,GAClBE,KAAKD,SAGjB/B,GAAW,gFAAmFwB,OAAOM,EAAO,iHAAqHN,OAAOD,EAAEI,OAAOM,OAAOH,GAAQ,uSAAgTN,OAAOD,EAAEI,OAAO7C,OAAOgD,GAAOI,KAAM,6FAA+FV,OAAOD,EAAEI,OAAO7C,OAAOgD,GAAOE,KAAKV,GAAiB,4GAEzuB,OAAOtB,EAAU,uGAAyGwB,OAAOW,EAAEC,KAAKC,WAAW,mBAAoB,wBAAyB,+BAGpMC,OAAQ,CACNC,MAAO,SACPC,MAAO,EACPC,QAAS,SAEXC,KAAM,CACJC,YAAa,WAEff,MAAO,CACLC,WAAY,KACZ9C,KAAM,WACN6D,OAAQ,CACNC,uBAAuB,EACvBC,kBAAmB,CACjBC,KAAM,OACNC,MAAO,UACPC,IAAK,SACLC,KAAM,KAGVlD,QAAS,CACPd,SAAS,IAGbiE,MAAO,CACLP,OAAQ,CACNjC,UAAW,SAAmByC,EAAKtB,GACjC,YAAe5B,IAARkD,EAAoBA,EAAMA,EAAIC,QAAQ,MAInDC,OAAQ,CACNtC,SAAU,MACVuC,gBAAiB,OACjBrC,QAAS,MACTsC,WAAY,CACVC,WAAY,GACZC,SAAU,IAGdzB,OAAQhE,EAAI0F,gBACZC,WAAY,CACV1E,SAAS,IAgJb,MAAO,CACL2E,KAzIF,SAAcC,GA4BZ,SAASC,IACPjG,EAAEU,GAAOwF,OACTlG,EAAEW,GAAQgB,OAGVvB,EAAOO,OAAOgB,KAAK,qBACnB3B,EAAEmG,KAAK,CACLC,IAAKjG,EAAIkG,WACTpF,KAAMd,EAAImG,YACVC,SAAUpG,EAAIqG,gBACdtC,KAAM,CACJuC,OAAQ,kCACRC,OAAQrC,EAAEsC,qBAAqBD,OAC/BE,KAAM5G,EAAE,QAAQ6G,KAAK,QACrB3C,KAAM4C,KAAKC,UAAU,CACnBC,eAAoE,IAArD,CAAC,SAAU,UAAW,UAAUC,QAAQpG,GACvDA,OAAQA,EACRqG,WAAW,OAGdC,KAAK,SAAUC,IACO,IAAnBA,EAASC,OAAmD,qBAAjCD,EAASE,UAAUC,WAIlDlH,EAAgBmH,MAAMtD,KAAOkD,EAASlD,KACtC7D,EAAgBmH,MAAM1C,OAASsC,EAASK,MAAMC,IAAI,SAAUC,GAC1D,OAAc,MAAPA,IAETvH,EAAOwH,QAAQ,6BAA8BR,EAASQ,UAPpD5B,EAAY,mBAAoBoB,KAQjCS,KAAK,SAAUR,GAChBnH,EAAaoH,UAAUD,KACtBS,OAAO,WAqCNxH,GACFA,EAAiByH,WAEnBzH,EAAmB,IAAIL,EAAWD,EAAE,4BAA4BgI,IAAI,GAStE,WACE,IAAI9D,EAAO+D,OAAOC,OAAO,GAAInH,GAC7B,IACEmD,EAAKlD,OAAS,CAAC,CACboD,KAAM/D,EAAgBmH,MAAMW,UAAUC,YACtClE,KAAM7D,EAAgBmH,MAAMtD,KAAKkE,aAChC,CACDhE,KAAM/D,EAAgBmH,MAAMW,UAAUE,WACtCnE,KAAM7D,EAAgBmH,MAAMtD,KAAKmE,YAChC,CACDjE,KAAM/D,EAAgBmH,MAAMW,UAAUG,eACtCpE,KAAM7D,EAAgBmH,MAAMtD,KAAKoE,iBAEnCpE,EAAKJ,MAAMC,WAAa1D,EAAgBmH,MAAM1C,OAC9CZ,EAAKxD,MAAMgB,QAAQC,KAAOtB,EAAgBmH,MAAM1C,OAAOb,OAAS,GAChEC,EAAKxD,MAAMqB,KAAKX,QAAUf,EAAgBmH,MAAM1C,OAAOb,OAAS,GAChE,MAAOoD,GACPnD,EAAKlD,OAAS,GACdkD,EAAKJ,MAAMC,WAAa,GACxBG,EAAKxD,MAAMgB,QAAQC,MAAO,EAC1BuC,EAAKxD,MAAMqB,KAAKX,SAAU,EAE5B,OAAO8C,EA/BiEqE,KACvDC,SAxCflI,EAyCKA,EAvCLN,EAAES,GAAagI,KAAK,wCAAwCnD,IAAIzE,GAmBlEb,EAAEO,EAAY,gCAAgCmI,KAAK,GAfjDC,cAAc7H,GACdA,EAAQ8H,YAAYC,EAAqB,KACzC7I,EAAEY,GAAYkI,YAAY,gBAC1B9I,EAAEW,GAAQuF,OACVlG,EAAEU,GAAOqI,OAAO,QAGhB3I,EAAOO,OAAOuF,KAAK,uBAcvB,SAAS2C,IACP7I,EAAEO,EAAY,gCAAgCmI,KAAKM,SAAShJ,EAAEO,EAAY,gCAAgC0I,QAAU,IAvFtH5I,EAAkBF,EAAI+I,yBAKpBlJ,EAAEY,GAAYuI,GAAG,QAAS,WACxBnJ,EAAEoJ,MAAMC,SAAS,gBACjBpD,MAIF7F,EAAOkJ,WAAW,SAAU3B,GAC1B9G,EAAS8G,EAGT3H,EAAE,qBAAqByI,KAAK,mCAAmCnD,IAAIzE,GACnEoF,MAIFA","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n/**\n * Plugin administration pages are defined here.\n *\n * @copyright   2021 wisdmlabs <support@wisdmlabs.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-console */\ndefine([\n    'jquery',\n    './chart/apexcharts',\n    'core/notification',\n    './defaultconfig',\n    './common',\n    './flatpickr'\n], function($, ApexCharts, Notification, CFG, common) {\n    /* Varible for active users block */\n    var activeUsersData = null;\n    var activeUsersGraph = null;\n    var panelBody = CFG.getPanel(\"#activeusersblock\", \"body\");\n    var panelFooter = CFG.getPanel(\"#activeusersblock\", \"footer\");\n    var chart = panelBody + \" .ct-chart\";\n    var loader = panelBody + \" .loader\";\n    var refreshBtn = panelBody + \" .refresh\";\n    var filter = 'last7days';\n    var timer = null;\n\n    /**\n     * Line chart default config.\n     */\n    const lineChartDefault = {\n        series: [],\n        chart: {\n            type: 'line',\n            height: 350,\n            dropShadow: {\n                enabled: true,\n                color: '#000',\n                top: 18,\n                left: 7,\n                blur: 10,\n                opacity: 0.2\n            },\n            toolbar: {\n                show: false,\n                tools: {\n                    download: false,\n                    reset: '<i class=\"fa fa-refresh\"></i>'\n                }\n            },\n            zoom: {\n                enabled: false\n            }\n        },\n        markers: {\n            size: 0\n        },\n        tooltip: {\n            enabled: true,\n            enabledOnSeries: undefined,\n            shared: true,\n            followCursor: false,\n            intersect: false,\n            inverseOrder: false,\n            fillSeriesColor: false,\n            onDatasetHover: {\n                highlightDataSeries: false,\n            },\n            y: {\n                formatter: undefined,\n                title: {},\n            },\n            items: {\n                display: 'flex'\n            },\n            fixed: {\n                enabled: false,\n                position: 'topRight',\n                offsetX: 0,\n                offsetY: 0,\n            },\n            custom: function({ series, seriesIndex, dataPointIndex, w }) {\n                let tooltip = `\n                <div class=\"apexcharts-tooltip-title\" style=\"font-family: Helvetica, Arial, sans-serif; font-size: 12px;\">\n                    ${common.formatDate(new Date(w.config.xaxis.categories[dataPointIndex]), \"d MMM yyyy\")}\n                </div>`;\n                for (let index = 0; index < w.config.series.length; index++) {\n                    const element = w.config.series[index];\n                    if (element.data.length == 0) {\n                        continue;\n                    }\n                    tooltip += `<div class=\"apexcharts-tooltip-series-group apexcharts-active\" style=\"order: ${index}; display: flex;\">\n                        <span class=\"apexcharts-tooltip-marker\" style=\"background-color: ${w.config.colors[index]};\"></span>\n                        <div class=\"apexcharts-tooltip-text\" style=\"font-family: Helvetica, Arial, sans-serif; font-size: 12px;\">\n                            <div class=\"apexcharts-tooltip-y-group\">\n                                <span class=\"apexcharts-tooltip-text-y-label\">${w.config.series[index].name}: </span>\n                                <span class=\"apexcharts-tooltip-text-y-value\">${w.config.series[index].data[dataPointIndex]}</span>\n                            </div>\n                        </div>\n                    </div>`;\n                }\n                return tooltip + `\n                    <span style=\"color: black; font-size: 0.871rem; order: 4; padding: 0px 15px;\">${M.util.get_string('clickondatapoint', 'local_edwiserreports')}</span>\n                `;\n            }\n        },\n        stroke: {\n            curve: 'smooth',\n            width: 2,\n            lineCap: 'round'\n        },\n        grid: {\n            borderColor: '#e7e7e7'\n        },\n        xaxis: {\n            categories: null,\n            type: 'datetime',\n            labels: {\n                hideOverlappingLabels: true,\n                datetimeFormatter: {\n                    year: 'yyyy',\n                    month: 'MMM \\'yy',\n                    day: 'dd MMM',\n                    hour: ''\n                }\n            },\n            tooltip: {\n                enabled: false\n            }\n        },\n        yaxis: {\n            labels: {\n                formatter: function(val, index) {\n                    return val === undefined ? val : val.toFixed(0);\n                }\n            }\n        },\n        legend: {\n            position: 'top',\n            horizontalAlign: 'left',\n            offsetY: '-20',\n            itemMargin: {\n                horizontal: 10,\n                vertical: 0\n            },\n        },\n        colors: CFG.getColorTheme(),\n        dataLabels: {\n            enabled: false\n        }\n    };\n\n    /**\n     * Initialize\n     * @param {function} invalidUser Callback function\n     */\n    function init(invalidUser) {\n\n        /* Custom Dropdown hide and show */\n        activeUsersData = CFG.getActiveUsersBlock();\n\n        // If course progress block is there\n        if (activeUsersData) {\n\n            /* Refresh when click on the refresh button */\n            $(refreshBtn).on('click', function() {\n                $(this).addClass(\"refresh-spin\");\n                getActiveUsersBlockData();\n            });\n\n            // Date selector listener.\n            common.dateChange(function(date) {\n                filter = date;\n\n                // Set export filter to download link.\n                $('#activeusersblock').find('.download-links [name=\"filter\"]').val(filter);\n                getActiveUsersBlockData();\n            });\n\n            /* Call function to initialize the active users block graph */\n            getActiveUsersBlockData();\n        }\n\n        /**\n         * Get data for active users block.\n         */\n        function getActiveUsersBlockData() {\n            $(chart).hide();\n            $(loader).show();\n\n            // Show loader.\n            common.loader.show('#activeusersblock');\n            $.ajax({\n                url: CFG.requestUrl,\n                type: CFG.requestType,\n                dataType: CFG.requestDataType,\n                data: {\n                    action: 'get_activeusers_graph_data_ajax',\n                    secret: M.local_edwiserreports.secret,\n                    lang: $('html').attr('lang'),\n                    data: JSON.stringify({\n                        precalculated: ['weekly', 'monthly', 'yearly'].indexOf(filter) !== -1,\n                        filter: filter,\n                        graphajax: true\n                    })\n                },\n            }).done(function(response) {\n                if (response.error === true && response.exception.errorcode === 'invalidsecretkey') {\n                    invalidUser('activeusersblock', response);\n                    return;\n                }\n                activeUsersData.graph.data = response.data;\n                activeUsersData.graph.labels = response.dates.map(date => date * 86400000);\n                common.insight('#activeusersblock .insight', response.insight);\n            }).fail(function(error) {\n                Notification.exception(error);\n            }).always(function() {\n                activeUsersGraph = generateActiveUsersGraph();\n                // V.changeExportUrl(filter, exportUrlLink, V.filterReplaceFlag);\n                $(panelFooter).find('.download-links input[name=\"filter\"]').val(filter);\n\n                // Change graph variables\n                resetUpdateTime();\n                clearInterval(timer);\n                timer = setInterval(inceamentUpdateTime, 1000 * 60);\n                $(refreshBtn).removeClass('refresh-spin');\n                $(loader).hide();\n                $(chart).fadeIn(\"slow\");\n\n                // Hide loader.\n                common.loader.hide('#activeusersblock');\n            });\n        }\n\n        /**\n         * Reset Update time in panel header.\n         */\n        function resetUpdateTime() {\n            $(panelBody + \" #updated-time > span.minute\").html(0);\n        }\n\n        /**\n         * Increament update time in panel header.\n         */\n        function inceamentUpdateTime() {\n            $(panelBody + \" #updated-time > span.minute\")\n                .html(parseInt($(panelBody + \" #updated-time > span.minute\").text()) + 1);\n        }\n\n        /**\n         * Generate Active Users graph.\n         * @returns {Object} Active users graph\n         */\n        function generateActiveUsersGraph() {\n            if (activeUsersGraph) {\n                activeUsersGraph.destroy();\n            }\n            activeUsersGraph = new ApexCharts($(\"#apex-chart-active-users\").get(0), getGraphData());\n            activeUsersGraph.render();\n            return activeUsersGraph;\n        }\n\n        /**\n         * Get graph data.\n         * @return {Object}\n         */\n        function getGraphData() {\n            let data = Object.assign({}, lineChartDefault);\n            try {\n                data.series = [{\n                    name: activeUsersData.graph.labelName.activeUsers,\n                    data: activeUsersData.graph.data.activeUsers,\n                }, {\n                    name: activeUsersData.graph.labelName.enrolments,\n                    data: activeUsersData.graph.data.enrolments,\n                }, {\n                    name: activeUsersData.graph.labelName.completionRate,\n                    data: activeUsersData.graph.data.completionRate,\n                }];\n                data.xaxis.categories = activeUsersData.graph.labels;\n                data.chart.toolbar.show = activeUsersData.graph.labels.length > 30;\n                data.chart.zoom.enabled = activeUsersData.graph.labels.length > 30;\n            } catch (error) {\n                data.series = [];\n                data.xaxis.categories = [];\n                data.chart.toolbar.show = false;\n                data.chart.zoom.enabled = false;\n            }\n            return data;\n        }\n    }\n\n    // Must return the init function\n    return {\n        init: init\n    };\n});\n"],"file":"block_activeusers.min.js"}