{"version":3,"sources":["insights.js"],"names":["define","$","Templates","common","CFG","SELECTOR","CONTAINER","INSIGHT","ONLYINSIGHT","INSIGHT_WRAP","MOVELEFT","MOVERIGHT","HIDE","INSIGHT_ADD_CARD","INSIGHT_DROPDOWNMENU","INSIGHT_ITEM","filter","PROMISE","GET_INSIGHT_CARD_CONTEXT","id","ajax","url","requestUrl","type","requestType","dataType","requestDataType","data","action","secret","M","local_edwiserreports","JSON","stringify","GET_INSIGHT_CARD_DATA","updateOrder","order","loader","show","each","index","insight","push","util","set_user_preference","hide","updateInsight","done","response","value","timeFormatter","dataPointIndex","short","replaceAll","render","html","js","replaceNode","find","init","document","ready","dateChange","date","on","prev","this","closest","detach","insertBefore","next","insertAfter","prepend","concat","text","remove","then","present","editing","before","runTemplateJS","removeClass"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n/**\n * Page top insight management js.\n *\n * @package     local_edwiserreports\n * @copyright   2021 wisdmlabs <support@wisdmlabs.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n/* eslint-disable no-console */\ndefine([\n    'jquery',\n    'core/templates',\n    './common',\n    './defaultconfig'\n], function(\n    $,\n    Templates,\n    common,\n    CFG\n) {\n\n    /**\n     * Selector for the insights.\n     */\n    let SELECTOR = {\n        CONTAINER: '.top-insights',\n        INSIGHT: '.top-insights .insight',\n        ONLYINSIGHT: '.top-insights .insight:not(.add-insight)',\n        INSIGHT_WRAP: '.insight-wrap',\n        MOVELEFT: '.top-insights .card-editing .move-left',\n        MOVERIGHT: '.top-insights .card-editing .move-right',\n        HIDE: '.top-insights .card-editing .edit-hide',\n        INSIGHT_ADD_CARD: '.top-insights .insight.add-insight',\n        INSIGHT_DROPDOWNMENU: '.top-insights .add-new-insight .dropdown-menu',\n        INSIGHT_ITEM: '.top-insights .add-new-insight .dropdown-item'\n    };\n\n    /**\n     * Filter object.\n     */\n    let filter = 'weekly';\n\n    /**\n     * Promise list.\n     */\n    let PROMISE = {\n        /**\n         * Get insight card data to render insight card.\n         * @param {String} id Insight id\n         * @returns {Promise}\n         */\n        GET_INSIGHT_CARD_CONTEXT: function(id) {\n            return $.ajax({\n                url: CFG.requestUrl,\n                type: CFG.requestType,\n                dataType: CFG.requestDataType,\n                data: {\n                    action: 'get_insight_card_context_ajax',\n                    secret: M.local_edwiserreports.secret,\n                    data: JSON.stringify({\n                        id: id\n                    })\n                },\n            });\n        },\n\n        /**\n         * Get insight card data to render insight details.\n         * @param {String} id Insight id\n         * @return {Promise}\n         */\n        GET_INSIGHT_CARD_DATA: function(id) {\n            return $.ajax({\n                url: CFG.requestUrl,\n                type: CFG.requestType,\n                dataType: CFG.requestDataType,\n                data: {\n                    action: 'get_insight_card_data_ajax',\n                    secret: M.local_edwiserreports.secret,\n                    data: JSON.stringify({\n                        id: id,\n                        filter: filter\n                    })\n                },\n            });\n        }\n    };\n\n    /**\n     * Update insight order in the user preference.\n     */\n    function updateOrder() {\n        let order = [];\n        common.loader.show(SELECTOR.CONTAINER);\n        $(SELECTOR.ONLYINSIGHT).each(function(index, insight) {\n            order.push($(insight).data('id'));\n        });\n        M.util.set_user_preference('local_edwiserreports_insights_order', JSON.stringify(order));\n        common.loader.hide(SELECTOR.CONTAINER);\n    }\n\n    /**\n     * Update insight card details.\n     * @param {String} id Insight id\n     */\n    function updateInsight(id) {\n        common.loader.show(SELECTOR.CONTAINER + ' [data-id=\"' + id + '\"] .insight-wrapper');\n        PROMISE.GET_INSIGHT_CARD_DATA(id, filter)\n            .done(function(response) {\n                switch (id) {\n                    case 'timespentoncourses':\n                    case 'timespentonsite':\n                        response.value = common.timeFormatter(response.value, {\n                            dataPointIndex: 0,\n                            short: true\n                        }).replaceAll(', ', ' ');\n                        break;\n                }\n                Templates.render('local_edwiserreports/insights/content', response)\n                    .done(function(html, js) {\n                        Templates.replaceNode($(SELECTOR.INSIGHT + '[data-id=\"' + id + '\"]')\n                            .find(SELECTOR.INSIGHT_WRAP), html, js);\n                        common.loader.hide(SELECTOR.CONTAINER + ' [data-id=\"' + id + '\"] .insight-wrapper');\n                    });\n            });\n    }\n\n    /**\n     * Initialize events.\n     */\n    function initEvents() {\n        // Date selector listener.\n        common.dateChange(function(date) {\n            filter = date;\n            $(SELECTOR.ONLYINSIGHT).each(function(index, insight) {\n                updateInsight($(insight).data('id'));\n            });\n        });\n\n        // Move left.\n        $('body').on('click', SELECTOR.MOVELEFT, function() {\n            let prev = $(this).closest(SELECTOR.INSIGHT).prev();\n            $(this).closest(SELECTOR.INSIGHT).detach().insertBefore(prev);\n            updateOrder();\n        });\n\n        // Move Right.\n        $('body').on('click', SELECTOR.MOVERIGHT, function() {\n            let next = $(this).closest(SELECTOR.INSIGHT).next();\n            $(this).closest(SELECTOR.INSIGHT).detach().insertAfter(next);\n            updateOrder();\n        });\n\n        // Hide insight.\n        $('body').on('click', SELECTOR.HIDE, function() {\n            let insight = $(this).closest(SELECTOR.INSIGHT);\n            $(SELECTOR.INSIGHT_DROPDOWNMENU)\n                .prepend(`<a class=\"dropdown-item\" href=\"#\" data-id=\"${insight.data('id')}\">${insight.find('.insight-title').text()}</a>`);\n            insight.remove();\n            updateOrder();\n        });\n\n        // Add insight.\n        $('body').on('click', SELECTOR.INSIGHT_ITEM, function() {\n            let id = $(this).data('id');\n            common.loader.hide(SELECTOR.CONTAINER);\n            PROMISE.GET_INSIGHT_CARD_CONTEXT(id).then(function(response) {\n                if (response.present == true) {\n                    response.editing = true;\n                    Templates.render('local_edwiserreports/insights/insight', response).done(function(html, js) {\n                        $(SELECTOR.INSIGHT_ADD_CARD).before(html);\n                        Templates.runTemplateJS(js);\n                        $(SELECTOR.INSIGHT_ITEM + '[data-id=\"' + id + '\"]').remove();\n                        updateOrder();\n                        updateInsight(id);\n                    });\n                }\n            });\n        });\n    }\n\n    /**\n     * Initialize.\n     */\n    function init() {\n        $(document).ready(function() {\n            initEvents();\n            $(SELECTOR.ONLYINSIGHT).each(function(index, insight) {\n                updateInsight($(insight).data('id'));\n            });\n            $(SELECTOR.CONTAINER).find('.overflow-hidden').removeClass('overflow-hidden');\n        });\n    }\n    return {\n        init: init\n    }\n});\n"],"file":"insights.min.js"}