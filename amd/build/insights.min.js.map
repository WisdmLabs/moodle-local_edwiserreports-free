{"version":3,"sources":["insights.js"],"names":["define","$","Templates","common","CFG","SELECTOR","CONTAINER","INSIGHT","ONLYINSIGHT","INSIGHT_CONTENT","MOVELEFT","MOVERIGHT","HIDE","INSIGHT_ADD_CARD","INSIGHT_DROPDOWNMENU","INSIGHT_ITEM","PROMISE","GET_INSIGHT_CARD_CONTEXT","id","ajax","url","requestUrl","type","requestType","dataType","requestDataType","data","action","secret","M","local_edwiserreports","JSON","stringify","updateOrder","order","loader","show","each","index","insight","push","util","set_user_preference","hide","init","document","ready","on","prev","this","closest","detach","insertBefore","next","insertAfter","prepend","concat","find","text","remove","then","response","present","editing","render","done","html","js","before","runTemplateJS"],"mappings":"AAAA,aA0BAA,OAAO,CAAC,SAAU,iBAAkB,WAAY,mBAAoB,SAAUC,EAAGC,EAAWC,EAAQC,GAIlG,IAAIC,EAAW,CACbC,UAAW,gBACXC,QAAS,yBACTC,YAAa,2CACbC,gBAAiB,mBACjBC,SAAU,yCACVC,UAAW,0CACXC,KAAM,yCACNC,iBAAkB,qCAClBC,qBAAsB,gDACtBC,aAAc,iDAWZC,EAAU,CAMZC,yBAA0B,SAAkCC,GAC1D,OAAOjB,EAAEkB,KAAK,CACZC,IAAKhB,EAAIiB,WACTC,KAAMlB,EAAImB,YACVC,SAAUpB,EAAIqB,gBACdC,KAAM,CACJC,OAAQ,gCACRC,OAAQC,EAAEC,qBAAqBF,OAC/BF,KAAMK,KAAKC,UAAU,CACnBd,GAAIA,SAUd,SAASe,IACP,IAAIC,EAAQ,GACZ/B,EAAOgC,OAAOC,KAAK/B,EAASC,WAC5BL,EAAEI,EAASG,aAAa6B,KAAK,SAAUC,EAAOC,GAC5CL,EAAMM,KAAKvC,EAAEsC,GAASb,KAAK,SAE7BG,EAAEY,KAAKC,oBAAoB,sCAAuCX,KAAKC,UAAUE,IACjF/B,EAAOgC,OAAOQ,KAAKtC,EAASC,WAuD9B,MAAO,CACLsC,KAPF,WACE3C,EAAE4C,UAAUC,MAAM,WAzClB7C,EAAE,QAAQ8C,GAAG,QAAS1C,EAASK,SAAU,WACvC,IAAIsC,EAAO/C,EAAEgD,MAAMC,QAAQ7C,EAASE,SAASyC,OAC7C/C,EAAEgD,MAAMC,QAAQ7C,EAASE,SAAS4C,SAASC,aAAaJ,GACxDf,MAGFhC,EAAE,QAAQ8C,GAAG,QAAS1C,EAASM,UAAW,WACxC,IAAI0C,EAAOpD,EAAEgD,MAAMC,QAAQ7C,EAASE,SAAS8C,OAC7CpD,EAAEgD,MAAMC,QAAQ7C,EAASE,SAAS4C,SAASG,YAAYD,GACvDpB,MAGFhC,EAAE,QAAQ8C,GAAG,QAAS1C,EAASO,KAAM,WACnC,IAAI2B,EAAUtC,EAAEgD,MAAMC,QAAQ7C,EAASE,SACvCN,EAAEI,EAASS,sBAAsByC,QAAQ,8CAAmDC,OAAOjB,EAAQb,KAAK,MAAO,MAAO8B,OAAOjB,EAAQkB,KAAK,kBAAkBC,OAAQ,SAC5KnB,EAAQoB,SACR1B,MAGFhC,EAAE,QAAQ8C,GAAG,QAAS1C,EAASU,aAAc,WAC3C,IAAIG,EAAKjB,EAAEgD,MAAMvB,KAAK,MACtBvB,EAAOgC,OAAOQ,KAAKtC,EAASC,WAC5BU,EAAQC,yBAAyBC,GAAI0C,KAAK,SAAUC,GAC1B,GAApBA,EAASC,UACXD,EAASE,SAAU,EACnB7D,EAAU8D,OAAO,wCAAyCH,GAAUI,KAAK,SAAUC,EAAMC,GACvFlE,EAAEI,EAASQ,kBAAkBuD,OAAOF,GACpChE,EAAUmE,cAAcF,GACxBlE,EAAEI,EAASU,aAAe,aAAeG,EAAK,MAAMyC,SACpD1B","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n/**\n * Page top insight management js.\n *\n * @package     local_edwiserreports\n * @copyright   2021 wisdmlabs <support@wisdmlabs.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n/* eslint-disable no-console */\ndefine([\n    'jquery',\n    'core/templates',\n    './common',\n    './defaultconfig'\n], function(\n    $,\n    Templates,\n    common,\n    CFG\n) {\n\n    /**\n     * Selector for the insights.\n     */\n    let SELECTOR = {\n        CONTAINER: '.top-insights',\n        INSIGHT: '.top-insights .insight',\n        ONLYINSIGHT: '.top-insights .insight:not(.add-insight)',\n        INSIGHT_CONTENT: '.insight-content',\n        MOVELEFT: '.top-insights .card-editing .move-left',\n        MOVERIGHT: '.top-insights .card-editing .move-right',\n        HIDE: '.top-insights .card-editing .edit-hide',\n        INSIGHT_ADD_CARD: '.top-insights .insight.add-insight',\n        INSIGHT_DROPDOWNMENU: '.top-insights .add-new-insight .dropdown-menu',\n        INSIGHT_ITEM: '.top-insights .add-new-insight .dropdown-item'\n    };\n\n    /**\n     * Filter object.\n     */\n    let filter = 'weekly';\n\n    /**\n     * Promise list.\n     */\n    let PROMISE = {\n        /**\n         * Get insight card data to render insight card.\n         * @param {String} id Insight id\n         * @returns {Promise}\n         */\n        GET_INSIGHT_CARD_CONTEXT: function(id) {\n            return $.ajax({\n                url: CFG.requestUrl,\n                type: CFG.requestType,\n                dataType: CFG.requestDataType,\n                data: {\n                    action: 'get_insight_card_context_ajax',\n                    secret: M.local_edwiserreports.secret,\n                    data: JSON.stringify({\n                        id: id\n                    })\n                },\n            });\n        }\n    };\n\n    /**\n     * Update insight order in the user preference.\n     */\n    function updateOrder() {\n        let order = [];\n        common.loader.show(SELECTOR.CONTAINER);\n        $(SELECTOR.ONLYINSIGHT).each(function(index, insight) {\n            order.push($(insight).data('id'));\n        });\n        M.util.set_user_preference('local_edwiserreports_insights_order', JSON.stringify(order));\n        common.loader.hide(SELECTOR.CONTAINER);\n    }\n\n    /**\n     * Initialize events.\n     */\n    function initEvents() {\n\n        // Move left.\n        $('body').on('click', SELECTOR.MOVELEFT, function() {\n            let prev = $(this).closest(SELECTOR.INSIGHT).prev();\n            $(this).closest(SELECTOR.INSIGHT).detach().insertBefore(prev);\n            updateOrder();\n        });\n\n        // Move Right.\n        $('body').on('click', SELECTOR.MOVERIGHT, function() {\n            let next = $(this).closest(SELECTOR.INSIGHT).next();\n            $(this).closest(SELECTOR.INSIGHT).detach().insertAfter(next);\n            updateOrder();\n        });\n\n        // Hide insight.\n        $('body').on('click', SELECTOR.HIDE, function() {\n            let insight = $(this).closest(SELECTOR.INSIGHT);\n            $(SELECTOR.INSIGHT_DROPDOWNMENU)\n                .prepend(`<a class=\"dropdown-item\" href=\"#\" data-id=\"${insight.data('id')}\">${insight.find('.insight-title').text()}</a>`);\n            insight.remove();\n            updateOrder();\n        });\n\n        // Add insight.\n        $('body').on('click', SELECTOR.INSIGHT_ITEM, function() {\n            let id = $(this).data('id');\n            common.loader.hide(SELECTOR.CONTAINER);\n            PROMISE.GET_INSIGHT_CARD_CONTEXT(id).then(function(response) {\n                if (response.present == true) {\n                    response.editing = true;\n                    Templates.render('local_edwiserreports/insights/insight', response).done(function(html, js) {\n                        $(SELECTOR.INSIGHT_ADD_CARD).before(html);\n                        Templates.runTemplateJS(js);\n                        $(SELECTOR.INSIGHT_ITEM + '[data-id=\"' + id + '\"]').remove();\n                        updateOrder();\n                    });\n                }\n            });\n        });\n    }\n\n    /**\n     * Initialize.\n     */\n    function init() {\n        $(document).ready(function() {\n            initEvents();\n        });\n    }\n    return {\n        init: init\n    }\n});"],"file":"insights.min.js"}