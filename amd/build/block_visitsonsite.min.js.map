{"version":3,"sources":["block_visitsonsite.js"],"names":["define","$","Notification","ApexCharts","common","CFG","SELECTOR","PANEL","INSIGHT","GRAPH","PROMISE","GET_VISITSONSITE","ajax","url","requestUrl","type","requestType","dataType","requestDataType","data","action","secret","M","local_edwiserreports","lang","attr","chart","lineChartDefault","series","height","dropShadow","enabled","color","top","left","blur","opacity","toolbar","show","tools","download","reset","zoom","markers","size","tooltip","enabledOnSeries","undefined","shared","followCursor","intersect","inverseOrder","fillSeriesColor","onDatasetHover","highlightDataSeries","y","formatter","title","items","display","fixed","position","offsetX","offsetY","stroke","curve","width","grid","borderColor","xaxis","categories","labels","hideOverlappingLabels","datetimeFormatter","year","month","day","hour","legend","horizontalAlign","itemMargin","horizontal","vertical","dataLabels","colors","getColorTheme","noData","text","util","get_string","loadGraph","invalidUser","loader","done","response","error","exception","errorcode","Object","assign","name","visits","length","insight","graph","destroy","get","render","setTimeout","hide","renderGraph","find","fail","init","select2"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n/**\n * Block service call and rendering defined in this file.\n *\n * @copyright   2021 wisdmlabs <support@wisdmlabs.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n/* eslint-disable no-console */\ndefine([\n    'jquery',\n    'core/notification',\n    './chart/apexcharts',\n    './common',\n    './defaultconfig'\n], function(\n    $,\n    Notification,\n    ApexCharts,\n    common,\n    CFG\n) {\n\n    /**\n     * DOM element selectors list.\n     */\n    let SELECTOR = {\n        PANEL: '#visitsonsiteblock',\n        INSIGHT: '#visitsonsiteblock .insight',\n        GRAPH: '#apex-chart-visitsonsite-block',\n    };\n\n    let PROMISE = {\n        /**\n         * Get visits on site.\n         * @returns {PROMISE}\n         */\n        GET_VISITSONSITE: function() {\n            return $.ajax({\n                url: CFG.requestUrl,\n                type: CFG.requestType,\n                dataType: CFG.requestDataType,\n                data: {\n                    action: 'get_visitsonsite_graph_data_ajax',\n                    secret: M.local_edwiserreports.secret,\n                    lang: $('html').attr('lang')\n                },\n            });\n        }\n    };\n\n    /**\n     * Chart object.\n     */\n    let chart = null;\n\n    /**\n     * Line chart default config.\n     */\n    const lineChartDefault = {\n        series: [],\n        chart: {\n            type: 'line',\n            height: 350,\n            dropShadow: {\n                enabled: true,\n                color: '#000',\n                top: 18,\n                left: 7,\n                blur: 10,\n                opacity: 0.2\n            },\n            toolbar: {\n                show: false,\n                tools: {\n                    download: false,\n                    reset: '<i class=\"fa fa-refresh\"></i>'\n                }\n            },\n            zoom: {\n                enabled: false\n            }\n        },\n        markers: {\n            size: 0\n        },\n        tooltip: {\n            enabled: true,\n            enabledOnSeries: undefined,\n            shared: true,\n            followCursor: false,\n            intersect: false,\n            inverseOrder: false,\n            fillSeriesColor: false,\n            onDatasetHover: {\n                highlightDataSeries: false,\n            },\n            y: {\n                formatter: undefined,\n                title: {},\n            },\n            items: {\n                display: 'flex'\n            },\n            fixed: {\n                enabled: false,\n                position: 'topRight',\n                offsetX: 0,\n                offsetY: 0,\n            },\n        },\n        stroke: {\n            curve: 'smooth',\n            width: 2\n        },\n        grid: {\n            borderColor: '#e7e7e7'\n        },\n        xaxis: {\n            categories: null,\n            type: 'datetime',\n            labels: {\n                hideOverlappingLabels: true,\n                datetimeFormatter: {\n                    year: 'yyyy',\n                    month: 'MMM \\'yy',\n                    day: 'dd MMM',\n                    hour: ''\n                }\n            },\n            tooltip: {\n                enabled: false\n            }\n        },\n        legend: {\n            position: 'top',\n            horizontalAlign: 'left',\n            offsetY: '-20',\n            itemMargin: {\n                horizontal: 10,\n                vertical: 0\n            },\n        },\n        dataLabels: {\n            enabled: false\n        },\n        colors: [CFG.getColorTheme()[2]],\n        noData: {\n            text: M.util.get_string('nographdata', 'local_edwiserreports')\n        }\n    };\n\n    /**\n     * Load graph\n     * @param {function} invalidUser Function to be called when user is invalid\n     */\n    function loadGraph(invalidUser) {\n        common.loader.show(SELECTOR.PANEL);\n\n        /**\n         * Render graph.\n         * @param {DOM} graph Graph element\n         * @param {Object} data Graph data\n         */\n        function renderGraph(graph, data) {\n            if (chart !== null) {\n                chart.destroy();\n            }\n            chart = new ApexCharts(graph.get(0), data);\n            chart.render();\n            setTimeout(function() {\n                common.loader.hide(SELECTOR.PANEL);\n            }, 1000);\n        }\n\n        PROMISE.GET_VISITSONSITE()\n            .done(function(response) {\n                if (response.error === true && response.exception.errorcode === 'invalidsecretkey') {\n                    invalidUser('visitsonsiteblock', response);\n                    return;\n                }\n                let data = Object.assign({}, lineChartDefault);\n                data.series = [{\n                    name: M.util.get_string('visitsonlms', 'local_edwiserreports'),\n                    data: response.visits,\n                }];\n                data.xaxis.categories = response.labels;\n                data.chart.toolbar.show = response.labels.length > 30;\n                data.chart.zoom.enabled = response.labels.length > 30;\n                data.tooltip.y.title.formatter = () => {\n                    return M.util.get_string('visits', 'local_edwiserreports') + ': ';\n                };\n                common.insight(SELECTOR.INSIGHT, response.insight);\n                renderGraph($(SELECTOR.PANEL).find(SELECTOR.GRAPH), data);\n            }).fail(function(exception) {\n                Notification.exception(exception);\n                common.loader.hide(SELECTOR.PANEL);\n            });\n    }\n\n    /**\n     * Initialize\n     * @param {function} invalidUser Callback function\n     */\n    function init(invalidUser) {\n\n        if (!$(SELECTOR.PANEL).length) {\n            return;\n        }\n\n        loadGraph(invalidUser);\n\n        $(SELECTOR.PANEL).find('.singleselect').select2();\n    }\n\n    // Must return the init function\n    return {\n        init: init\n    };\n});"],"file":"block_visitsonsite.min.js"}