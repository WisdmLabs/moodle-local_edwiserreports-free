{"version":3,"sources":["block_realtimeusers.js"],"names":["define","$","Notification","cfg","common","liveUsersTable","panel","getPanel","panelBody","loader","table","searchTable","init","invalidUser","length","show","ajax","url","requestUrl","type","requestType","dataType","requestDataType","data","action","secret","M","local_edwiserreports","lang","attr","done","response","error","exception","errorcode","setTimeout","destroy","hide","DataTable","dom","language","info","util","get_string","infoEmpty","emptyTable","zeroRecords","paginate","previous","next","aaSorting","columnDefs","targets","className","orderable","drawCallback","stylePaginationButton","this","bInfo","lengthChange","initComplete","undefined","usersCount","document","find","append","fail","always","on","column","search","value","draw"],"mappings":"AAAA,aAyBAA,OAAO,CAAC,SAAU,oBAAqB,kBAAmB,WAAY,sBAAuB,2BAA4B,SAAUC,EAAGC,EAAcC,EAAKC,GACvJ,IAAIC,EAAiB,KACjBC,EAAQH,EAAII,SAAS,mBACrBC,EAAYL,EAAII,SAAS,kBAAmB,QAC5CE,EAASR,EAAEO,EAAY,YACvBE,EAAQT,EAAEO,EAAY,WACtBG,EAAcL,EAAQ,6BAiG1B,MAAO,CACLM,KA5FF,SAASA,EAAKC,GACRZ,EAAEK,GAAOQ,SAEXV,EAAOK,OAAOM,KAAK,mBACnBd,EAAEe,KAAK,CACLC,IAAKd,EAAIe,WACTC,KAAMhB,EAAIiB,YACVC,SAAUlB,EAAImB,gBACdC,KAAM,CACJC,OAAQ,0BACRC,OAAQC,EAAEC,qBAAqBF,OAC/BG,KAAM3B,EAAE,QAAQ4B,KAAK,WAEtBC,KAAK,SAAUC,GA4BtB,IAAkCR,GA3BL,IAAnBQ,EAASC,OAAmD,qBAAjCD,EAASE,UAAUC,WAKlDC,WAAW,WACTvB,EAAKC,IACJ,MAoByBU,EAnBHQ,EAASR,KAoBlClB,EACFA,EAAe+B,WAEf3B,EAAO4B,OACP3B,EAAMK,QAGRV,EAAiBK,EAAM4B,UAAU,CAC/Bf,KAAMA,EACNgB,IAAK,mDACLC,SAAU,CACRC,KAAMf,EAAEgB,KAAKC,WAAW,YAAa,wBACrCC,UAAWlB,EAAEgB,KAAKC,WAAW,YAAa,wBAC1CE,WAAYnB,EAAEgB,KAAKC,WAAW,UAAW,wBACzCG,YAAapB,EAAEgB,KAAKC,WAAW,cAAe,wBAC9CI,SAAU,CACRC,SAAUtB,EAAEgB,KAAKC,WAAW,WAAY,UACxCM,KAAMvB,EAAEgB,KAAKC,WAAW,OAAQ,YAGpCO,UAAW,CAAC,CAAC,EAAG,QAChBC,WAAY,CAAC,CACXC,QAAW,EACXC,UAAa,aACZ,CACDD,QAAW,EACXC,UAAa,eACZ,CACDD,QAAW,EACXC,UAAa,cACbC,WAAa,IAEfC,aAAc,WACZnD,EAAOoD,sBAAsBC,OAE/BC,OAAO,EACPC,cAAc,EACdC,aAAc,WACZ,GAAYC,MAARtC,EAAJ,CAIA,IAAIuC,EAAa,oEAAsEvC,EAAKT,OAAS,WACrGb,EAAE8D,UAAUC,KAAK,mBAAmBC,OAAOH,QAtEzCjD,EAAY,iBAAkBkB,KAQ/BmC,KAAK,SAAUlC,GAChB9B,EAAa+B,UAAUD,KACtBmC,OAAO,WAER/D,EAAOK,OAAO4B,KAAK,qBAGrBpC,EAAE,QAAQmE,GAAG,QAASzD,EAAa,WACjCN,EAAegE,OAAO,GAAGC,OAAOb,KAAKc,OAAOC","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n/**\n * Plugin administration pages are defined here.\n *\n * @copyright   2021 wisdmlabs <support@wisdmlabs.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n/* eslint-disable no-console */\ndefine([\n    \"jquery\",\n    'core/notification',\n    \"./defaultconfig\",\n    \"./common\",\n    \"./jquery.dataTables\",\n    \"./dataTables.bootstrap4\"\n], function($, Notification, cfg, common) {\n    var liveUsersTable = null;\n    var panel = cfg.getPanel(\"#liveusersblock\");\n    var panelBody = cfg.getPanel(\"#liveusersblock\", \"body\");\n    var loader = $(panelBody + \" .loader\");\n    var table = $(panelBody + \" .table\");\n    var searchTable = panel + \" .table-search-input input\";\n\n    /**\n     * Initialize\n     * @param {function} invalidUser Callback function\n     */\n    function init(invalidUser) {\n        if ($(panel).length) {\n            // Show loader.\n            common.loader.show(\"#liveusersblock\");\n\n            $.ajax({\n                    url: cfg.requestUrl,\n                    type: cfg.requestType,\n                    dataType: cfg.requestDataType,\n                    data: {\n                        action: 'get_liveusers_data_ajax',\n                        secret: M.local_edwiserreports.secret,\n                        lang: $('html').attr('lang')\n                    },\n                }).done(function(response) {\n                    if (response.error === true && response.exception.errorcode === 'invalidsecretkey') {\n                        invalidUser('liveusersblock', response);\n                        return;\n                    }\n                    setTimeout(function() {\n                        init(invalidUser);\n                    }, 2 * 60 * 1000);\n                    createRealtimeUsersBlock(response.data);\n                })\n                .fail(function(error) {\n                    Notification.exception(error);\n                }).always(function() {\n                    // Hide loader.\n                    common.loader.hide(\"#liveusersblock\");\n                });\n\n            // Search in table.\n            $('body').on('input', searchTable, function() {\n                liveUsersTable.column(0).search(this.value).draw();\n            });\n        }\n    }\n\n    /**\n     * Create Datatable of the table\n     * @param {Object} data Datatable data\n     */\n    function createRealtimeUsersBlock(data) {\n        if (liveUsersTable) {\n            liveUsersTable.destroy();\n        } else {\n            loader.hide();\n            table.show();\n        }\n\n        liveUsersTable = table.DataTable({\n            data: data,\n            dom: '<\"edwiserreports-table\"<t><\"table-pagination\"p>>',\n            language: {\n                info: M.util.get_string('tableinfo', 'local_edwiserreports'),\n                infoEmpty: M.util.get_string('infoempty', 'local_edwiserreports'),\n                emptyTable: M.util.get_string('nousers', 'local_edwiserreports'),\n                zeroRecords: M.util.get_string('zerorecords', 'local_edwiserreports'),\n                paginate: {\n                    previous: M.util.get_string('previous', 'moodle'),\n                    next: M.util.get_string('next', 'moodle')\n                }\n            },\n            aaSorting: [\n                [1, 'asc']\n            ],\n            columnDefs: [{\n                    \"targets\": 0,\n                    \"className\": \"text-left\"\n                },\n                {\n                    \"targets\": 1,\n                    \"className\": \"text-center\"\n                },\n                {\n                    \"targets\": 2,\n                    \"className\": \"text-center\",\n                    \"orderable\": false\n                }\n            ],\n            drawCallback: function() {\n                common.stylePaginationButton(this);\n            },\n            bInfo: false,\n            lengthChange: false,\n            initComplete: function() {\n                if (data == undefined) {\n                    return;\n                }\n                var usersCount = '<small class=\"ml-auto my-auto font-weight-bold\">LoggedIn Users : ' + data.length + '</small>';\n                $(document).find(\".rtblock-filter\").append(usersCount);\n            }\n        });\n    }\n\n    // Must return the init function\n    return {\n        init: init\n    };\n});"],"file":"block_realtimeusers.min.js"}