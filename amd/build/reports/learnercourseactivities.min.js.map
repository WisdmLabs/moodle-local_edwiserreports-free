{"version":3,"sources":["reports/learnercourseactivities.js"],"names":["define","$","Notification","Ajax","common","CFG","SELECTOR","PAGE","SEARCH","COURSE","STUDENT","SECTION","MODULE","COMPLETION","LENGTH","LEARNER","TABLE","FORMFILTER","dataTable","filter","learner","course","section","module","completion","PROMISE","GET_DATA","ajax","url","requestUrl","type","requestType","dataType","requestDataType","data","action","secret","M","local_edwiserreports","lang","attr","JSON","stringify","GET_FILTER_DATA","types","courseid","sectionid","call","methodname","args","initializeDatatable","loader","show","val","statuses","concat","util","get_string","done","response","destroy","never","DataTable","paging","deferRendering","columnDefs","className","targets","columns","width","render","formatDate","Date","timeFormatter","dom","language","info","infoEmpty","emptyTable","zeroRecords","paginate","previous","next","drawCallback","stylePaginationButton","this","hide","search","page","len","draw","fail","ex","exception","init","document","ready","parse","select2","templateResult","state","id","text","find","not","on","reloadFilter","length","refreshFilter","column","value","handleSearchInput","handleReportCapability"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n/**\n * Learner course progress report page.\n *\n * @package     local_edwiserreports\n * @author      Yogesh Shirsath\n * @copyright   2022 Wisdmlabs <support@wisdmlabs.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine('local_edwiserreports/reports/learnercourseactivities', [\n    'jquery',\n    'core/notification',\n    'core/ajax',\n    'local_edwiserreports/common',\n    'local_edwiserreports/defaultconfig',\n    'local_edwiserreports/select2',\n    'local_edwiserreports/flatpickr'\n], function(\n    $,\n    Notification,\n    Ajax,\n    common,\n    CFG\n) {\n\n    /**\n     * Selector\n     */\n    var SELECTOR = {\n        PAGE: '#learnercourseactivities',\n        SEARCH: '#learnercourseactivities .table-search-input input',\n        COURSE: '#learnercourseactivities .course-select',\n        STUDENT: '#learnercourseactivities .student-select',\n        SECTION: '#learnercourseactivities .section-select',\n        MODULE: '#learnercourseactivities .module-select',\n        COMPLETION: '#learnercourseactivities .completion-select',\n        LENGTH: '#learnercourseactivities .length-select',\n        LEARNER: '#learnercourseactivities .student-select',\n        TABLE: '#learnercourseactivities table',\n        FORMFILTER: '#learnercourseactivities .download-links [name=\"filter\"]'\n    };\n\n    /**\n     * Datatable object.\n     */\n    var dataTable = null;\n\n    /**\n     * Filter object.\n     */\n    var filter = {\n        learner: null,\n        course: null,\n        section: 0,\n        module: 'all',\n        completion: 'all'\n    };\n\n    /**\n     * All promises.\n     */\n    var PROMISE = {\n        /**\n         * Get learner course activities table data based on filters.\n         * @param {Object} filter Filter data\n         * @returns {PROMISE}\n         */\n        GET_DATA: function(filter) {\n            return $.ajax({\n                url: CFG.requestUrl,\n                type: CFG.requestType,\n                dataType: CFG.requestDataType,\n                data: {\n                    action: 'get_learnercourseactivities_data',\n                    secret: M.local_edwiserreports.secret,\n                    lang: $('html').attr('lang'),\n                    data: JSON.stringify(filter)\n                },\n            });\n        },\n        /**\n         * Get filter data.\n         *\n         * @param   {Array}     types       Type of filters to get\n         * @param   {Integer}   courseid    Course id\n         * @param   {String}    sectionid   Section id all/id\n         * @returns {PROMISE}\n         */\n        GET_FILTER_DATA: function(types, courseid, sectionid) {\n            return Ajax.call([{\n                methodname: 'local_edwiserreports_get_filter_data',\n                args: {\n                    types: types,\n                    course: courseid,\n                    section: sectionid\n                }\n            }], false)[0];\n        }\n    }\n\n    /**\n     * Initialize datable.\n     */\n    function initializeDatatable() {\n        common.loader.show(SELECTOR.PAGE);\n\n        // Updated export filter values.\n        $(SELECTOR.FORMFILTER).val(JSON.stringify(filter));\n        let statuses = [\n            `<span class=\"warning-tag\">${M.util.get_string('notyetstarted', 'core_completion')}</span>`,\n            `<span class=\"success-tag\">${M.util.get_string('completed', 'core_completion')}</span>`,\n            `<span class=\"danger-tag\">${M.util.get_string('inprogress', 'core_completion')}</span>`\n        ];\n        PROMISE.GET_DATA(filter)\n            .done(function(response) {\n                if (dataTable !== null) {\n                    dataTable.destroy();\n                    dataTable = null;\n                }\n                let never = M.util.get_string('never', 'local_edwiserreports');\n                dataTable = $(SELECTOR.TABLE).DataTable({\n                    data: response,\n                    paging: true,\n                    deferRendering: true,\n                    columnDefs: [\n                        { className: \"fixed-column\", targets: 0 },\n                        { className: \"text-left\", targets: [0, 1] },\n                        { className: \"text-right\", targets: \"_all\" }\n                    ],\n                    columns: [\n                        { data: 'activity', width: \"14rem\" },\n                        { data: 'type' },\n                        {\n                            data: 'status',\n                            render: function(data) {\n                                return statuses[data];\n                            },\n                            width: \"4rem\"\n                        },\n                        {\n                            data: 'completedon',\n                            render: function(data) {\n                                return `<span class=\"d-none\">${data}</span>` +\n                                    (data == 0 ? '-' : common.formatDate(new Date(data * 1000), \"d MMM yyyy\"));\n                            }\n                        },\n                        { data: 'grade' },\n                        {\n                            data: 'gradedon',\n                            render: function(data) {\n                                return `<span class=\"d-none\">${data}</span>` +\n                                    (data == 0 ? '-' : common.formatDate(new Date(data * 1000), \"d MMM yyyy\"));\n                            }\n                        },\n                        { data: 'attempts' },\n                        { data: 'highestgrade', width: \"4rem\" },\n                        { data: 'lowestgrade', width: \"4rem\" },\n                        {\n                            data: 'firstaccess',\n                            render: function(data) {\n                                return `<span class=\"d-none\">${data}</span>` +\n                                    (data == 0 ? never : common.formatDate(new Date(data * 1000), \"d MMM yyyy hh:mm TT\"));\n                            },\n                            width: \"6rem\"\n                        },\n                        {\n                            data: 'lastaccess',\n                            render: function(data) {\n                                return `<span class=\"d-none\">${data}</span>` +\n                                    (data == 0 ? never : common.formatDate(new Date(data * 1000), \"d MMM yyyy hh:mm TT\"));\n                            },\n                            width: \"6rem\"\n                        },\n                        { data: 'visits' },\n                        {\n                            data: 'timespent',\n                            render: function(data) {\n                                return common.timeFormatter(data);\n                            }\n                        },\n                    ],\n                    dom: '<\"edwiserreports-table\"i<t><\"table-pagination\"p>>',\n                    language: {\n                        info: M.util.get_string('tableinfo', 'local_edwiserreports'),\n                        infoEmpty: M.util.get_string('infoempty', 'local_edwiserreports'),\n                        emptyTable: M.util.get_string('emptytable', 'local_edwiserreports'),\n                        zeroRecords: M.util.get_string('zerorecords', 'local_edwiserreports'),\n                        paginate: {\n                            previous: \"◀\",\n                            next: \"▶\"\n                        }\n                    },\n                    drawCallback: function() {\n                        common.stylePaginationButton(this);\n                        common.loader.hide(SELECTOR.PAGE);\n                    }\n                });\n                dataTable.columns(0).search($(SELECTOR.SEARCH).val());\n                dataTable.page.len($(SELECTOR.LENGTH).val()).draw();\n            })\n            .fail(function(ex) {\n                Notification.exception(ex);\n                common.loader.hide(SELECTOR.PAGE);\n            });\n    }\n\n    /**\n     * Initialize\n     */\n    function init() {\n\n        filter = JSON.parse($(SELECTOR.FORMFILTER).val());\n\n        // Initialize select2.\n        $(SELECTOR.COURSE).select2({\n            templateResult: function(state) {\n                if (!state.id) {\n                    return state.text;\n                }\n                var $state = $(\n                    '<span class=\"pl-3 d-block\">' + state.text + '</span>'\n                );\n                return $state;\n            }\n        });\n\n        $(SELECTOR.PAGE).find('.singleselect').not(SELECTOR.COURSE).select2();\n\n        // Observer course change.\n        $('body').on('change', SELECTOR.COURSE, function() {\n            filter.course = $(this).val();\n            filter.learner = null;\n            filter.section = 0;\n            filter.module = 'all';\n            // common.loader.show(SELECTOR.PAGE);\n            common.reloadFilter(\n                SELECTOR.PAGE, ['student', 'section', 'module', 'noallusers'],\n                0,\n                filter.course,\n                0,\n                function() {\n                    if ($(SELECTOR.LEARNER).find('option:first-child').length) {\n                        filter.learner = $(SELECTOR.LEARNER).find('option:first-child').attr('value');\n                    }\n                    initializeDatatable();\n                });\n        });\n\n        // Observer learner change.\n        $('body').on('change', SELECTOR.LEARNER, function() {\n            filter.learner = $(this).val();\n            initializeDatatable();\n        });\n\n        // Observer section change.\n        $('body').on('change', SELECTOR.SECTION, function() {\n            filter.section = $(this).val();\n            filter.module = 'all';\n            PROMISE.GET_FILTER_DATA(['module'], filter.course, filter.section)\n                .done(function(response) {\n                    response = JSON.parse(response);\n                    common.refreshFilter('module', response.module, SELECTOR.PAGE, function() {\n                        initializeDatatable();\n                    });\n                });\n            initializeDatatable();\n        });\n\n        // Observer module change.\n        $('body').on('change', SELECTOR.MODULE, function() {\n            filter.module = $(this).val();\n            initializeDatatable();\n        });\n\n        // Observer completion change.\n        $('body').on('change', SELECTOR.COMPLETION, function() {\n            filter.completion = $(this).val();\n            initializeDatatable();\n        });\n\n        // Search in table.\n        $('body').on('input', SELECTOR.SEARCH, function() {\n            dataTable.column(0).search(this.value).draw();\n        });\n\n        // Observer length change.\n        $('body').on('change', SELECTOR.LENGTH, function() {\n            dataTable.page.len(this.value).draw();\n        });\n\n        initializeDatatable();\n        common.handleSearchInput();\n\n        // Handle report page capability manager.\n        common.handleReportCapability();\n    }\n\n    return {\n        init: function() {\n            $(document).ready(function() {\n                init();\n            });\n        }\n    };\n\n});"],"file":"learnercourseactivities.min.js"}