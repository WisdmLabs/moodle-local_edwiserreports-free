{"version":3,"sources":["install.js"],"names":["define","$","ajax","findDuplicates","list","filter","item","index","indexOf","findMissings","dummyPositions","fixDuplicatePosition","duplicate","missing","skippedFirst","fixer","forEach","initializePositionsHandler","positionSelector","currentPositions","each","idx","val","push","parseInt","Array","length","keys","duplicates","missings","i","position","fixDuplicatePositions","on","_this","this","posChangedIdx","name","prevSelectVal","currSelectVal","updater","init","call","methodname","args","pluginname","configname","done","response","success","document","ready","event","preventDefault","submit"],"mappings":"AAAA,aAuBAA,OAAO,CAAC,SAAU,aAAc,SAAUC,EAAGC,GAM3C,SAASC,EAAeC,GACtB,OAAOA,EAAKC,OAAO,CAACC,EAAMC,IAAUH,EAAKI,QAAQF,KAAUC,GAS7D,SAASE,EAAaL,EAAMM,GAC1B,OAAOA,EAAeL,OAAOC,IAAgC,IAAxBF,EAAKI,QAAQF,IASpD,SAASK,EAAqBP,EAAMQ,EAAWC,GAC7C,IAAIC,GAAe,EACfC,EAAQH,EAAYC,GAAW,EAAI,EACvCT,EAAKY,QAAQ,SAAUV,EAAMC,GAEvBD,GAAQM,GAA6B,GAAhBE,EAMrBR,GAAQM,EAMRA,EAAYC,GAAWP,EAAOO,GAAWP,EAAOM,EAClDR,EAAKG,GAASD,EAAOS,EAKnBH,EAAYC,GAAWP,EAAOO,GAAWP,EAAOM,IAClDR,EAAKG,GAASD,EAAOS,GAZrBX,EAAKG,GAASD,EAAOS,EANrBD,GAAe,IAyDrB,SAASG,IACP,IAAIC,EAAmB,wDACnBC,EAAmB,GACvBlB,EAAEiB,GAAkBE,KAAK,SAAUC,EAAKC,GACtCH,EAAiBI,KAAKC,SAASvB,EAAEqB,GAAKA,UAhC1C,SAA+BlB,EAAMc,GAEnC,IAAIR,EAAiB,IAAIe,MAAMrB,EAAKsB,QAAQC,QAGxCC,EAAazB,EAAeC,GAG5ByB,EAAWpB,EAAaL,EAAMM,GAClC,KAAOkB,EAAWF,OAAS,GAAG,CAC5B,IAAK,IAAII,EAAI,EAAGA,EAAIF,EAAWF,OAAQI,IAAK,CAC1C,IAAIlB,EAAYgB,EAAWE,GACvBjB,EAAUgB,EAASC,GACvBnB,EAAqBP,EAAMQ,EAAWC,GAExCe,EAAazB,EAAeC,GAC5ByB,EAAWpB,EAAaL,EAAMM,GAIhCT,EAAEiB,GAAkBE,KAAK,SAAUb,EAAOwB,GACxC9B,EAAE8B,GAAUT,IAAIlB,EAAKG,MAevByB,CAAsBb,EAAkBD,GACxCjB,EAAEiB,GAAkBe,GAAG,SAAU,WAC/B,IAAIC,EAAQC,KACRC,GAAgB,EACpBnC,EAAEiB,GAAkBE,KAAK,SAAUC,EAAKC,GAClCY,EAAMG,MAAQf,EAAIe,OACpBD,EAAgBf,KAIpB,IAAIiB,EAAgBd,SAASL,EAAiBiB,IAC1CG,EAAgBf,SAASvB,EAAEkC,MAAMb,OACjCkB,EAAUF,EAAgBC,EAAgB,GAAK,EAGnDpB,EAAiBH,QAAQ,CAACe,EAAUxB,KAC9B+B,GAAiBP,EACnBA,EAAWQ,EACFD,EAAgBC,EACrBR,EAAWO,GAAiBP,GAAYQ,IAC1CR,GAAYS,GAELF,EAAgBC,GACrBR,EAAWO,GAAiBP,GAAYQ,IAC1CR,GAAYS,GAGhBrB,EAAiBZ,GAASwB,IAE5B9B,EAAEiB,GAAkBE,KAAK,SAAUb,EAAOwB,GACxC9B,EAAE8B,GAAUT,IAAIH,EAAiBZ,QAyCvC,MAAO,CACLkC,KAtCS,WAEavC,EAAKwC,KAAK,CAAC,CAC/BC,WAFc,yCAGdC,KAAM,CACJC,WAAY,uBACZC,WAAY,iCAGA,GAAGC,KAAK,SAAUC,GAC5BA,EAASC,SAEsB/C,EAAKwC,KAAK,CAAC,CAC1CC,WAFyB,4DAGzBC,KAAM,MAEmB,GAAGG,SAGlC9C,EAAEiD,UAAUC,MAAM,WAChBlD,EAAE,2EAA2EgC,GAAG,QAAS,SAAUmB,GACjGA,EAAMC,iBAEgBnD,EAAKwC,KAAK,CAAC,CAC/BC,WAFc,yCAGdC,KAAM,CACJC,WAAY,uBACZC,WAAY,iCAGA,GAAGC,KAAK,WACtB9C,EAAE,kBAAkBqD,aAGxBrC","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n/**\n * Plugin administration pages are defined here.\n *\n * @copyright   2021 wisdmlabs <support@wisdmlabs.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n/* eslint-disable no-console */\ndefine(['jquery', 'core/ajax'], function($, ajax) {\n\n    /**\n     * Find duplicate positions in list\n     * @param {Array} list Position list\n     * @returns {Array}\n     */\n    function findDuplicates(list) {\n        return list.filter((item, index) => list.indexOf(item) !== index);\n    }\n\n    /**\n     * Find missing positions in list.\n     * @param {Array} list Position list\n     * @param {Array} dummyPositions Dummy positions to search\n     * @returns {Array}\n     */\n    function findMissings(list, dummyPositions) {\n        return dummyPositions.filter(item => list.indexOf(item) === -1);\n    }\n\n    /**\n     * Fix duplicate position from list.\n     * @param {Array} list Position list\n     * @param {Integer} duplicate Duplicate position\n     * @param {Integer} missing Missing position\n     */\n    function fixDuplicatePosition(list, duplicate, missing) {\n        let skippedFirst = false;\n        let fixer = duplicate > missing ? -1 : 1;\n        list.forEach(function(item, index) {\n            // Skip first duplicate item.\n            if (item == duplicate && skippedFirst == false) {\n                skippedFirst = true;\n                return;\n            }\n\n            // Fixed duplicate item.\n            if (item == duplicate) {\n                list[index] = item + fixer;\n                return;\n            }\n\n            // Decrease item position.\n            if (duplicate > missing && item > missing && item < duplicate) {\n                list[index] = item + fixer;\n                return;\n            }\n\n            // Increase item position.\n            if (duplicate < missing && item < missing && item > duplicate) {\n                list[index] = item + fixer;\n                return;\n            }\n        });\n    }\n\n    /**\n     * Fix duplicate positions in list.\n     * @param {Array} list Position list\n     * @param {String} positionSelector Position select\n     */\n    function fixDuplicatePositions(list, positionSelector) {\n        // Create dummy positions.\n        let dummyPositions = [...Array(list.length).keys()];\n\n        // Find duplicate positions.\n        let duplicates = findDuplicates(list);\n\n        // Find missing positions.\n        let missings = findMissings(list, dummyPositions);\n        while (duplicates.length > 0) {\n            for (let i = 0; i < duplicates.length; i++) {\n                let duplicate = duplicates[i];\n                let missing = missings[i];\n                fixDuplicatePosition(list, duplicate, missing);\n            }\n            duplicates = findDuplicates(list);\n            missings = findMissings(list, dummyPositions);\n        }\n\n        // Apply fixed positions.\n        $(positionSelector).each(function(index, position) {\n            $(position).val(list[index]);\n        });\n    }\n\n    /**\n     * Initialize position handler.\n     */\n    function initializePositionsHandler() {\n        var positionSelector = 'select[id ^=id_s_local_edwiserreports][id $=position]';\n\n        var currentPositions = [];\n        $(positionSelector).each(function(idx, val) {\n            currentPositions.push(parseInt($(val).val()));\n        });\n\n        // Fix duplicate positions.\n        fixDuplicatePositions(currentPositions, positionSelector);\n\n        $(positionSelector).on('change', function() {\n            var _this = this;\n            var posChangedIdx = false;\n            $(positionSelector).each(function(idx, val) {\n                if (_this.name == val.name) {\n                    posChangedIdx = idx;\n                    return;\n                }\n            });\n\n            var prevSelectVal = parseInt(currentPositions[posChangedIdx]);\n            var currSelectVal = parseInt($(this).val());\n            var updater = prevSelectVal > currSelectVal ? 1 : -1;\n\n            // Rearrange other positions.\n            currentPositions.forEach((position, index) => {\n                if (prevSelectVal == position) {\n                    position = currSelectVal;\n                } else if (prevSelectVal > currSelectVal) {\n                    if (position < prevSelectVal && position >= currSelectVal) {\n                        position += updater;\n                    }\n                } else if (prevSelectVal < currSelectVal) {\n                    if (position > prevSelectVal && position <= currSelectVal) {\n                        position += updater;\n                    }\n                }\n                currentPositions[index] = position;\n            });\n\n            $(positionSelector).each(function(index, position) {\n                $(position).val(currentPositions[index]);\n            });\n\n        });\n    }\n\n    var init = function() {\n        var getConfig = 'local_edwiserreports_get_plugin_config';\n        var getPluginConfig = ajax.call([{\n            methodname: getConfig,\n            args: {\n                pluginname: 'local_edwiserreports',\n                configname: 'edwiserreportsinstallation'\n            }\n        }]);\n\n        getPluginConfig[0].done(function(response) {\n            if (response.success) {\n                var completeInstallation = 'local_edwiserreports_complete_edwiserreports_installation';\n                var completePluginInstallation = ajax.call([{\n                    methodname: completeInstallation,\n                    args: {}\n                }]);\n\n                completePluginInstallation[0].done();\n            }\n        });\n\n        $(document).ready(function() {\n            $('#page-admin-setting-manageedwiserreports #adminsettings [type=\"submit\"]').on('click', function(event) {\n                event.preventDefault();\n                var setConfig = 'local_edwiserreports_set_plugin_config';\n                var setPluginConfig = ajax.call([{\n                    methodname: setConfig,\n                    args: {\n                        pluginname: 'local_edwiserreports',\n                        configname: 'edwiserreportsinstallation'\n                    }\n                }]);\n\n                setPluginConfig[0].done(function() {\n                    $('#adminsettings').submit();\n                });\n            });\n\n            initializePositionsHandler();\n        });\n    };\n\n    return {\n        init: init\n    };\n});\n"],"file":"install.min.js"}