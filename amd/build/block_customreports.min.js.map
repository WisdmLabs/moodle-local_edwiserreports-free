{"version":3,"sources":["block_customreports.js"],"names":["define","$","config","v","common","selectorTable","panel","getPanel","reportSelector","selectorType","downloadBtn","customDropdown","find","reportForm","getCheckboxesSelector","tableSelector","createSelectorTable","type","tableSelectorClass","destroy","show","prop","customReportSelectors","rootContainer","filter","JSON","stringify","url","requestUrl","M","local_edwiserreports","secret","dtConfig","columns","data","language","searchPlaceholder","emptyTable","info","util","get_string","infoEmpty","zeroRecords","paginate","previous","next","DataTable","ajax","dom","responsive","scrollY","scroller","loadingIndicator","scrollCollapse","scrollX","paging","bInfo","bSort","drawCallback","stylePaginationButton","this","adjust","flatpickr","altInput","altFormat","dateFormat","maxDate","onClose","selectedDates","dateStr","instance","is","element","startTime","getTime","val","endTime","document","on","event","checkboxes","target","html","hide","addClass","removeClass","setTimeout","length","filters","each","idx","ele","push","join"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n/**\n * Plugin administration pages are defined here.\n *\n * @copyright   2021 wisdmlabs <support@wisdmlabs.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine([\n    'jquery',\n    './defaultconfig',\n    './variables',\n    './common',\n    './flatpickr',\n    './jquery.dataTables',\n    './dataTables.bootstrap4'\n], function($, config, v, common) {\n    /**\n     * Selector datable variable\n     * @type {object | null}\n     */\n    var selectorTable = null;\n\n    /**\n     * Get panel of custom reports block\n     * @type {string}\n     */\n    var panel = config.getPanel(\"#customReportBlock\");\n\n    /**\n     * Report type selector\n     * @type {string}\n     */\n    var reportSelector = panel + ' .dropdown-menu .dropdown-item';\n\n    /**\n     * Report type selector\n     * @type {string}\n     */\n    var selectorType = 'courses';\n\n    /**\n     * Custom report download button\n     * @type {string}\n     */\n    var downloadBtn = panel + ' #customReportDownload';\n\n    /**\n     * Custom Report Download Dropdown\n     * @type {object}\n     */\n    var customDropdown = $(panel).find('#customReportDrodown');\n\n    /**\n     * Custom Reports form\n     * @type {object}\n     */\n    var reportForm = $(panel).find('#customReportsForm');\n\n    /**\n     * Plugin component\n     * @type {String}\n     */\n    var component = 'local_edwiserreports';\n\n    /**\n     * Get checkbox selector for table.\n     * @param {String} tableSelector Table id\n     * @returns {String} Checkbox selector\n     */\n    var getCheckboxesSelector = function(tableSelector) {\n        return panel + ' ' + tableSelector + ' ' + 'input[name^=customReportSelect-]';\n    };\n\n    /*\n     * Get custom report selectors\n     * It may be courses of learning program\n     * Courses | Learning Programs\n     */\n    var getCustomReportSelector = function(selectedDates, dateStr, instance) {\n        // If date not selected then return from here\n        if (!selectedDates[0]) {\n            return;\n        }\n\n        // Select date range\n        if ($('#wdmCustomReportEnrolStart').is(instance.element)) {\n            // Get starttime\n            var startTime = selectedDates[0].getTime();\n\n            // Set form value startdate\n            reportForm.find('input[name=enrolstartdate]').val(startTime / 1000);\n        } else if ($('#wdmCustomReportEnrolEnd').is(instance.element)) {\n            var endTime = selectedDates[0].getTime();\n\n            // Set form value enddate\n            reportForm.find('input[name=enrolenddate]').val(endTime / 1000);\n        }\n    };\n\n    /**\n     * Get datatable config for report\n     * @param  {string} selectorType Report Type\n     * @return {object}            Datatable config\n     */\n    var getDatatableConfig = function(selectorType) {\n        if (selectorType == 'lps') {\n            return {\n                \"columns\": [{\n                    \"data\": \"select\"\n                }, {\n                    \"data\": \"fullname\"\n                }, {\n                    \"data\": \"shortname\"\n                }, {\n                    \"data\": \"startdate\"\n                }, {\n                    \"data\": \"enddate\"\n                }, {\n                    \"data\": \"duration\"\n                }],\n                \"language\": {\n                    \"searchPlaceholder\": \"Search Learning Programs\",\n                    \"emptyTable\": \"There are no learning programs\"\n                }\n            };\n        } else {\n            return {\n                \"columns\": [{\n                    \"data\": \"select\"\n                }, {\n                    \"data\": \"fullname\"\n                }, {\n                    \"data\": \"shortname\"\n                }, {\n                    \"data\": \"category\"\n                }, {\n                    \"data\": \"startdate\"\n                }, {\n                    \"data\": \"enddate\"\n                }],\n                \"language\": {\n                    info: M.util.get_string('tableinfo', 'local_edwiserreports'),\n                    infoEmpty: M.util.get_string('infoempty', 'local_edwiserreports'),\n                    emptyTable: M.util.get_string('nocourses', 'local_edwiserreports'),\n                    zeroRecords: M.util.get_string('zerorecords', 'local_edwiserreports'),\n                    paginate: {\n                        previous: M.util.get_string('previous', 'moodle'),\n                        next: M.util.get_string('next', 'moodle')\n                    }\n                }\n            };\n        }\n    };\n\n    /**\n     * Creat Selector Table to select courses/lps\n     * @param  {String} type Selector type courses/lps\n     * @param  {String} tableSelectorClass Table selector class\n     */\n    var createSelectorTable = function(type, tableSelectorClass) {\n        // If table is already there then remove table\n        if (selectorTable) {\n            selectorTable.destroy();\n        }\n\n        // Show enrolment date selector\n        $(panel + \" .enrol-selector\").show();\n\n        $(panel + ' ' + 'input[name=\"selectAllCustom\"]').prop(\"checked\", false);\n\n        // Custom Report Selector Body\n        var customReportSelectors = $(panel).find('.customReportSelectors');\n        var rootContainer = $(panel).find('.rootContainer');\n\n        // Prepare filter to get selectors data\n        var filter = JSON.stringify({\n            type: type\n        });\n\n        // Prepare url to get selector related data\n        var url = v.requestUrl + '?action=get_customreport_selectors_ajax&secret=' +\n            M.local_edwiserreports.secret + '&filter=' + filter;\n\n        // Show custom report selectors\n        rootContainer.show();\n\n        // Get dataTable config\n        var dtConfig = getDatatableConfig(type);\n\n        // Get all courses/learningprogram\n        selectorTable = customReportSelectors.find(tableSelectorClass).show().DataTable({\n            ajax: url,\n            dom: '<\"edwiserreports-table\"<\"table-filter d-flex\"f><t><\"table-pagination\"p>>',\n            columns: dtConfig.columns,\n            language: dtConfig.language,\n            responsive: true,\n            scrollY: \"380px\",\n            scroller: {\n                loadingIndicator: true\n            },\n            scrollCollapse: true,\n            scrollX: true,\n            paging: false,\n            bInfo: false,\n            bSort: false,\n            drawCallback: function() {\n                common.stylePaginationButton(this);\n            }\n        }).columns.adjust();\n    };\n\n    /**\n     * Validate form inputs\n     * @return {bool} status\n     */\n    var validateFormInputs = function() {\n        var startTime = reportForm.find('input[name=\"enrolstartdate\"]').val();\n        var endTime = reportForm.find('input[name=\"enrolenddate\"]').val();\n\n        // If enrolment date not selected\n        if (endTime == \"\" && startTime == \"\") {\n            return true;\n        }\n\n        // If end time greater the start time\n        if (endTime < startTime) {\n            return false;\n        }\n\n        return true;\n    };\n\n    /**\n     *  Create flatpicker to select custom date range\n     */\n    $(panel).find('.custom-flatpicker').flatpickr({\n        altInput: true,\n        altFormat: \"d/m/Y\",\n        dateFormat: \"Y-m-d\",\n        maxDate: \"today\",\n        onClose: getCustomReportSelector\n    });\n\n    // Clear search input text\n    $(document).on('click', '.custom-flatpicker ~ button.input-search-close', function() {\n        $('.custom-flatpicker ~ input.form-control').val(\"\");\n\n        // Set form value startdate and enddate\n        reportForm.find('input[name=enrolstartdate]').val(\"\");\n        reportForm.find('input[name=enrolenddate]').val(\"\");\n    });\n\n    /**\n     * Check all courses/lps\n     * @param  {String} document).on('change', `${panel}   input[name [description]\n     * @return {[type]}                        [description]\n     */\n    $(document).on('change', panel + ' input[name=\"selectAllCustom\"]', function(event) {\n        // Get table selector\n        var tableSelectorClass = '.course-table';\n        if (selectorType == 'lps') {\n            tableSelectorClass = '.lp-table';\n        }\n\n        // Get checkboxes\n        var checkboxes = getCheckboxesSelector(tableSelectorClass);\n        if ($(event.target).is(':checked')) {\n            $(checkboxes).prop(\"checked\", true);\n        } else {\n            $(checkboxes).prop(\"checked\", false);\n        }\n    });\n\n    /**\n     * Get courses/lps when dropdown selected.\n     */\n    $(document).on('click', reportSelector, function(event) {\n        selectorType = $(event.target).data('val');\n\n        // Set dropdown value\n        customDropdown.html($(event.target).html());\n        customDropdown.data('val', selectorType);\n\n        // Get table selector\n        var tableSelectorClass = '.course-table';\n        if (selectorType == 'lps') {\n            tableSelectorClass = '.lp-table';\n        }\n\n        // Hide table in panel body\n        $(panel).find('.table').hide();\n\n        // Set form value\n        reportForm.find('input[name=reporttype]').val(selectorType);\n\n        // Create table for selectors table\n        createSelectorTable(selectorType, tableSelectorClass);\n    });\n\n    /**\n     * Download reports in csv format\n     */\n    $(document).on('click', downloadBtn, function() {\n        /**\n         * Validate forms input\n         */\n        if (!validateFormInputs()) {\n            $(panel).find('#errorMsg').html(M.util.get_string('customreportdatefailed', component))\n                .addClass('show').removeClass('hide');\n            setTimeout(function() {\n                $(panel).find('#errorMsg').addClass('hide').removeClass('show');\n            }, 5000);\n            return false;\n        }\n\n        // Get table selector\n        var tableSelectorClass = '.course-table';\n        if (selectorType == 'lps') {\n            tableSelectorClass = '.lp-table';\n        }\n        // Get checkboxes\n        var checkboxes = getCheckboxesSelector(tableSelectorClass);\n        // If no data selected\n        if (!$(checkboxes + ':checked').length) {\n            $(panel).find('#errorMsg').html(M.util.get_string('customreportselectfailed', component))\n                .addClass('show').removeClass('hide');\n            setTimeout(function() {\n                $(panel).find('#errorMsg').addClass('hide').removeClass('show');\n            }, 5000);\n            return false;\n        }\n\n        var filters = [];\n        $(checkboxes + ':checked').each(function(idx, ele) {\n            filters.push($(ele).data('id'));\n        });\n\n        // Set form value\n        reportForm.find('input[name=filters]').val(filters.join(\",\"));\n        return true;\n    });\n});"],"file":"block_customreports.min.js"}