{"version":3,"sources":["block_customreports.js"],"names":["define","$","str","config","v","selectorTable","panel","getPanel","reportSelector","selectorType","downloadBtn","customDropdown","find","reportForm","getCheckboxesSelector","tableSelector","flatpickr","altInput","altFormat","dateFormat","maxDate","onClose","selectedDates","dateStr","instance","is","element","startTime","getTime","val","endTime","document","on","event","tableSelectorClass","checkboxes","target","prop","data","html","hide","type","destroy","show","customReportSelectors","rootContainer","filter","JSON","stringify","url","requestUrl","M","local_edwiserreports","secret","dtConfig","columns","language","searchPlaceholder","emptyTable","DataTable","ajax","dom","responsive","scrollY","scroller","loadingIndicator","scrollCollapse","scrollX","paging","bInfo","bSort","drawCallback","common","stylePaginationButton","this","adjust","createSelectorTable","util","get_string","addClass","removeClass","setTimeout","length","filters","each","idx","ele","push","join"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n/**\n * Plugin administration pages are defined here.\n *\n * @package     local_edwiserreports\n * @copyright   2021 wisdmlabs <support@wisdmlabs.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine([\n    'jquery',\n    'core/str',\n    './defaultconfig',\n    './variables',\n    './flatpickr',\n    './jquery.dataTables',\n    './dataTables.bootstrap4'\n], function($, str, config, v) {\n    /**\n     * Selector datable variable\n     * @type {object | null}\n     */\n    var selectorTable = null;\n\n    /**\n     * Get panel of custom reports block\n     * @type {string}\n     */\n    var panel = config.getPanel(\"#customReportBlock\");\n\n    /**\n     * Report type selector\n     * @type {string}\n     */\n    var reportSelector = panel + ' .dropdown-menu .dropdown-item';\n\n    /**\n     * Report type selector\n     * @type {string}\n     */\n    var selectorType = 'courses';\n\n    /**\n     * Custom report download button\n     * @type {string}\n     */\n    var downloadBtn = panel + ' #customReportDownload';\n\n    /**\n     * Custom Report Download Dropdown\n     * @type {object}\n     */\n    var customDropdown = $(panel).find('#customReportDrodown');\n\n    /**\n     * Custom Reports form\n     * @type {object}\n     */\n    var reportForm = $(panel).find('#customReportsForm');\n\n    /**\n     * Plugin component\n     * @type {String}\n     */\n    var component = 'local_edwiserreports';\n\n    /**\n     * Get checkbox selector for table.\n     * @param {String} tableSelector Table id\n     * @returns {String} Checkbox selector\n     */\n    var getCheckboxesSelector = function(tableSelector) {\n        return panel + ' ' + tableSelector + ' ' + 'input[name^=customReportSelect-]';\n    };\n\n    /*\n     * Get custom report selectors\n     * It may be courses of learning program\n     * Courses | Learning Programs\n     */\n    var getCustomReportSelector = function(selectedDates, dateStr, instance) {\n        // If date not selected then return from here\n        if (!selectedDates[0]) {\n            return;\n        }\n\n        // Select date range\n        if ($('#wdmCustomReportEnrolStart').is(instance.element)) {\n            // Get starttime\n            var startTime = selectedDates[0].getTime();\n\n            // Set form value startdate\n            reportForm.find('input[name=enrolstartdate]').val(startTime / 1000);\n        } else if ($('#wdmCustomReportEnrolEnd').is(instance.element)) {\n            var endTime = selectedDates[0].getTime();\n\n            // Set form value enddate\n            reportForm.find('input[name=enrolenddate]').val(endTime / 1000);\n        }\n    };\n\n    /**\n     * Get datatable config for report\n     * @param  {string} selectorType Report Type\n     * @return {object}            Datatable config\n     */\n    var getDatatableConfig = function(selectorType) {\n        if (selectorType == 'lps') {\n            return {\n                \"columns\": [\n                    { \"data\": \"select\" },\n                    { \"data\": \"fullname\" },\n                    { \"data\": \"shortname\" },\n                    { \"data\": \"startdate\" },\n                    { \"data\": \"enddate\" },\n                    { \"data\": \"duration\" },\n                ],\n                \"language\": {\n                    \"searchPlaceholder\": \"Search Learning Programs\",\n                    \"emptyTable\": \"There are no learning programs\"\n                }\n            };\n        } else {\n            return {\n                \"columns\": [\n                    { \"data\": \"select\" },\n                    { \"data\": \"fullname\" },\n                    { \"data\": \"shortname\" },\n                    { \"data\": \"category\" },\n                    { \"data\": \"startdate\" },\n                    { \"data\": \"enddate\" },\n                ],\n                \"language\": {\n                    \"searchPlaceholder\": \"Search Course\",\n                    \"emptyTable\": \"There are no courses\"\n                }\n            };\n        }\n    };\n\n    /**\n     * Creat Selector Table to select courses/lps\n     * @param  {String} type Selector type courses/lps\n     * @param  {String} tableSelectorClass Table selector class\n     */\n    var createSelectorTable = function(type, tableSelectorClass) {\n        // If table is already there then remove table\n        if (selectorTable) {\n            selectorTable.destroy();\n        }\n\n        // Show enrolment date selector\n        $(panel + \" .enrol-selector\").show();\n\n        $(panel + ' ' + 'input[name=\"selectAllCustom\"]').prop(\"checked\", false);\n\n        // Custom Report Selector Body\n        var customReportSelectors = $(panel).find('.customReportSelectors');\n        var rootContainer = $(panel).find('.rootContainer');\n\n        // Prepare filter to get selectors data\n        var filter = JSON.stringify({\n            type: type\n        });\n\n        // Prepare url to get selector related data\n        var url = v.requestUrl + '?action=get_customreport_selectors_ajax&secret=' + M.local_edwiserreports.secret + '&filter=' + filter;\n\n        // Show custom report selectors\n        rootContainer.show();\n\n        // Get dataTable config\n        var dtConfig = getDatatableConfig(type);\n\n        // Get all courses/learningprogram\n        selectorTable = customReportSelectors.find(tableSelectorClass).show().DataTable({\n            ajax: url,\n            dom: '<\"edwiserreports-table\"<\"table-filter d-flex\"f><t><\"table-pagination\"p>>',\n            columns: dtConfig.columns,\n            language: dtConfig.language,\n            responsive: true,\n            scrollY: \"380px\",\n            scroller: {\n                loadingIndicator: true\n            },\n            scrollCollapse: true,\n            scrollX: true,\n            paging: false,\n            bInfo: false,\n            bSort: false,\n            drawCallback: function() {\n                common.stylePaginationButton(this);\n            }\n        }).columns.adjust();\n    };\n\n    /**\n     * Validate form inputs\n     * @return {bool} status\n     */\n    var validateFormInputs = function() {\n        var startTime = reportForm.find('input[name=\"enrolstartdate\"]').val();\n        var endTime = reportForm.find('input[name=\"enrolenddate\"]').val();\n\n        // If enrolment date not selected\n        if (endTime == \"\" && startTime == \"\") {\n            return true;\n        }\n\n        // If end time greater the start time\n        if (endTime < startTime) {\n            return false;\n        }\n\n        return true;\n    };\n\n    /**\n     *  Create flatpicker to select custom date range\n     */\n    $(panel).find('.custom-flatpicker').flatpickr({\n        altInput: true,\n        altFormat: \"d/m/Y\",\n        dateFormat: \"Y-m-d\",\n        maxDate: \"today\",\n        onClose: getCustomReportSelector\n    });\n\n    // Clear search input text\n    $(document).on('click', '.custom-flatpicker ~ button.input-search-close', function() {\n        $('.custom-flatpicker ~ input.form-control').val(\"\");\n\n        // Set form value startdate and enddate\n        reportForm.find('input[name=enrolstartdate]').val(\"\");\n        reportForm.find('input[name=enrolenddate]').val(\"\");\n    });\n\n    /**\n     * Check all courses/lps\n     * @param  {String} document).on('change', `${panel}   input[name [description]\n     * @return {[type]}                        [description]\n     */\n    $(document).on('change', panel + ' input[name=\"selectAllCustom\"]', function(event) {\n        // Get table selector\n        var tableSelectorClass = '.course-table';\n        if (selectorType == 'lps') {\n            tableSelectorClass = '.lp-table';\n        }\n\n        // Get checkboxes\n        var checkboxes = getCheckboxesSelector(tableSelectorClass);\n        if ($(event.target).is(':checked')) {\n            $(checkboxes).prop(\"checked\", true);\n        } else {\n            $(checkboxes).prop(\"checked\", false);\n        }\n    });\n\n    /**\n     * Get courses/lps when dropdown selected.\n     */\n    $(document).on('click', reportSelector, function(event) {\n        selectorType = $(event.target).data('val');\n\n        // Set dropdown value\n        customDropdown.html($(event.target).html());\n        customDropdown.data('val', selectorType);\n\n        // Get table selector\n        var tableSelectorClass = '.course-table';\n        if (selectorType == 'lps') {\n            tableSelectorClass = '.lp-table';\n        }\n\n        // Hide table in panel body\n        $(panel).find('.table').hide();\n\n        // Set form value\n        reportForm.find('input[name=reporttype]').val(selectorType);\n\n        // Create table for selectors table\n        createSelectorTable(selectorType, tableSelectorClass);\n    });\n\n    /**\n     * Download reports in csv format\n     */\n    $(document).on('click', downloadBtn, function() {\n        /**\n         * Validate forms input\n         */\n        if (!validateFormInputs()) {\n            $(panel).find('#errorMsg').html(M.util.get_string('customreportdatefailed', component))\n                .addClass('show').removeClass('hide');\n            setTimeout(function() {\n                $(panel).find('#errorMsg').addClass('hide').removeClass('show');\n            }, 5000);\n            return false;\n        }\n\n        // Get table selector\n        var tableSelectorClass = '.course-table';\n        if (selectorType == 'lps') {\n            tableSelectorClass = '.lp-table';\n        }\n        // Get checkboxes\n        var checkboxes = getCheckboxesSelector(tableSelectorClass);\n        // If no data selected\n        if (!$(checkboxes + ':checked').length) {\n            $(panel).find('#errorMsg').html(M.util.get_string('customreportselectfailed', component))\n                .addClass('show').removeClass('hide');\n            setTimeout(function() {\n                $(panel).find('#errorMsg').addClass('hide').removeClass('show');\n            }, 5000);\n            return false;\n        }\n\n        var filters = [];\n        $(checkboxes + ':checked').each(function(idx, ele) {\n            filters.push($(ele).data('id'));\n        });\n\n        // Set form value\n        reportForm.find('input[name=filters]').val(filters.join(\",\"));\n        return true;\n    });\n});"],"file":"block_customreports.min.js"}