{"version":3,"sources":["block_customreports.js"],"names":["define","$","config","v","common","Oldjquery","selectorTable","panel","getPanel","reportSelector","selectorType","downloadBtn","customDropdown","find","reportForm","rtl","attr","val","getCheckboxesSelector","tableSelector","createSelectorTable","type","tableSelectorClass","destroy","show","prop","customReportSelectors","rootContainer","filter","JSON","stringify","url","requestUrl","M","local_edwiserreports","secret","dtConfig","columns","data","language","searchPlaceholder","emptyTable","info","util","get_string","infoEmpty","zeroRecords","paginate","previous","next","DataTable","ajax","dom","responsive","scrollY","scroller","loadingIndicator","scrollCollapse","scrollX","paging","bInfo","bSort","drawCallback","stylePaginationButton","this","setTimeout","empty","css","border-left","border-bottom","border-top","border-left-color","border-right-width","border-right","border-right-color","border-left-width","adjust","flatpickr","altInput","altFormat","dateFormat","maxDate","onClose","selectedDates","dateStr","instance","is","element","startTime","getTime","endTime","document","on","event","checkboxes","target","html","hide","addClass","removeClass","length","filters","each","idx","ele","push","join"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n/**\n * Plugin administration pages are defined here.\n *\n * @copyright   2021 wisdmlabs <support@wisdmlabs.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine([\n    'jquery',\n    './defaultconfig',\n    './variables',\n    './common',\n    'local_edwiserreports/jquery',\n    './flatpickr',\n    './jquery.dataTables',\n    './dataTables.bootstrap4'\n], function($, config, v, common, Oldjquery) {\n    /**\n     * Selector datable variable\n     * @type {object | null}\n     */\n    var selectorTable = null;\n\n    /**\n     * Get panel of custom reports block\n     * @type {string}\n     */\n    var panel = config.getPanel(\"#customReportBlock\");\n\n    /**\n     * Report type selector\n     * @type {string}\n     */\n    var reportSelector = panel + ' .dropdown-menu .dropdown-item';\n\n    /**\n     * Report type selector\n     * @type {string}\n     */\n    var selectorType = 'courses';\n\n    /**\n     * Custom report download button\n     * @type {string}\n     */\n    var downloadBtn = panel + ' #customReportDownload';\n\n    /**\n     * Custom Report Download Dropdown\n     * @type {object}\n     */\n    var customDropdown = $(panel).find('#customReportDrodown');\n\n    /**\n     * Custom Reports form\n     * @type {object}\n     */\n    var reportForm = $(panel).find('#customReportsForm');\n\n    /**\n     * Plugin component\n     * @type {String}\n     */\n    var component = 'local_edwiserreports';\n\n    /**\n     * Selectors list.\n     */\n    var SELECTOR = {\n        // PANEL: '#wdm-completion-individual',\n        FORMFILTER: '.download-links [name=\"filter\"]',\n        FORMRTL: '.download-links [name=\"rtl\"]',\n        FILTERS: '.filters'\n    };\n\n    /**\n     * rtl for rtl lang support.\n     */\n    let rtl = $('html').attr('dir') == 'rtl' ? 1 : 0;\n\n\n    $(panel).find(SELECTOR.FORMRTL).val(rtl);\n\n\n    /**\n     * Get checkbox selector for table.\n     * @param {String} tableSelector Table id\n     * @returns {String} Checkbox selector\n     */\n    var getCheckboxesSelector = function(tableSelector) {\n        return panel + ' ' + tableSelector + ' ' + 'input[name^=customReportSelect-]';\n    };\n\n    /*\n     * Get custom report selectors\n     * It may be courses of learning program\n     * Courses | Learning Programs\n     */\n    var getCustomReportSelector = function(selectedDates, dateStr, instance) {\n        // If date not selected then return from here\n        if (!selectedDates[0]) {\n            return;\n        }\n\n        // Select date range\n        if ($('#wdmCustomReportEnrolStart').is(instance.element)) {\n            // Get starttime\n            var startTime = selectedDates[0].getTime();\n\n            // Set form value startdate\n            reportForm.find('input[name=enrolstartdate]').val(startTime / 1000);\n        } else if ($('#wdmCustomReportEnrolEnd').is(instance.element)) {\n            var endTime = selectedDates[0].getTime();\n\n            // Set form value enddate\n            reportForm.find('input[name=enrolenddate]').val(endTime / 1000);\n        }\n    };\n\n    /**\n     * Get datatable config for report\n     * @param  {string} selectorType Report Type\n     * @return {object}            Datatable config\n     */\n    var getDatatableConfig = function(selectorType) {\n        if (selectorType == 'lps') {\n            return {\n                \"columns\": [{\n                    \"data\": \"select\"\n                }, {\n                    \"data\": \"fullname\"\n                }, {\n                    \"data\": \"shortname\"\n                }, {\n                    \"data\": \"startdate\"\n                }, {\n                    \"data\": \"enddate\"\n                }, {\n                    \"data\": \"duration\"\n                }],\n                \"language\": {\n                    \"searchPlaceholder\": \"Search Learning Programs\",\n                    \"emptyTable\": \"There are no learning programs\"\n                }\n            };\n        } else {\n            return {\n                \"columns\": [{\n                    \"data\": \"select\"\n                }, {\n                    \"data\": \"fullname\"\n                }, {\n                    \"data\": \"shortname\"\n                }, {\n                    \"data\": \"category\"\n                }, {\n                    \"data\": \"startdate\"\n                }, {\n                    \"data\": \"enddate\"\n                }],\n                \"language\": {\n                    info: M.util.get_string('tableinfo', 'local_edwiserreports'),\n                    infoEmpty: M.util.get_string('infoempty', 'local_edwiserreports'),\n                    emptyTable: M.util.get_string('nocourses', 'local_edwiserreports'),\n                    zeroRecords: M.util.get_string('zerorecords', 'local_edwiserreports'),\n                    paginate: {\n                        previous: \" \",\n                        next: \" \"\n                    }\n                }\n            };\n        }\n    };\n\n    /**\n     * Creat Selector Table to select courses/lps\n     * @param  {String} type Selector type courses/lps\n     * @param  {String} tableSelectorClass Table selector class\n     */\n    var createSelectorTable = function(type, tableSelectorClass) {\n        // If table is already there then remove table\n        if (selectorTable) {\n            selectorTable.destroy();\n        }\n\n        // Show enrolment date selector\n        $(panel + \" .enrol-selector\").show();\n\n        $(panel + ' ' + 'input[name=\"selectAllCustom\"]').prop(\"checked\", false);\n\n        // Custom Report Selector Body\n        var customReportSelectors = $(panel).find('.customReportSelectors');\n        var rootContainer = $(panel).find('.rootContainer');\n\n        // Prepare filter to get selectors data\n        var filter = JSON.stringify({\n            type: type\n        });\n\n        // Prepare url to get selector related data\n        var url = v.requestUrl + '?action=get_customreport_selectors_ajax&secret=' +\n            M.local_edwiserreports.secret + '&filter=' + filter;\n\n        // Show custom report selectors\n        rootContainer.show();\n\n        // Get dataTable config\n        var dtConfig = getDatatableConfig(type);\n\n        // Get all courses/learningprogram\n        selectorTable = customReportSelectors.find(tableSelectorClass).show().DataTable({\n            ajax: url,\n            dom: '<\"edwiserreports-table\"<\"table-filter d-flex\"f><t><\"table-pagination\"p>>',\n            columns: dtConfig.columns,\n            language: dtConfig.language,\n            responsive: true,\n            scrollY: \"380px\",\n            scroller: {\n                loadingIndicator: true\n            },\n            scrollCollapse: true,\n            scrollX: true,\n            paging: false,\n            bInfo: false,\n            bSort: false,\n            drawCallback: function() {\n                common.stylePaginationButton(this);\n\n                // RTL support for arrows\n                setTimeout(function(){\n                    $('.edwiserreports-table .page-item.next a').empty();\n                    $('.edwiserreports-table .page-item.previous a').empty();\n                    var attr = $('html').attr('dir');\n                    // For some browsers, `attr` is undefined; for others,\n                    // `attr` is false.  Check for both.\n                    if (typeof attr !== 'undefined' && attr !== false && attr == 'rtl') {\n                        $('.edwiserreports-table .page-item.next a:before').css({'border-left': '11px solid transparent', 'border-bottom': '6px solid transparent','border-top': '6px solid transparent','border-left-color': '#ccc','border-right-width': '0px'});\n                        $('.edwiserreports-table .page-item.previous a:before').css({'border-bottom': '6px solid transparent','border-top': '6px solid transparent','border-right':' 10px solid transparent','border-right-color': '#ccc','border-left-width': '0px'});\n                    }\n                }, 1000);\n\n                // all themes support for arrows\n                setTimeout(function(){\n\n                    // removing datatbles next previous blank as it can not be done by thier attributes\n\n                }, 2000);\n\n\n            }\n        }).columns.adjust();\n\n        setTimeout(function(){\n            $('.edwiserreports-table .page-item.next a').empty();\n            $('.edwiserreports-table .page-item.previous a').empty();\n        }, 3000);\n\n\n    };\n\n    /**\n     * Validate form inputs\n     * @return {bool} status\n     */\n    var validateFormInputs = function() {\n        var startTime = reportForm.find('input[name=\"enrolstartdate\"]').val();\n        var endTime = reportForm.find('input[name=\"enrolenddate\"]').val();\n\n        // If enrolment date not selected\n        if (endTime == \"\" && startTime == \"\") {\n            return true;\n        }\n\n        // If end time greater the start time\n        if (endTime < startTime) {\n            return false;\n        }\n\n        return true;\n    };\n\n    /**\n     *  Create flatpicker to select custom date range\n     */\n    Oldjquery(panel).find('.custom-flatpicker').flatpickr({\n        altInput: true,\n        altFormat: \"d/m/Y\",\n        dateFormat: \"Y-m-d\",\n        maxDate: \"today\",\n        onClose: getCustomReportSelector\n    });\n\n    // Clear search input text\n    $(document).on('click', '.custom-flatpicker ~ button.input-search-close', function() {\n        $('.custom-flatpicker ~ input.form-control').val(\"\");\n\n        // Set form value startdate and enddate\n        reportForm.find('input[name=enrolstartdate]').val(\"\");\n        reportForm.find('input[name=enrolenddate]').val(\"\");\n    });\n\n    /**\n     * Check all courses/lps\n     * @param  {String} document).on('change', `${panel}   input[name [description]\n     * @return {[type]}                        [description]\n     */\n    $(document).on('change', panel + ' input[name=\"selectAllCustom\"]', function(event) {\n        // Get table selector\n        var tableSelectorClass = '.course-table';\n        if (selectorType == 'lps') {\n            tableSelectorClass = '.lp-table';\n        }\n\n        // Get checkboxes\n        var checkboxes = getCheckboxesSelector(tableSelectorClass);\n        if ($(event.target).is(':checked')) {\n            $(checkboxes).prop(\"checked\", true);\n        } else {\n            $(checkboxes).prop(\"checked\", false);\n        }\n    });\n\n    /**\n     * Get courses/lps when dropdown selected.\n     */\n    $(document).on('click', reportSelector, function(event) {\n        selectorType = $(event.target).data('val');\n\n        // Set dropdown value\n        customDropdown.html($(event.target).html());\n        customDropdown.data('val', selectorType);\n\n        // Get table selector\n        var tableSelectorClass = '.course-table';\n        if (selectorType == 'lps') {\n            tableSelectorClass = '.lp-table';\n        }\n\n        // Hide table in panel body\n        $(panel).find('.table').hide();\n\n        // Set form value\n        reportForm.find('input[name=reporttype]').val(selectorType);\n\n        // Create table for selectors table\n        createSelectorTable(selectorType, tableSelectorClass);\n    });\n\n    /**\n     * Download reports in csv format\n     */\n    $(document).on('click', downloadBtn, function() {\n        /**\n         * Validate forms input\n         */\n        if (!validateFormInputs()) {\n            $(panel).find('#errorMsg').html(M.util.get_string('customreportdatefailed', component))\n                .addClass('show').removeClass('hide');\n            setTimeout(function() {\n                $(panel).find('#errorMsg').addClass('hide').removeClass('show');\n            }, 5000);\n            return false;\n        }\n\n        // Get table selector\n        var tableSelectorClass = '.course-table';\n        if (selectorType == 'lps') {\n            tableSelectorClass = '.lp-table';\n        }\n        // Get checkboxes\n        var checkboxes = getCheckboxesSelector(tableSelectorClass);\n        // If no data selected\n        if (!$(checkboxes + ':checked').length) {\n            $(panel).find('#errorMsg').html(M.util.get_string('customreportselectfailed', component))\n                .addClass('show').removeClass('hide');\n            setTimeout(function() {\n                $(panel).find('#errorMsg').addClass('hide').removeClass('show');\n            }, 5000);\n            return false;\n        }\n\n        var filters = [];\n        $(checkboxes + ':checked').each(function(idx, ele) {\n            filters.push($(ele).data('id'));\n        });\n\n        // Set form value\n        reportForm.find('input[name=filters]').val(filters.join(\",\"));\n        return true;\n    });\n});\n"],"file":"block_customreports.min.js"}