{"version":3,"sources":["block_queryreport.js"],"names":["define","$","cfg","Templates","document","ready","loader","select2","multiple","closeOnSelect","placeholder","maximumSelectionLength","selectedLps","on","event","show","values","currentTarget","find","each","i","selected","val","JSON","stringify","html","siblings","oldIndex","indexOf","newIndex","splice","ajax","url","requestUrl","type","requestType","dataType","requestDataType","data","action","secret","M","local_edwiserreports","lang","attr","lpids","done","response","context","courses","render","then","js","replaceNodeContents","fail","ex","console","log","error","always","length","hide","selectedRPM","cohortids","sesskey","rpmids","template","lps","appendNodeContents","users","selectedCourses","selectedCohort","selectedUsers","panel","getPanel","reportForm","createFlatpicker","selector","startdate","maxdate","flatpickr","mode","altInput","altFormat","dateFormat","maxDate","defaultDate","onClose","getDateSelectorData","onReady","selectedDates","dateStr","instance","time","getTime","element","is","validateCustomQueryReportForm","checkedFields","formData","serializeArray","idx","name","value","setTimeout","preventDefault","enrolstartdate","enrolenddate","completionstartdate","completionenddate","key","push","id","rpms","userids","activitytype","getFilters","Date","setDate","getDate","click","this","closest","prop","removeAttr"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n/**\n * Plugin administration pages are defined here.\n *\n * @package     local_edwiserreports\n * @copyright   2021 wisdmlabs <support@wisdmlabs.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n/* eslint-disable no-console */\ndefine([\n    'jquery',\n    'local_edwiserreports/defaultconfig',\n    'core/templates',\n    'local_edwiserreports/select2'\n], function(\n    $, cfg, Templates\n) {\n    $(document).ready(function() {\n        /**\n         * Loader HTML String\n         * @type {String}\n         */\n        var loader = '<span class=\"px-10 py-5 pull-right\"><i class=\"fa fa-spinner fa-spin\"></i></span>';\n\n        // Add select2 for the dropdowns\n        $('#ed_rpm').select2({\n            multiple: true,\n            closeOnSelect: false,\n            placeholder: \"Reporting Managers\"\n        });\n        $('#ed_lps').select2({\n            multiple: true,\n            closeOnSelect: false,\n            placeholder: \"Learning Programs\"\n        });\n        $('#ed_courses').select2({\n            multiple: true,\n            closeOnSelect: false,\n            placeholder: \"Courses\"\n        });\n        $('#ed_cohorts').select2({\n            multiple: true,\n            closeOnSelect: false,\n            placeholder: \"Cohorts\"\n        });\n        $('#ed_users').select2({\n            multiple: true,\n            closeOnSelect: false,\n            placeholder: \"Users\"\n        });\n        $('#ed_activitytype').select2({\n            maximumSelectionLength: 1,\n            multiple: true,\n            closeOnSelect: true,\n            placeholder: \"Activity Type\"\n        });\n\n\n        // Change Learning Programs and accordignly get courses\n        var selectedLps = [\"0\"];\n        $('#ed_lps').on('change', function(event) {\n            $(\"div[class^='lp']\").show();\n\n            var values = [];\n            // Copy all option values from selected\n            $(event.currentTarget).find(\"option:selected\").each(function(i, selected) {\n                values[i] = $(selected).val();\n            });\n\n            if (JSON.stringify(selectedLps) !== JSON.stringify(values)) {\n                $(\"#ed_courses\").html('')\n                    .siblings('.select2-container')\n                    .find('.select2-selection')\n                    .html(loader);\n\n                var oldIndex = selectedLps.indexOf(\"0\"),\n                    newIndex = values.indexOf(\"0\");\n\n                switch (true) {\n                    case (oldIndex == -1 && newIndex > -1):\n                        // Assign the selected courses\n                        values = [\"0\"];\n                        selectedLps = values;\n                        $(\"#ed_lps\").select2('val', values);\n                        break;\n                    case (oldIndex > -1 && newIndex > -1):\n                        values.splice(newIndex, 1);\n\n                        // Assign the selected courses\n                        selectedLps = values;\n                        $(\"#ed_lps\").select2('val', values);\n                        break;\n                }\n\n                selectedLps = values;\n\n                $.ajax({\n                    url: cfg.requestUrl,\n                    type: cfg.requestType,\n                    dataType: cfg.requestDataType,\n                    data: {\n                        action: 'get_customqueryreport_data_ajax',\n                        secret: M.local_edwiserreports.secret,\n                        lang: $('html').attr('lang'),\n                        data: JSON.stringify({\n                            lpids: values\n                        })\n                    },\n                })\n                .done(function(response) {\n                    $(\"#ed_courses\").html('');\n                    var template = \"local_edwiserreports/customquery_options\";\n                    var context = {courses: response};\n                    Templates.render(template, context).then(function(html, js) {\n                        Templates.replaceNodeContents($(\"#ed_courses\"), html, js);\n                        return;\n                    }).fail(function(ex) {\n                        console.log(ex);\n                    });\n                })\n                .fail(function(error) {\n                    // console.log(error);\n                }).always(function() {\n                    $(\"#ed_courses\").select2({\n                        multiple: true,\n                        closeOnSelect: false,\n                        placeholder: \"Courses\"\n                    });\n                });\n\n                // Hide checkboxes of Learning programs if LP is not selected\n                if (!values.length) {\n                    $(\"div[class^='lp']\").hide();\n                }\n            }\n        });\n        // Reporting manager dropdown change\n        var selectedRPM = [\"0\"];\n        $('#ed_rpm').on('change', function(event) {\n            var values = [];\n            // Copy all option values from selected\n            $(event.currentTarget).find(\"option:selected\").each(function(i, selected) {\n                values[i] = $(selected).val();\n            });\n\n            var cohortids = [];\n            $(\"#ed_cohorts\").find(\"option:selected\").each(function(i, selected) {\n                cohortids[i] = $(selected).val();\n            });\n\n            if (JSON.stringify(selectedRPM) !== JSON.stringify(values)) {\n                $(\"div[class^='rpm']\").show();\n                $(\"#ed_lps\").html('')\n                    .siblings('.select2-container')\n                    .find('.select2-selection')\n                    .html(loader);\n                $(\"#ed_courses\").html('')\n                    .siblings('.select2-container')\n                    .find('.select2-selection')\n                    .html(loader);\n                $(\"#ed_users\").html('')\n                    .siblings('.select2-container')\n                    .find('.select2-selection')\n                    .html(loader);\n\n                var oldIndex = selectedRPM.indexOf(\"0\");\n                var newIndex = values.indexOf(\"0\");\n\n                switch (true) {\n                    case (oldIndex == -1 && newIndex > -1):\n                        // Assign the selected courses\n                        values = [\"0\"];\n                        selectedRPM = values;\n                        $(\"#ed_rpm\").select2('val', values);\n                        break;\n                    case (oldIndex > -1 && newIndex > -1):\n                        values.splice(newIndex, 1);\n\n                        // Assign the selected courses\n                        selectedRPM = values;\n                        $(\"#ed_rpm\").select2('val', values);\n                        break;\n                }\n\n                selectedRPM = values;\n\n                $.ajax({\n                    url: cfg.requestUrl,\n                    type: cfg.requestType,\n                    dataType: cfg.requestDataType,\n                    data: {\n                        action: 'get_customqueryreport_rpm_data_ajax',\n                        sesskey: M.cfg.sesskey,\n                        data: JSON.stringify({\n                            rpmids: values,\n                            cohortids: cohortids\n                        })\n                    },\n                })\n                .done(function(response) {\n                    $(\"#ed_lps\").html('');\n                    $(\"#ed_courses\").html('');\n                    var template = \"local_edwiserreports/customquery_lpoptions\";\n                    var context = {lps: response.lps};\n                    if (response.lps.length > 0) {\n                        Templates.render(template, context).then(function(html, js) {\n                            Templates.appendNodeContents($(\"#ed_lps\"), html, js);\n                            return;\n                        }).fail(function(ex) {\n                            console.log(ex);\n                        });\n                    }\n                    if (response.courses.length > 0) {\n                        template = \"local_edwiserreports/customquery_options\";\n                        context = {courses: response.courses};\n                        Templates.render(template, context).then(function(html, js) {\n                            Templates.appendNodeContents($(\"#ed_courses\"), html, js);\n                            return;\n                        }).fail(function(ex) {\n                            console.log(ex);\n                        });\n                    }\n\n                    // Render users\n                    if (response.users.length > 0) {\n                        template = \"local_edwiserreports/customquery_lpoptions\"; // Work same as lp filter\n                        context = {lps: response.users}; // Work same as lp filters\n                        if (response.users.length > 0) {\n                            Templates.render(template, context).then(function(html, js) {\n                                Templates.appendNodeContents($(\"#ed_users\"), html, js);\n                                return;\n                            }).fail(function(ex) {\n                                console.log(ex);\n                            });\n                        }\n                    }\n                })\n                .fail(function(error) {\n                    console.log(error);\n                }).always(function() {\n                    $(\"#ed_lps\").select2({\n                        multiple: true,\n                        closeOnSelect: false,\n                        placeholder: \"Learning Programs\"\n                    });\n                    $(\"#ed_courses\").select2({\n                        multiple: true,\n                        closeOnSelect: false,\n                        placeholder: \"Courses\"\n                    });\n                    $(\"#ed_users\").select2({\n                        multiple: true,\n                        closeOnSelect: false,\n                        placeholder: \"Users\"\n                    });\n                });\n\n                // Hide checkboxes of Learning programs if LP is not selected\n                if (!values.length) {\n                    $(\"div[class^='rpm']\").hide();\n                    $(\"div[class^='lp']\").hide();\n                }\n            }\n        });\n        // Courses dropdown change\n        var selectedCourses = [\"0\"];\n        $('#ed_courses').on('change', function(event) {\n            var values = [];\n\n            // Copy all option values from selected\n            $(event.currentTarget).find(\"option:selected\").each(function(i, selected) {\n                values[i] = $(selected).val();\n            });\n\n            if (JSON.stringify(selectedCourses) !== JSON.stringify(values)) {\n                var oldIndex = selectedCourses.indexOf(\"0\");\n                var newIndex = values.indexOf(\"0\");\n\n                switch (true) {\n                    case (oldIndex == -1 && newIndex > -1):\n                        // Assign the selected courses\n                        values = [\"0\"];\n                        selectedCourses = values;\n                        $(\"#ed_courses\").select2('val', values);\n                        break;\n                    case (oldIndex > -1 && newIndex > -1):\n                        values.splice(newIndex, 1);\n\n                        // Assign the selected courses\n                        selectedCourses = values;\n                        $(\"#ed_courses\").select2('val', values);\n                        break;\n                }\n\n                selectedCourses = values;\n            }\n        });\n\n        // Cohort dropdown change\n        var selectedCohort = [\"0\"];\n        $('#ed_cohorts').on('change', function(event) {\n            var values = [];\n\n            // Copy all option values from selected\n            $(event.currentTarget).find(\"option:selected\").each(function(i, selected) {\n                values[i] = $(selected).val();\n            });\n\n            var rpmids = [];\n            // Copy all option values from selected\n            $(\"#ed_rpm\").find(\"option:selected\").each(function(i, selected) {\n                rpmids[i] = $(selected).val();\n            });\n\n            if (JSON.stringify(selectedCohort) !== JSON.stringify(values)) {\n                $(\"#ed_users\").html('')\n                    .siblings('.select2-container')\n                    .find('.select2-selection')\n                    .html(loader);\n\n                var oldIndex = selectedCohort.indexOf(\"0\");\n                var newIndex = values.indexOf(\"0\");\n\n                switch (true) {\n                    case (oldIndex == -1 && newIndex > -1):\n                        // Assign the selected courses\n                        values = [\"0\"];\n                        selectedCohort = values;\n                        $(\"#ed_cohorts\").select2('val', values);\n                        break;\n                    case (oldIndex > -1 && newIndex > -1):\n                        values.splice(newIndex, 1);\n\n                        // Assign the selected courses\n                        selectedCohort = values;\n                        $(\"#ed_cohorts\").select2('val', values);\n                        break;\n                }\n\n                selectedCohort = values;\n\n                // Load only cohort based users\n                $.ajax({\n                    url: cfg.requestUrl,\n                    type: cfg.requestType,\n                    dataType: cfg.requestDataType,\n                    data: {\n                        action: 'get_customqueryreport_cohort_users_ajax',\n                        sesskey: M.cfg.sesskey,\n                        data: JSON.stringify({\n                            cohortids: values,\n                            rpmids: rpmids\n                        })\n                    },\n                })\n                    .done(function(response) {\n                        var template = \"local_edwiserreports/customquery_lpoptions\"; // Work same as lp filter\n                        var context = {lps: response.users}; // Work same as lp filters\n                        if (response.users.length > 0) {\n                            Templates.render(template, context).then(function(html, js) {\n                                Templates.appendNodeContents($(\"#ed_users\"), html, js);\n                                return;\n                            }).fail(function(ex) {\n                                console.log(ex);\n                            });\n                        }\n                    })\n                    .fail(function(error) {\n                        console.log(error);\n                    }).always(function() {\n                        $(\"#ed_users\").select2({\n                            multiple: true,\n                            closeOnSelect: false,\n                            placeholder: \"Users\"\n                        });\n                    });\n            }\n        });\n\n        // Cohort dropdown change\n        var selectedUsers = [\"-1\"];\n        $('#ed_users').on('change', function(event) {\n            var values = [];\n\n            // Copy all option values from selected\n            $(event.currentTarget).find(\"option:selected\").each(function(i, selected) {\n                values[i] = $(selected).val();\n            });\n\n            if (JSON.stringify(selectedUsers) !== JSON.stringify(values)) {\n                var oldIndex = selectedUsers.indexOf(\"0\");\n                var newIndex = values.indexOf(\"0\");\n\n                switch (true) {\n                    case (oldIndex == -1 && newIndex > -1):\n                        // Assign the selected courses\n                        values = [\"0\"];\n                        selectedUsers = values;\n                        $(\"#ed_users\").select2('val', values);\n                        break;\n                    case (oldIndex > -1 && newIndex > -1):\n                        values.splice(newIndex, 1);\n\n                        // Assign the selected courses\n                        selectedUsers = values;\n                        $(\"#ed_users\").select2('val', values);\n                        break;\n                }\n\n                selectedUsers = values;\n            }\n        });\n\n        /**\n         * Get panel of custom reports block\n         * @type {string}\n         */\n        var panel = cfg.getPanel(\"#customQueryReportBlock\");\n\n        /**\n         * Report form\n         * @type {Object}\n         */\n        let reportForm = $(panel).find('#customQueryReportsForm');\n\n        /**\n         * Create flatpicker\n         * @param  {String} selector  Selector id\n         * @param  {string} type      picker type\n         * @param  {string} startdate Start data\n         * @param  {string} maxdate   End date\n         */\n        const createFlatpicker = function(selector, type, startdate, maxdate) {\n            $(panel).find(selector).flatpickr({\n                mode: type,\n                altInput: true,\n                altFormat: \"d/m/Y\",\n                dateFormat: \"Y-m-d\",\n                maxDate: maxdate,\n                defaultDate: startdate,\n                onClose: getDateSelectorData,\n                onReady: getDateSelectorData\n            });\n        };\n\n        /*\n         * Get custom report selectors\n         * It may be courses of learning program\n         * Courses | Learning Programs\n         */\n        const getDateSelectorData = function(selectedDates, dateStr, instance) {\n            // Get selected time\n            const time = selectedDates[0].getTime() / 1000;\n\n            // Set values according to the selector\n            switch (true) {\n                case $(instance.element).is('#customqueryenrollstart'):\n                    reportForm.find('input[name=enrolstartdate]').val(time);\n                    break;\n\n                case $(instance.element).is('#customqueryenrollend'):\n                    reportForm.find('input[name=enrolenddate]').val(time);\n                    break;\n\n                case $(instance.element).is('#customquerycompletionstart'):\n                    reportForm.find('input[name=completionstartdate]').val(time);\n                    break;\n\n                case $(instance.element).is('#customquerycompletionend'):\n                    reportForm.find('input[name=completionenddate]').val(time);\n                    break;\n            }\n        };\n\n        // Create selectors for flatpicker\n        /**\n         * Flat Picker Selectors\n         * @type {String}\n         */\n        const flatPickerSelectorStart = '#customqueryenrollstart, #customquerycompletionstart';\n        const flatPickerSelectorEnd = '#customqueryenrollend, #customquerycompletionend';\n        const threeMothsAgo = new Date().setDate(new Date().getDate() - 90);\n        createFlatpicker(flatPickerSelectorStart, 'single', threeMothsAgo, 'today');\n        createFlatpicker(flatPickerSelectorEnd, 'single', 'today', 'today');\n\n        // Clear search input text\n        $(document).on('click', '#customqueryenrollstart ~ button.input-search-close', function() {\n            $('#customqueryenrollstart ~ input.form-control').val(\"\");\n\n            // Set form value startdate\n            reportForm.find('input[name=enrolstartdate]').val(\"\");\n        });\n\n        $(document).on('click', '#customqueryenrollend ~ button.input-search-close', function() {\n            $('#customqueryenrollend ~ input.form-control').val(\"\");\n\n            // Set form value enddate\n            reportForm.find('input[name=enrolenddate]').val(\"\");\n        });\n\n        // Clear search input text\n        $(document).on('click', '#customquerycompletionstart ~ button.input-search-close', function() {\n            $('#customquerycompletionstart ~ input.form-control').val(\"\");\n\n            // Set form value startdate\n            reportForm.find('input[name=completionenddate]').val(\"\");\n        });\n\n        // Clear search input text\n        $(document).on('click', '#customquerycompletionend ~ button.input-search-close', function() {\n            $('#customquerycompletionend ~ input.form-control').val(\"\");\n\n            // Set form value enddate\n            reportForm.find('input[name=completionstartdate]').val(\"\");\n        });\n\n        /**\n         * Function ti get the selected fileds from checkboxes.\n         */\n        function getSelectedFields() {\n            var checkedFields = [];\n            $(panel).find(\"input[type=checkbox]:checked\").each(function(key, value) {\n                checkedFields.push(value.id);\n            });\n            reportForm.find('input[name=reporttype]').val(\"queryReport\");\n            reportForm.find('input[name=checkedFields]').val(checkedFields);\n        }\n\n        /**\n         * Function to get filtered values.\n         */\n        function getFilters() {\n            // Get Selected Reporting Managers\n            var rpms = [];\n            rpms = $(panel).find(\"#ed_rpm\").val();\n            reportForm.find('input[name=reportingmanagers]').val(rpms);\n            // Get selected Learning Programs\n            var lps = [];\n            lps = $(panel).find(\"#ed_lps\").val();\n            reportForm.find('input[name=lps]').val(lps);\n            // Get selected Courses\n            var courses = [];\n            courses = $(panel).find(\"#ed_courses\").val();\n            reportForm.find('input[name=courses]').val(courses);\n\n            // Get selected cohorts\n            var cohortids = [];\n            cohortids = $(panel).find(\"#ed_cohorts\").val();\n            reportForm.find('input[name=cohortids]').val(cohortids);\n\n            // Get selected users\n            var userids = [];\n            userids = $(panel).find(\"#ed_users\").val();\n            reportForm.find('input[name=userids]').val(userids);\n\n            // Get selected activity type\n            var activitytype = [];\n            activitytype = $(panel).find(\"#ed_activitytype\").val();\n            reportForm.find('input[name=activitytype]').val(activitytype);\n        }\n\n        /**\n         * Validate the custom report form\n         * @param {DOM} element Dom element\n         */\n        function validateCustomQueryReportForm(element) {\n            // Get courses\n            const courses = $(\"#ed_courses > option:selected\").length;\n\n            // Formdata\n            const formData = reportForm.serializeArray();\n\n            // Get form data for validation\n            const data = {};\n            $.each(formData, function(idx, val) {\n                data[val.name] = val.value;\n            });\n\n            // Validate form data\n            if (courses < 1) {\n                $(\".coursealert\").show();\n                setTimeout(function() {\n                    $(\".coursealert\").hide();\n                }, 3000);\n                element.preventDefault();\n            } else if (\n                (data.enrolstartdate > data.enrolenddate) ||\n                (data.enrolstartdate == \"\" && data.enrolenddate !== \"\") ||\n                (data.enrolstartdate !== \"\" && data.enrolenddate == \"\")\n            ) {\n                $(\".enroldatealert\").show();\n                setTimeout(function() {\n                    $(\".enroldatealert\").hide();\n                }, 3000);\n                element.preventDefault();\n            } else if (\n                (data.completionstartdate > data.completionenddate) ||\n                (data.completionstartdate == \"\" && data.completionenddate !== \"\") ||\n                (data.completionstartdate !== \"\" && data.completionenddate == \"\")\n            ) {\n                $(\".completiondatealert\").show();\n                setTimeout(function() {\n                    $(\".completiondatealert\").hide();\n                }, 3000);\n                element.preventDefault();\n            } else {\n                getSelectedFields();\n                getFilters();\n            }\n        }\n\n        // Get selected fields and filter values on click of download reports\n        $(\"#customQueryReportDownload\").click(function(element) {\n            validateCustomQueryReportForm(element);\n        });\n\n        // Handle alert for course selection\n        $(\"[data-hide]\").on(\"click\", function() {\n            $(this).closest(\".\" + $(this).attr(\"data-hide\")).hide();\n        });\n\n        // Unselect all fields\n        $('.reportfields a[class^=\"unselect-\"]').on('click', function() {\n            $(this).closest('.reportfields')\n                .find('input[type=\"checkbox\"]:not(:disabled)')\n                .prop(\"checked\", false);\n            $(this).hide().siblings('a[class^=\"select-\"]').show();\n        });\n\n        // Select  all fields\n        $('.reportfields a[class^=\"select-\"]').on('click', function() {\n            $(this).closest('.reportfields')\n                .find('input[type=\"checkbox\"]:not(:disabled)')\n                .prop(\"checked\", true);\n            $(this).hide().siblings('a[class^=\"unselect-\"]').show();\n        });\n\n        // Select and unselect on click of checkbox\n        $(panel).find('.checkbox-custom').on('click', function() {\n            const allCheckboxCount = $(this).closest('.reportfields')\n                .find('input[type=\"checkbox\"]').length;\n            const selectedCheckboxCount = $(this).closest('.reportfields')\n                .find('input[type=\"checkbox\"]:checked').length;\n\n            // If all checkboxes are seleced\n            if (allCheckboxCount == selectedCheckboxCount) {\n                $(this).closest('.reportfields')\n                    .find('a[class^=\"select-\"]')\n                    .hide().siblings('a[class^=\"unselect-\"]').show();\n            } else {\n                $(this).closest('.reportfields')\n                    .find('a[class^=\"unselect-\"]')\n                    .hide().siblings('a[class^=\"select-\"]').show();\n            }\n        });\n\n        // On change of activity plugin\n        var reportsTypeSelector = \"#edw_custom_reporttype input[type='radio']\";\n        $(panel).find(reportsTypeSelector).on('change', function() {\n            if ($(this).val() == 'activities') {\n                $(panel).find('#ed_activitytype').closest('.activitytype.select').show();\n                $(panel).find('.activityreportfields').show();\n                $(panel).find('.activityfields input[type=\"checkbox\"]').attr(\"checked\", true);\n            } else {\n                $(panel).find('#ed_activitytype').closest('.activitytype.select').hide();\n                $(panel).find('.activityreportfields').hide();\n                $(panel).find('.activityfields input[type=\"checkbox\"]').removeAttr(\"checked\");\n            }\n\n            $(reportForm).find('input[name=\"reportlevel\"]').val($(this).val());\n        });\n    });\n});\n"],"file":"block_queryreport.min.js"}