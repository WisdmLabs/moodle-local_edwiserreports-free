{"version":3,"sources":["block_activecourses.js"],"names":["define","$","cfg","V","common","init","invalidUser","activeCourseTable","panel","getPanel","panelBody","loader","table","length","show","ajax","url","requestUrl","type","requestType","dataType","requestDataType","data","action","secret","M","local_edwiserreports","done","response","error","exception","errorcode","destroy","DataTable","responsive","dom","aaSorting","aoColumns","orderSequence","language","searchPlaceholder","initComplete","hide","fadeIn","drawCallback","stylePaginationButton","this","columnDefs","targets","className","orderable","lengthChange","bInfo","on","column","search","order","nodes","each","cell","i","innerHTML","addClass","draw","fail","always"],"mappings":"AAAA,aA0BAA,OAAO,CAAC,SAAU,kBAAmB,cAAe,WAAY,sBAAuB,2BAA4B,SAAUC,EAAGC,EAAKC,EAAGC,GAmHtI,MAAO,CACLC,KA/GF,SAAcC,GACZ,IAAIC,EACAC,EAAQN,EAAIO,SAAS,uBACrBC,EAAYR,EAAIO,SAAS,sBAAuB,QAChDE,EAASD,EAAY,WACrBE,EAAQF,EAAY,UAEpBT,EAAEO,GAAOK,SAEXT,EAAOO,OAAOG,KAAK,uBAGnBb,EAAEc,KAAK,CACLC,IAAKd,EAAIe,WACTC,KAAMhB,EAAIiB,YACVC,SAAUlB,EAAImB,gBACdC,KAAM,CACJC,OAAQ,8BACRC,OAAQC,EAAEC,qBAAqBF,UAEhCG,KAAK,SAAUC,GAwCpB,IAAiCN,GAvCN,IAAnBM,EAASC,OAAmD,qBAAjCD,EAASE,UAAUC,WAuCrBT,EAhCLM,EAASN,KAkC/Bf,GACFA,EAAkByB,WAKpBzB,EAAoBN,EAAEW,GAAOqB,UAAU,CACrCC,YAAY,EACZZ,KAAMA,EACNa,IAAK,2EACLC,UAAW,CAAC,CAAC,EAAG,SAChBC,UAAW,CAAC,KAAM,KAAM,CACtBC,cAAiB,CAAC,SACjB,CACDA,cAAiB,CAAC,SACjB,CACDA,cAAiB,CAAC,UAEpBC,SAAU,CACRC,kBAAmB,iBAErBC,aAAc,WAEZxC,EAAEU,GAAQ+B,OACVzC,EAAEW,GAAO+B,OAAO,SAElBC,aAAc,WACZxC,EAAOyC,sBAAsBC,OAE/BC,WAAY,CAAC,CACXC,QAAW,EACXC,UAAa,cACbC,WAAa,GACZ,CACDF,QAAW,EACXC,UAAa,YACbC,WAAa,GACZ,CACDF,QAAW,OACXC,UAAa,gBAEfE,cAAc,EACdC,OAAO,KAzEWC,GAAG,qBAAsB,WACzC9C,EAAkB+C,OAAO,EAAG,CAC1BC,OAAQ,UACRC,MAAO,YACNC,QAAQC,KAAK,SAAUC,EAAMC,GAE5BD,EAAKE,UADE,GAALD,EACe,yCACH,GAALA,EACQ,2CACH,GAALA,EACQ,2CAEAA,EAAI,IAGzB3D,EAAEW,EAAQ,0BAA0BkD,SAAS,cAC5CC,QAzBDzD,EAAY,qBAAsBsB,KA0BnCoC,KAAK,SAAUnC,MACfoC,OAAO,WAER7D,EAAOO,OAAO+B,KAAK","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n/**\n * Plugin administration pages are defined here.\n *\n * @package     local_edwiserreports\n * @copyright   2021 wisdmlabs <support@wisdmlabs.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n/* eslint-disable no-console */\ndefine([\n    'jquery',\n    './defaultconfig',\n    './variables',\n    './common',\n    './jquery.dataTables',\n    './dataTables.bootstrap4'\n], function(\n    $,\n    cfg,\n    V,\n    common\n) {\n\n    /**\n     * Initialize\n     * @param {function} invalidUser Callback function\n     */\n    function init(invalidUser) {\n        var activeCourseTable;\n\n        var panel = cfg.getPanel(\"#activecoursesblock\");\n        var panelBody = cfg.getPanel(\"#activecoursesblock\", \"body\");\n        var loader = panelBody + \" .loader\";\n        var table = panelBody + \" .table\";\n\n        if ($(panel).length) {\n            // Show loader.\n            common.loader.show('#activecoursesblock');\n\n            /* Ajax request to get data for active courses table */\n            $.ajax({\n                    url: cfg.requestUrl,\n                    type: cfg.requestType,\n                    dataType: cfg.requestDataType,\n                    data: {\n                        action: 'get_activecourses_data_ajax',\n                        secret: M.local_edwiserreports.secret\n                    },\n                }).done(function(response) {\n                    if (response.error === true && response.exception.errorcode === 'invalidsecretkey') {\n                        invalidUser('activecoursesblock', response);\n                        return;\n                    }\n                    /* Create active course table */\n                    createActiveCourseTable(response.data);\n                    /* Added fixed column rank in datatable */\n                    activeCourseTable.on('order.dt search.dt', function() {\n                        activeCourseTable.column(0, { search: 'applied', order: 'applied' }).nodes().each(function(cell, i) {\n                            if (i == 0) {\n                                cell.innerHTML = \"<i class='fa fa-trophy text-gold'></i>\";\n                            } else if (i == 1) {\n                                cell.innerHTML = \"<i class='fa fa-trophy text-silver'></i>\";\n                            } else if (i == 2) {\n                                cell.innerHTML = \"<i class='fa fa-trophy text-bronze'></i>\";\n                            } else {\n                                cell.innerHTML = i + 1;\n                            }\n                        });\n                        $(table + \" td:not(.bg-secondary)\").addClass(\"bg-white\");\n                    }).draw();\n                })\n                .fail(function(error) {\n                    // console.log(error);\n                })\n                .always(function() {\n                    // Hide loader.\n                    common.loader.hide('#activecoursesblock');\n                });\n        }\n\n        /**\n         * Create active course table.\n         * @param {object} data Table data object\n         */\n        function createActiveCourseTable(data) {\n            /* If datable already created the destroy the table*/\n            if (activeCourseTable) {\n                activeCourseTable.destroy();\n            }\n\n            /* Create datatable for active courses */\n            activeCourseTable = $(table).DataTable({\n                responsive: true,\n                data: data,\n                dom: '<\"edwiserreports-table\"<\"table-filter d-flex\"f><t><\"table-pagination\"p>>',\n                aaSorting: [\n                    [2, 'desc']\n                ],\n                aoColumns: [\n                    null,\n                    null,\n                    { \"orderSequence\": [\"desc\"] },\n                    { \"orderSequence\": [\"desc\"] },\n                    { \"orderSequence\": [\"desc\"] }\n                ],\n                language: {\n                    searchPlaceholder: \"Search Course\"\n                },\n                initComplete: function() {\n                    /* Remove laoder and display table after table is created */\n                    $(loader).hide();\n                    $(table).fadeIn(\"slow\");\n                },\n                drawCallback: function() {\n                    common.stylePaginationButton(this);\n                },\n                columnDefs: [{\n                        \"targets\": 0,\n                        \"className\": \"text-center\",\n                        \"orderable\": false\n                    },\n                    {\n                        \"targets\": 1,\n                        \"className\": \"text-left\",\n                        \"orderable\": false\n                    },\n                    {\n                        \"targets\": \"_all\",\n                        \"className\": \"text-center\",\n                    }\n                ],\n                lengthChange: false,\n                bInfo: false\n            });\n        }\n    }\n\n    // Must return the init function\n    return {\n        init: init\n    };\n});"],"file":"block_activecourses.min.js"}