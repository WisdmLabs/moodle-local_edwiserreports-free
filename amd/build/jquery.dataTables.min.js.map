{"version":3,"sources":["jquery.dataTables.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","factory","define","amd","$","window","document","exports","module","root","require","jQuery","undefined","_ext","_Api2","_api_register","_api_registerPlural","DataTable","options","this","sSelector","oOpts","api","_","rows","data","traditional","_fnSettingsFromNode","iApiIndex","fnAddData","redraw","isArray","isPlainObject","add","row","draw","flatten","toArray","fnAdjustColumnSizing","bRedraw","columns","adjust","settings","scroll","oScroll","sX","sY","_fnScrollDraw","fnClearTable","clear","fnClose","nTr","child","hide","fnDeleteRow","target","callback","aoData","remove","call","fnDestroy","destroy","fnDraw","complete","fnFilter","sInput","iColumn","bRegex","bSmart","bShowGlobal","bCaseInsensitive","search","column","fnGetData","src","col","type","nodeName","toLowerCase","cell","fnGetNodes","iRow","node","nodes","fnGetPosition","toUpperCase","index","columnVisible","fnIsOpen","isShown","fnOpen","mHtml","sClass","show","fnPageChange","mAction","page","fnSetColumnVis","iCol","bShow","visible","fnSettings","fnSort","aaSort","order","fnSortListener","nNode","fnCallback","listener","fnUpdate","mData","mRow","bAction","fnVersionCheck","_that","emptyInit","len","length","fn","oApi","internal","ext","_fnExternApiFunc","each","iLen","oInit","_fnExtend","i","sId","getAttribute","bInitHandedOff","defaults","$this","_fnCompatOpts","_fnCompatCols","_fnCamelToHungarian","extend","allSettings","s","nTable","nTHead","parentNode","nTFoot","bRetrieve","bDestroy","oInstance","_fnLog","sTableId","id","splice","_unique","oSettings","models","sDestroyWidth","style","width","sInstance","push","dataTable","oLanguage","_fnLanguageCompat","aLengthMenu","iDisplayLength","_fnMap","oFeatures","_fnCallbackReg","fnDrawCallback","fnServerParams","fnStateSaveParams","fnStateLoadParams","fnStateLoaded","fnRowCallback","fnCreatedRow","fnHeaderCallback","fnFooterCallback","fnInitComplete","fnPreDrawCallback","rowIdFn","_fnGetObjectDataFn","rowId","_fnBrowserDetect","oClasses","bJQueryUI","oJUIClasses","sDom","renderer","header","classes","addClass","sTable","iInitDisplayStart","iDisplayStart","_iDisplayStart","iDeferLoading","bDeferLoading","tmp","_iRecordsDisplay","_iRecordsTotal","sUrl","ajax","dataType","url","success","json","_fnInitialise","error","asStripeClasses","sStripeOdd","sStripeEven","stripeClasses","rowOne","children","find","eq","inArray","map","el","hasClass","removeClass","join","asDestroyStripes","slice","aoColumnsInit","anThs","nThead","getElementsByTagName","_fnDetectHeader","aoHeader","_fnGetUniqueThs","aoColumns","_fnAddColumn","_fnApplyColumnDefs","aoColumnDefs","oDef","_fnColumnOptions","a","name","sort","filter","features","loadedInit","aaSorting","sorting","asSorting","_fnSortingClasses","bSort","bSorted","aSort","_fnSortFlatten","sortedColumns","val","dir","_fnCallbackFire","_fnSortAria","_fnDataSource","bDeferRender","captions","_captionSide","css","thead","appendTo","tbody","nTBody","tfoot","sNoFooter","aoFooter","aaData","_fnAddData","_fnAddTr","aiDisplay","aiDisplayMaster","bInitialised","bStateSave","_fnSaveState","_fnLoadState","_re_dic","_re_new_lines","_re_html","_re_date","_re_escape_regex","RegExp","_re_formatted_numeric","_empty","d","_intVal","integer","parseInt","isNaN","isFinite","_numToDecimal","num","decimalPoint","_fnEscapeRegex","replace","_isNumber","formatted","strType","parseFloat","_htmlNumeric","_isHtml","_stripHtml","_pluck","prop","prop2","out","ien","_pluck_order","_range","start","end","_removeEmpty","sorted","last","_areAllUnique","j","k","again","_fnHungarianMap","o","match","newKey","key","indexOf","_hungarianMap","user","force","hungarianKey","charAt","lang","zeroRecords","sZeroRecords","sEmptyTable","sLoadingRecords","sInfoThousands","sThousands","decimal","sDecimal","_addNumericSort","util","throttle","freq","timer","frequency","that","now","Date","args","arguments","clearTimeout","setTimeout","apply","escapeRegex","_fnCompatMap","knew","old","init","sScrollX","scrollX","searchCols","aoSearchCols","oSearch","dataSort","aDataSort","__browser","browser","n","position","top","left","scrollLeft","height","overflow","append","outer","inner","barWidth","offsetWidth","clientWidth","bScrollOversize","bScrollbarLeft","Math","round","offset","bBounding","getBoundingClientRect","oBrowser","iBarWidth","_fnReduce","inc","value","isSet","hasOwnProperty","nTh","oDefaults","oCol","oColumn","createElement","sTitle","innerHTML","idx","aoPreSearchCols","oOptions","th","sWidthOrig","attr","t","mDataProp","sType","_sManualType","className","iDataSort","mDataSrc","mRender","attrTest","_bAttrSrc","_setter","rowData","meta","innerData","fnSetData","_fnSetObjectDataFn","_rowReadObject","bSortable","sSortableNone","bAsc","bDesc","sSortingClass","sSortableAsc","sSortingClassJUI","sSortJUIAscAllowed","sSortableDesc","sSortJUIDescAllowed","sSortable","sSortJUI","_fnAdjustColumnSizing","bAutoWidth","_fnCalculateColumnWidths","sWidth","_fnVisibleToColumnIndex","iMatch","aiVis","_fnGetColumns","_fnColumnIndexToVisible","iPos","_fnVisbleColumns","vis","bVisible","sParam","_fnColumnTypes","jen","ken","detectedType","cache","types","detect","_fnGetCellData","aoColDefs","aoCols","jLen","kLen","def","aTargets","targets","aDataIn","anTds","oData","oRow","_aData","aIds","_fnCreateTr","trs","_fnGetRowElements","cells","rowIdx","colIdx","iDraw","defaultContent","sDefaultContent","cellData","iDrawError","_fnSetCellData","__reArray","__reFn","_fnSplitObjNotation","str","mSource","fetchData","arrayNotation","funcNotation","innerSrc","substring","setData","b","aLast","_fnGetDataMaster","_fnClearTable","_fnDeleteIndex","iTarget","iTargetIndex","_fnInvalidate","cellWrite","childNodes","removeChild","firstChild","anCells","_aSortData","_aFilterData","cols","_fnRowAttributes","contents","tds","td","objectRead","setter","cellProcess","trim","nextSibling","rowNode","nTrIn","nTd","_DT_RowIndex","sCellType","_DT_CellIndex","appendChild","fnCreatedCell","setAttribute","tr","DT_RowClass","split","__rowc","concat","DT_RowAttr","DT_RowData","_fnBuildHead","createHeader","iTabIndex","_fnSortAttachListener","html","_fnRenderer","sHeaderTH","sFooterTH","nTf","_fnDrawHead","aoSource","bIncludeHidden","nLocalTr","iRowspan","iColspan","aoLocal","aApplied","iColumns","_fnDraw","aPreDraw","anRows","iRowCount","iStripes","oLang","aoOpenRows","bServerSide","bDrawing","fnRecordsDisplay","iDisplayEnd","fnDisplayEnd","_fnProcessingDisplay","bDestroying","_fnAjaxUpdate","iStart","iEnd","iDataIndex","nRow","sStripe","_sRowStripe","sZero","fnRecordsTotal","class","valign","colSpan","sRowEmpty","body","detach","bFiltered","_fnReDraw","holdPosition","bFilter","_fnSort","_fnFilterComplete","oPreviousSearch","_drawHold","_fnAddOptionsHtml","table","holding","insertBefore","insert","sWrapper","nHolding","nTableWrapper","nTableReinsertBefore","featureNode","cOption","nNewNode","cNext","sAttr","aDom","sJUIHeader","sJUIFooter","aSplit","substr","parent","bPaginate","bLengthChange","_fnFeatureHtmlLength","_fnFeatureHtmlFilter","bProcessing","_fnFeatureHtmlProcessing","_fnFeatureHtmlTable","bInfo","_fnFeatureHtmlInfo","_fnFeatureHtmlPaginate","feature","aoFeatures","cFeature","fnInit","aanFeatures","replaceWith","aLayout","nCell","l","iColShifted","bUnique","nTrs","fnShiftCol","unique","nHeader","aReturn","bSortCellsTop","_fnBuildAjax","rbracket","ajaxData","instance","jqXHR","newData","isFunction","baseAjax","sError","sServerMethod","xhr","_error","thrown","ret","readyState","oAjaxData","fnServerData","sAjaxSource","bAjaxDataGet","_fnAjaxParameters","_fnAjaxUpdateDraw","dataProp","columnSearch","columnCount","preSearch","preColSearch","displayStart","displayLength","_iDisplayLength","param","sSearch","regex","sName","searchable","bSearchable","orderable","legacy","compat","modern","_fnAjaxDataSrc","recordsTotal","recordsFiltered","_bInitComplete","_fnInitComplete","dataSrc","sAjaxDataProp","tableId","language","previousSearch","input","sFilterInput","f","sFilter","searchFn","searchDelay","jqFilter","sSearchPlaceholder","on","_fnThrottle","e","keyCode","ev","activeElement","oInput","iForce","oPrevSearch","aoPrevSearch","fnSaveFilter","oFilter","fnRegex","bEscapeRegex","_fnFilter","_fnFilterColumn","_fnFilterCustom","filters","displayRows","merge","searchStr","smart","caseInsensitive","display","rpSearch","_fnFilterCreateSearch","test","invalidated","prevSearch","displayMaster","filtered","_fnFilterData","_sFilterRow","word","m","__filter_div","__filter_div_textContent","textContent","filterData","fomatters","wasInvalidated","toString","innerText","_fnSearchToCamel","_fnSearchToHung","tid","sInfo","aoDrawCallback","_fnUpdateInfo","max","total","sInfoEmpty","sInfoFiltered","_fnInfoMacros","sInfoPostFix","fnInfoCallback","formatter","fnFormatNumber","all","ceil","iAjaxStart","deferLoading","_fnStringToCss","aData","_fnLengthChange","_fnLengthOverflow","menu","d2","lengths","select","aria-controls","sLengthSelect","Option","div","sLength","sLengthMenu","outerHTML","sPaginationType","plugin","pager","sPaging","p","visRecords","pages","buttons","_fnPageChange","action","records","floor","changed","r","sProcessing","scrollY","caption","captionSide","headerClone","cloneNode","footerClone","footer","_div","size","scroller","sScrollWrapper","sScrollHead","border","sScrollHeadInner","box-sizing","sXInner","removeAttr","sScrollBody","sScrollFoot","sScrollFootInner","scrollHead","scrollBody","scrollFoot","bCollapse","nScrollHead","nScrollBody","nScrollFoot","headerTrgEls","footerTrgEls","headerSrcEls","footerSrcEls","headerCopy","footerCopy","correction","sanityWidth","scrollXInner","divHeader","divHeaderStyle","divHeaderInner","divHeaderInnerStyle","divHeaderTable","divBodyEl","divBody","divBodyStyle","divFooterInner","divFooterTable","tableEl","tableStyle","ie67","dtHeaderCells","headerWidths","footerWidths","headerContent","footerContent","zeroOut","nSizer","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","scrollBarVis","scrollHeight","clientHeight","clone","prependTo","_fnApplyToChildren","outerWidth","offsetHeight","nToSize","iOuterWidth","bScrolling","padding","scrollTop","an1","an2","nNode1","nNode2","nodeType","__re_html_remove","columnIdx","visibleColumns","headerCells","tableWidthAttr","tableContainer","userInputs","styleWidth","_fnConvertToWidth","tmpTable","margin","_fnGetWidestNode","sContentPadding","holder","right","bounding","_reszEvt","bindResize","_fnGetMaxLenString","maxIdx","srcCol","fixed","aaSortingFixed","fixedObj","nestedSort","pre","post","_idx","sortCol","aiOrig","oExtSort","formatters","_fnSortData","x","y","dataA","dataB","label","nextSort","oAria","removeAttribute","sSortAscending","sSortDescending","_fnSortListener","nextSortIdx","next","bSortMulti","sortIdx","attachTo","_fnBindAction","shiftKey","oldSort","aLastSort","sortClass","sSortColumn","bSortClasses","customData","customSort","sSortDataType","state","time","oSavedState","fnStateSaveCallback","loaded","abStateLoad","duration","iStateDuration","oLoadedState","fnStateLoadCallback","level","msg","tn","console","log","sErrMode","errMode","alert","Error","mappedName","extender","breakRefs","blur","which","preventDefault","sStore","callbackArr","eventName","reverse","Event","trigger","result","host","__apiStruct","__arrayProto","Array","context","ctxSettings","mixed","jq","tables","_toSettings","selector","opts","Api","any","count","ctx","alwaysNew","items","item","apiInst","_selector_row_indexes","apiSelector","lastIndexOf","pluck","pop","reduce","reduceRight","shift","to$","toJQuery","unshift","scope","__dt_wrapper","struct","methodScoping","struc","methodExt","propExt","register","method","heir","registerPlural","pluralName","singularName","__table_selector","paging","info","recordsDisplay","serverSide","__reload","one","abort","resetPaging","_selector_run","selectFn","res","selectorType","_selector_opts","_selector_first","inst","displayFiltered","sel","selInt","closest","rowObj","__row_selector","hash","thatIdx","loopRow","loopCells","newRows","modRows","__details_remove","_details","_detailsShow","__details_display","insertAfter","__details_events","off","drawEvent","_child_obj","klass","addRow","created","__details_add","_child_mth","__re_column_selector","__columnData","r1","r2","names","visColumns","jqResult","__column_selector","calc","__setColumnVis","rowSelector","columnSelector","allCells","fnSelector","__cell_selector","set","caseInsen","versionCheck","version","iThis","iThat","aThis","aThat","isDataTable","fnIsDataTable","get","is","head","foot","fnTables","camelToHungarian","jqRows","orig","jqTable","jqTbody","jqWrapper","bJUI","sSortIcon","wrapper","sSortJUIWrapper","removedMethod","arg1","arg2","arg3","arg4","token","plural","resolved","bScrollCollapse","toFormat","JSON","parse","sessionStorage","localStorage","getItem","location","pathname","setItem","stringify","oPaginate","sFirst","sLast","sNext","sPrevious","sScrollXInner","sScrollY","aoRowCallback","aoHeaderCallback","aoFooterCallback","aoRowCreatedCallback","aoPreDrawCallback","aoInitComplete","aoStateSaveParams","aoStateLoadParams","aoStateLoaded","aoStateSave","aoStateLoad","aoServerParams","aoDestroyCallback","paginate","min","oPlugins","builder","pageButton","sVersion","afnFiltering","aTypes","ofnSearch","oSort","afnSortData","oStdClasses","oPagination","sPageButton","sPageButtonActive","sPageButtonDisabled","sSortAsc","sSortDesc","sSortJUIAsc","sSortJUIDesc","_stateDefault","_sortIcon","_headerFooter","extPagination","_numbers","numbers","numbers_length","half","DT_el","simple","full","simple_numbers","full_numbers","first_last_numbers","btnDisplay","btnClass","activeEl","aria","counter","attach","container","button","clickHandler","aria-label","data-dt-idx","tabindex","empty","focus","parsed","string","__numericReplace","decimalPlace","re1","re2","Infinity","num-fmt","html-num","html-num-fmt","date-pre","html-pre","string-pre","string-asc","string-desc","jqueryui","__htmlEscapeEntities","render","number","thousands","precision","prefix","postfix","negative","flo","toFixed","abs","intPart","floatPart","text","_fnNodeToDataIndex","_fnNodeToColumnIndex","_fnCalculateEnd","dataTableSettings","dataTableExt"],"mappings":"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","sourcesContent":["/* eslint-disable */\n/*! DataTables 1.10.15\n * ©2008-2017 SpryMedia Ltd - datatables.net/license\n */\n\n/**\n * @summary     DataTables\n * @description Paginate, search and order HTML tables\n * @version     1.10.15\n * @file        jquery.dataTables.js\n * @author      SpryMedia Ltd\n * @contact     www.datatables.net\n * @copyright   Copyright 2008-2017 SpryMedia Ltd.\n *\n * This source file is free software, available under the following license:\n *   MIT license - http://datatables.net/license\n *\n * This source file is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.\n *\n * For details please refer to: http://www.datatables.net\n */\n\n/*jslint evil: true, undef: true, browser: true */\n/*globals $,require,jQuery,define,_selector_run,_selector_opts,_selector_first,_selector_row_indexes,_ext,_Api,_api_register,_api_registerPlural,_re_new_lines,_re_html,_re_formatted_numeric,_re_escape_regex,_empty,_intVal,_numToDecimal,_isNumber,_isHtml,_htmlNumeric,_pluck,_pluck_order,_range,_stripHtml,_unique,_fnBuildAjax,_fnAjaxUpdate,_fnAjaxParameters,_fnAjaxUpdateDraw,_fnAjaxDataSrc,_fnAddColumn,_fnColumnOptions,_fnAdjustColumnSizing,_fnVisibleToColumnIndex,_fnColumnIndexToVisible,_fnVisbleColumns,_fnGetColumns,_fnColumnTypes,_fnApplyColumnDefs,_fnHungarianMap,_fnCamelToHungarian,_fnLanguageCompat,_fnBrowserDetect,_fnAddData,_fnAddTr,_fnNodeToDataIndex,_fnNodeToColumnIndex,_fnGetCellData,_fnSetCellData,_fnSplitObjNotation,_fnGetObjectDataFn,_fnSetObjectDataFn,_fnGetDataMaster,_fnClearTable,_fnDeleteIndex,_fnInvalidate,_fnGetRowElements,_fnCreateTr,_fnBuildHead,_fnDrawHead,_fnDraw,_fnReDraw,_fnAddOptionsHtml,_fnDetectHeader,_fnGetUniqueThs,_fnFeatureHtmlFilter,_fnFilterComplete,_fnFilterCustom,_fnFilterColumn,_fnFilter,_fnFilterCreateSearch,_fnEscapeRegex,_fnFilterData,_fnFeatureHtmlInfo,_fnUpdateInfo,_fnInfoMacros,_fnInitialise,_fnInitComplete,_fnLengthChange,_fnFeatureHtmlLength,_fnFeatureHtmlPaginate,_fnPageChange,_fnFeatureHtmlProcessing,_fnProcessingDisplay,_fnFeatureHtmlTable,_fnScrollDraw,_fnApplyToChildren,_fnCalculateColumnWidths,_fnThrottle,_fnConvertToWidth,_fnGetWidestNode,_fnGetMaxLenString,_fnStringToCss,_fnSortFlatten,_fnSort,_fnSortAria,_fnSortListener,_fnSortAttachListener,_fnSortingClasses,_fnSortData,_fnSaveState,_fnLoadState,_fnSettingsFromNode,_fnLog,_fnMap,_fnBindAction,_fnCallbackReg,_fnCallbackFire,_fnLengthOverflow,_fnRenderer,_fnDataSource,_fnRowAttributes*/\n\n(function (factory) {\n\t\"use strict\";\n\n\tif (typeof define === 'function' && define.amd) {\n\t\t// AMD\n\t\tdefine(['jquery'], function ($) {\n\t\t\treturn factory($, window, document);\n\t\t});\n\t}\n\telse if (typeof exports === 'object') {\n\t\t// CommonJS\n\t\tmodule.exports = function (root, $) {\n\t\t\tif (!root) {\n\t\t\t\t// CommonJS environments without a window global must pass a\n\t\t\t\t// root. This will give an error otherwise\n\t\t\t\troot = window;\n\t\t\t}\n\n\t\t\tif (!$) {\n\t\t\t\t$ = typeof window !== 'undefined' ? // jQuery's factory checks for a global window\n\t\t\t\t\trequire('jquery') :\n\t\t\t\t\trequire('jquery')(root);\n\t\t\t}\n\n\t\t\treturn factory($, root, root.document);\n\t\t};\n\t}\n\telse {\n\t\t// Browser\n\t\tfactory(jQuery, window, document);\n\t}\n}\n\t(function ($, window, document, undefined) {\n\t\t\"use strict\";\n\n\t\t/**\n\t\t * DataTables is a plug-in for the jQuery Javascript library. It is a highly\n\t\t * flexible tool, based upon the foundations of progressive enhancement,\n\t\t * which will add advanced interaction controls to any HTML table. For a\n\t\t * full list of features please refer to\n\t\t * [DataTables.net](href=\"http://datatables.net).\n\t\t *\n\t\t * Note that the `DataTable` object is not a global variable but is aliased\n\t\t * to `jQuery.fn.DataTable` and `jQuery.fn.dataTable` through which it may\n\t\t * be  accessed.\n\t\t *\n\t\t *  @class\n\t\t *  @param {object} [init={}] Configuration object for DataTables. Options\n\t\t *    are defined by {@link DataTable.defaults}\n\t\t *  @requires jQuery 1.7+\n\t\t *\n\t\t *  @example\n\t\t *    // Basic initialisation\n\t\t *    $(document).ready( function {\n\t\t *      $('#example').dataTable();\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Initialisation with configuration options - in this case, disable\n\t\t *    // pagination and sorting.\n\t\t *    $(document).ready( function {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"paginate\": false,\n\t\t *        \"sort\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\tvar DataTable = function (options) {\n\t\t\t/**\n\t\t\t * Perform a jQuery selector action on the table's TR elements (from the tbody) and\n\t\t\t * return the resulting jQuery object.\n\t\t\t *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on\n\t\t\t *  @param {object} [oOpts] Optional parameters for modifying the rows to be included\n\t\t\t *  @param {string} [oOpts.filter=none] Select TR elements that meet the current filter\n\t\t\t *    criterion (\"applied\") or all TR elements (i.e. no filter).\n\t\t\t *  @param {string} [oOpts.order=current] Order of the TR elements in the processed array.\n\t\t\t *    Can be either 'current', whereby the current sorting of the table is used, or\n\t\t\t *    'original' whereby the original order the data was read into the table is used.\n\t\t\t *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page\n\t\t\t *    (\"current\") or not (\"all\"). If 'current' is given, then order is assumed to be\n\t\t\t *    'current' and filter is 'applied', regardless of what they might be given as.\n\t\t\t *  @returns {object} jQuery object, filtered by the given selector.\n\t\t\t *  @dtopt API\n\t\t\t *  @deprecated Since v1.10\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready(function() {\n\t\t\t *      var oTable = $('#example').dataTable();\n\t\t\t *\n\t\t\t *      // Highlight every second row\n\t\t\t *      oTable.$('tr:odd').css('backgroundColor', 'blue');\n\t\t\t *    } );\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready(function() {\n\t\t\t *      var oTable = $('#example').dataTable();\n\t\t\t *\n\t\t\t *      // Filter to rows with 'Webkit' in them, add a background colour and then\n\t\t\t *      // remove the filter, thus highlighting the 'Webkit' rows only.\n\t\t\t *      oTable.fnFilter('Webkit');\n\t\t\t *      oTable.$('tr', {\"search\": \"applied\"}).css('backgroundColor', 'blue');\n\t\t\t *      oTable.fnFilter('');\n\t\t\t *    } );\n\t\t\t */\n\t\t\tthis.$ = function (sSelector, oOpts) {\n\t\t\t\treturn this.api(true).$(sSelector, oOpts);\n\t\t\t};\n\n\n\t\t\t/**\n\t\t\t * Almost identical to $ in operation, but in this case returns the data for the matched\n\t\t\t * rows - as such, the jQuery selector used should match TR row nodes or TD/TH cell nodes\n\t\t\t * rather than any descendants, so the data can be obtained for the row/cell. If matching\n\t\t\t * rows are found, the data returned is the original data array/object that was used to\n\t\t\t * create the row (or a generated array if from a DOM source).\n\t\t\t *\n\t\t\t * This method is often useful in-combination with $ where both functions are given the\n\t\t\t * same parameters and the array indexes will match identically.\n\t\t\t *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on\n\t\t\t *  @param {object} [oOpts] Optional parameters for modifying the rows to be included\n\t\t\t *  @param {string} [oOpts.filter=none] Select elements that meet the current filter\n\t\t\t *    criterion (\"applied\") or all elements (i.e. no filter).\n\t\t\t *  @param {string} [oOpts.order=current] Order of the data in the processed array.\n\t\t\t *    Can be either 'current', whereby the current sorting of the table is used, or\n\t\t\t *    'original' whereby the original order the data was read into the table is used.\n\t\t\t *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page\n\t\t\t *    (\"current\") or not (\"all\"). If 'current' is given, then order is assumed to be\n\t\t\t *    'current' and filter is 'applied', regardless of what they might be given as.\n\t\t\t *  @returns {array} Data for the matched elements. If any elements, as a result of the\n\t\t\t *    selector, were not TR, TD or TH elements in the DataTable, they will have a null\n\t\t\t *    entry in the array.\n\t\t\t *  @dtopt API\n\t\t\t *  @deprecated Since v1.10\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready(function() {\n\t\t\t *      var oTable = $('#example').dataTable();\n\t\t\t *\n\t\t\t *      // Get the data from the first row in the table\n\t\t\t *      var data = oTable._('tr:first');\n\t\t\t *\n\t\t\t *      // Do something useful with the data\n\t\t\t *      alert( \"First cell is: \"+data[0] );\n\t\t\t *    } );\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready(function() {\n\t\t\t *      var oTable = $('#example').dataTable();\n\t\t\t *\n\t\t\t *      // Filter to 'Webkit' and get all data for\n\t\t\t *      oTable.fnFilter('Webkit');\n\t\t\t *      var data = oTable._('tr', {\"search\": \"applied\"});\n\t\t\t *\n\t\t\t *      // Do something with the data\n\t\t\t *      alert( data.length+\" rows matched the search\" );\n\t\t\t *    } );\n\t\t\t */\n\t\t\tthis._ = function (sSelector, oOpts) {\n\t\t\t\treturn this.api(true).rows(sSelector, oOpts).data();\n\t\t\t};\n\n\n\t\t\t/**\n\t\t\t * Create a DataTables Api instance, with the currently selected tables for\n\t\t\t * the Api's context.\n\t\t\t * @param {boolean} [traditional=false] Set the API instance's context to be\n\t\t\t *   only the table referred to by the `DataTable.ext.iApiIndex` option, as was\n\t\t\t *   used in the API presented by DataTables 1.9- (i.e. the traditional mode),\n\t\t\t *   or if all tables captured in the jQuery object should be used.\n\t\t\t * @return {DataTables.Api}\n\t\t\t */\n\t\t\tthis.api = function (traditional) {\n\t\t\t\treturn traditional ?\n\t\t\t\t\tnew _Api(\n\t\t\t\t\t\t_fnSettingsFromNode(this[_ext.iApiIndex])\n\t\t\t\t\t) :\n\t\t\t\t\tnew _Api(this);\n\t\t\t};\n\n\n\t\t\t/**\n\t\t\t * Add a single new row or multiple rows of data to the table. Please note\n\t\t\t * that this is suitable for client-side processing only - if you are using\n\t\t\t * server-side processing (i.e. \"bServerSide\": true), then to add data, you\n\t\t\t * must add it to the data source, i.e. the server-side, through an Ajax call.\n\t\t\t *  @param {array|object} data The data to be added to the table. This can be:\n\t\t\t *    <ul>\n\t\t\t *      <li>1D array of data - add a single row with the data provided</li>\n\t\t\t *      <li>2D array of arrays - add multiple rows in a single call</li>\n\t\t\t *      <li>object - data object when using <i>mData</i></li>\n\t\t\t *      <li>array of objects - multiple data objects when using <i>mData</i></li>\n\t\t\t *    </ul>\n\t\t\t *  @param {bool} [redraw=true] redraw the table or not\n\t\t\t *  @returns {array} An array of integers, representing the list of indexes in\n\t\t\t *    <i>aoData</i> ({@link DataTable.models.oSettings}) that have been added to\n\t\t\t *    the table.\n\t\t\t *  @dtopt API\n\t\t\t *  @deprecated Since v1.10\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Global var for counter\n\t\t\t *    var giCount = 2;\n\t\t\t *\n\t\t\t *    $(document).ready(function() {\n\t\t\t *      $('#example').dataTable();\n\t\t\t *    } );\n\t\t\t *\n\t\t\t *    function fnClickAddRow() {\n\t\t\t *      $('#example').dataTable().fnAddData( [\n\t\t\t *        giCount+\".1\",\n\t\t\t *        giCount+\".2\",\n\t\t\t *        giCount+\".3\",\n\t\t\t *        giCount+\".4\" ]\n\t\t\t *      );\n\t\t\t *\n\t\t\t *      giCount++;\n\t\t\t *    }\n\t\t\t */\n\t\t\tthis.fnAddData = function (data, redraw) {\n\t\t\t\tvar api = this.api(true);\n\n\t\t\t\t/* Check if we want to add multiple rows or not */\n\t\t\t\tvar rows = $.isArray(data) && ($.isArray(data[0]) || $.isPlainObject(data[0])) ?\n\t\t\t\t\tapi.rows.add(data) :\n\t\t\t\t\tapi.row.add(data);\n\n\t\t\t\tif (redraw === undefined || redraw) {\n\t\t\t\t\tapi.draw();\n\t\t\t\t}\n\n\t\t\t\treturn rows.flatten().toArray();\n\t\t\t};\n\n\n\t\t\t/**\n\t\t\t * This function will make DataTables recalculate the column sizes, based on the data\n\t\t\t * contained in the table and the sizes applied to the columns (in the DOM, CSS or\n\t\t\t * through the sWidth parameter). This can be useful when the width of the table's\n\t\t\t * parent element changes (for example a window resize).\n\t\t\t *  @param {boolean} [bRedraw=true] Redraw the table or not, you will typically want to\n\t\t\t *  @dtopt API\n\t\t\t *  @deprecated Since v1.10\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready(function() {\n\t\t\t *      var oTable = $('#example').dataTable( {\n\t\t\t *        \"sScrollY\": \"200px\",\n\t\t\t *        \"bPaginate\": false\n\t\t\t *      } );\n\t\t\t *\n\t\t\t *      $(window).on('resize', function () {\n\t\t\t *        oTable.fnAdjustColumnSizing();\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\tthis.fnAdjustColumnSizing = function (bRedraw) {\n\t\t\t\tvar api = this.api(true).columns.adjust();\n\t\t\t\tvar settings = api.settings()[0];\n\t\t\t\tvar scroll = settings.oScroll;\n\n\t\t\t\tif (bRedraw === undefined || bRedraw) {\n\t\t\t\t\tapi.draw(false);\n\t\t\t\t}\n\t\t\t\telse if (scroll.sX !== \"\" || scroll.sY !== \"\") {\n\t\t\t\t\t/* If not redrawing, but scrolling, we want to apply the new column sizes anyway */\n\t\t\t\t\t_fnScrollDraw(settings);\n\t\t\t\t}\n\t\t\t};\n\n\n\t\t\t/**\n\t\t\t * Quickly and simply clear a table\n\t\t\t *  @param {bool} [bRedraw=true] redraw the table or not\n\t\t\t *  @dtopt API\n\t\t\t *  @deprecated Since v1.10\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready(function() {\n\t\t\t *      var oTable = $('#example').dataTable();\n\t\t\t *\n\t\t\t *      // Immediately 'nuke' the current rows (perhaps waiting for an Ajax callback...)\n\t\t\t *      oTable.fnClearTable();\n\t\t\t *    } );\n\t\t\t */\n\t\t\tthis.fnClearTable = function (bRedraw) {\n\t\t\t\tvar api = this.api(true).clear();\n\n\t\t\t\tif (bRedraw === undefined || bRedraw) {\n\t\t\t\t\tapi.draw();\n\t\t\t\t}\n\t\t\t};\n\n\n\t\t\t/**\n\t\t\t * The exact opposite of 'opening' a row, this function will close any rows which\n\t\t\t * are currently 'open'.\n\t\t\t *  @param {node} nTr the table row to 'close'\n\t\t\t *  @returns {int} 0 on success, or 1 if failed (can't find the row)\n\t\t\t *  @dtopt API\n\t\t\t *  @deprecated Since v1.10\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready(function() {\n\t\t\t *      var oTable;\n\t\t\t *\n\t\t\t *      // 'open' an information row when a row is clicked on\n\t\t\t *      $('#example tbody tr').click( function () {\n\t\t\t *        if ( oTable.fnIsOpen(this) ) {\n\t\t\t *          oTable.fnClose( this );\n\t\t\t *        } else {\n\t\t\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *\n\t\t\t *      oTable = $('#example').dataTable();\n\t\t\t *    } );\n\t\t\t */\n\t\t\tthis.fnClose = function (nTr) {\n\t\t\t\tthis.api(true).row(nTr).child.hide();\n\t\t\t};\n\n\n\t\t\t/**\n\t\t\t * Remove a row for the table\n\t\t\t *  @param {mixed} target The index of the row from aoData to be deleted, or\n\t\t\t *    the TR element you want to delete\n\t\t\t *  @param {function|null} [callBack] Callback function\n\t\t\t *  @param {bool} [redraw=true] Redraw the table or not\n\t\t\t *  @returns {array} The row that was deleted\n\t\t\t *  @dtopt API\n\t\t\t *  @deprecated Since v1.10\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready(function() {\n\t\t\t *      var oTable = $('#example').dataTable();\n\t\t\t *\n\t\t\t *      // Immediately remove the first row\n\t\t\t *      oTable.fnDeleteRow( 0 );\n\t\t\t *    } );\n\t\t\t */\n\t\t\tthis.fnDeleteRow = function (target, callback, redraw) {\n\t\t\t\tvar api = this.api(true);\n\t\t\t\tvar rows = api.rows(target);\n\t\t\t\tvar settings = rows.settings()[0];\n\t\t\t\tvar data = settings.aoData[rows[0][0]];\n\n\t\t\t\trows.remove();\n\n\t\t\t\tif (callback) {\n\t\t\t\t\tcallback.call(this, settings, data);\n\t\t\t\t}\n\n\t\t\t\tif (redraw === undefined || redraw) {\n\t\t\t\t\tapi.draw();\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\t\t\t};\n\n\n\t\t\t/**\n\t\t\t * Restore the table to it's original state in the DOM by removing all of DataTables\n\t\t\t * enhancements, alterations to the DOM structure of the table and event listeners.\n\t\t\t *  @param {boolean} [remove=false] Completely remove the table from the DOM\n\t\t\t *  @dtopt API\n\t\t\t *  @deprecated Since v1.10\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready(function() {\n\t\t\t *      // This example is fairly pointless in reality, but shows how fnDestroy can be used\n\t\t\t *      var oTable = $('#example').dataTable();\n\t\t\t *      oTable.fnDestroy();\n\t\t\t *    } );\n\t\t\t */\n\t\t\tthis.fnDestroy = function (remove) {\n\t\t\t\tthis.api(true).destroy(remove);\n\t\t\t};\n\n\n\t\t\t/**\n\t\t\t * Redraw the table\n\t\t\t *  @param {bool} [complete=true] Re-filter and resort (if enabled) the table before the draw.\n\t\t\t *  @dtopt API\n\t\t\t *  @deprecated Since v1.10\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready(function() {\n\t\t\t *      var oTable = $('#example').dataTable();\n\t\t\t *\n\t\t\t *      // Re-draw the table - you wouldn't want to do it here, but it's an example :-)\n\t\t\t *      oTable.fnDraw();\n\t\t\t *    } );\n\t\t\t */\n\t\t\tthis.fnDraw = function (complete) {\n\t\t\t\t// Note that this isn't an exact match to the old call to _fnDraw - it takes\n\t\t\t\t// into account the new data, but can hold position.\n\t\t\t\tthis.api(true).draw(complete);\n\t\t\t};\n\n\n\t\t\t/**\n\t\t\t * Filter the input based on data\n\t\t\t *  @param {string} sInput String to filter the table on\n\t\t\t *  @param {int|null} [iColumn] Column to limit filtering to\n\t\t\t *  @param {bool} [bRegex=false] Treat as regular expression or not\n\t\t\t *  @param {bool} [bSmart=true] Perform smart filtering or not\n\t\t\t *  @param {bool} [bShowGlobal=true] Show the input global filter in it's input box(es)\n\t\t\t *  @param {bool} [bCaseInsensitive=true] Do case-insensitive matching (true) or not (false)\n\t\t\t *  @dtopt API\n\t\t\t *  @deprecated Since v1.10\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready(function() {\n\t\t\t *      var oTable = $('#example').dataTable();\n\t\t\t *\n\t\t\t *      // Sometime later - filter...\n\t\t\t *      oTable.fnFilter( 'test string' );\n\t\t\t *    } );\n\t\t\t */\n\t\t\tthis.fnFilter = function (sInput, iColumn, bRegex, bSmart, bShowGlobal, bCaseInsensitive) {\n\t\t\t\tvar api = this.api(true);\n\n\t\t\t\tif (iColumn === null || iColumn === undefined) {\n\t\t\t\t\tapi.search(sInput, bRegex, bSmart, bCaseInsensitive);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tapi.column(iColumn).search(sInput, bRegex, bSmart, bCaseInsensitive);\n\t\t\t\t}\n\n\t\t\t\tapi.draw();\n\t\t\t};\n\n\n\t\t\t/**\n\t\t\t * Get the data for the whole table, an individual row or an individual cell based on the\n\t\t\t * provided parameters.\n\t\t\t *  @param {int|node} [src] A TR row node, TD/TH cell node or an integer. If given as\n\t\t\t *    a TR node then the data source for the whole row will be returned. If given as a\n\t\t\t *    TD/TH cell node then iCol will be automatically calculated and the data for the\n\t\t\t *    cell returned. If given as an integer, then this is treated as the aoData internal\n\t\t\t *    data index for the row (see fnGetPosition) and the data for that row used.\n\t\t\t *  @param {int} [col] Optional column index that you want the data of.\n\t\t\t *  @returns {array|object|string} If mRow is undefined, then the data for all rows is\n\t\t\t *    returned. If mRow is defined, just data for that row, and is iCol is\n\t\t\t *    defined, only data for the designated cell is returned.\n\t\t\t *  @dtopt API\n\t\t\t *  @deprecated Since v1.10\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Row data\n\t\t\t *    $(document).ready(function() {\n\t\t\t *      oTable = $('#example').dataTable();\n\t\t\t *\n\t\t\t *      oTable.$('tr').click( function () {\n\t\t\t *        var data = oTable.fnGetData( this );\n\t\t\t *        // ... do something with the array / object of data for the row\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Individual cell data\n\t\t\t *    $(document).ready(function() {\n\t\t\t *      oTable = $('#example').dataTable();\n\t\t\t *\n\t\t\t *      oTable.$('td').click( function () {\n\t\t\t *        var sData = oTable.fnGetData( this );\n\t\t\t *        alert( 'The cell clicked on had the value of '+sData );\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\tthis.fnGetData = function (src, col) {\n\t\t\t\tvar api = this.api(true);\n\n\t\t\t\tif (src !== undefined) {\n\t\t\t\t\tvar type = src.nodeName ? src.nodeName.toLowerCase() : '';\n\n\t\t\t\t\treturn col !== undefined || type == 'td' || type == 'th' ?\n\t\t\t\t\t\tapi.cell(src, col).data() :\n\t\t\t\t\t\tapi.row(src).data() || null;\n\t\t\t\t}\n\n\t\t\t\treturn api.data().toArray();\n\t\t\t};\n\n\n\t\t\t/**\n\t\t\t * Get an array of the TR nodes that are used in the table's body. Note that you will\n\t\t\t * typically want to use the '$' API method in preference to this as it is more\n\t\t\t * flexible.\n\t\t\t *  @param {int} [iRow] Optional row index for the TR element you want\n\t\t\t *  @returns {array|node} If iRow is undefined, returns an array of all TR elements\n\t\t\t *    in the table's body, or iRow is defined, just the TR element requested.\n\t\t\t *  @dtopt API\n\t\t\t *  @deprecated Since v1.10\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready(function() {\n\t\t\t *      var oTable = $('#example').dataTable();\n\t\t\t *\n\t\t\t *      // Get the nodes from the table\n\t\t\t *      var nNodes = oTable.fnGetNodes( );\n\t\t\t *    } );\n\t\t\t */\n\t\t\tthis.fnGetNodes = function (iRow) {\n\t\t\t\tvar api = this.api(true);\n\n\t\t\t\treturn iRow !== undefined ?\n\t\t\t\t\tapi.row(iRow).node() :\n\t\t\t\t\tapi.rows().nodes().flatten().toArray();\n\t\t\t};\n\n\n\t\t\t/**\n\t\t\t * Get the array indexes of a particular cell from it's DOM element\n\t\t\t * and column index including hidden columns\n\t\t\t *  @param {node} node this can either be a TR, TD or TH in the table's body\n\t\t\t *  @returns {int} If nNode is given as a TR, then a single index is returned, or\n\t\t\t *    if given as a cell, an array of [row index, column index (visible),\n\t\t\t *    column index (all)] is given.\n\t\t\t *  @dtopt API\n\t\t\t *  @deprecated Since v1.10\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready(function() {\n\t\t\t *      $('#example tbody td').click( function () {\n\t\t\t *        // Get the position of the current data from the node\n\t\t\t *        var aPos = oTable.fnGetPosition( this );\n\t\t\t *\n\t\t\t *        // Get the data array for this row\n\t\t\t *        var aData = oTable.fnGetData( aPos[0] );\n\t\t\t *\n\t\t\t *        // Update the data array and return the value\n\t\t\t *        aData[ aPos[1] ] = 'clicked';\n\t\t\t *        this.innerHTML = 'clicked';\n\t\t\t *      } );\n\t\t\t *\n\t\t\t *      // Init DataTables\n\t\t\t *      oTable = $('#example').dataTable();\n\t\t\t *    } );\n\t\t\t */\n\t\t\tthis.fnGetPosition = function (node) {\n\t\t\t\tvar api = this.api(true);\n\t\t\t\tvar nodeName = node.nodeName.toUpperCase();\n\n\t\t\t\tif (nodeName == 'TR') {\n\t\t\t\t\treturn api.row(node).index();\n\t\t\t\t}\n\t\t\t\telse if (nodeName == 'TD' || nodeName == 'TH') {\n\t\t\t\t\tvar cell = api.cell(node).index();\n\n\t\t\t\t\treturn [\n\t\t\t\t\t\tcell.row,\n\t\t\t\t\t\tcell.columnVisible,\n\t\t\t\t\t\tcell.column\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t};\n\n\n\t\t\t/**\n\t\t\t * Check to see if a row is 'open' or not.\n\t\t\t *  @param {node} nTr the table row to check\n\t\t\t *  @returns {boolean} true if the row is currently open, false otherwise\n\t\t\t *  @dtopt API\n\t\t\t *  @deprecated Since v1.10\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready(function() {\n\t\t\t *      var oTable;\n\t\t\t *\n\t\t\t *      // 'open' an information row when a row is clicked on\n\t\t\t *      $('#example tbody tr').click( function () {\n\t\t\t *        if ( oTable.fnIsOpen(this) ) {\n\t\t\t *          oTable.fnClose( this );\n\t\t\t *        } else {\n\t\t\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *\n\t\t\t *      oTable = $('#example').dataTable();\n\t\t\t *    } );\n\t\t\t */\n\t\t\tthis.fnIsOpen = function (nTr) {\n\t\t\t\treturn this.api(true).row(nTr).child.isShown();\n\t\t\t};\n\n\n\t\t\t/**\n\t\t\t * This function will place a new row directly after a row which is currently\n\t\t\t * on display on the page, with the HTML contents that is passed into the\n\t\t\t * function. This can be used, for example, to ask for confirmation that a\n\t\t\t * particular record should be deleted.\n\t\t\t *  @param {node} nTr The table row to 'open'\n\t\t\t *  @param {string|node|jQuery} mHtml The HTML to put into the row\n\t\t\t *  @param {string} sClass Class to give the new TD cell\n\t\t\t *  @returns {node} The row opened. Note that if the table row passed in as the\n\t\t\t *    first parameter, is not found in the table, this method will silently\n\t\t\t *    return.\n\t\t\t *  @dtopt API\n\t\t\t *  @deprecated Since v1.10\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready(function() {\n\t\t\t *      var oTable;\n\t\t\t *\n\t\t\t *      // 'open' an information row when a row is clicked on\n\t\t\t *      $('#example tbody tr').click( function () {\n\t\t\t *        if ( oTable.fnIsOpen(this) ) {\n\t\t\t *          oTable.fnClose( this );\n\t\t\t *        } else {\n\t\t\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *\n\t\t\t *      oTable = $('#example').dataTable();\n\t\t\t *    } );\n\t\t\t */\n\t\t\tthis.fnOpen = function (nTr, mHtml, sClass) {\n\t\t\t\treturn this.api(true)\n\t\t\t\t\t.row(nTr)\n\t\t\t\t\t.child(mHtml, sClass)\n\t\t\t\t\t.show()\n\t\t\t\t\t.child()[0];\n\t\t\t};\n\n\n\t\t\t/**\n\t\t\t * Change the pagination - provides the internal logic for pagination in a simple API\n\t\t\t * function. With this function you can have a DataTables table go to the next,\n\t\t\t * previous, first or last pages.\n\t\t\t *  @param {string|int} mAction Paging action to take: \"first\", \"previous\", \"next\" or \"last\"\n\t\t\t *    or page number to jump to (integer), note that page 0 is the first page.\n\t\t\t *  @param {bool} [bRedraw=true] Redraw the table or not\n\t\t\t *  @dtopt API\n\t\t\t *  @deprecated Since v1.10\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready(function() {\n\t\t\t *      var oTable = $('#example').dataTable();\n\t\t\t *      oTable.fnPageChange( 'next' );\n\t\t\t *    } );\n\t\t\t */\n\t\t\tthis.fnPageChange = function (mAction, bRedraw) {\n\t\t\t\tvar api = this.api(true).page(mAction);\n\n\t\t\t\tif (bRedraw === undefined || bRedraw) {\n\t\t\t\t\tapi.draw(false);\n\t\t\t\t}\n\t\t\t};\n\n\n\t\t\t/**\n\t\t\t * Show a particular column\n\t\t\t *  @param {int} iCol The column whose display should be changed\n\t\t\t *  @param {bool} bShow Show (true) or hide (false) the column\n\t\t\t *  @param {bool} [bRedraw=true] Redraw the table or not\n\t\t\t *  @dtopt API\n\t\t\t *  @deprecated Since v1.10\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready(function() {\n\t\t\t *      var oTable = $('#example').dataTable();\n\t\t\t *\n\t\t\t *      // Hide the second column after initialisation\n\t\t\t *      oTable.fnSetColumnVis( 1, false );\n\t\t\t *    } );\n\t\t\t */\n\t\t\tthis.fnSetColumnVis = function (iCol, bShow, bRedraw) {\n\t\t\t\tvar api = this.api(true).column(iCol).visible(bShow);\n\n\t\t\t\tif (bRedraw === undefined || bRedraw) {\n\t\t\t\t\tapi.columns.adjust().draw();\n\t\t\t\t}\n\t\t\t};\n\n\n\t\t\t/**\n\t\t\t * Get the settings for a particular table for external manipulation\n\t\t\t *  @returns {object} DataTables settings object. See\n\t\t\t *    {@link DataTable.models.oSettings}\n\t\t\t *  @dtopt API\n\t\t\t *  @deprecated Since v1.10\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready(function() {\n\t\t\t *      var oTable = $('#example').dataTable();\n\t\t\t *      var oSettings = oTable.fnSettings();\n\t\t\t *\n\t\t\t *      // Show an example parameter from the settings\n\t\t\t *      alert( oSettings._iDisplayStart );\n\t\t\t *    } );\n\t\t\t */\n\t\t\tthis.fnSettings = function () {\n\t\t\t\treturn _fnSettingsFromNode(this[_ext.iApiIndex]);\n\t\t\t};\n\n\n\t\t\t/**\n\t\t\t * Sort the table by a particular column\n\t\t\t *  @param {int} iCol the data index to sort on. Note that this will not match the\n\t\t\t *    'display index' if you have hidden data entries\n\t\t\t *  @dtopt API\n\t\t\t *  @deprecated Since v1.10\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready(function() {\n\t\t\t *      var oTable = $('#example').dataTable();\n\t\t\t *\n\t\t\t *      // Sort immediately with columns 0 and 1\n\t\t\t *      oTable.fnSort( [ [0,'asc'], [1,'asc'] ] );\n\t\t\t *    } );\n\t\t\t */\n\t\t\tthis.fnSort = function (aaSort) {\n\t\t\t\tthis.api(true).order(aaSort).draw();\n\t\t\t};\n\n\n\t\t\t/**\n\t\t\t * Attach a sort listener to an element for a given column\n\t\t\t *  @param {node} nNode the element to attach the sort listener to\n\t\t\t *  @param {int} iColumn the column that a click on this node will sort on\n\t\t\t *  @param {function} [fnCallback] callback function when sort is run\n\t\t\t *  @dtopt API\n\t\t\t *  @deprecated Since v1.10\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready(function() {\n\t\t\t *      var oTable = $('#example').dataTable();\n\t\t\t *\n\t\t\t *      // Sort on column 1, when 'sorter' is clicked on\n\t\t\t *      oTable.fnSortListener( document.getElementById('sorter'), 1 );\n\t\t\t *    } );\n\t\t\t */\n\t\t\tthis.fnSortListener = function (nNode, iColumn, fnCallback) {\n\t\t\t\tthis.api(true).order.listener(nNode, iColumn, fnCallback);\n\t\t\t};\n\n\n\t\t\t/**\n\t\t\t * Update a table cell or row - this method will accept either a single value to\n\t\t\t * update the cell with, an array of values with one element for each column or\n\t\t\t * an object in the same format as the original data source. The function is\n\t\t\t * self-referencing in order to make the multi column updates easier.\n\t\t\t *  @param {object|array|string} mData Data to update the cell/row with\n\t\t\t *  @param {node|int} mRow TR element you want to update or the aoData index\n\t\t\t *  @param {int} [iColumn] The column to update, give as null or undefined to\n\t\t\t *    update a whole row.\n\t\t\t *  @param {bool} [bRedraw=true] Redraw the table or not\n\t\t\t *  @param {bool} [bAction=true] Perform pre-draw actions or not\n\t\t\t *  @returns {int} 0 on success, 1 on error\n\t\t\t *  @dtopt API\n\t\t\t *  @deprecated Since v1.10\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready(function() {\n\t\t\t *      var oTable = $('#example').dataTable();\n\t\t\t *      oTable.fnUpdate( 'Example update', 0, 0 ); // Single cell\n\t\t\t *      oTable.fnUpdate( ['a', 'b', 'c', 'd', 'e'], $('tbody tr')[0] ); // Row\n\t\t\t *    } );\n\t\t\t */\n\t\t\tthis.fnUpdate = function (mData, mRow, iColumn, bRedraw, bAction) {\n\t\t\t\tvar api = this.api(true);\n\n\t\t\t\tif (iColumn === undefined || iColumn === null) {\n\t\t\t\t\tapi.row(mRow).data(mData);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tapi.cell(mRow, iColumn).data(mData);\n\t\t\t\t}\n\n\t\t\t\tif (bAction === undefined || bAction) {\n\t\t\t\t\tapi.columns.adjust();\n\t\t\t\t}\n\n\t\t\t\tif (bRedraw === undefined || bRedraw) {\n\t\t\t\t\tapi.draw();\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t};\n\n\n\t\t\t/**\n\t\t\t * Provide a common method for plug-ins to check the version of DataTables being used, in order\n\t\t\t * to ensure compatibility.\n\t\t\t *  @param {string} sVersion Version string to check for, in the format \"X.Y.Z\". Note that the\n\t\t\t *    formats \"X\" and \"X.Y\" are also acceptable.\n\t\t\t *  @returns {boolean} true if this version of DataTables is greater or equal to the required\n\t\t\t *    version, or false if this version of DataTales is not suitable\n\t\t\t *  @method\n\t\t\t *  @dtopt API\n\t\t\t *  @deprecated Since v1.10\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready(function() {\n\t\t\t *      var oTable = $('#example').dataTable();\n\t\t\t *      alert( oTable.fnVersionCheck( '1.9.0' ) );\n\t\t\t *    } );\n\t\t\t */\n\t\t\tthis.fnVersionCheck = _ext.fnVersionCheck;\n\n\n\t\t\tvar _that = this;\n\t\t\tvar emptyInit = options === undefined;\n\t\t\tvar len = this.length;\n\n\t\t\tif (emptyInit) {\n\t\t\t\toptions = {};\n\t\t\t}\n\n\t\t\tthis.oApi = this.internal = _ext.internal;\n\n\t\t\t// Extend with old style plug-in API methods\n\t\t\tfor (var fn in DataTable.ext.internal) {\n\t\t\t\tif (fn) {\n\t\t\t\t\tthis[fn] = _fnExternApiFunc(fn);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.each(function () {\n\t\t\t\t// For each initialisation we want to give it a clean initialisation\n\t\t\t\t// object that can be bashed around\n\t\t\t\tvar o = {};\n\t\t\t\tvar oInit = len > 1 ? // optimisation for single table case\n\t\t\t\t\t_fnExtend(o, options, true) :\n\t\t\t\t\toptions;\n\n\t\t\t\t/*global oInit,_that,emptyInit*/\n\t\t\t\tvar i = 0, iLen, j, jLen, k, kLen;\n\t\t\t\tvar sId = this.getAttribute('id');\n\t\t\t\tvar bInitHandedOff = false;\n\t\t\t\tvar defaults = DataTable.defaults;\n\t\t\t\tvar $this = $(this);\n\n\n\t\t\t\t/* Sanity check */\n\t\t\t\tif (this.nodeName.toLowerCase() != 'table') {\n\t\t\t\t\t_fnLog(null, 0, 'Non-table node initialisation (' + this.nodeName + ')', 2);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t/* Backwards compatibility for the defaults */\n\t\t\t\t_fnCompatOpts(defaults);\n\t\t\t\t_fnCompatCols(defaults.column);\n\n\t\t\t\t/* Convert the camel-case defaults to Hungarian */\n\t\t\t\t_fnCamelToHungarian(defaults, defaults, true);\n\t\t\t\t_fnCamelToHungarian(defaults.column, defaults.column, true);\n\n\t\t\t\t/* Setting up the initialisation object */\n\t\t\t\t_fnCamelToHungarian(defaults, $.extend(oInit, $this.data()));\n\n\n\n\t\t\t\t/* Check to see if we are re-initialising a table */\n\t\t\t\tvar allSettings = DataTable.settings;\n\t\t\t\tfor (i = 0, iLen = allSettings.length; i < iLen; i++) {\n\t\t\t\t\tvar s = allSettings[i];\n\n\t\t\t\t\t/* Base check on table node */\n\t\t\t\t\tif (s.nTable == this || s.nTHead.parentNode == this || (s.nTFoot && s.nTFoot.parentNode == this)) {\n\t\t\t\t\t\tvar bRetrieve = oInit.bRetrieve !== undefined ? oInit.bRetrieve : defaults.bRetrieve;\n\t\t\t\t\t\tvar bDestroy = oInit.bDestroy !== undefined ? oInit.bDestroy : defaults.bDestroy;\n\n\t\t\t\t\t\tif (emptyInit || bRetrieve) {\n\t\t\t\t\t\t\treturn s.oInstance;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (bDestroy) {\n\t\t\t\t\t\t\ts.oInstance.fnDestroy();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t_fnLog(s, 0, 'Cannot reinitialise DataTable', 3);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t/* If the element we are initialising has the same ID as a table which was previously\n\t\t\t\t\t * initialised, but the table nodes don't match (from before) then we destroy the old\n\t\t\t\t\t * instance by simply deleting it. This is under the assumption that the table has been\n\t\t\t\t\t * destroyed by other methods. Anyone using non-id selectors will need to do this manually\n\t\t\t\t\t */\n\t\t\t\t\tif (s.sTableId == this.id) {\n\t\t\t\t\t\tallSettings.splice(i, 1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/* Ensure the table has an ID - required for accessibility */\n\t\t\t\tif (sId === null || sId === \"\") {\n\t\t\t\t\tsId = \"DataTables_Table_\" + (DataTable.ext._unique++);\n\t\t\t\t\tthis.id = sId;\n\t\t\t\t}\n\n\t\t\t\t/* Create the settings object for this table and set some of the default parameters */\n\t\t\t\tvar oSettings = $.extend(true, {}, DataTable.models.oSettings, {\n\t\t\t\t\t\"sDestroyWidth\": $this[0].style.width,\n\t\t\t\t\t\"sInstance\": sId,\n\t\t\t\t\t\"sTableId\": sId\n\t\t\t\t});\n\t\t\t\toSettings.nTable = this;\n\t\t\t\toSettings.oApi = _that.internal;\n\t\t\t\toSettings.oInit = oInit;\n\n\t\t\t\tallSettings.push(oSettings);\n\n\t\t\t\t// Need to add the instance after the instance after the settings object has been added\n\t\t\t\t// to the settings array, so we can self reference the table instance if more than one\n\t\t\t\toSettings.oInstance = (_that.length === 1) ? _that : $this.dataTable();\n\n\t\t\t\t// Backwards compatibility, before we apply all the defaults\n\t\t\t\t_fnCompatOpts(oInit);\n\n\t\t\t\tif (oInit.oLanguage) {\n\t\t\t\t\t_fnLanguageCompat(oInit.oLanguage);\n\t\t\t\t}\n\n\t\t\t\t// If the length menu is given, but the init display length is not, use the length menu\n\t\t\t\tif (oInit.aLengthMenu && !oInit.iDisplayLength) {\n\t\t\t\t\toInit.iDisplayLength = $.isArray(oInit.aLengthMenu[0]) ?\n\t\t\t\t\t\toInit.aLengthMenu[0][0] : oInit.aLengthMenu[0];\n\t\t\t\t}\n\n\t\t\t\t// Apply the defaults and init options to make a single init object will all\n\t\t\t\t// options defined from defaults and instance options.\n\t\t\t\toInit = _fnExtend($.extend(true, {}, defaults), oInit);\n\n\n\t\t\t\t// Map the initialisation options onto the settings object\n\t\t\t\t_fnMap(oSettings.oFeatures, oInit, [\n\t\t\t\t\t\"bPaginate\",\n\t\t\t\t\t\"bLengthChange\",\n\t\t\t\t\t\"bFilter\",\n\t\t\t\t\t\"bSort\",\n\t\t\t\t\t\"bSortMulti\",\n\t\t\t\t\t\"bInfo\",\n\t\t\t\t\t\"bProcessing\",\n\t\t\t\t\t\"bAutoWidth\",\n\t\t\t\t\t\"bSortClasses\",\n\t\t\t\t\t\"bServerSide\",\n\t\t\t\t\t\"bDeferRender\"\n\t\t\t\t]);\n\t\t\t\t_fnMap(oSettings, oInit, [\n\t\t\t\t\t\"asStripeClasses\",\n\t\t\t\t\t\"ajax\",\n\t\t\t\t\t\"fnServerData\",\n\t\t\t\t\t\"fnFormatNumber\",\n\t\t\t\t\t\"sServerMethod\",\n\t\t\t\t\t\"aaSorting\",\n\t\t\t\t\t\"aaSortingFixed\",\n\t\t\t\t\t\"aLengthMenu\",\n\t\t\t\t\t\"sPaginationType\",\n\t\t\t\t\t\"sAjaxSource\",\n\t\t\t\t\t\"sAjaxDataProp\",\n\t\t\t\t\t\"iStateDuration\",\n\t\t\t\t\t\"sDom\",\n\t\t\t\t\t\"bSortCellsTop\",\n\t\t\t\t\t\"iTabIndex\",\n\t\t\t\t\t\"fnStateLoadCallback\",\n\t\t\t\t\t\"fnStateSaveCallback\",\n\t\t\t\t\t\"renderer\",\n\t\t\t\t\t\"searchDelay\",\n\t\t\t\t\t\"rowId\",\n\t\t\t\t\t[\"iCookieDuration\", \"iStateDuration\"], // backwards compat\n\t\t\t\t\t[\"oSearch\", \"oPreviousSearch\"],\n\t\t\t\t\t[\"aoSearchCols\", \"aoPreSearchCols\"],\n\t\t\t\t\t[\"iDisplayLength\", \"_iDisplayLength\"],\n\t\t\t\t\t[\"bJQueryUI\", \"bJUI\"]\n\t\t\t\t]);\n\t\t\t\t_fnMap(oSettings.oScroll, oInit, [\n\t\t\t\t\t[\"sScrollX\", \"sX\"],\n\t\t\t\t\t[\"sScrollXInner\", \"sXInner\"],\n\t\t\t\t\t[\"sScrollY\", \"sY\"],\n\t\t\t\t\t[\"bScrollCollapse\", \"bCollapse\"]\n\t\t\t\t]);\n\t\t\t\t_fnMap(oSettings.oLanguage, oInit, \"fnInfoCallback\");\n\n\t\t\t\t/* Callback functions which are array driven */\n\t\t\t\t_fnCallbackReg(oSettings, 'aoDrawCallback', oInit.fnDrawCallback, 'user');\n\t\t\t\t_fnCallbackReg(oSettings, 'aoServerParams', oInit.fnServerParams, 'user');\n\t\t\t\t_fnCallbackReg(oSettings, 'aoStateSaveParams', oInit.fnStateSaveParams, 'user');\n\t\t\t\t_fnCallbackReg(oSettings, 'aoStateLoadParams', oInit.fnStateLoadParams, 'user');\n\t\t\t\t_fnCallbackReg(oSettings, 'aoStateLoaded', oInit.fnStateLoaded, 'user');\n\t\t\t\t_fnCallbackReg(oSettings, 'aoRowCallback', oInit.fnRowCallback, 'user');\n\t\t\t\t_fnCallbackReg(oSettings, 'aoRowCreatedCallback', oInit.fnCreatedRow, 'user');\n\t\t\t\t_fnCallbackReg(oSettings, 'aoHeaderCallback', oInit.fnHeaderCallback, 'user');\n\t\t\t\t_fnCallbackReg(oSettings, 'aoFooterCallback', oInit.fnFooterCallback, 'user');\n\t\t\t\t_fnCallbackReg(oSettings, 'aoInitComplete', oInit.fnInitComplete, 'user');\n\t\t\t\t_fnCallbackReg(oSettings, 'aoPreDrawCallback', oInit.fnPreDrawCallback, 'user');\n\n\t\t\t\toSettings.rowIdFn = _fnGetObjectDataFn(oInit.rowId);\n\n\t\t\t\t/* Browser support detection */\n\t\t\t\t_fnBrowserDetect(oSettings);\n\n\t\t\t\tvar oClasses = oSettings.oClasses;\n\n\t\t\t\t// @todo Remove in 1.11\n\t\t\t\tif (oInit.bJQueryUI) {\n\t\t\t\t\t/* Use the JUI classes object for display. You could clone the oStdClasses object if\n\t\t\t\t\t * you want to have multiple tables with multiple independent classes\n\t\t\t\t\t */\n\t\t\t\t\t$.extend(oClasses, DataTable.ext.oJUIClasses, oInit.oClasses);\n\n\t\t\t\t\tif (oInit.sDom === defaults.sDom && defaults.sDom === \"lfrtip\") {\n\t\t\t\t\t\t/* Set the DOM to use a layout suitable for jQuery UI's theming */\n\t\t\t\t\t\toSettings.sDom = '<\"H\"lfr>t<\"F\"ip>';\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!oSettings.renderer) {\n\t\t\t\t\t\toSettings.renderer = 'jqueryui';\n\t\t\t\t\t}\n\t\t\t\t\telse if ($.isPlainObject(oSettings.renderer) && !oSettings.renderer.header) {\n\t\t\t\t\t\toSettings.renderer.header = 'jqueryui';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t$.extend(oClasses, DataTable.ext.classes, oInit.oClasses);\n\t\t\t\t}\n\t\t\t\t$this.addClass(oClasses.sTable);\n\n\n\t\t\t\tif (oSettings.iInitDisplayStart === undefined) {\n\t\t\t\t\t/* Display start point, taking into account the save saving */\n\t\t\t\t\toSettings.iInitDisplayStart = oInit.iDisplayStart;\n\t\t\t\t\toSettings._iDisplayStart = oInit.iDisplayStart;\n\t\t\t\t}\n\n\t\t\t\tif (oInit.iDeferLoading !== null) {\n\t\t\t\t\toSettings.bDeferLoading = true;\n\t\t\t\t\tvar tmp = $.isArray(oInit.iDeferLoading);\n\t\t\t\t\toSettings._iRecordsDisplay = tmp ? oInit.iDeferLoading[0] : oInit.iDeferLoading;\n\t\t\t\t\toSettings._iRecordsTotal = tmp ? oInit.iDeferLoading[1] : oInit.iDeferLoading;\n\t\t\t\t}\n\n\t\t\t\t/* Language definitions */\n\t\t\t\tvar oLanguage = oSettings.oLanguage;\n\t\t\t\t$.extend(true, oLanguage, oInit.oLanguage);\n\n\t\t\t\tif (oLanguage.sUrl) {\n\t\t\t\t\t/* Get the language definitions from a file - because this Ajax call makes the language\n\t\t\t\t\t * get async to the remainder of this function we use bInitHandedOff to indicate that\n\t\t\t\t\t * _fnInitialise will be fired by the returned Ajax handler, rather than the constructor\n\t\t\t\t\t */\n\t\t\t\t\t$.ajax({\n\t\t\t\t\t\tdataType: 'json',\n\t\t\t\t\t\turl: oLanguage.sUrl,\n\t\t\t\t\t\tsuccess: function (json) {\n\t\t\t\t\t\t\t_fnLanguageCompat(json);\n\t\t\t\t\t\t\t_fnCamelToHungarian(defaults.oLanguage, json);\n\t\t\t\t\t\t\t$.extend(true, oLanguage, json);\n\t\t\t\t\t\t\t_fnInitialise(oSettings);\n\t\t\t\t\t\t},\n\t\t\t\t\t\terror: function () {\n\t\t\t\t\t\t\t// Error occurred loading language file, continue on as best we can\n\t\t\t\t\t\t\t_fnInitialise(oSettings);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tbInitHandedOff = true;\n\t\t\t\t}\n\n\t\t\t\t/*\n\t\t\t\t * Stripes\n\t\t\t\t */\n\t\t\t\tif (oInit.asStripeClasses === null) {\n\t\t\t\t\toSettings.asStripeClasses = [\n\t\t\t\t\t\toClasses.sStripeOdd,\n\t\t\t\t\t\toClasses.sStripeEven\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\t/* Remove row stripe classes if they are already on the table row */\n\t\t\t\tvar stripeClasses = oSettings.asStripeClasses;\n\t\t\t\tvar rowOne = $this.children('tbody').find('tr').eq(0);\n\t\t\t\tif ($.inArray(true, $.map(stripeClasses, function (el, i) {\n\t\t\t\t\treturn rowOne.hasClass(el);\n\t\t\t\t})) !== -1) {\n\t\t\t\t\t$('tbody tr', this).removeClass(stripeClasses.join(' '));\n\t\t\t\t\toSettings.asDestroyStripes = stripeClasses.slice();\n\t\t\t\t}\n\n\t\t\t\t/*\n\t\t\t\t * Columns\n\t\t\t\t * See if we should load columns automatically or use defined ones\n\t\t\t\t */\n\t\t\t\tvar anThs = [];\n\t\t\t\tvar aoColumnsInit;\n\t\t\t\tvar nThead = this.getElementsByTagName('thead');\n\t\t\t\tif (nThead.length !== 0) {\n\t\t\t\t\t_fnDetectHeader(oSettings.aoHeader, nThead[0]);\n\t\t\t\t\tanThs = _fnGetUniqueThs(oSettings);\n\t\t\t\t}\n\n\t\t\t\t/* If not given a column array, generate one with nulls */\n\t\t\t\tif (oInit.aoColumns === null) {\n\t\t\t\t\taoColumnsInit = [];\n\t\t\t\t\tfor (i = 0, iLen = anThs.length; i < iLen; i++) {\n\t\t\t\t\t\taoColumnsInit.push(null);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\taoColumnsInit = oInit.aoColumns;\n\t\t\t\t}\n\n\t\t\t\t/* Add the columns */\n\t\t\t\tfor (i = 0, iLen = aoColumnsInit.length; i < iLen; i++) {\n\t\t\t\t\t_fnAddColumn(oSettings, anThs ? anThs[i] : null);\n\t\t\t\t}\n\n\t\t\t\t/* Apply the column definitions */\n\t\t\t\t_fnApplyColumnDefs(oSettings, oInit.aoColumnDefs, aoColumnsInit, function (iCol, oDef) {\n\t\t\t\t\t_fnColumnOptions(oSettings, iCol, oDef);\n\t\t\t\t});\n\n\t\t\t\t/* HTML5 attribute detection - build an mData object automatically if the\n\t\t\t\t * attributes are found\n\t\t\t\t */\n\t\t\t\tif (rowOne.length) {\n\t\t\t\t\tvar a = function (cell, name) {\n\t\t\t\t\t\treturn cell.getAttribute('data-' + name) !== null ? name : null;\n\t\t\t\t\t};\n\n\t\t\t\t\t$(rowOne[0]).children('th, td').each(function (i, cell) {\n\t\t\t\t\t\tvar col = oSettings.aoColumns[i];\n\n\t\t\t\t\t\tif (col.mData === i) {\n\t\t\t\t\t\t\tvar sort = a(cell, 'sort') || a(cell, 'order');\n\t\t\t\t\t\t\tvar filter = a(cell, 'filter') || a(cell, 'search');\n\n\t\t\t\t\t\t\tif (sort !== null || filter !== null) {\n\t\t\t\t\t\t\t\tcol.mData = {\n\t\t\t\t\t\t\t\t\t_: i + '.display',\n\t\t\t\t\t\t\t\t\tsort: sort !== null ? i + '.@data-' + sort : undefined,\n\t\t\t\t\t\t\t\t\ttype: sort !== null ? i + '.@data-' + sort : undefined,\n\t\t\t\t\t\t\t\t\tfilter: filter !== null ? i + '.@data-' + filter : undefined\n\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t_fnColumnOptions(oSettings, i);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tvar features = oSettings.oFeatures;\n\t\t\t\tvar loadedInit = function () {\n\t\t\t\t\t/*\n\t\t\t\t\t * Sorting\n\t\t\t\t\t * @todo For modularisation (1.11) this needs to do into a sort start up handler\n\t\t\t\t\t */\n\n\t\t\t\t\t// If aaSorting is not defined, then we use the first indicator in asSorting\n\t\t\t\t\t// in case that has been altered, so the default sort reflects that option\n\t\t\t\t\tif (oInit.aaSorting === undefined) {\n\t\t\t\t\t\tvar sorting = oSettings.aaSorting;\n\t\t\t\t\t\tfor (i = 0, iLen = sorting.length; i < iLen; i++) {\n\t\t\t\t\t\t\tsorting[i][1] = oSettings.aoColumns[i].asSorting[0];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t/* Do a first pass on the sorting classes (allows any size changes to be taken into\n\t\t\t\t\t * account, and also will apply sorting disabled classes if disabled\n\t\t\t\t\t */\n\t\t\t\t\t_fnSortingClasses(oSettings);\n\n\t\t\t\t\tif (features.bSort) {\n\t\t\t\t\t\t_fnCallbackReg(oSettings, 'aoDrawCallback', function () {\n\t\t\t\t\t\t\tif (oSettings.bSorted) {\n\t\t\t\t\t\t\t\tvar aSort = _fnSortFlatten(oSettings);\n\t\t\t\t\t\t\t\tvar sortedColumns = {};\n\n\t\t\t\t\t\t\t\t$.each(aSort, function (i, val) {\n\t\t\t\t\t\t\t\t\tsortedColumns[val.src] = val.dir;\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t_fnCallbackFire(oSettings, null, 'order', [oSettings, aSort, sortedColumns]);\n\t\t\t\t\t\t\t\t_fnSortAria(oSettings);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\t_fnCallbackReg(oSettings, 'aoDrawCallback', function () {\n\t\t\t\t\t\tif (oSettings.bSorted || _fnDataSource(oSettings) === 'ssp' || features.bDeferRender) {\n\t\t\t\t\t\t\t_fnSortingClasses(oSettings);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, 'sc');\n\n\n\t\t\t\t\t/*\n\t\t\t\t\t * Final init\n\t\t\t\t\t * Cache the header, body and footer as required, creating them if needed\n\t\t\t\t\t */\n\n\t\t\t\t\t// Work around for Webkit bug 83867 - store the caption-side before removing from doc\n\t\t\t\t\tvar captions = $this.children('caption').each(function () {\n\t\t\t\t\t\tthis._captionSide = $(this).css('caption-side');\n\t\t\t\t\t});\n\n\t\t\t\t\tvar thead = $this.children('thead');\n\t\t\t\t\tif (thead.length === 0) {\n\t\t\t\t\t\tthead = $('<thead/>').appendTo($this);\n\t\t\t\t\t}\n\t\t\t\t\toSettings.nTHead = thead[0];\n\n\t\t\t\t\tvar tbody = $this.children('tbody');\n\t\t\t\t\tif (tbody.length === 0) {\n\t\t\t\t\t\ttbody = $('<tbody/>').appendTo($this);\n\t\t\t\t\t}\n\t\t\t\t\toSettings.nTBody = tbody[0];\n\n\t\t\t\t\tvar tfoot = $this.children('tfoot');\n\t\t\t\t\tif (tfoot.length === 0 && captions.length > 0 && (oSettings.oScroll.sX !== \"\" || oSettings.oScroll.sY !== \"\")) {\n\t\t\t\t\t\t// If we are a scrolling table, and no footer has been given, then we need to create\n\t\t\t\t\t\t// a tfoot element for the caption element to be appended to\n\t\t\t\t\t\ttfoot = $('<tfoot/>').appendTo($this);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (tfoot.length === 0 || tfoot.children().length === 0) {\n\t\t\t\t\t\t$this.addClass(oClasses.sNoFooter);\n\t\t\t\t\t}\n\t\t\t\t\telse if (tfoot.length > 0) {\n\t\t\t\t\t\toSettings.nTFoot = tfoot[0];\n\t\t\t\t\t\t_fnDetectHeader(oSettings.aoFooter, oSettings.nTFoot);\n\t\t\t\t\t}\n\n\t\t\t\t\t/* Check if there is data passing into the constructor */\n\t\t\t\t\tif (oInit.aaData) {\n\t\t\t\t\t\tfor (i = 0; i < oInit.aaData.length; i++) {\n\t\t\t\t\t\t\t_fnAddData(oSettings, oInit.aaData[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (oSettings.bDeferLoading || _fnDataSource(oSettings) == 'dom') {\n\t\t\t\t\t\t/* Grab the data from the page - only do this when deferred loading or no Ajax\n\t\t\t\t\t\t * source since there is no point in reading the DOM data if we are then going\n\t\t\t\t\t\t * to replace it with Ajax data\n\t\t\t\t\t\t */\n\t\t\t\t\t\t_fnAddTr(oSettings, $(oSettings.nTBody).children('tr'));\n\t\t\t\t\t}\n\n\t\t\t\t\t/* Copy the data index array */\n\t\t\t\t\toSettings.aiDisplay = oSettings.aiDisplayMaster.slice();\n\n\t\t\t\t\t/* Initialisation complete - table can be drawn */\n\t\t\t\t\toSettings.bInitialised = true;\n\n\t\t\t\t\t/* Check if we need to initialise the table (it might not have been handed off to the\n\t\t\t\t\t * language processor)\n\t\t\t\t\t */\n\t\t\t\t\tif (bInitHandedOff === false) {\n\t\t\t\t\t\t_fnInitialise(oSettings);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t/* Must be done after everything which can be overridden by the state saving! */\n\t\t\t\tif (oInit.bStateSave) {\n\t\t\t\t\tfeatures.bStateSave = true;\n\t\t\t\t\t_fnCallbackReg(oSettings, 'aoDrawCallback', _fnSaveState, 'state_save');\n\t\t\t\t\t_fnLoadState(oSettings, oInit, loadedInit);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tloadedInit();\n\t\t\t\t}\n\n\t\t\t});\n\t\t\t_that = null;\n\t\t\treturn this;\n\t\t};\n\n\n\t\t/*\n\t\t * It is useful to have variables which are scoped locally so only the\n\t\t * DataTables functions can access them and they don't leak into global space.\n\t\t * At the same time these functions are often useful over multiple files in the\n\t\t * core and API, so we list, or at least document, all variables which are used\n\t\t * by DataTables as private variables here. This also ensures that there is no\n\t\t * clashing of variable names and that they can easily referenced for reuse.\n\t\t */\n\n\n\t\t// Defined else where\n\t\t//  _selector_run\n\t\t//  _selector_opts\n\t\t//  _selector_first\n\t\t//  _selector_row_indexes\n\n\t\tvar _ext; // DataTable.ext\n\t\tvar _Api; // DataTable.Api\n\t\tvar _api_register; // DataTable.Api.register\n\t\tvar _api_registerPlural; // DataTable.Api.registerPlural\n\n\t\tvar _re_dic = {};\n\t\tvar _re_new_lines = /[\\r\\n]/g;\n\t\tvar _re_html = /<.*?>/g;\n\n\t\t// This is not strict ISO8601 - Date.parse() is quite lax, although\n\t\t// implementations differ between browsers.\n\t\tvar _re_date = /^\\d{2,4}[\\.\\/\\-]\\d{1,2}[\\.\\/\\-]\\d{1,2}([T ]{1}\\d{1,2}[:\\.]\\d{2}([\\.:]\\d{2})?)?$/;\n\n\t\t// Escape regular expression special characters\n\t\tvar _re_escape_regex = new RegExp('(\\\\' + ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\', '$', '^', '-'].join('|\\\\') + ')', 'g');\n\n\t\t// http://en.wikipedia.org/wiki/Foreign_exchange_market\n\t\t// - \\u20BD - Russian ruble.\n\t\t// - \\u20a9 - South Korean Won\n\t\t// - \\u20BA - Turkish Lira\n\t\t// - \\u20B9 - Indian Rupee\n\t\t// - R - Brazil (R$) and South Africa\n\t\t// - fr - Swiss Franc\n\t\t// - kr - Swedish krona, Norwegian krone and Danish krone\n\t\t// - \\u2009 is thin space and \\u202F is narrow no-break space, both used in many\n\t\t//   standards as thousands separators.\n\t\tvar _re_formatted_numeric = /[',$£€¥%\\u2009\\u202F\\u20BD\\u20a9\\u20BArfk]/gi;\n\n\n\t\tvar _empty = function (d) {\n\t\t\treturn !d || d === true || d === '-' ? true : false;\n\t\t};\n\n\n\t\tvar _intVal = function (s) {\n\t\t\tvar integer = parseInt(s, 10);\n\t\t\treturn !isNaN(integer) && isFinite(s) ? integer : null;\n\t\t};\n\n\t\t// Convert from a formatted number with characters other than `.` as the\n\t\t// decimal place, to a Javascript number\n\t\tvar _numToDecimal = function (num, decimalPoint) {\n\t\t\t// Cache created regular expressions for speed as this function is called often\n\t\t\tif (!_re_dic[decimalPoint]) {\n\t\t\t\t_re_dic[decimalPoint] = new RegExp(_fnEscapeRegex(decimalPoint), 'g');\n\t\t\t}\n\t\t\treturn typeof num === 'string' && decimalPoint !== '.' ?\n\t\t\t\tnum.replace(/\\./g, '').replace(_re_dic[decimalPoint], '.') :\n\t\t\t\tnum;\n\t\t};\n\n\n\t\tvar _isNumber = function (d, decimalPoint, formatted) {\n\t\t\tvar strType = typeof d === 'string';\n\n\t\t\t// If empty return immediately so there must be a number if it is a\n\t\t\t// formatted string (this stops the string \"k\", or \"kr\", etc being detected\n\t\t\t// as a formatted number for currency\n\t\t\tif (_empty(d)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (decimalPoint && strType) {\n\t\t\t\td = _numToDecimal(d, decimalPoint);\n\t\t\t}\n\n\t\t\tif (formatted && strType) {\n\t\t\t\td = d.replace(_re_formatted_numeric, '');\n\t\t\t}\n\n\t\t\treturn !isNaN(parseFloat(d)) && isFinite(d);\n\t\t};\n\n\n\t\t// A string without HTML in it can be considered to be HTML still\n\t\tvar _isHtml = function (d) {\n\t\t\treturn _empty(d) || typeof d === 'string';\n\t\t};\n\n\n\t\tvar _htmlNumeric = function (d, decimalPoint, formatted) {\n\t\t\tif (_empty(d)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tvar html = _isHtml(d);\n\t\t\treturn !html ?\n\t\t\t\tnull :\n\t\t\t\t_isNumber(_stripHtml(d), decimalPoint, formatted) ?\n\t\t\t\t\ttrue :\n\t\t\t\t\tnull;\n\t\t};\n\n\n\t\tvar _pluck = function (a, prop, prop2) {\n\t\t\tvar out = [];\n\t\t\tvar i = 0, ien = a.length;\n\n\t\t\t// Could have the test in the loop for slightly smaller code, but speed\n\t\t\t// is essential here\n\t\t\tif (prop2 !== undefined) {\n\t\t\t\tfor (; i < ien; i++) {\n\t\t\t\t\tif (a[i] && a[i][prop]) {\n\t\t\t\t\t\tout.push(a[i][prop][prop2]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfor (; i < ien; i++) {\n\t\t\t\t\tif (a[i]) {\n\t\t\t\t\t\tout.push(a[i][prop]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn out;\n\t\t};\n\n\n\t\t// Basically the same as _pluck, but rather than looping over `a` we use `order`\n\t\t// as the indexes to pick from `a`\n\t\tvar _pluck_order = function (a, order, prop, prop2) {\n\t\t\tvar out = [];\n\t\t\tvar i = 0, ien = order.length;\n\n\t\t\t// Could have the test in the loop for slightly smaller code, but speed\n\t\t\t// is essential here\n\t\t\tif (prop2 !== undefined) {\n\t\t\t\tfor (; i < ien; i++) {\n\t\t\t\t\tif (a[order[i]][prop]) {\n\t\t\t\t\t\tout.push(a[order[i]][prop][prop2]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfor (; i < ien; i++) {\n\t\t\t\t\tout.push(a[order[i]][prop]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn out;\n\t\t};\n\n\n\t\tvar _range = function (len, start) {\n\t\t\tvar out = [];\n\t\t\tvar end;\n\n\t\t\tif (start === undefined) {\n\t\t\t\tstart = 0;\n\t\t\t\tend = len;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tend = start;\n\t\t\t\tstart = len;\n\t\t\t}\n\n\t\t\tfor (var i = start; i < end; i++) {\n\t\t\t\tout.push(i);\n\t\t\t}\n\n\t\t\treturn out;\n\t\t};\n\n\n\t\tvar _removeEmpty = function (a) {\n\t\t\tvar out = [];\n\n\t\t\tfor (var i = 0, ien = a.length; i < ien; i++) {\n\t\t\t\tif (a[i]) { // careful - will remove all falsy values!\n\t\t\t\t\tout.push(a[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn out;\n\t\t};\n\n\n\t\tvar _stripHtml = function (d) {\n\t\t\treturn d.replace(_re_html, '');\n\t\t};\n\n\n\t\t/**\n\t\t * Determine if all values in the array are unique. This means we can short\n\t\t * cut the _unique method at the cost of a single loop. A sorted array is used\n\t\t * to easily check the values.\n\t\t *\n\t\t * @param  {array} src Source array\n\t\t * @return {boolean} true if all unique, false otherwise\n\t\t * @ignore\n\t\t */\n\t\tvar _areAllUnique = function (src) {\n\t\t\tif (src.length < 2) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tvar sorted = src.slice().sort();\n\t\t\tvar last = sorted[0];\n\n\t\t\tfor (var i = 1, ien = sorted.length; i < ien; i++) {\n\t\t\t\tif (sorted[i] === last) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tlast = sorted[i];\n\t\t\t}\n\n\t\t\treturn true;\n\t\t};\n\n\n\t\t/**\n\t\t * Find the unique elements in a source array.\n\t\t *\n\t\t * @param  {array} src Source array\n\t\t * @return {array} Array of unique items\n\t\t * @ignore\n\t\t */\n\t\tvar _unique = function (src) {\n\t\t\tif (_areAllUnique(src)) {\n\t\t\t\treturn src.slice();\n\t\t\t}\n\n\t\t\t// A faster unique method is to use object keys to identify used values,\n\t\t\t// but this doesn't work with arrays or objects, which we must also\n\t\t\t// consider. See jsperf.com/compare-array-unique-versions/4 for more\n\t\t\t// information.\n\t\t\tvar\n\t\t\t\tout = [],\n\t\t\t\tval,\n\t\t\t\ti, ien = src.length,\n\t\t\t\tj, k = 0;\n\n\t\t\tagain: for (i = 0; i < ien; i++) {\n\t\t\t\tval = src[i];\n\n\t\t\t\tfor (j = 0; j < k; j++) {\n\t\t\t\t\tif (out[j] === val) {\n\t\t\t\t\t\tcontinue again;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tout.push(val);\n\t\t\t\tk++;\n\t\t\t}\n\n\t\t\treturn out;\n\t\t};\n\n\n\t\t/**\n\t\t * DataTables utility methods\n\t\t *\n\t\t * This namespace provides helper methods that DataTables uses internally to\n\t\t * create a DataTable, but which are not exclusively used only for DataTables.\n\t\t * These methods can be used by extension authors to save the duplication of\n\t\t * code.\n\t\t *\n\t\t *  @namespace\n\t\t */\n\t\tDataTable.util = {\n\t\t\t/**\n\t\t\t * Throttle the calls to a function. Arguments and context are maintained\n\t\t\t * for the throttled function.\n\t\t\t *\n\t\t\t * @param {function} fn Function to be called\n\t\t\t * @param {integer} freq Call frequency in mS\n\t\t\t * @return {function} Wrapped function\n\t\t\t */\n\t\t\tthrottle: function (fn, freq) {\n\t\t\t\tvar\n\t\t\t\t\tfrequency = freq !== undefined ? freq : 200,\n\t\t\t\t\tlast,\n\t\t\t\t\ttimer;\n\n\t\t\t\treturn function () {\n\t\t\t\t\tvar\n\t\t\t\t\t\tthat = this,\n\t\t\t\t\t\tnow = +new Date(),\n\t\t\t\t\t\targs = arguments;\n\n\t\t\t\t\tif (last && now < last + frequency) {\n\t\t\t\t\t\tclearTimeout(timer);\n\n\t\t\t\t\t\ttimer = setTimeout(function () {\n\t\t\t\t\t\t\tlast = undefined;\n\t\t\t\t\t\t\tfn.apply(that, args);\n\t\t\t\t\t\t}, frequency);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlast = now;\n\t\t\t\t\t\tfn.apply(that, args);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t},\n\n\n\t\t\t/**\n\t\t\t * Escape a string such that it can be used in a regular expression\n\t\t\t *\n\t\t\t *  @param {string} val string to escape\n\t\t\t *  @returns {string} escaped string\n\t\t\t */\n\t\t\tescapeRegex: function (val) {\n\t\t\t\treturn val.replace(_re_escape_regex, '\\\\$1');\n\t\t\t}\n\t\t};\n\n\n\n\t\t/**\n\t\t * Create a mapping object that allows camel case parameters to be looked up\n\t\t * for their Hungarian counterparts. The mapping is stored in a private\n\t\t * parameter called `_hungarianMap` which can be accessed on the source object.\n\t\t *  @param {object} o\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnHungarianMap(o) {\n\t\t\tvar\n\t\t\t\thungarian = 'a aa ai ao as b fn i m o s ',\n\t\t\t\tmatch,\n\t\t\t\tnewKey,\n\t\t\t\tmap = {};\n\n\t\t\t$.each(o, function (key, val) {\n\t\t\t\tmatch = key.match(/^([^A-Z]+?)([A-Z])/);\n\n\t\t\t\tif (match && hungarian.indexOf(match[1] + ' ') !== -1) {\n\t\t\t\t\tnewKey = key.replace(match[0], match[2].toLowerCase());\n\t\t\t\t\tmap[newKey] = key;\n\n\t\t\t\t\tif (match[1] === 'o') {\n\t\t\t\t\t\t_fnHungarianMap(o[key]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\to._hungarianMap = map;\n\t\t}\n\n\n\t\t/**\n\t\t * Convert from camel case parameters to Hungarian, based on a Hungarian map\n\t\t * created by _fnHungarianMap.\n\t\t *  @param {object} src The model object which holds all parameters that can be\n\t\t *    mapped.\n\t\t *  @param {object} user The object to convert from camel case to Hungarian.\n\t\t *  @param {boolean} force When set to `true`, properties which already have a\n\t\t *    Hungarian value in the `user` object will be overwritten. Otherwise they\n\t\t *    won't be.\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnCamelToHungarian(src, user, force) {\n\t\t\tif (!src._hungarianMap) {\n\t\t\t\t_fnHungarianMap(src);\n\t\t\t}\n\n\t\t\tvar hungarianKey;\n\n\t\t\t$.each(user, function (key, val) {\n\t\t\t\thungarianKey = src._hungarianMap[key];\n\n\t\t\t\tif (hungarianKey !== undefined && (force || user[hungarianKey] === undefined)) {\n\t\t\t\t\t// For objects, we need to buzz down into the object to copy parameters\n\t\t\t\t\tif (hungarianKey.charAt(0) === 'o') {\n\t\t\t\t\t\t// Copy the camelCase options over to the hungarian\n\t\t\t\t\t\tif (!user[hungarianKey]) {\n\t\t\t\t\t\t\tuser[hungarianKey] = {};\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$.extend(true, user[hungarianKey], user[key]);\n\n\t\t\t\t\t\t_fnCamelToHungarian(src[hungarianKey], user[hungarianKey], force);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tuser[hungarianKey] = user[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\n\t\t/**\n\t\t * Language compatibility - when certain options are given, and others aren't, we\n\t\t * need to duplicate the values over, in order to provide backwards compatibility\n\t\t * with older language files.\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnLanguageCompat(lang) {\n\t\t\tvar defaults = DataTable.defaults.oLanguage;\n\t\t\tvar zeroRecords = lang.sZeroRecords;\n\n\t\t\t/* Backwards compatibility - if there is no sEmptyTable given, then use the same as\n\t\t\t * sZeroRecords - assuming that is given.\n\t\t\t */\n\t\t\tif (!lang.sEmptyTable && zeroRecords &&\n\t\t\t\tdefaults.sEmptyTable === \"No Courses are available\") {\n\t\t\t\t_fnMap(lang, lang, 'sZeroRecords', 'sEmptyTable');\n\t\t\t}\n\n\t\t\t/* Likewise with loading records */\n\t\t\tif (!lang.sLoadingRecords && zeroRecords &&\n\t\t\t\tdefaults.sLoadingRecords === \"Loading...\") {\n\t\t\t\t_fnMap(lang, lang, 'sZeroRecords', 'sLoadingRecords');\n\t\t\t}\n\n\t\t\t// Old parameter name of the thousands separator mapped onto the new\n\t\t\tif (lang.sInfoThousands) {\n\t\t\t\tlang.sThousands = lang.sInfoThousands;\n\t\t\t}\n\n\t\t\tvar decimal = lang.sDecimal;\n\t\t\tif (decimal) {\n\t\t\t\t_addNumericSort(decimal);\n\t\t\t}\n\t\t}\n\n\n\t\t/**\n\t\t * Map one parameter onto another\n\t\t *  @param {object} o Object to map\n\t\t *  @param {*} knew The new parameter name\n\t\t *  @param {*} old The old parameter name\n\t\t */\n\t\tvar _fnCompatMap = function (o, knew, old) {\n\t\t\tif (o[knew] !== undefined) {\n\t\t\t\to[old] = o[knew];\n\t\t\t}\n\t\t};\n\n\n\t\t/**\n\t\t * Provide backwards compatibility for the main DT options. Note that the new\n\t\t * options are mapped onto the old parameters, so this is an external interface\n\t\t * change only.\n\t\t *  @param {object} init Object to map\n\t\t */\n\t\tfunction _fnCompatOpts(init) {\n\t\t\t_fnCompatMap(init, 'ordering', 'bSort');\n\t\t\t_fnCompatMap(init, 'orderMulti', 'bSortMulti');\n\t\t\t_fnCompatMap(init, 'orderClasses', 'bSortClasses');\n\t\t\t_fnCompatMap(init, 'orderCellsTop', 'bSortCellsTop');\n\t\t\t_fnCompatMap(init, 'order', 'aaSorting');\n\t\t\t_fnCompatMap(init, 'orderFixed', 'aaSortingFixed');\n\t\t\t_fnCompatMap(init, 'paging', 'bPaginate');\n\t\t\t_fnCompatMap(init, 'pagingType', 'sPaginationType');\n\t\t\t_fnCompatMap(init, 'pageLength', 'iDisplayLength');\n\t\t\t_fnCompatMap(init, 'searching', 'bFilter');\n\n\t\t\t// Boolean initialisation of x-scrolling\n\t\t\tif (typeof init.sScrollX === 'boolean') {\n\t\t\t\tinit.sScrollX = init.sScrollX ? '100%' : '';\n\t\t\t}\n\t\t\tif (typeof init.scrollX === 'boolean') {\n\t\t\t\tinit.scrollX = init.scrollX ? '100%' : '';\n\t\t\t}\n\n\t\t\t// Column search objects are in an array, so it needs to be converted\n\t\t\t// element by element\n\t\t\tvar searchCols = init.aoSearchCols;\n\n\t\t\tif (searchCols) {\n\t\t\t\tfor (var i = 0, ien = searchCols.length; i < ien; i++) {\n\t\t\t\t\tif (searchCols[i]) {\n\t\t\t\t\t\t_fnCamelToHungarian(DataTable.models.oSearch, searchCols[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\t/**\n\t\t * Provide backwards compatibility for column options. Note that the new options\n\t\t * are mapped onto the old parameters, so this is an external interface change\n\t\t * only.\n\t\t *  @param {object} init Object to map\n\t\t */\n\t\tfunction _fnCompatCols(init) {\n\t\t\t_fnCompatMap(init, 'orderable', 'bSortable');\n\t\t\t_fnCompatMap(init, 'orderData', 'aDataSort');\n\t\t\t_fnCompatMap(init, 'orderSequence', 'asSorting');\n\t\t\t_fnCompatMap(init, 'orderDataType', 'sortDataType');\n\n\t\t\t// orderData can be given as an integer\n\t\t\tvar dataSort = init.aDataSort;\n\t\t\tif (typeof dataSort === 'number' && !$.isArray(dataSort)) {\n\t\t\t\tinit.aDataSort = [dataSort];\n\t\t\t}\n\t\t}\n\n\n\t\t/**\n\t\t * Browser feature detection for capabilities, quirks\n\t\t *  @param {object} settings dataTables settings object\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnBrowserDetect(settings) {\n\t\t\t// We don't need to do this every time DataTables is constructed, the values\n\t\t\t// calculated are specific to the browser and OS configuration which we\n\t\t\t// don't expect to change between initialisations\n\t\t\tif (!DataTable.__browser) {\n\t\t\t\tvar browser = {};\n\t\t\t\tDataTable.__browser = browser;\n\n\t\t\t\t// Scrolling feature / quirks detection\n\t\t\t\tvar n = $('<div/>')\n\t\t\t\t\t.css({\n\t\t\t\t\t\tposition: 'fixed',\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tleft: $(window).scrollLeft() * -1, // allow for scrolling\n\t\t\t\t\t\theight: 1,\n\t\t\t\t\t\twidth: 1,\n\t\t\t\t\t\toverflow: 'hidden'\n\t\t\t\t\t})\n\t\t\t\t\t.append(\n\t\t\t\t\t\t$('<div/>')\n\t\t\t\t\t\t\t.css({\n\t\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\t\ttop: 1,\n\t\t\t\t\t\t\t\tleft: 1,\n\t\t\t\t\t\t\t\twidth: 100,\n\t\t\t\t\t\t\t\toverflow: 'scroll'\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\t$('<div/>')\n\t\t\t\t\t\t\t\t\t.css({\n\t\t\t\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\t\t\t\theight: 10\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t\t.appendTo('body');\n\n\t\t\t\tvar outer = n.children();\n\t\t\t\tvar inner = outer.children();\n\n\t\t\t\t// Numbers below, in order, are:\n\t\t\t\t// inner.offsetWidth, inner.clientWidth, outer.offsetWidth, outer.clientWidth\n\t\t\t\t//\n\t\t\t\t// IE6 XP:                           100 100 100  83\n\t\t\t\t// IE7 Vista:                        100 100 100  83\n\t\t\t\t// IE 8+ Windows:                     83  83 100  83\n\t\t\t\t// Evergreen Windows:                 83  83 100  83\n\t\t\t\t// Evergreen Mac with scrollbars:     85  85 100  85\n\t\t\t\t// Evergreen Mac without scrollbars: 100 100 100 100\n\n\t\t\t\t// Get scrollbar width\n\t\t\t\tbrowser.barWidth = outer[0].offsetWidth - outer[0].clientWidth;\n\n\t\t\t\t// IE6/7 will oversize a width 100% element inside a scrolling element, to\n\t\t\t\t// include the width of the scrollbar, while other browsers ensure the inner\n\t\t\t\t// element is contained without forcing scrolling\n\t\t\t\tbrowser.bScrollOversize = inner[0].offsetWidth === 100 && outer[0].clientWidth !== 100;\n\n\t\t\t\t// In rtl text layout, some browsers (most, but not all) will place the\n\t\t\t\t// scrollbar on the left, rather than the right.\n\t\t\t\tbrowser.bScrollbarLeft = Math.round(inner.offset().left) !== 1;\n\n\t\t\t\t// IE8- don't provide height and width for getBoundingClientRect\n\t\t\t\tbrowser.bBounding = n[0].getBoundingClientRect().width ? true : false;\n\n\t\t\t\tn.remove();\n\t\t\t}\n\n\t\t\t$.extend(settings.oBrowser, DataTable.__browser);\n\t\t\tsettings.oScroll.iBarWidth = DataTable.__browser.barWidth;\n\t\t}\n\n\n\t\t/**\n\t\t * Array.prototype reduce[Right] method, used for browsers which don't support\n\t\t * JS 1.6. Done this way to reduce code size, since we iterate either way\n\t\t *  @param {object} settings dataTables settings object\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnReduce(that, fn, init, start, end, inc) {\n\t\t\tvar\n\t\t\t\ti = start,\n\t\t\t\tvalue,\n\t\t\t\tisSet = false;\n\n\t\t\tif (init !== undefined) {\n\t\t\t\tvalue = init;\n\t\t\t\tisSet = true;\n\t\t\t}\n\n\t\t\twhile (i !== end) {\n\t\t\t\tif (!that.hasOwnProperty(i)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tvalue = isSet ?\n\t\t\t\t\tfn(value, that[i], i, that) :\n\t\t\t\t\tthat[i];\n\n\t\t\t\tisSet = true;\n\t\t\t\ti += inc;\n\t\t\t}\n\n\t\t\treturn value;\n\t\t}\n\n\t\t/**\n\t\t * Add a column to the list used for the table with default values\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @param {node} nTh The th element for this column\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnAddColumn(oSettings, nTh) {\n\t\t\t// Add column to aoColumns array\n\t\t\tvar oDefaults = DataTable.defaults.column;\n\t\t\tvar iCol = oSettings.aoColumns.length;\n\t\t\tvar oCol = $.extend({}, DataTable.models.oColumn, oDefaults, {\n\t\t\t\t\"nTh\": nTh ? nTh : document.createElement('th'),\n\t\t\t\t\"sTitle\": oDefaults.sTitle ? oDefaults.sTitle : nTh ? nTh.innerHTML : '',\n\t\t\t\t\"aDataSort\": oDefaults.aDataSort ? oDefaults.aDataSort : [iCol],\n\t\t\t\t\"mData\": oDefaults.mData ? oDefaults.mData : iCol,\n\t\t\t\tidx: iCol\n\t\t\t});\n\t\t\toSettings.aoColumns.push(oCol);\n\n\t\t\t// Add search object for column specific search. Note that the `searchCols[ iCol ]`\n\t\t\t// passed into extend can be undefined. This allows the user to give a default\n\t\t\t// with only some of the parameters defined, and also not give a default\n\t\t\tvar searchCols = oSettings.aoPreSearchCols;\n\t\t\tsearchCols[iCol] = $.extend({}, DataTable.models.oSearch, searchCols[iCol]);\n\n\t\t\t// Use the default column options function to initialise classes etc\n\t\t\t_fnColumnOptions(oSettings, iCol, $(nTh).data());\n\t\t}\n\n\n\t\t/**\n\t\t * Apply options for a column\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @param {int} iCol column index to consider\n\t\t *  @param {object} oOptions object with sType, bVisible and bSearchable etc\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnColumnOptions(oSettings, iCol, oOptions) {\n\t\t\tvar oCol = oSettings.aoColumns[iCol];\n\t\t\tvar oClasses = oSettings.oClasses;\n\t\t\tvar th = $(oCol.nTh);\n\n\t\t\t// Try to get width information from the DOM. We can't get it from CSS\n\t\t\t// as we'd need to parse the CSS stylesheet. `width` option can override\n\t\t\tif (!oCol.sWidthOrig) {\n\t\t\t\t// Width attribute\n\t\t\t\toCol.sWidthOrig = th.attr('width') || null;\n\n\t\t\t\t// Style attribute\n\t\t\t\tvar t = (th.attr('style') || '').match(/width:\\s*(\\d+[pxem%]+)/);\n\t\t\t\tif (t) {\n\t\t\t\t\toCol.sWidthOrig = t[1];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/* User specified column options */\n\t\t\tif (oOptions !== undefined && oOptions !== null) {\n\t\t\t\t// Backwards compatibility\n\t\t\t\t_fnCompatCols(oOptions);\n\n\t\t\t\t// Map camel case parameters to their Hungarian counterparts\n\t\t\t\t_fnCamelToHungarian(DataTable.defaults.column, oOptions);\n\n\t\t\t\t/* Backwards compatibility for mDataProp */\n\t\t\t\tif (oOptions.mDataProp !== undefined && !oOptions.mData) {\n\t\t\t\t\toOptions.mData = oOptions.mDataProp;\n\t\t\t\t}\n\n\t\t\t\tif (oOptions.sType) {\n\t\t\t\t\toCol._sManualType = oOptions.sType;\n\t\t\t\t}\n\n\t\t\t\t// `class` is a reserved word in Javascript, so we need to provide\n\t\t\t\t// the ability to use a valid name for the camel case input\n\t\t\t\tif (oOptions.className && !oOptions.sClass) {\n\t\t\t\t\toOptions.sClass = oOptions.className;\n\t\t\t\t}\n\n\t\t\t\t$.extend(oCol, oOptions);\n\t\t\t\t_fnMap(oCol, oOptions, \"sWidth\", \"sWidthOrig\");\n\n\t\t\t\t/* iDataSort to be applied (backwards compatibility), but aDataSort will take\n\t\t\t\t * priority if defined\n\t\t\t\t */\n\t\t\t\tif (oOptions.iDataSort !== undefined) {\n\t\t\t\t\toCol.aDataSort = [oOptions.iDataSort];\n\t\t\t\t}\n\t\t\t\t_fnMap(oCol, oOptions, \"aDataSort\");\n\t\t\t}\n\n\t\t\t/* Cache the data get and set functions for speed */\n\t\t\tvar mDataSrc = oCol.mData;\n\t\t\tvar mData = _fnGetObjectDataFn(mDataSrc);\n\t\t\tvar mRender = oCol.mRender ? _fnGetObjectDataFn(oCol.mRender) : null;\n\n\t\t\tvar attrTest = function (src) {\n\t\t\t\treturn typeof src === 'string' && src.indexOf('@') !== -1;\n\t\t\t};\n\t\t\toCol._bAttrSrc = $.isPlainObject(mDataSrc) && (\n\t\t\t\tattrTest(mDataSrc.sort) || attrTest(mDataSrc.type) || attrTest(mDataSrc.filter)\n\t\t\t);\n\t\t\toCol._setter = null;\n\n\t\t\toCol.fnGetData = function (rowData, type, meta) {\n\t\t\t\tvar innerData = mData(rowData, type, undefined, meta);\n\n\t\t\t\treturn mRender && type ?\n\t\t\t\t\tmRender(innerData, type, rowData, meta) :\n\t\t\t\t\tinnerData;\n\t\t\t};\n\t\t\toCol.fnSetData = function (rowData, val, meta) {\n\t\t\t\treturn _fnSetObjectDataFn(mDataSrc)(rowData, val, meta);\n\t\t\t};\n\n\t\t\t// Indicate if DataTables should read DOM data as an object or array\n\t\t\t// Used in _fnGetRowElements\n\t\t\tif (typeof mDataSrc !== 'number') {\n\t\t\t\toSettings._rowReadObject = true;\n\t\t\t}\n\n\t\t\t/* Feature sorting overrides column specific when off */\n\t\t\tif (!oSettings.oFeatures.bSort) {\n\t\t\t\toCol.bSortable = false;\n\t\t\t\tth.addClass(oClasses.sSortableNone); // Have to add class here as order event isn't called\n\t\t\t}\n\n\t\t\t/* Check that the class assignment is correct for sorting */\n\t\t\tvar bAsc = $.inArray('asc', oCol.asSorting) !== -1;\n\t\t\tvar bDesc = $.inArray('desc', oCol.asSorting) !== -1;\n\t\t\tif (!oCol.bSortable || (!bAsc && !bDesc)) {\n\t\t\t\toCol.sSortingClass = oClasses.sSortableNone;\n\t\t\t\toCol.sSortingClassJUI = \"\";\n\t\t\t}\n\t\t\telse if (bAsc && !bDesc) {\n\t\t\t\toCol.sSortingClass = oClasses.sSortableAsc;\n\t\t\t\toCol.sSortingClassJUI = oClasses.sSortJUIAscAllowed;\n\t\t\t}\n\t\t\telse if (!bAsc && bDesc) {\n\t\t\t\toCol.sSortingClass = oClasses.sSortableDesc;\n\t\t\t\toCol.sSortingClassJUI = oClasses.sSortJUIDescAllowed;\n\t\t\t}\n\t\t\telse {\n\t\t\t\toCol.sSortingClass = oClasses.sSortable;\n\t\t\t\toCol.sSortingClassJUI = oClasses.sSortJUI;\n\t\t\t}\n\t\t}\n\n\n\t\t/**\n\t\t * Adjust the table column widths for new data. Note: you would probably want to\n\t\t * do a redraw after calling this function!\n\t\t *  @param {object} settings dataTables settings object\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnAdjustColumnSizing(settings) {\n\t\t\t/* Not interested in doing column width calculation if auto-width is disabled */\n\t\t\tif (settings.oFeatures.bAutoWidth !== false) {\n\t\t\t\tvar columns = settings.aoColumns;\n\n\t\t\t\t_fnCalculateColumnWidths(settings);\n\t\t\t\tfor (var i = 0, iLen = columns.length; i < iLen; i++) {\n\t\t\t\t\tcolumns[i].nTh.style.width = columns[i].sWidth;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar scroll = settings.oScroll;\n\t\t\tif (scroll.sY !== '' || scroll.sX !== '') {\n\t\t\t\t_fnScrollDraw(settings);\n\t\t\t}\n\n\t\t\t_fnCallbackFire(settings, null, 'column-sizing', [settings]);\n\t\t}\n\n\n\t\t/**\n\t\t * Covert the index of a visible column to the index in the data array (take account\n\t\t * of hidden columns)\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @param {int} iMatch Visible column index to lookup\n\t\t *  @returns {int} i the data index\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnVisibleToColumnIndex(oSettings, iMatch) {\n\t\t\tvar aiVis = _fnGetColumns(oSettings, 'bVisible');\n\n\t\t\treturn typeof aiVis[iMatch] === 'number' ?\n\t\t\t\taiVis[iMatch] :\n\t\t\t\tnull;\n\t\t}\n\n\n\t\t/**\n\t\t * Covert the index of an index in the data array and convert it to the visible\n\t\t *   column index (take account of hidden columns)\n\t\t *  @param {int} iMatch Column index to lookup\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @returns {int} i the data index\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnColumnIndexToVisible(oSettings, iMatch) {\n\t\t\tvar aiVis = _fnGetColumns(oSettings, 'bVisible');\n\t\t\tvar iPos = $.inArray(iMatch, aiVis);\n\n\t\t\treturn iPos !== -1 ? iPos : null;\n\t\t}\n\n\n\t\t/**\n\t\t * Get the number of visible columns\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @returns {int} i the number of visible columns\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnVisbleColumns(oSettings) {\n\t\t\tvar vis = 0;\n\n\t\t\t// No reduce in IE8, use a loop for now\n\t\t\t$.each(oSettings.aoColumns, function (i, col) {\n\t\t\t\tif (col.bVisible && $(col.nTh).css('display') !== 'none') {\n\t\t\t\t\tvis++;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn vis;\n\t\t}\n\n\n\t\t/**\n\t\t * Get an array of column indexes that match a given property\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @param {string} sParam Parameter in aoColumns to look for - typically\n\t\t *    bVisible or bSearchable\n\t\t *  @returns {array} Array of indexes with matched properties\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnGetColumns(oSettings, sParam) {\n\t\t\tvar a = [];\n\n\t\t\t$.map(oSettings.aoColumns, function (val, i) {\n\t\t\t\tif (val[sParam]) {\n\t\t\t\t\ta.push(i);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn a;\n\t\t}\n\n\n\t\t/**\n\t\t * Calculate the 'type' of a column\n\t\t *  @param {object} settings dataTables settings object\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnColumnTypes(settings) {\n\t\t\tvar columns = settings.aoColumns;\n\t\t\tvar data = settings.aoData;\n\t\t\tvar types = DataTable.ext.type.detect;\n\t\t\tvar i, ien, j, jen, k, ken;\n\t\t\tvar col, cell, detectedType, cache;\n\n\t\t\t// For each column, spin over the\n\t\t\tfor (i = 0, ien = columns.length; i < ien; i++) {\n\t\t\t\tcol = columns[i];\n\t\t\t\tcache = [];\n\n\t\t\t\tif (!col.sType && col._sManualType) {\n\t\t\t\t\tcol.sType = col._sManualType;\n\t\t\t\t}\n\t\t\t\telse if (!col.sType) {\n\t\t\t\t\tfor (j = 0, jen = types.length; j < jen; j++) {\n\t\t\t\t\t\tfor (k = 0, ken = data.length; k < ken; k++) {\n\t\t\t\t\t\t\t// Use a cache array so we only need to get the type data\n\t\t\t\t\t\t\t// from the formatter once (when using multiple detectors)\n\t\t\t\t\t\t\tif (cache[k] === undefined) {\n\t\t\t\t\t\t\t\tcache[k] = _fnGetCellData(settings, k, i, 'type');\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tdetectedType = types[j](cache[k], settings);\n\n\t\t\t\t\t\t\t// If null, then this type can't apply to this column, so\n\t\t\t\t\t\t\t// rather than testing all cells, break out. There is an\n\t\t\t\t\t\t\t// exception for the last type which is `html`. We need to\n\t\t\t\t\t\t\t// scan all rows since it is possible to mix string and HTML\n\t\t\t\t\t\t\t// types\n\t\t\t\t\t\t\tif (!detectedType && j !== types.length - 1) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Only a single match is needed for html type since it is\n\t\t\t\t\t\t\t// bottom of the pile and very similar to string\n\t\t\t\t\t\t\tif (detectedType === 'html') {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Type is valid for all data points in the column - use this\n\t\t\t\t\t\t// type\n\t\t\t\t\t\tif (detectedType) {\n\t\t\t\t\t\t\tcol.sType = detectedType;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Fall back - if no type was detected, always use string\n\t\t\t\t\tif (!col.sType) {\n\t\t\t\t\t\tcol.sType = 'string';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\t/**\n\t\t * Take the column definitions and static columns arrays and calculate how\n\t\t * they relate to column indexes. The callback function will then apply the\n\t\t * definition found for a column to a suitable configuration object.\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @param {array} aoColDefs The aoColumnDefs array that is to be applied\n\t\t *  @param {array} aoCols The aoColumns array that defines columns individually\n\t\t *  @param {function} fn Callback function - takes two parameters, the calculated\n\t\t *    column index and the definition for that column.\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnApplyColumnDefs(oSettings, aoColDefs, aoCols, fn) {\n\t\t\tvar i, iLen, j, jLen, k, kLen, def;\n\t\t\tvar columns = oSettings.aoColumns;\n\n\t\t\t// Column definitions with aTargets\n\t\t\tif (aoColDefs) {\n\t\t\t\t/* Loop over the definitions array - loop in reverse so first instance has priority */\n\t\t\t\tfor (i = aoColDefs.length - 1; i >= 0; i--) {\n\t\t\t\t\tdef = aoColDefs[i];\n\n\t\t\t\t\t/* Each definition can target multiple columns, as it is an array */\n\t\t\t\t\tvar aTargets = def.targets !== undefined ?\n\t\t\t\t\t\tdef.targets :\n\t\t\t\t\t\tdef.aTargets;\n\n\t\t\t\t\tif (!$.isArray(aTargets)) {\n\t\t\t\t\t\taTargets = [aTargets];\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (j = 0, jLen = aTargets.length; j < jLen; j++) {\n\t\t\t\t\t\tif (typeof aTargets[j] === 'number' && aTargets[j] >= 0) {\n\t\t\t\t\t\t\t/* Add columns that we don't yet know about */\n\t\t\t\t\t\t\twhile (columns.length <= aTargets[j]) {\n\t\t\t\t\t\t\t\t_fnAddColumn(oSettings);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t/* Integer, basic index */\n\t\t\t\t\t\t\tfn(aTargets[j], def);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (typeof aTargets[j] === 'number' && aTargets[j] < 0) {\n\t\t\t\t\t\t\t/* Negative integer, right to left column counting */\n\t\t\t\t\t\t\tfn(columns.length + aTargets[j], def);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (typeof aTargets[j] === 'string') {\n\t\t\t\t\t\t\t/* Class name matching on TH element */\n\t\t\t\t\t\t\tfor (k = 0, kLen = columns.length; k < kLen; k++) {\n\t\t\t\t\t\t\t\tif (aTargets[j] == \"_all\" ||\n\t\t\t\t\t\t\t\t\t$(columns[k].nTh).hasClass(aTargets[j])) {\n\t\t\t\t\t\t\t\t\tfn(k, def);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Statically defined columns array\n\t\t\tif (aoCols) {\n\t\t\t\tfor (i = 0, iLen = aoCols.length; i < iLen; i++) {\n\t\t\t\t\tfn(i, aoCols[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Add a data array to the table, creating DOM node etc. This is the parallel to\n\t\t * _fnGatherData, but for adding rows from a Javascript source, rather than a\n\t\t * DOM source.\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @param {array} aData data array to be added\n\t\t *  @param {node} [nTr] TR element to add to the table - optional. If not given,\n\t\t *    DataTables will create a row automatically\n\t\t *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\n\t\t *    if nTr is.\n\t\t *  @returns {int} >=0 if successful (index of new aoData entry), -1 if failed\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnAddData(oSettings, aDataIn, nTr, anTds) {\n\t\t\t/* Create the object for storing information about this new row */\n\t\t\tvar iRow = oSettings.aoData.length;\n\t\t\tvar oData = $.extend(true, {}, DataTable.models.oRow, {\n\t\t\t\tsrc: nTr ? 'dom' : 'data',\n\t\t\t\tidx: iRow\n\t\t\t});\n\n\t\t\toData._aData = aDataIn;\n\t\t\toSettings.aoData.push(oData);\n\n\t\t\t/* Create the cells */\n\t\t\tvar nTd, sThisType;\n\t\t\tvar columns = oSettings.aoColumns;\n\n\t\t\t// Invalidate the column types as the new data needs to be revalidated\n\t\t\tfor (var i = 0, iLen = columns.length; i < iLen; i++) {\n\t\t\t\tcolumns[i].sType = null;\n\t\t\t}\n\n\t\t\t/* Add to the display array */\n\t\t\toSettings.aiDisplayMaster.push(iRow);\n\n\t\t\tvar id = oSettings.rowIdFn(aDataIn);\n\t\t\tif (id !== undefined) {\n\t\t\t\toSettings.aIds[id] = oData;\n\t\t\t}\n\n\t\t\t/* Create the DOM information, or register it if already present */\n\t\t\tif (nTr || !oSettings.oFeatures.bDeferRender) {\n\t\t\t\t_fnCreateTr(oSettings, iRow, nTr, anTds);\n\t\t\t}\n\n\t\t\treturn iRow;\n\t\t}\n\n\n\t\t/**\n\t\t * Add one or more TR elements to the table. Generally we'd expect to\n\t\t * use this for reading data from a DOM sourced table, but it could be\n\t\t * used for an TR element. Note that if a TR is given, it is used (i.e.\n\t\t * it is not cloned).\n\t\t *  @param {object} settings dataTables settings object\n\t\t *  @param {array|node|jQuery} trs The TR element(s) to add to the table\n\t\t *  @returns {array} Array of indexes for the added rows\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnAddTr(settings, trs) {\n\t\t\tvar row;\n\n\t\t\t// Allow an individual node to be passed in\n\t\t\tif (!(trs instanceof $)) {\n\t\t\t\ttrs = $(trs);\n\t\t\t}\n\n\t\t\treturn trs.map(function (i, el) {\n\t\t\t\trow = _fnGetRowElements(settings, el);\n\t\t\t\treturn _fnAddData(settings, row.data, el, row.cells);\n\t\t\t});\n\t\t}\n\n\n\t\t/**\n\t\t * Take a TR element and convert it to an index in aoData\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @param {node} n the TR element to find\n\t\t *  @returns {int} index if the node is found, null if not\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnNodeToDataIndex(oSettings, n) {\n\t\t\treturn (n._DT_RowIndex !== undefined) ? n._DT_RowIndex : null;\n\t\t}\n\n\n\t\t/**\n\t\t * Take a TD element and convert it into a column data index (not the visible index)\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @param {int} iRow The row number the TD/TH can be found in\n\t\t *  @param {node} n The TD/TH element to find\n\t\t *  @returns {int} index if the node is found, -1 if not\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnNodeToColumnIndex(oSettings, iRow, n) {\n\t\t\treturn $.inArray(n, oSettings.aoData[iRow].anCells);\n\t\t}\n\n\n\t\t/**\n\t\t * Get the data for a given cell from the internal cache, taking into account data mapping\n\t\t *  @param {object} settings dataTables settings object\n\t\t *  @param {int} rowIdx aoData row id\n\t\t *  @param {int} colIdx Column index\n\t\t *  @param {string} type data get type ('display', 'type' 'filter' 'sort')\n\t\t *  @returns {*} Cell data\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnGetCellData(settings, rowIdx, colIdx, type) {\n\t\t\tvar draw = settings.iDraw;\n\t\t\tvar col = settings.aoColumns[colIdx];\n\t\t\tvar rowData = settings.aoData[rowIdx]._aData;\n\t\t\tvar defaultContent = col.sDefaultContent;\n\t\t\tvar cellData = col.fnGetData(rowData, type, {\n\t\t\t\tsettings: settings,\n\t\t\t\trow: rowIdx,\n\t\t\t\tcol: colIdx\n\t\t\t});\n\n\t\t\tif (cellData === undefined) {\n\t\t\t\tif (settings.iDrawError != draw && defaultContent === null) {\n\t\t\t\t\t_fnLog(settings, 0, \"Requested unknown parameter \" +\n\t\t\t\t\t\t(typeof col.mData == 'function' ? '{function}' : \"'\" + col.mData + \"'\") +\n\t\t\t\t\t\t\" for row \" + rowIdx + \", column \" + colIdx, 4);\n\t\t\t\t\tsettings.iDrawError = draw;\n\t\t\t\t}\n\t\t\t\treturn defaultContent;\n\t\t\t}\n\n\t\t\t// When the data source is null and a specific data type is requested (i.e.\n\t\t\t// not the original data), we can use default column data\n\t\t\tif ((cellData === rowData || cellData === null) && defaultContent !== null && type !== undefined) {\n\t\t\t\tcellData = defaultContent;\n\t\t\t}\n\t\t\telse if (typeof cellData === 'function') {\n\t\t\t\t// If the data source is a function, then we run it and use the return,\n\t\t\t\t// executing in the scope of the data object (for instances)\n\t\t\t\treturn cellData.call(rowData);\n\t\t\t}\n\n\t\t\tif (cellData === null && type == 'display') {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\treturn cellData;\n\t\t}\n\n\n\t\t/**\n\t\t * Set the value for a specific cell, into the internal data cache\n\t\t *  @param {object} settings dataTables settings object\n\t\t *  @param {int} rowIdx aoData row id\n\t\t *  @param {int} colIdx Column index\n\t\t *  @param {*} val Value to set\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnSetCellData(settings, rowIdx, colIdx, val) {\n\t\t\tvar col = settings.aoColumns[colIdx];\n\t\t\tvar rowData = settings.aoData[rowIdx]._aData;\n\n\t\t\tcol.fnSetData(rowData, val, {\n\t\t\t\tsettings: settings,\n\t\t\t\trow: rowIdx,\n\t\t\t\tcol: colIdx\n\t\t\t});\n\t\t}\n\n\n\t\t// Private variable that is used to match action syntax in the data property object\n\t\tvar __reArray = /\\[.*?\\]$/;\n\t\tvar __reFn = /\\(\\)$/;\n\n\t\t/**\n\t\t * Split string on periods, taking into account escaped periods\n\t\t * @param  {string} str String to split\n\t\t * @return {array} Split string\n\t\t */\n\t\tfunction _fnSplitObjNotation(str) {\n\t\t\treturn $.map(str.match(/(\\\\.|[^\\.])+/g) || [''], function (s) {\n\t\t\t\treturn s.replace(/\\\\\\./g, '.');\n\t\t\t});\n\t\t}\n\n\n\t\t/**\n\t\t * Return a function that can be used to get data from a source object, taking\n\t\t * into account the ability to use nested objects as a source\n\t\t *  @param {string|int|function} mSource The data source for the object\n\t\t *  @returns {function} Data get function\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnGetObjectDataFn(mSource) {\n\t\t\tif ($.isPlainObject(mSource)) {\n\t\t\t\t/* Build an object of get functions, and wrap them in a single call */\n\t\t\t\tvar o = {};\n\t\t\t\t$.each(mSource, function (key, val) {\n\t\t\t\t\tif (val) {\n\t\t\t\t\t\to[key] = _fnGetObjectDataFn(val);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn function (data, type, row, meta) {\n\t\t\t\t\tvar t = o[type] || o._;\n\t\t\t\t\treturn t !== undefined ?\n\t\t\t\t\t\tt(data, type, row, meta) :\n\t\t\t\t\t\tdata;\n\t\t\t\t};\n\t\t\t}\n\t\t\telse if (mSource === null) {\n\t\t\t\t/* Give an empty string for rendering / sorting etc */\n\t\t\t\treturn function (data) { // type, row and meta also passed, but not used\n\t\t\t\t\treturn data;\n\t\t\t\t};\n\t\t\t}\n\t\t\telse if (typeof mSource === 'function') {\n\t\t\t\treturn function (data, type, row, meta) {\n\t\t\t\t\treturn mSource(data, type, row, meta);\n\t\t\t\t};\n\t\t\t}\n\t\t\telse if (typeof mSource === 'string' && (mSource.indexOf('.') !== -1 ||\n\t\t\t\tmSource.indexOf('[') !== -1 || mSource.indexOf('(') !== -1)) {\n\t\t\t\t/* If there is a . in the source string then the data source is in a\n\t\t\t\t * nested object so we loop over the data for each level to get the next\n\t\t\t\t * level down. On each loop we test for undefined, and if found immediately\n\t\t\t\t * return. This allows entire objects to be missing and sDefaultContent to\n\t\t\t\t * be used if defined, rather than throwing an error\n\t\t\t\t */\n\t\t\t\tvar fetchData = function (data, type, src) {\n\t\t\t\t\tvar arrayNotation, funcNotation, out, innerSrc;\n\n\t\t\t\t\tif (src !== \"\") {\n\t\t\t\t\t\tvar a = _fnSplitObjNotation(src);\n\n\t\t\t\t\t\tfor (var i = 0, iLen = a.length; i < iLen; i++) {\n\t\t\t\t\t\t\t// Check if we are dealing with special notation\n\t\t\t\t\t\t\tarrayNotation = a[i].match(__reArray);\n\t\t\t\t\t\t\tfuncNotation = a[i].match(__reFn);\n\n\t\t\t\t\t\t\tif (arrayNotation) {\n\t\t\t\t\t\t\t\t// Array notation\n\t\t\t\t\t\t\t\ta[i] = a[i].replace(__reArray, '');\n\n\t\t\t\t\t\t\t\t// Condition allows simply [] to be passed in\n\t\t\t\t\t\t\t\tif (a[i] !== \"\") {\n\t\t\t\t\t\t\t\t\tdata = data[a[i]];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tout = [];\n\n\t\t\t\t\t\t\t\t// Get the remainder of the nested object to get\n\t\t\t\t\t\t\t\ta.splice(0, i + 1);\n\t\t\t\t\t\t\t\tinnerSrc = a.join('.');\n\n\t\t\t\t\t\t\t\t// Traverse each entry in the array getting the properties requested\n\t\t\t\t\t\t\t\tif ($.isArray(data)) {\n\t\t\t\t\t\t\t\t\tfor (var j = 0, jLen = data.length; j < jLen; j++) {\n\t\t\t\t\t\t\t\t\t\tout.push(fetchData(data[j], type, innerSrc));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// If a string is given in between the array notation indicators, that\n\t\t\t\t\t\t\t\t// is used to join the strings together, otherwise an array is returned\n\t\t\t\t\t\t\t\tvar join = arrayNotation[0].substring(1, arrayNotation[0].length - 1);\n\t\t\t\t\t\t\t\tdata = (join === \"\") ? out : out.join(join);\n\n\t\t\t\t\t\t\t\t// The inner call to fetchData has already traversed through the remainder\n\t\t\t\t\t\t\t\t// of the source requested, so we exit from the loop\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (funcNotation) {\n\t\t\t\t\t\t\t\t// Function call\n\t\t\t\t\t\t\t\ta[i] = a[i].replace(__reFn, '');\n\t\t\t\t\t\t\t\tdata = data[a[i]]();\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (data === null || data[a[i]] === undefined) {\n\t\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdata = data[a[i]];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn data;\n\t\t\t\t};\n\n\t\t\t\treturn function (data, type) { // row and meta also passed, but not used\n\t\t\t\t\treturn fetchData(data, type, mSource);\n\t\t\t\t};\n\t\t\t}\n\t\t\telse {\n\t\t\t\t/* Array or flat object mapping */\n\t\t\t\treturn function (data, type) { // row and meta also passed, but not used\n\t\t\t\t\treturn data[mSource];\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\n\t\t/**\n\t\t * Return a function that can be used to set data from a source object, taking\n\t\t * into account the ability to use nested objects as a source\n\t\t *  @param {string|int|function} mSource The data source for the object\n\t\t *  @returns {function} Data set function\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnSetObjectDataFn(mSource) {\n\t\t\tif ($.isPlainObject(mSource)) {\n\t\t\t\t/* Unlike get, only the underscore (global) option is used for for\n\t\t\t\t * setting data since we don't know the type here. This is why an object\n\t\t\t\t * option is not documented for `mData` (which is read/write), but it is\n\t\t\t\t * for `mRender` which is read only.\n\t\t\t\t */\n\t\t\t\treturn _fnSetObjectDataFn(mSource._);\n\t\t\t}\n\t\t\telse if (mSource === null) {\n\t\t\t\t/* Nothing to do when the data source is null */\n\t\t\t\treturn function () { };\n\t\t\t}\n\t\t\telse if (typeof mSource === 'function') {\n\t\t\t\treturn function (data, val, meta) {\n\t\t\t\t\tmSource(data, 'set', val, meta);\n\t\t\t\t};\n\t\t\t}\n\t\t\telse if (typeof mSource === 'string' && (mSource.indexOf('.') !== -1 ||\n\t\t\t\tmSource.indexOf('[') !== -1 || mSource.indexOf('(') !== -1)) {\n\t\t\t\t/* Like the get, we need to get data from a nested object */\n\t\t\t\tvar setData = function (data, val, src) {\n\t\t\t\t\tvar a = _fnSplitObjNotation(src), b;\n\t\t\t\t\tvar aLast = a[a.length - 1];\n\t\t\t\t\tvar arrayNotation, funcNotation, o, innerSrc;\n\n\t\t\t\t\tfor (var i = 0, iLen = a.length - 1; i < iLen; i++) {\n\t\t\t\t\t\t// Check if we are dealing with an array notation request\n\t\t\t\t\t\tarrayNotation = a[i].match(__reArray);\n\t\t\t\t\t\tfuncNotation = a[i].match(__reFn);\n\n\t\t\t\t\t\tif (arrayNotation) {\n\t\t\t\t\t\t\ta[i] = a[i].replace(__reArray, '');\n\t\t\t\t\t\t\tdata[a[i]] = [];\n\n\t\t\t\t\t\t\t// Get the remainder of the nested object to set so we can recurse\n\t\t\t\t\t\t\tb = a.slice();\n\t\t\t\t\t\t\tb.splice(0, i + 1);\n\t\t\t\t\t\t\tinnerSrc = b.join('.');\n\n\t\t\t\t\t\t\t// Traverse each entry in the array setting the properties requested\n\t\t\t\t\t\t\tif ($.isArray(val)) {\n\t\t\t\t\t\t\t\tfor (var j = 0, jLen = val.length; j < jLen; j++) {\n\t\t\t\t\t\t\t\t\to = {};\n\t\t\t\t\t\t\t\t\tsetData(o, val[j], innerSrc);\n\t\t\t\t\t\t\t\t\tdata[a[i]].push(o);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t// We've been asked to save data to an array, but it\n\t\t\t\t\t\t\t\t// isn't array data to be saved. Best that can be done\n\t\t\t\t\t\t\t\t// is to just save the value.\n\t\t\t\t\t\t\t\tdata[a[i]] = val;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// The inner call to setData has already traversed through the remainder\n\t\t\t\t\t\t\t// of the source and has set the data, thus we can exit here\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (funcNotation) {\n\t\t\t\t\t\t\t// Function call\n\t\t\t\t\t\t\ta[i] = a[i].replace(__reFn, '');\n\t\t\t\t\t\t\tdata = data[a[i]](val);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If the nested object doesn't currently exist - since we are\n\t\t\t\t\t\t// trying to set the value - create it\n\t\t\t\t\t\tif (data[a[i]] === null || data[a[i]] === undefined) {\n\t\t\t\t\t\t\tdata[a[i]] = {};\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdata = data[a[i]];\n\t\t\t\t\t}\n\n\t\t\t\t\t// Last item in the input - i.e, the actual set\n\t\t\t\t\tif (aLast.match(__reFn)) {\n\t\t\t\t\t\t// Function call\n\t\t\t\t\t\tdata = data[aLast.replace(__reFn, '')](val);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// If array notation is used, we just want to strip it and use the property name\n\t\t\t\t\t\t// and assign the value. If it isn't used, then we get the result we want anyway\n\t\t\t\t\t\tdata[aLast.replace(__reArray, '')] = val;\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\treturn function (data, val) { // meta is also passed in, but not used\n\t\t\t\t\treturn setData(data, val, mSource);\n\t\t\t\t};\n\t\t\t}\n\t\t\telse {\n\t\t\t\t/* Array or flat object mapping */\n\t\t\t\treturn function (data, val) { // meta is also passed in, but not used\n\t\t\t\t\tdata[mSource] = val;\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\n\t\t/**\n\t\t * Return an array with the full table data\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @returns array {array} aData Master data array\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnGetDataMaster(settings) {\n\t\t\treturn _pluck(settings.aoData, '_aData');\n\t\t}\n\n\n\t\t/**\n\t\t * Nuke the table\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnClearTable(settings) {\n\t\t\tsettings.aoData.length = 0;\n\t\t\tsettings.aiDisplayMaster.length = 0;\n\t\t\tsettings.aiDisplay.length = 0;\n\t\t\tsettings.aIds = {};\n\t\t}\n\n\n\t\t/**\n\t\t* Take an array of integers (index array) and remove a target integer (value - not\n\t\t* the key!)\n\t\t*  @param {array} a Index array to target\n\t\t*  @param {int} iTarget value to find\n\t\t*  @memberof DataTable#oApi\n\t\t*/\n\t\tfunction _fnDeleteIndex(a, iTarget, splice) {\n\t\t\tvar iTargetIndex = -1;\n\n\t\t\tfor (var i = 0, iLen = a.length; i < iLen; i++) {\n\t\t\t\tif (a[i] == iTarget) {\n\t\t\t\t\tiTargetIndex = i;\n\t\t\t\t}\n\t\t\t\telse if (a[i] > iTarget) {\n\t\t\t\t\ta[i]--;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (iTargetIndex != -1 && splice === undefined) {\n\t\t\t\ta.splice(iTargetIndex, 1);\n\t\t\t}\n\t\t}\n\n\n\t\t/**\n\t\t * Mark cached data as invalid such that a re-read of the data will occur when\n\t\t * the cached data is next requested. Also update from the data source object.\n\t\t *\n\t\t * @param {object} settings DataTables settings object\n\t\t * @param {int}    rowIdx   Row index to invalidate\n\t\t * @param {string} [src]    Source to invalidate from: undefined, 'auto', 'dom'\n\t\t *     or 'data'\n\t\t * @param {int}    [colIdx] Column index to invalidate. If undefined the whole\n\t\t *     row will be invalidated\n\t\t * @memberof DataTable#oApi\n\t\t *\n\t\t * @todo For the modularisation of v1.11 this will need to become a callback, so\n\t\t *   the sort and filter methods can subscribe to it. That will required\n\t\t *   initialisation options for sorting, which is why it is not already baked in\n\t\t */\n\t\tfunction _fnInvalidate(settings, rowIdx, src, colIdx) {\n\t\t\tvar row = settings.aoData[rowIdx];\n\t\t\tvar i, ien;\n\t\t\tvar cellWrite = function (cell, col) {\n\t\t\t\t// This is very frustrating, but in IE if you just write directly\n\t\t\t\t// to innerHTML, and elements that are overwritten are GC'ed,\n\t\t\t\t// even if there is a reference to them elsewhere\n\t\t\t\twhile (cell.childNodes.length) {\n\t\t\t\t\tcell.removeChild(cell.firstChild);\n\t\t\t\t}\n\n\t\t\t\tcell.innerHTML = _fnGetCellData(settings, rowIdx, col, 'display');\n\t\t\t};\n\n\t\t\t// Are we reading last data from DOM or the data object?\n\t\t\tif (src === 'dom' || ((!src || src === 'auto') && row.src === 'dom')) {\n\t\t\t\t// Read the data from the DOM\n\t\t\t\trow._aData = _fnGetRowElements(\n\t\t\t\t\tsettings, row, colIdx, colIdx === undefined ? undefined : row._aData\n\t\t\t\t)\n\t\t\t\t\t.data;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Reading from data object, update the DOM\n\t\t\t\tvar cells = row.anCells;\n\n\t\t\t\tif (cells) {\n\t\t\t\t\tif (colIdx !== undefined) {\n\t\t\t\t\t\tcellWrite(cells[colIdx], colIdx);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfor (i = 0, ien = cells.length; i < ien; i++) {\n\t\t\t\t\t\t\tcellWrite(cells[i], i);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// For both row and cell invalidation, the cached data for sorting and\n\t\t\t// filtering is nulled out\n\t\t\trow._aSortData = null;\n\t\t\trow._aFilterData = null;\n\n\t\t\t// Invalidate the type for a specific column (if given) or all columns since\n\t\t\t// the data might have changed\n\t\t\tvar cols = settings.aoColumns;\n\t\t\tif (colIdx !== undefined) {\n\t\t\t\tcols[colIdx].sType = null;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfor (i = 0, ien = cols.length; i < ien; i++) {\n\t\t\t\t\tcols[i].sType = null;\n\t\t\t\t}\n\n\t\t\t\t// Update DataTables special `DT_*` attributes for the row\n\t\t\t\t_fnRowAttributes(settings, row);\n\t\t\t}\n\t\t}\n\n\n\t\t/**\n\t\t * Build a data source object from an HTML row, reading the contents of the\n\t\t * cells that are in the row.\n\t\t *\n\t\t * @param {object} settings DataTables settings object\n\t\t * @param {node|object} TR element from which to read data or existing row\n\t\t *   object from which to re-read the data from the cells\n\t\t * @param {int} [colIdx] Optional column index\n\t\t * @param {array|object} [d] Data source object. If `colIdx` is given then this\n\t\t *   parameter should also be given and will be used to write the data into.\n\t\t *   Only the column in question will be written\n\t\t * @returns {object} Object with two parameters: `data` the data read, in\n\t\t *   document order, and `cells` and array of nodes (they can be useful to the\n\t\t *   caller, so rather than needing a second traversal to get them, just return\n\t\t *   them from here).\n\t\t * @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnGetRowElements(settings, row, colIdx, d) {\n\t\t\tvar\n\t\t\t\ttds = [],\n\t\t\t\ttd = row.firstChild,\n\t\t\t\tname, col, o, i = 0, contents,\n\t\t\t\tcolumns = settings.aoColumns,\n\t\t\t\tobjectRead = settings._rowReadObject;\n\n\t\t\t// Allow the data object to be passed in, or construct\n\t\t\td = d !== undefined ?\n\t\t\t\td :\n\t\t\t\tobjectRead ?\n\t\t\t\t\t{} :\n\t\t\t\t\t[];\n\n\t\t\tvar attr = function (str, td) {\n\t\t\t\tif (typeof str === 'string') {\n\t\t\t\t\tvar idx = str.indexOf('@');\n\n\t\t\t\t\tif (idx !== -1) {\n\t\t\t\t\t\tvar attr = str.substring(idx + 1);\n\t\t\t\t\t\tvar setter = _fnSetObjectDataFn(str);\n\t\t\t\t\t\tsetter(d, td.getAttribute(attr));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Read data from a cell and store into the data object\n\t\t\tvar cellProcess = function (cell) {\n\t\t\t\tif (colIdx === undefined || colIdx === i) {\n\t\t\t\t\tcol = columns[i];\n\t\t\t\t\tcontents = $.trim(cell.innerHTML);\n\n\t\t\t\t\tif (col && col._bAttrSrc) {\n\t\t\t\t\t\tvar setter = _fnSetObjectDataFn(col.mData._);\n\t\t\t\t\t\tsetter(d, contents);\n\n\t\t\t\t\t\tattr(col.mData.sort, cell);\n\t\t\t\t\t\tattr(col.mData.type, cell);\n\t\t\t\t\t\tattr(col.mData.filter, cell);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// Depending on the `data` option for the columns the data can\n\t\t\t\t\t\t// be read to either an object or an array.\n\t\t\t\t\t\tif (objectRead) {\n\t\t\t\t\t\t\tif (!col._setter) {\n\t\t\t\t\t\t\t\t// Cache the setter function\n\t\t\t\t\t\t\t\tcol._setter = _fnSetObjectDataFn(col.mData);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcol._setter(d, contents);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\td[i] = contents;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\ti++;\n\t\t\t};\n\n\t\t\tif (td) {\n\t\t\t\t// `tr` element was passed in\n\t\t\t\twhile (td) {\n\t\t\t\t\tname = td.nodeName.toUpperCase();\n\n\t\t\t\t\tif (name == \"TD\" || name == \"TH\") {\n\t\t\t\t\t\tcellProcess(td);\n\t\t\t\t\t\ttds.push(td);\n\t\t\t\t\t}\n\n\t\t\t\t\ttd = td.nextSibling;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Existing row object passed in\n\t\t\t\ttds = row.anCells;\n\n\t\t\t\tfor (var j = 0, jen = tds.length; j < jen; j++) {\n\t\t\t\t\tcellProcess(tds[j]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Read the ID from the DOM if present\n\t\t\tvar rowNode = row.firstChild ? row : row.nTr;\n\n\t\t\tif (rowNode) {\n\t\t\t\tvar id = rowNode.getAttribute('id');\n\n\t\t\t\tif (id) {\n\t\t\t\t\t_fnSetObjectDataFn(settings.rowId)(d, id);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdata: d,\n\t\t\t\tcells: tds\n\t\t\t};\n\t\t}\n\t\t/**\n\t\t * Create a new TR element (and it's TD children) for a row\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @param {int} iRow Row to consider\n\t\t *  @param {node} [nTrIn] TR element to add to the table - optional. If not given,\n\t\t *    DataTables will create a row automatically\n\t\t *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\n\t\t *    if nTr is.\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnCreateTr(oSettings, iRow, nTrIn, anTds) {\n\t\t\tvar\n\t\t\t\trow = oSettings.aoData[iRow],\n\t\t\t\trowData = row._aData,\n\t\t\t\tcells = [],\n\t\t\t\tnTr, nTd, oCol,\n\t\t\t\ti, iLen;\n\n\t\t\tif (row.nTr === null) {\n\t\t\t\tnTr = nTrIn || document.createElement('tr');\n\n\t\t\t\trow.nTr = nTr;\n\t\t\t\trow.anCells = cells;\n\n\t\t\t\t/* Use a private property on the node to allow reserve mapping from the node\n\t\t\t\t * to the aoData array for fast look up\n\t\t\t\t */\n\t\t\t\tnTr._DT_RowIndex = iRow;\n\n\t\t\t\t/* Special parameters can be given by the data source to be used on the row */\n\t\t\t\t_fnRowAttributes(oSettings, row);\n\n\t\t\t\t/* Process each column */\n\t\t\t\tfor (i = 0, iLen = oSettings.aoColumns.length; i < iLen; i++) {\n\t\t\t\t\toCol = oSettings.aoColumns[i];\n\n\t\t\t\t\tnTd = nTrIn ? anTds[i] : document.createElement(oCol.sCellType);\n\t\t\t\t\tnTd._DT_CellIndex = {\n\t\t\t\t\t\trow: iRow,\n\t\t\t\t\t\tcolumn: i\n\t\t\t\t\t};\n\n\t\t\t\t\tcells.push(nTd);\n\n\t\t\t\t\t// Need to create the HTML if new, or if a rendering function is defined\n\t\t\t\t\tif ((!nTrIn || oCol.mRender || oCol.mData !== i) &&\n\t\t\t\t\t\t(!$.isPlainObject(oCol.mData) || oCol.mData._ !== i + '.display')\n\t\t\t\t\t) {\n\t\t\t\t\t\tnTd.innerHTML = _fnGetCellData(oSettings, iRow, i, 'display');\n\t\t\t\t\t}\n\n\t\t\t\t\t/* Add user defined class */\n\t\t\t\t\tif (oCol.sClass) {\n\t\t\t\t\t\tnTd.className += ' ' + oCol.sClass;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Visibility - add or remove as required\n\t\t\t\t\tif (oCol.bVisible && !nTrIn) {\n\t\t\t\t\t\tnTr.appendChild(nTd);\n\t\t\t\t\t}\n\t\t\t\t\telse if (!oCol.bVisible && nTrIn) {\n\t\t\t\t\t\tnTd.parentNode.removeChild(nTd);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (oCol.fnCreatedCell) {\n\t\t\t\t\t\toCol.fnCreatedCell.call(oSettings.oInstance,\n\t\t\t\t\t\t\tnTd, _fnGetCellData(oSettings, iRow, i), rowData, iRow, i\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t_fnCallbackFire(oSettings, 'aoRowCreatedCallback', null, [nTr, rowData, iRow]);\n\t\t\t}\n\n\t\t\t// Remove once webkit bug 131819 and Chromium bug 365619 have been resolved\n\t\t\t// and deployed\n\t\t\trow.nTr.setAttribute('role', 'row');\n\t\t}\n\n\n\t\t/**\n\t\t * Add attributes to a row based on the special `DT_*` parameters in a data\n\t\t * source object.\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} DataTables row object for the row to be modified\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnRowAttributes(settings, row) {\n\t\t\tvar tr = row.nTr;\n\t\t\tvar data = row._aData;\n\n\t\t\tif (tr) {\n\t\t\t\tvar id = settings.rowIdFn(data);\n\n\t\t\t\tif (id) {\n\t\t\t\t\ttr.id = id;\n\t\t\t\t}\n\n\t\t\t\tif (data.DT_RowClass) {\n\t\t\t\t\t// Remove any classes added by DT_RowClass before\n\t\t\t\t\tvar a = data.DT_RowClass.split(' ');\n\t\t\t\t\trow.__rowc = row.__rowc ?\n\t\t\t\t\t\t_unique(row.__rowc.concat(a)) :\n\t\t\t\t\t\ta;\n\n\t\t\t\t\t$(tr)\n\t\t\t\t\t\t.removeClass(row.__rowc.join(' '))\n\t\t\t\t\t\t.addClass(data.DT_RowClass);\n\t\t\t\t}\n\n\t\t\t\tif (data.DT_RowAttr) {\n\t\t\t\t\t$(tr).attr(data.DT_RowAttr);\n\t\t\t\t}\n\n\t\t\t\tif (data.DT_RowData) {\n\t\t\t\t\t$(tr).data(data.DT_RowData);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\t/**\n\t\t * Create the HTML header for the table\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnBuildHead(oSettings) {\n\t\t\tvar i, ien, cell, row, column;\n\t\t\tvar thead = oSettings.nTHead;\n\t\t\tvar tfoot = oSettings.nTFoot;\n\t\t\tvar createHeader = $('th, td', thead).length === 0;\n\t\t\tvar classes = oSettings.oClasses;\n\t\t\tvar columns = oSettings.aoColumns;\n\n\t\t\tif (createHeader) {\n\t\t\t\trow = $('<tr/>').appendTo(thead);\n\t\t\t}\n\n\t\t\tfor (i = 0, ien = columns.length; i < ien; i++) {\n\t\t\t\tcolumn = columns[i];\n\t\t\t\tcell = $(column.nTh).addClass(column.sClass);\n\n\t\t\t\tif (createHeader) {\n\t\t\t\t\tcell.appendTo(row);\n\t\t\t\t}\n\n\t\t\t\t// 1.11 move into sorting\n\t\t\t\tif (oSettings.oFeatures.bSort) {\n\t\t\t\t\tcell.addClass(column.sSortingClass);\n\n\t\t\t\t\tif (column.bSortable !== false) {\n\t\t\t\t\t\tcell\n\t\t\t\t\t\t\t.attr('tabindex', oSettings.iTabIndex)\n\t\t\t\t\t\t\t.attr('aria-controls', oSettings.sTableId);\n\n\t\t\t\t\t\t_fnSortAttachListener(oSettings, column.nTh, i);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (column.sTitle != cell[0].innerHTML) {\n\t\t\t\t\tcell.html(column.sTitle);\n\t\t\t\t}\n\n\t\t\t\t_fnRenderer(oSettings, 'header')(\n\t\t\t\t\toSettings, cell, column, classes\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (createHeader) {\n\t\t\t\t_fnDetectHeader(oSettings.aoHeader, thead);\n\t\t\t}\n\n\t\t\t/* ARIA role for the rows */\n\t\t\t$(thead).find('>tr').attr('role', 'row');\n\n\t\t\t/* Deal with the footer - add classes if required */\n\t\t\t$(thead).find('>tr>th, >tr>td').addClass(classes.sHeaderTH);\n\t\t\t$(tfoot).find('>tr>th, >tr>td').addClass(classes.sFooterTH);\n\n\t\t\t// Cache the footer cells. Note that we only take the cells from the first\n\t\t\t// row in the footer. If there is more than one row the user wants to\n\t\t\t// interact with, they need to use the table().foot() method. Note also this\n\t\t\t// allows cells to be used for multiple columns using colspan\n\t\t\tif (tfoot !== null) {\n\t\t\t\tvar cells = oSettings.aoFooter[0];\n\n\t\t\t\tfor (i = 0, ien = cells.length; i < ien; i++) {\n\t\t\t\t\tcolumn = columns[i];\n\t\t\t\t\tcolumn.nTf = cells[i].cell;\n\n\t\t\t\t\tif (column.sClass) {\n\t\t\t\t\t\t$(column.nTf).addClass(column.sClass);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\t/**\n\t\t * Draw the header (or footer) element based on the column visibility states. The\n\t\t * methodology here is to use the layout array from _fnDetectHeader, modified for\n\t\t * the instantaneous column visibility, to construct the new layout. The grid is\n\t\t * traversed over cell at a time in a rows x columns grid fashion, although each\n\t\t * cell insert can cover multiple elements in the grid - which is tracks using the\n\t\t * aApplied array. Cell inserts in the grid will only occur where there isn't\n\t\t * already a cell in that position.\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @param array {objects} aoSource Layout array from _fnDetectHeader\n\t\t *  @param {boolean} [bIncludeHidden=false] If true then include the hidden columns in the calc,\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnDrawHead(oSettings, aoSource, bIncludeHidden) {\n\t\t\tvar i, iLen, j, jLen, k, kLen, n, nLocalTr;\n\t\t\tvar aoLocal = [];\n\t\t\tvar aApplied = [];\n\t\t\tvar iColumns = oSettings.aoColumns.length;\n\t\t\tvar iRowspan, iColspan;\n\n\t\t\tif (!aoSource) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (bIncludeHidden === undefined) {\n\t\t\t\tbIncludeHidden = false;\n\t\t\t}\n\n\t\t\t/* Make a copy of the master layout array, but without the visible columns in it */\n\t\t\tfor (i = 0, iLen = aoSource.length; i < iLen; i++) {\n\t\t\t\taoLocal[i] = aoSource[i].slice();\n\t\t\t\taoLocal[i].nTr = aoSource[i].nTr;\n\n\t\t\t\t/* Remove any columns which are currently hidden */\n\t\t\t\tfor (j = iColumns - 1; j >= 0; j--) {\n\t\t\t\t\tif (!oSettings.aoColumns[j].bVisible && !bIncludeHidden) {\n\t\t\t\t\t\taoLocal[i].splice(j, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/* Prep the applied array - it needs an element for each row */\n\t\t\t\taApplied.push([]);\n\t\t\t}\n\n\t\t\tfor (i = 0, iLen = aoLocal.length; i < iLen; i++) {\n\t\t\t\tnLocalTr = aoLocal[i].nTr;\n\n\t\t\t\t/* All cells are going to be replaced, so empty out the row */\n\t\t\t\tif (nLocalTr) {\n\t\t\t\t\twhile ((n = nLocalTr.firstChild)) {\n\t\t\t\t\t\tnLocalTr.removeChild(n);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (j = 0, jLen = aoLocal[i].length; j < jLen; j++) {\n\t\t\t\t\tiRowspan = 1;\n\t\t\t\t\tiColspan = 1;\n\n\t\t\t\t\t/* Check to see if there is already a cell (row/colspan) covering our target\n\t\t\t\t\t * insert point. If there is, then there is nothing to do.\n\t\t\t\t\t */\n\t\t\t\t\tif (aApplied[i][j] === undefined) {\n\t\t\t\t\t\tnLocalTr.appendChild(aoLocal[i][j].cell);\n\t\t\t\t\t\taApplied[i][j] = 1;\n\n\t\t\t\t\t\t/* Expand the cell to cover as many rows as needed */\n\t\t\t\t\t\twhile (aoLocal[i + iRowspan] !== undefined &&\n\t\t\t\t\t\t\taoLocal[i][j].cell == aoLocal[i + iRowspan][j].cell) {\n\t\t\t\t\t\t\taApplied[i + iRowspan][j] = 1;\n\t\t\t\t\t\t\tiRowspan++;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/* Expand the cell to cover as many columns as needed */\n\t\t\t\t\t\twhile (aoLocal[i][j + iColspan] !== undefined &&\n\t\t\t\t\t\t\taoLocal[i][j].cell == aoLocal[i][j + iColspan].cell) {\n\t\t\t\t\t\t\t/* Must update the applied array over the rows for the columns */\n\t\t\t\t\t\t\tfor (k = 0; k < iRowspan; k++) {\n\t\t\t\t\t\t\t\taApplied[i + k][j + iColspan] = 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tiColspan++;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/* Do the actual expansion in the DOM */\n\t\t\t\t\t\t$(aoLocal[i][j].cell)\n\t\t\t\t\t\t\t.attr('rowspan', iRowspan)\n\t\t\t\t\t\t\t.attr('colspan', iColspan);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\t/**\n\t\t * Insert the required TR nodes into the table for display\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnDraw(oSettings) {\n\t\t\t/* Provide a pre-callback function which can be used to cancel the draw is false is returned */\n\t\t\tvar aPreDraw = _fnCallbackFire(oSettings, 'aoPreDrawCallback', 'preDraw', [oSettings]);\n\t\t\tif ($.inArray(false, aPreDraw) !== -1) {\n\t\t\t\t_fnProcessingDisplay(oSettings, false);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar i, iLen, n;\n\t\t\tvar anRows = [];\n\t\t\tvar iRowCount = 0;\n\t\t\tvar asStripeClasses = oSettings.asStripeClasses;\n\t\t\tvar iStripes = asStripeClasses.length;\n\t\t\tvar iOpenRows = oSettings.aoOpenRows.length;\n\t\t\tvar oLang = oSettings.oLanguage;\n\t\t\tvar iInitDisplayStart = oSettings.iInitDisplayStart;\n\t\t\tvar bServerSide = _fnDataSource(oSettings) == 'ssp';\n\t\t\tvar aiDisplay = oSettings.aiDisplay;\n\n\t\t\toSettings.bDrawing = true;\n\n\t\t\t/* Check and see if we have an initial draw position from state saving */\n\t\t\tif (iInitDisplayStart !== undefined && iInitDisplayStart !== -1) {\n\t\t\t\toSettings._iDisplayStart = bServerSide ?\n\t\t\t\t\tiInitDisplayStart :\n\t\t\t\t\tiInitDisplayStart >= oSettings.fnRecordsDisplay() ?\n\t\t\t\t\t\t0 :\n\t\t\t\t\t\tiInitDisplayStart;\n\n\t\t\t\toSettings.iInitDisplayStart = -1;\n\t\t\t}\n\n\t\t\tvar iDisplayStart = oSettings._iDisplayStart;\n\t\t\tvar iDisplayEnd = oSettings.fnDisplayEnd();\n\n\t\t\t/* Server-side processing draw intercept */\n\t\t\tif (oSettings.bDeferLoading) {\n\t\t\t\toSettings.bDeferLoading = false;\n\t\t\t\toSettings.iDraw++;\n\t\t\t\t_fnProcessingDisplay(oSettings, false);\n\t\t\t}\n\t\t\telse if (!bServerSide) {\n\t\t\t\toSettings.iDraw++;\n\t\t\t}\n\t\t\telse if (!oSettings.bDestroying && !_fnAjaxUpdate(oSettings)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (aiDisplay.length !== 0) {\n\t\t\t\tvar iStart = bServerSide ? 0 : iDisplayStart;\n\t\t\t\tvar iEnd = bServerSide ? oSettings.aoData.length : iDisplayEnd;\n\n\t\t\t\tfor (var j = iStart; j < iEnd; j++) {\n\t\t\t\t\tvar iDataIndex = aiDisplay[j];\n\t\t\t\t\tvar aoData = oSettings.aoData[iDataIndex];\n\t\t\t\t\tif (aoData.nTr === null) {\n\t\t\t\t\t\t_fnCreateTr(oSettings, iDataIndex);\n\t\t\t\t\t}\n\n\t\t\t\t\tvar nRow = aoData.nTr;\n\n\t\t\t\t\t/* Remove the old striping classes and then add the new one */\n\t\t\t\t\tif (iStripes !== 0) {\n\t\t\t\t\t\tvar sStripe = asStripeClasses[iRowCount % iStripes];\n\t\t\t\t\t\tif (aoData._sRowStripe != sStripe) {\n\t\t\t\t\t\t\t$(nRow).removeClass(aoData._sRowStripe).addClass(sStripe);\n\t\t\t\t\t\t\taoData._sRowStripe = sStripe;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Row callback functions - might want to manipulate the row\n\t\t\t\t\t// iRowCount and j are not currently documented. Are they at all\n\t\t\t\t\t// useful?\n\t\t\t\t\t_fnCallbackFire(oSettings, 'aoRowCallback', null,\n\t\t\t\t\t\t[nRow, aoData._aData, iRowCount, j]);\n\n\t\t\t\t\tanRows.push(nRow);\n\t\t\t\t\tiRowCount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t/* Table is empty - create a row with an empty message in it */\n\t\t\t\tvar sZero = oLang.sZeroRecords;\n\t\t\t\tif (oSettings.iDraw == 1 && _fnDataSource(oSettings) == 'ajax') {\n\t\t\t\t\tsZero = oLang.sLoadingRecords;\n\t\t\t\t}\n\t\t\t\telse if (oLang.sEmptyTable && oSettings.fnRecordsTotal() === 0) {\n\t\t\t\t\tsZero = oLang.sEmptyTable;\n\t\t\t\t}\n\n\t\t\t\tanRows[0] = $('<tr/>', { 'class': iStripes ? asStripeClasses[0] : '' })\n\t\t\t\t\t.append($('<td />', {\n\t\t\t\t\t\t'valign': 'top',\n\t\t\t\t\t\t'colSpan': _fnVisbleColumns(oSettings),\n\t\t\t\t\t\t'class': oSettings.oClasses.sRowEmpty\n\t\t\t\t\t}).html(sZero))[0];\n\t\t\t}\n\n\t\t\t/* Header and footer callbacks */\n\t\t\t_fnCallbackFire(oSettings, 'aoHeaderCallback', 'header', [$(oSettings.nTHead).children('tr')[0],\n\t\t\t_fnGetDataMaster(oSettings), iDisplayStart, iDisplayEnd, aiDisplay]);\n\n\t\t\t_fnCallbackFire(oSettings, 'aoFooterCallback', 'footer', [$(oSettings.nTFoot).children('tr')[0],\n\t\t\t_fnGetDataMaster(oSettings), iDisplayStart, iDisplayEnd, aiDisplay]);\n\n\t\t\tvar body = $(oSettings.nTBody);\n\n\t\t\tbody.children().detach();\n\t\t\tbody.append($(anRows));\n\n\t\t\t/* Call all required callback functions for the end of a draw */\n\t\t\t_fnCallbackFire(oSettings, 'aoDrawCallback', 'draw', [oSettings]);\n\n\t\t\t/* Draw is complete, sorting and filtering must be as well */\n\t\t\toSettings.bSorted = false;\n\t\t\toSettings.bFiltered = false;\n\t\t\toSettings.bDrawing = false;\n\t\t}\n\n\n\t\t/**\n\t\t * Redraw the table - taking account of the various features which are enabled\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @param {boolean} [holdPosition] Keep the current paging position. By default\n\t\t *    the paging is reset to the first page\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnReDraw(settings, holdPosition) {\n\t\t\tvar\n\t\t\t\tfeatures = settings.oFeatures,\n\t\t\t\tsort = features.bSort,\n\t\t\t\tfilter = features.bFilter;\n\n\t\t\tif (sort) {\n\t\t\t\t_fnSort(settings);\n\t\t\t}\n\n\t\t\tif (filter) {\n\t\t\t\t_fnFilterComplete(settings, settings.oPreviousSearch);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// No filtering, so we want to just use the display master\n\t\t\t\tsettings.aiDisplay = settings.aiDisplayMaster.slice();\n\t\t\t}\n\n\t\t\tif (holdPosition !== true) {\n\t\t\t\tsettings._iDisplayStart = 0;\n\t\t\t}\n\n\t\t\t// Let any modules know about the draw hold position state (used by\n\t\t\t// scrolling internally)\n\t\t\tsettings._drawHold = holdPosition;\n\n\t\t\t_fnDraw(settings);\n\n\t\t\tsettings._drawHold = false;\n\t\t}\n\n\n\t\t/**\n\t\t * Add the options to the page HTML for the table\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnAddOptionsHtml(oSettings) {\n\t\t\tvar classes = oSettings.oClasses;\n\t\t\tvar table = $(oSettings.nTable);\n\t\t\tvar holding = $('<div/>').insertBefore(table); // Holding element for speed\n\t\t\tvar features = oSettings.oFeatures;\n\n\t\t\t// All DataTables are wrapped in a div\n\t\t\tvar insert = $('<div/>', {\n\t\t\t\tid: oSettings.sTableId + '_wrapper',\n\t\t\t\t'class': classes.sWrapper + (oSettings.nTFoot ? '' : ' ' + classes.sNoFooter)\n\t\t\t});\n\n\t\t\toSettings.nHolding = holding[0];\n\t\t\toSettings.nTableWrapper = insert[0];\n\t\t\toSettings.nTableReinsertBefore = oSettings.nTable.nextSibling;\n\n\t\t\t/* Loop over the user set positioning and place the elements as needed */\n\t\t\tvar aDom = oSettings.sDom.split('');\n\t\t\tvar featureNode, cOption, nNewNode, cNext, sAttr, j;\n\t\t\tfor (var i = 0; i < aDom.length; i++) {\n\t\t\t\tfeatureNode = null;\n\t\t\t\tcOption = aDom[i];\n\n\t\t\t\tif (cOption == '<') {\n\t\t\t\t\t/* New container div */\n\t\t\t\t\tnNewNode = $('<div/>')[0];\n\n\t\t\t\t\t/* Check to see if we should append an id and/or a class name to the container */\n\t\t\t\t\tcNext = aDom[i + 1];\n\t\t\t\t\tif (cNext == \"'\" || cNext == '\"') {\n\t\t\t\t\t\tsAttr = \"\";\n\t\t\t\t\t\tj = 2;\n\t\t\t\t\t\twhile (aDom[i + j] != cNext) {\n\t\t\t\t\t\t\tsAttr += aDom[i + j];\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/* Replace jQuery UI constants @todo depreciated */\n\t\t\t\t\t\tif (sAttr == \"H\") {\n\t\t\t\t\t\t\tsAttr = classes.sJUIHeader;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (sAttr == \"F\") {\n\t\t\t\t\t\t\tsAttr = classes.sJUIFooter;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/* The attribute can be in the format of \"#id.class\", \"#id\" or \"class\" This logic\n\t\t\t\t\t\t * breaks the string into parts and applies them as needed\n\t\t\t\t\t\t */\n\t\t\t\t\t\tif (sAttr.indexOf('.') != -1) {\n\t\t\t\t\t\t\tvar aSplit = sAttr.split('.');\n\t\t\t\t\t\t\tnNewNode.id = aSplit[0].substr(1, aSplit[0].length - 1);\n\t\t\t\t\t\t\tnNewNode.className = aSplit[1];\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (sAttr.charAt(0) == \"#\") {\n\t\t\t\t\t\t\tnNewNode.id = sAttr.substr(1, sAttr.length - 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tnNewNode.className = sAttr;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ti += j; /* Move along the position array */\n\t\t\t\t\t}\n\n\t\t\t\t\tinsert.append(nNewNode);\n\t\t\t\t\tinsert = $(nNewNode);\n\t\t\t\t}\n\t\t\t\telse if (cOption == '>') {\n\t\t\t\t\t/* End container div */\n\t\t\t\t\tinsert = insert.parent();\n\t\t\t\t}\n\t\t\t\t// @todo Move options into their own plugins?\n\t\t\t\telse if (cOption == 'l' && features.bPaginate && features.bLengthChange) {\n\t\t\t\t\t/* Length */\n\t\t\t\t\tfeatureNode = _fnFeatureHtmlLength(oSettings);\n\t\t\t\t}\n\t\t\t\telse if (cOption == 'f' && features.bFilter) {\n\t\t\t\t\t/* Filter */\n\t\t\t\t\tfeatureNode = _fnFeatureHtmlFilter(oSettings);\n\t\t\t\t}\n\t\t\t\telse if (cOption == 'r' && features.bProcessing) {\n\t\t\t\t\t/* pRocessing */\n\t\t\t\t\tfeatureNode = _fnFeatureHtmlProcessing(oSettings);\n\t\t\t\t}\n\t\t\t\telse if (cOption == 't') {\n\t\t\t\t\t/* Table */\n\t\t\t\t\tfeatureNode = _fnFeatureHtmlTable(oSettings);\n\t\t\t\t}\n\t\t\t\telse if (cOption == 'i' && features.bInfo) {\n\t\t\t\t\t/* Info */\n\t\t\t\t\tfeatureNode = _fnFeatureHtmlInfo(oSettings);\n\t\t\t\t}\n\t\t\t\telse if (cOption == 'p' && features.bPaginate) {\n\t\t\t\t\t/* Pagination */\n\t\t\t\t\tfeatureNode = _fnFeatureHtmlPaginate(oSettings);\n\t\t\t\t}\n\t\t\t\telse if (DataTable.ext.feature.length !== 0) {\n\t\t\t\t\t/* Plug-in features */\n\t\t\t\t\tvar aoFeatures = DataTable.ext.feature;\n\t\t\t\t\tfor (var k = 0, kLen = aoFeatures.length; k < kLen; k++) {\n\t\t\t\t\t\tif (cOption == aoFeatures[k].cFeature) {\n\t\t\t\t\t\t\tfeatureNode = aoFeatures[k].fnInit(oSettings);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/* Add to the 2D features array */\n\t\t\t\tif (featureNode) {\n\t\t\t\t\tvar aanFeatures = oSettings.aanFeatures;\n\n\t\t\t\t\tif (!aanFeatures[cOption]) {\n\t\t\t\t\t\taanFeatures[cOption] = [];\n\t\t\t\t\t}\n\n\t\t\t\t\taanFeatures[cOption].push(featureNode);\n\t\t\t\t\tinsert.append(featureNode);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/* Built our DOM structure - replace the holding div with what we want */\n\t\t\tholding.replaceWith(insert);\n\t\t\toSettings.nHolding = null;\n\t\t}\n\n\n\t\t/**\n\t\t * Use the DOM source to create up an array of header cells. The idea here is to\n\t\t * create a layout grid (array) of rows x columns, which contains a reference\n\t\t * to the cell that that point in the grid (regardless of col/rowspan), such that\n\t\t * any column / row could be removed and the new grid constructed\n\t\t *  @param array {object} aLayout Array to store the calculated layout in\n\t\t *  @param {node} nThead The header/footer element for the table\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnDetectHeader(aLayout, nThead) {\n\t\t\tvar nTrs = $(nThead).children('tr');\n\t\t\tvar nTr, nCell;\n\t\t\tvar i, k, l, iLen, jLen, iColShifted, iColumn, iColspan, iRowspan;\n\t\t\tvar bUnique;\n\t\t\tvar fnShiftCol = function (a, i, j) {\n\t\t\t\tvar k = a[i];\n\t\t\t\twhile (k[j]) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\treturn j;\n\t\t\t};\n\n\t\t\taLayout.splice(0, aLayout.length);\n\n\t\t\t/* We know how many rows there are in the layout - so prep it */\n\t\t\tfor (i = 0, iLen = nTrs.length; i < iLen; i++) {\n\t\t\t\taLayout.push([]);\n\t\t\t}\n\n\t\t\t/* Calculate a layout array */\n\t\t\tfor (i = 0, iLen = nTrs.length; i < iLen; i++) {\n\t\t\t\tnTr = nTrs[i];\n\t\t\t\tiColumn = 0;\n\n\t\t\t\t/* For every cell in the row... */\n\t\t\t\tnCell = nTr.firstChild;\n\t\t\t\twhile (nCell) {\n\t\t\t\t\tif (nCell.nodeName.toUpperCase() == \"TD\" ||\n\t\t\t\t\t\tnCell.nodeName.toUpperCase() == \"TH\") {\n\t\t\t\t\t\t/* Get the col and rowspan attributes from the DOM and sanitise them */\n\t\t\t\t\t\tiColspan = nCell.getAttribute('colspan') * 1;\n\t\t\t\t\t\tiRowspan = nCell.getAttribute('rowspan') * 1;\n\t\t\t\t\t\tiColspan = (!iColspan || iColspan === 0 || iColspan === 1) ? 1 : iColspan;\n\t\t\t\t\t\tiRowspan = (!iRowspan || iRowspan === 0 || iRowspan === 1) ? 1 : iRowspan;\n\n\t\t\t\t\t\t/* There might be colspan cells already in this row, so shift our target\n\t\t\t\t\t\t * accordingly\n\t\t\t\t\t\t */\n\t\t\t\t\t\tiColShifted = fnShiftCol(aLayout, i, iColumn);\n\n\t\t\t\t\t\t/* Cache calculation for unique columns */\n\t\t\t\t\t\tbUnique = iColspan === 1 ? true : false;\n\n\t\t\t\t\t\t/* If there is col / rowspan, copy the information into the layout grid */\n\t\t\t\t\t\tfor (l = 0; l < iColspan; l++) {\n\t\t\t\t\t\t\tfor (k = 0; k < iRowspan; k++) {\n\t\t\t\t\t\t\t\taLayout[i + k][iColShifted + l] = {\n\t\t\t\t\t\t\t\t\t\"cell\": nCell,\n\t\t\t\t\t\t\t\t\t\"unique\": bUnique\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\taLayout[i + k].nTr = nTr;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tnCell = nCell.nextSibling;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\t/**\n\t\t * Get an array of unique th elements, one for each column\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @param {node} nHeader automatically detect the layout from this node - optional\n\t\t *  @param {array} aLayout thead/tfoot layout from _fnDetectHeader - optional\n\t\t *  @returns array {node} aReturn list of unique th's\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnGetUniqueThs(oSettings, nHeader, aLayout) {\n\t\t\tvar aReturn = [];\n\t\t\tif (!aLayout) {\n\t\t\t\taLayout = oSettings.aoHeader;\n\t\t\t\tif (nHeader) {\n\t\t\t\t\taLayout = [];\n\t\t\t\t\t_fnDetectHeader(aLayout, nHeader);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (var i = 0, iLen = aLayout.length; i < iLen; i++) {\n\t\t\t\tfor (var j = 0, jLen = aLayout[i].length; j < jLen; j++) {\n\t\t\t\t\tif (aLayout[i][j].unique &&\n\t\t\t\t\t\t(!aReturn[j] || !oSettings.bSortCellsTop)) {\n\t\t\t\t\t\taReturn[j] = aLayout[i][j].cell;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn aReturn;\n\t\t}\n\n\t\t/**\n\t\t * Create an Ajax call based on the table's settings, taking into account that\n\t\t * parameters can have multiple forms, and backwards compatibility.\n\t\t *\n\t\t * @param {object} oSettings dataTables settings object\n\t\t * @param {array} data Data to send to the server, required by\n\t\t *     DataTables - may be augmented by developer callbacks\n\t\t * @param {function} fn Callback function to run when data is obtained\n\t\t */\n\t\tfunction _fnBuildAjax(oSettings, data, fn) {\n\t\t\t// Compatibility with 1.9-, allow fnServerData and event to manipulate\n\t\t\t_fnCallbackFire(oSettings, 'aoServerParams', 'serverParams', [data]);\n\n\t\t\t// Convert to object based for 1.10+ if using the old array scheme which can\n\t\t\t// come from server-side processing or serverParams\n\t\t\tif (data && $.isArray(data)) {\n\t\t\t\tvar tmp = {};\n\t\t\t\tvar rbracket = /(.*?)\\[\\]$/;\n\n\t\t\t\t$.each(data, function (key, val) {\n\t\t\t\t\tvar match = val.name.match(rbracket);\n\n\t\t\t\t\tif (match) {\n\t\t\t\t\t\t// Support for arrays\n\t\t\t\t\t\tvar name = match[0];\n\n\t\t\t\t\t\tif (!tmp[name]) {\n\t\t\t\t\t\t\ttmp[name] = [];\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttmp[name].push(val.value);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttmp[val.name] = val.value;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tdata = tmp;\n\t\t\t}\n\n\t\t\tvar ajaxData;\n\t\t\tvar ajax = oSettings.ajax;\n\t\t\tvar instance = oSettings.oInstance;\n\t\t\tvar callback = function (json) {\n\t\t\t\t_fnCallbackFire(oSettings, null, 'xhr', [oSettings, json, oSettings.jqXHR]);\n\t\t\t\tfn(json);\n\t\t\t};\n\n\t\t\tif ($.isPlainObject(ajax) && ajax.data) {\n\t\t\t\tajaxData = ajax.data;\n\n\t\t\t\tvar newData = $.isFunction(ajaxData) ?\n\t\t\t\t\tajaxData(data, oSettings) :  // fn can manipulate data or return\n\t\t\t\t\tajaxData;                      // an object object or array to merge\n\n\t\t\t\t// If the function returned something, use that alone\n\t\t\t\tdata = $.isFunction(ajaxData) && newData ?\n\t\t\t\t\tnewData :\n\t\t\t\t\t$.extend(true, data, newData);\n\n\t\t\t\t// Remove the data property as we've resolved it already and don't want\n\t\t\t\t// jQuery to do it again (it is restored at the end of the function)\n\t\t\t\tdelete ajax.data;\n\t\t\t}\n\n\t\t\tvar baseAjax = {\n\t\t\t\t\"data\": data,\n\t\t\t\t\"success\": function (json) {\n\t\t\t\t\tvar error = json.error || json.sError;\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\t_fnLog(oSettings, 0, error);\n\t\t\t\t\t}\n\n\t\t\t\t\toSettings.json = json;\n\t\t\t\t\tcallback(json);\n\t\t\t\t},\n\t\t\t\t\"dataType\": \"json\",\n\t\t\t\t\"cache\": false,\n\t\t\t\t\"type\": oSettings.sServerMethod,\n\t\t\t\t\"error\": function (xhr, error, thrown) {\n\t\t\t\t\tvar ret = _fnCallbackFire(oSettings, null, 'xhr', [oSettings, null, oSettings.jqXHR]);\n\n\t\t\t\t\tif ($.inArray(true, ret) === -1) {\n\t\t\t\t\t\tif (error == \"parsererror\") {\n\t\t\t\t\t\t\t_fnLog(oSettings, 0, 'Invalid JSON response', 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (xhr.readyState === 4) {\n\t\t\t\t\t\t\t_fnLog(oSettings, 0, 'Ajax error', 7);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t_fnProcessingDisplay(oSettings, false);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Store the data submitted for the API\n\t\t\toSettings.oAjaxData = data;\n\n\t\t\t// Allow plug-ins and external processes to modify the data\n\t\t\t_fnCallbackFire(oSettings, null, 'preXhr', [oSettings, data]);\n\n\t\t\tif (oSettings.fnServerData) {\n\t\t\t\t// DataTables 1.9- compatibility\n\t\t\t\toSettings.fnServerData.call(instance,\n\t\t\t\t\toSettings.sAjaxSource,\n\t\t\t\t\t$.map(data, function (val, key) { // Need to convert back to 1.9 trad format\n\t\t\t\t\t\treturn { name: key, value: val };\n\t\t\t\t\t}),\n\t\t\t\t\tcallback,\n\t\t\t\t\toSettings\n\t\t\t\t);\n\t\t\t}\n\t\t\telse if (oSettings.sAjaxSource || typeof ajax === 'string') {\n\t\t\t\t// DataTables 1.9- compatibility\n\t\t\t\toSettings.jqXHR = $.ajax($.extend(baseAjax, {\n\t\t\t\t\turl: ajax || oSettings.sAjaxSource\n\t\t\t\t}));\n\t\t\t}\n\t\t\telse if ($.isFunction(ajax)) {\n\t\t\t\t// Is a function - let the caller define what needs to be done\n\t\t\t\toSettings.jqXHR = ajax.call(instance, data, callback, oSettings);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Object to extend the base settings\n\t\t\t\toSettings.jqXHR = $.ajax($.extend(baseAjax, ajax));\n\n\t\t\t\t// Restore for next time around\n\t\t\t\tajax.data = ajaxData;\n\t\t\t}\n\t\t}\n\n\n\t\t/**\n\t\t * Update the table using an Ajax call\n\t\t *  @param {object} settings dataTables settings object\n\t\t *  @returns {boolean} Block the table drawing or not\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnAjaxUpdate(settings) {\n\t\t\tif (settings.bAjaxDataGet) {\n\t\t\t\tsettings.iDraw++;\n\t\t\t\t_fnProcessingDisplay(settings, true);\n\n\t\t\t\t_fnBuildAjax(\n\t\t\t\t\tsettings,\n\t\t\t\t\t_fnAjaxParameters(settings),\n\t\t\t\t\tfunction (json) {\n\t\t\t\t\t\t_fnAjaxUpdateDraw(settings, json);\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\n\t\t/**\n\t\t * Build up the parameters in an object needed for a server-side processing\n\t\t * request. Note that this is basically done twice, is different ways - a modern\n\t\t * method which is used by default in DataTables 1.10 which uses objects and\n\t\t * arrays, or the 1.9- method with is name / value pairs. 1.9 method is used if\n\t\t * the sAjaxSource option is used in the initialisation, or the legacyAjax\n\t\t * option is set.\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @returns {bool} block the table drawing or not\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnAjaxParameters(settings) {\n\t\t\tvar\n\t\t\t\tcolumns = settings.aoColumns,\n\t\t\t\tcolumnCount = columns.length,\n\t\t\t\tfeatures = settings.oFeatures,\n\t\t\t\tpreSearch = settings.oPreviousSearch,\n\t\t\t\tpreColSearch = settings.aoPreSearchCols,\n\t\t\t\ti, data = [], dataProp, column, columnSearch,\n\t\t\t\tsort = _fnSortFlatten(settings),\n\t\t\t\tdisplayStart = settings._iDisplayStart,\n\t\t\t\tdisplayLength = features.bPaginate !== false ?\n\t\t\t\t\tsettings._iDisplayLength :\n\t\t\t\t\t-1;\n\n\t\t\tvar param = function (name, value) {\n\t\t\t\tdata.push({ 'name': name, 'value': value });\n\t\t\t};\n\n\t\t\t// DataTables 1.9- compatible method\n\t\t\tparam('sEcho', settings.iDraw);\n\t\t\tparam('iColumns', columnCount);\n\t\t\tparam('sColumns', _pluck(columns, 'sName').join(','));\n\t\t\tparam('iDisplayStart', displayStart);\n\t\t\tparam('iDisplayLength', displayLength);\n\n\t\t\t// DataTables 1.10+ method\n\t\t\tvar d = {\n\t\t\t\tdraw: settings.iDraw,\n\t\t\t\tcolumns: [],\n\t\t\t\torder: [],\n\t\t\t\tstart: displayStart,\n\t\t\t\tlength: displayLength,\n\t\t\t\tsearch: {\n\t\t\t\t\tvalue: preSearch.sSearch,\n\t\t\t\t\tregex: preSearch.bRegex\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfor (i = 0; i < columnCount; i++) {\n\t\t\t\tcolumn = columns[i];\n\t\t\t\tcolumnSearch = preColSearch[i];\n\t\t\t\tdataProp = typeof column.mData == \"function\" ? 'function' : column.mData;\n\n\t\t\t\td.columns.push({\n\t\t\t\t\tdata: dataProp,\n\t\t\t\t\tname: column.sName,\n\t\t\t\t\tsearchable: column.bSearchable,\n\t\t\t\t\torderable: column.bSortable,\n\t\t\t\t\tsearch: {\n\t\t\t\t\t\tvalue: columnSearch.sSearch,\n\t\t\t\t\t\tregex: columnSearch.bRegex\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tparam(\"mDataProp_\" + i, dataProp);\n\n\t\t\t\tif (features.bFilter) {\n\t\t\t\t\tparam('sSearch_' + i, columnSearch.sSearch);\n\t\t\t\t\tparam('bRegex_' + i, columnSearch.bRegex);\n\t\t\t\t\tparam('bSearchable_' + i, column.bSearchable);\n\t\t\t\t}\n\n\t\t\t\tif (features.bSort) {\n\t\t\t\t\tparam('bSortable_' + i, column.bSortable);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (features.bFilter) {\n\t\t\t\tparam('sSearch', preSearch.sSearch);\n\t\t\t\tparam('bRegex', preSearch.bRegex);\n\t\t\t}\n\n\t\t\tif (features.bSort) {\n\t\t\t\t$.each(sort, function (i, val) {\n\t\t\t\t\td.order.push({ column: val.col, dir: val.dir });\n\n\t\t\t\t\tparam('iSortCol_' + i, val.col);\n\t\t\t\t\tparam('sSortDir_' + i, val.dir);\n\t\t\t\t});\n\n\t\t\t\tparam('iSortingCols', sort.length);\n\t\t\t}\n\n\t\t\t// If the legacy.ajax parameter is null, then we automatically decide which\n\t\t\t// form to use, based on sAjaxSource\n\t\t\tvar legacy = DataTable.ext.legacy.ajax;\n\t\t\tif (legacy === null) {\n\t\t\t\treturn settings.sAjaxSource ? data : d;\n\t\t\t}\n\n\t\t\t// Otherwise, if legacy has been specified then we use that to decide on the\n\t\t\t// form\n\t\t\treturn legacy ? data : d;\n\t\t}\n\n\n\t\t/**\n\t\t * Data the data from the server (nuking the old) and redraw the table\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @param {object} json json data return from the server.\n\t\t *  @param {string} json.sEcho Tracking flag for DataTables to match requests\n\t\t *  @param {int} json.iTotalRecords Number of records in the data set, not accounting for filtering\n\t\t *  @param {int} json.iTotalDisplayRecords Number of records in the data set, accounting for filtering\n\t\t *  @param {array} json.aaData The data to display on this page\n\t\t *  @param {string} [json.sColumns] Column ordering (sName, comma separated)\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnAjaxUpdateDraw(settings, json) {\n\t\t\t// v1.10 uses camelCase variables, while 1.9 uses Hungarian notation.\n\t\t\t// Support both\n\t\t\tvar compat = function (old, modern) {\n\t\t\t\treturn json[old] !== undefined ? json[old] : json[modern];\n\t\t\t};\n\n\t\t\tvar data = _fnAjaxDataSrc(settings, json);\n\t\t\tvar draw = compat('sEcho', 'draw');\n\t\t\tvar recordsTotal = compat('iTotalRecords', 'recordsTotal');\n\t\t\tvar recordsFiltered = compat('iTotalDisplayRecords', 'recordsFiltered');\n\n\t\t\tif (draw) {\n\t\t\t\t// Protect against out of sequence returns\n\t\t\t\tif (draw * 1 < settings.iDraw) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tsettings.iDraw = draw * 1;\n\t\t\t}\n\n\t\t\t_fnClearTable(settings);\n\t\t\tsettings._iRecordsTotal = parseInt(recordsTotal, 10);\n\t\t\tsettings._iRecordsDisplay = parseInt(recordsFiltered, 10);\n\n\t\t\tfor (var i = 0, ien = data.length; i < ien; i++) {\n\t\t\t\t_fnAddData(settings, data[i]);\n\t\t\t}\n\t\t\tsettings.aiDisplay = settings.aiDisplayMaster.slice();\n\n\t\t\tsettings.bAjaxDataGet = false;\n\t\t\t_fnDraw(settings);\n\n\t\t\tif (!settings._bInitComplete) {\n\t\t\t\t_fnInitComplete(settings, json);\n\t\t\t}\n\n\t\t\tsettings.bAjaxDataGet = true;\n\t\t\t_fnProcessingDisplay(settings, false);\n\t\t}\n\n\n\t\t/**\n\t\t * Get the data from the JSON data source to use for drawing a table. Using\n\t\t * `_fnGetObjectDataFn` allows the data to be sourced from a property of the\n\t\t * source object, or from a processing function.\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @param  {object} json Data source object / array from the server\n\t\t *  @return {array} Array of data to use\n\t\t */\n\t\tfunction _fnAjaxDataSrc(oSettings, json) {\n\t\t\tvar dataSrc = $.isPlainObject(oSettings.ajax) && oSettings.ajax.dataSrc !== undefined ?\n\t\t\t\toSettings.ajax.dataSrc :\n\t\t\t\toSettings.sAjaxDataProp; // Compatibility with 1.9-.\n\n\t\t\t// Compatibility with 1.9-. In order to read from aaData, check if the\n\t\t\t// default has been changed, if not, check for aaData\n\t\t\tif (dataSrc === 'data') {\n\t\t\t\treturn json.aaData || json[dataSrc];\n\t\t\t}\n\n\t\t\treturn dataSrc !== \"\" ?\n\t\t\t\t_fnGetObjectDataFn(dataSrc)(json) :\n\t\t\t\tjson;\n\t\t}\n\n\t\t/**\n\t\t * Generate the node required for filtering text\n\t\t *  @returns {node} Filter control element\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnFeatureHtmlFilter(settings) {\n\t\t\tvar classes = settings.oClasses;\n\t\t\tvar tableId = settings.sTableId;\n\t\t\tvar language = settings.oLanguage;\n\t\t\tvar previousSearch = settings.oPreviousSearch;\n\t\t\tvar features = settings.aanFeatures;\n\t\t\tvar input = '<input type=\"search\" class=\"' + classes.sFilterInput + '\"/>';\n\n\t\t\tvar str = language.sSearch;\n\t\t\tstr = str.match(/_INPUT_/) ?\n\t\t\t\tstr.replace('_INPUT_', input) :\n\t\t\t\tstr + input;\n\n\t\t\tvar filter = $('<div/>', {\n\t\t\t\t'id': !features.f ? tableId + '_filter' : null,\n\t\t\t\t'class': classes.sFilter\n\t\t\t})\n\t\t\t\t.append($('<label/>').append(str));\n\n\t\t\tvar searchFn = function () {\n\t\t\t\t/* Update all other filter input elements for the new display */\n\t\t\t\tvar n = features.f;\n\t\t\t\tvar val = !this.value ? \"\" : this.value; // mental IE8 fix :-(\n\n\t\t\t\t/* Now do the filter */\n\t\t\t\tif (val != previousSearch.sSearch) {\n\t\t\t\t\t_fnFilterComplete(settings, {\n\t\t\t\t\t\t\"sSearch\": val,\n\t\t\t\t\t\t\"bRegex\": previousSearch.bRegex,\n\t\t\t\t\t\t\"bSmart\": previousSearch.bSmart,\n\t\t\t\t\t\t\"bCaseInsensitive\": previousSearch.bCaseInsensitive\n\t\t\t\t\t});\n\n\t\t\t\t\t// Need to redraw, without resorting\n\t\t\t\t\tsettings._iDisplayStart = 0;\n\t\t\t\t\t_fnDraw(settings);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tvar searchDelay = settings.searchDelay !== null ?\n\t\t\t\tsettings.searchDelay :\n\t\t\t\t_fnDataSource(settings) === 'ssp' ?\n\t\t\t\t\t400 :\n\t\t\t\t\t0;\n\n\t\t\tvar jqFilter = $('input', filter)\n\t\t\t\t.val(previousSearch.sSearch)\n\t\t\t\t.attr('placeholder', language.sSearchPlaceholder)\n\t\t\t\t.on(\n\t\t\t\t\t'keyup.DT search.DT input.DT paste.DT cut.DT',\n\t\t\t\t\tsearchDelay ?\n\t\t\t\t\t\t_fnThrottle(searchFn, searchDelay) :\n\t\t\t\t\t\tsearchFn\n\t\t\t\t)\n\t\t\t\t.on('keypress.DT', function (e) {\n\t\t\t\t\t/* Prevent form submission */\n\t\t\t\t\tif (e.keyCode == 13) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.attr('aria-controls', tableId);\n\n\t\t\t// Update the input elements whenever the table is filtered\n\t\t\t$(settings.nTable).on('search.dt.DT', function (ev, s) {\n\t\t\t\tif (settings === s) {\n\t\t\t\t\t// IE9 throws an 'unknown error' if document.activeElement is used\n\t\t\t\t\t// inside an iframe or frame...\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (jqFilter[0] !== document.activeElement) {\n\t\t\t\t\t\t\tjqFilter.val(previousSearch.sSearch);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (e) { }\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn filter[0];\n\t\t}\n\n\n\t\t/**\n\t\t * Filter the table using both the global filter and column based filtering\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @param {object} oSearch search information\n\t\t *  @param {int} [iForce] force a research of the master array (1) or not (undefined or 0)\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnFilterComplete(oSettings, oInput, iForce) {\n\t\t\tvar oPrevSearch = oSettings.oPreviousSearch;\n\t\t\tvar aoPrevSearch = oSettings.aoPreSearchCols;\n\t\t\tvar fnSaveFilter = function (oFilter) {\n\t\t\t\t/* Save the filtering values */\n\t\t\t\toPrevSearch.sSearch = oFilter.sSearch;\n\t\t\t\toPrevSearch.bRegex = oFilter.bRegex;\n\t\t\t\toPrevSearch.bSmart = oFilter.bSmart;\n\t\t\t\toPrevSearch.bCaseInsensitive = oFilter.bCaseInsensitive;\n\t\t\t};\n\t\t\tvar fnRegex = function (o) {\n\t\t\t\t// Backwards compatibility with the bEscapeRegex option\n\t\t\t\treturn o.bEscapeRegex !== undefined ? !o.bEscapeRegex : o.bRegex;\n\t\t\t};\n\n\t\t\t// Resolve any column types that are unknown due to addition or invalidation\n\t\t\t// @todo As per sort - can this be moved into an event handler?\n\t\t\t_fnColumnTypes(oSettings);\n\n\t\t\t/* In server-side processing all filtering is done by the server, so no point hanging around here */\n\t\t\tif (_fnDataSource(oSettings) != 'ssp') {\n\t\t\t\t/* Global filter */\n\t\t\t\t_fnFilter(oSettings, oInput.sSearch, iForce, fnRegex(oInput), oInput.bSmart, oInput.bCaseInsensitive);\n\t\t\t\tfnSaveFilter(oInput);\n\n\t\t\t\t/* Now do the individual column filter */\n\t\t\t\tfor (var i = 0; i < aoPrevSearch.length; i++) {\n\t\t\t\t\t_fnFilterColumn(oSettings, aoPrevSearch[i].sSearch, i, fnRegex(aoPrevSearch[i]),\n\t\t\t\t\t\taoPrevSearch[i].bSmart, aoPrevSearch[i].bCaseInsensitive);\n\t\t\t\t}\n\n\t\t\t\t/* Custom filtering */\n\t\t\t\t_fnFilterCustom(oSettings);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfnSaveFilter(oInput);\n\t\t\t}\n\n\t\t\t/* Tell the draw function we have been filtering */\n\t\t\toSettings.bFiltered = true;\n\t\t\t_fnCallbackFire(oSettings, null, 'search', [oSettings]);\n\t\t}\n\n\n\t\t/**\n\t\t * Apply custom filtering functions\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnFilterCustom(settings) {\n\t\t\tvar filters = DataTable.ext.search;\n\t\t\tvar displayRows = settings.aiDisplay;\n\t\t\tvar row, rowIdx;\n\n\t\t\tfor (var i = 0, ien = filters.length; i < ien; i++) {\n\t\t\t\tvar rows = [];\n\n\t\t\t\t// Loop over each row and see if it should be included\n\t\t\t\tfor (var j = 0, jen = displayRows.length; j < jen; j++) {\n\t\t\t\t\trowIdx = displayRows[j];\n\t\t\t\t\trow = settings.aoData[rowIdx];\n\n\t\t\t\t\tif (filters[i](settings, row._aFilterData, rowIdx, row._aData, j)) {\n\t\t\t\t\t\trows.push(rowIdx);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// So the array reference doesn't break set the results into the\n\t\t\t\t// existing array\n\t\t\t\tdisplayRows.length = 0;\n\t\t\t\t$.merge(displayRows, rows);\n\t\t\t}\n\t\t}\n\n\n\t\t/**\n\t\t * Filter the table on a per-column basis\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @param {string} sInput string to filter on\n\t\t *  @param {int} iColumn column to filter\n\t\t *  @param {bool} bRegex treat search string as a regular expression or not\n\t\t *  @param {bool} bSmart use smart filtering or not\n\t\t *  @param {bool} bCaseInsensitive Do case insenstive matching or not\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnFilterColumn(settings, searchStr, colIdx, regex, smart, caseInsensitive) {\n\t\t\tif (searchStr === '') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar data;\n\t\t\tvar out = [];\n\t\t\tvar display = settings.aiDisplay;\n\t\t\tvar rpSearch = _fnFilterCreateSearch(searchStr, regex, smart, caseInsensitive);\n\n\t\t\tfor (var i = 0; i < display.length; i++) {\n\t\t\t\tdata = settings.aoData[display[i]]._aFilterData[colIdx];\n\n\t\t\t\tif (rpSearch.test(data)) {\n\t\t\t\t\tout.push(display[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tsettings.aiDisplay = out;\n\t\t}\n\n\n\t\t/**\n\t\t * Filter the data table based on user input and draw the table\n\t\t *  @param {object} settings dataTables settings object\n\t\t *  @param {string} input string to filter on\n\t\t *  @param {int} force optional - force a research of the master array (1) or not (undefined or 0)\n\t\t *  @param {bool} regex treat as a regular expression or not\n\t\t *  @param {bool} smart perform smart filtering or not\n\t\t *  @param {bool} caseInsensitive Do case insenstive matching or not\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnFilter(settings, input, force, regex, smart, caseInsensitive) {\n\t\t\tvar rpSearch = _fnFilterCreateSearch(input, regex, smart, caseInsensitive);\n\t\t\tvar prevSearch = settings.oPreviousSearch.sSearch;\n\t\t\tvar displayMaster = settings.aiDisplayMaster;\n\t\t\tvar display, invalidated, i;\n\t\t\tvar filtered = [];\n\n\t\t\t// Need to take account of custom filtering functions - always filter\n\t\t\tif (DataTable.ext.search.length !== 0) {\n\t\t\t\tforce = true;\n\t\t\t}\n\n\t\t\t// Check if any of the rows were invalidated\n\t\t\tinvalidated = _fnFilterData(settings);\n\n\t\t\t// If the input is blank - we just want the full data set\n\t\t\tif (input.length <= 0) {\n\t\t\t\tsettings.aiDisplay = displayMaster.slice();\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// New search - start from the master array\n\t\t\t\tif (invalidated ||\n\t\t\t\t\tforce ||\n\t\t\t\t\tprevSearch.length > input.length ||\n\t\t\t\t\tinput.indexOf(prevSearch) !== 0 ||\n\t\t\t\t\tsettings.bSorted // On resort, the display master needs to be\n\t\t\t\t\t// re-filtered since indexes will have changed\n\t\t\t\t) {\n\t\t\t\t\tsettings.aiDisplay = displayMaster.slice();\n\t\t\t\t}\n\n\t\t\t\t// Search the display array\n\t\t\t\tdisplay = settings.aiDisplay;\n\n\t\t\t\tfor (i = 0; i < display.length; i++) {\n\t\t\t\t\tif (rpSearch.test(settings.aoData[display[i]]._sFilterRow)) {\n\t\t\t\t\t\tfiltered.push(display[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tsettings.aiDisplay = filtered;\n\t\t\t}\n\t\t}\n\n\n\t\t/**\n\t\t * Build a regular expression object suitable for searching a table\n\t\t *  @param {string} sSearch string to search for\n\t\t *  @param {bool} bRegex treat as a regular expression or not\n\t\t *  @param {bool} bSmart perform smart filtering or not\n\t\t *  @param {bool} bCaseInsensitive Do case insensitive matching or not\n\t\t *  @returns {RegExp} constructed object\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnFilterCreateSearch(search, regex, smart, caseInsensitive) {\n\t\t\tsearch = regex ?\n\t\t\t\tsearch :\n\t\t\t\t_fnEscapeRegex(search);\n\n\t\t\tif (smart) {\n\t\t\t\t/* For smart filtering we want to allow the search to work regardless of\n\t\t\t\t * word order. We also want double quoted text to be preserved, so word\n\t\t\t\t * order is important - a la google. So this is what we want to\n\t\t\t\t * generate:\n\t\t\t\t *\n\t\t\t\t * ^(?=.*?\\bone\\b)(?=.*?\\btwo three\\b)(?=.*?\\bfour\\b).*$\n\t\t\t\t */\n\t\t\t\tvar a = $.map(search.match(/\"[^\"]+\"|[^ ]+/g) || [''], function (word) {\n\t\t\t\t\tif (word.charAt(0) === '\"') {\n\t\t\t\t\t\tvar m = word.match(/^\"(.*)\"$/);\n\t\t\t\t\t\tword = m ? m[1] : word;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn word.replace('\"', '');\n\t\t\t\t});\n\n\t\t\t\tsearch = '^(?=.*?' + a.join(')(?=.*?') + ').*$';\n\t\t\t}\n\n\t\t\treturn new RegExp(search, caseInsensitive ? 'i' : '');\n\t\t}\n\n\n\t\t/**\n\t\t * Escape a string such that it can be used in a regular expression\n\t\t *  @param {string} sVal string to escape\n\t\t *  @returns {string} escaped string\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tvar _fnEscapeRegex = DataTable.util.escapeRegex;\n\n\t\tvar __filter_div = $('<div>')[0];\n\t\tvar __filter_div_textContent = __filter_div.textContent !== undefined;\n\n\t\t// Update the filtering data for each row if needed (by invalidation or first run)\n\t\tfunction _fnFilterData(settings) {\n\t\t\tvar columns = settings.aoColumns;\n\t\t\tvar column;\n\t\t\tvar i, j, ien, jen, filterData, cellData, row;\n\t\t\tvar fomatters = DataTable.ext.type.search;\n\t\t\tvar wasInvalidated = false;\n\n\t\t\tfor (i = 0, ien = settings.aoData.length; i < ien; i++) {\n\t\t\t\trow = settings.aoData[i];\n\n\t\t\t\tif (!row._aFilterData) {\n\t\t\t\t\tfilterData = [];\n\n\t\t\t\t\tfor (j = 0, jen = columns.length; j < jen; j++) {\n\t\t\t\t\t\tcolumn = columns[j];\n\n\t\t\t\t\t\tif (column.bSearchable) {\n\t\t\t\t\t\t\tcellData = _fnGetCellData(settings, i, j, 'filter');\n\n\t\t\t\t\t\t\tif (fomatters[column.sType]) {\n\t\t\t\t\t\t\t\tcellData = fomatters[column.sType](cellData);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Search in DataTables 1.10 is string based. In 1.11 this\n\t\t\t\t\t\t\t// should be altered to also allow strict type checking.\n\t\t\t\t\t\t\tif (cellData === null) {\n\t\t\t\t\t\t\t\tcellData = '';\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (typeof cellData !== 'string' && cellData.toString) {\n\t\t\t\t\t\t\t\tcellData = cellData.toString();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcellData = '';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If it looks like there is an HTML entity in the string,\n\t\t\t\t\t\t// attempt to decode it so sorting works as expected. Note that\n\t\t\t\t\t\t// we could use a single line of jQuery to do this, but the DOM\n\t\t\t\t\t\t// method used here is much faster http://jsperf.com/html-decode\n\t\t\t\t\t\tif (cellData.indexOf && cellData.indexOf('&') !== -1) {\n\t\t\t\t\t\t\t__filter_div.innerHTML = cellData;\n\t\t\t\t\t\t\tcellData = __filter_div_textContent ?\n\t\t\t\t\t\t\t\t__filter_div.textContent :\n\t\t\t\t\t\t\t\t__filter_div.innerText;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (cellData.replace) {\n\t\t\t\t\t\t\tcellData = cellData.replace(/[\\r\\n]/g, '');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfilterData.push(cellData);\n\t\t\t\t\t}\n\n\t\t\t\t\trow._aFilterData = filterData;\n\t\t\t\t\trow._sFilterRow = filterData.join('  ');\n\t\t\t\t\twasInvalidated = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn wasInvalidated;\n\t\t}\n\n\n\t\t/**\n\t\t * Convert from the internal Hungarian notation to camelCase for external\n\t\t * interaction\n\t\t *  @param {object} obj Object to convert\n\t\t *  @returns {object} Inverted object\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnSearchToCamel(obj) {\n\t\t\treturn {\n\t\t\t\tsearch: obj.sSearch,\n\t\t\t\tsmart: obj.bSmart,\n\t\t\t\tregex: obj.bRegex,\n\t\t\t\tcaseInsensitive: obj.bCaseInsensitive\n\t\t\t};\n\t\t}\n\n\n\n\t\t/**\n\t\t * Convert from camelCase notation to the internal Hungarian. We could use the\n\t\t * Hungarian convert function here, but this is cleaner\n\t\t *  @param {object} obj Object to convert\n\t\t *  @returns {object} Inverted object\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnSearchToHung(obj) {\n\t\t\treturn {\n\t\t\t\tsSearch: obj.search,\n\t\t\t\tbSmart: obj.smart,\n\t\t\t\tbRegex: obj.regex,\n\t\t\t\tbCaseInsensitive: obj.caseInsensitive\n\t\t\t};\n\t\t}\n\n\t\t/**\n\t\t * Generate the node required for the info display\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @returns {node} Information element\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnFeatureHtmlInfo(settings) {\n\t\t\tvar\n\t\t\t\ttid = settings.sTableId,\n\t\t\t\tnodes = settings.aanFeatures.i,\n\t\t\t\tn = $('<div/>', {\n\t\t\t\t\t'class': settings.oClasses.sInfo,\n\t\t\t\t\t'id': !nodes ? tid + '_info' : null\n\t\t\t\t});\n\n\t\t\tif (!nodes) {\n\t\t\t\t// Update display on each draw\n\t\t\t\tsettings.aoDrawCallback.push({\n\t\t\t\t\t\"fn\": _fnUpdateInfo,\n\t\t\t\t\t\"sName\": \"information\"\n\t\t\t\t});\n\n\t\t\t\tn\n\t\t\t\t\t.attr('role', 'status')\n\t\t\t\t\t.attr('aria-live', 'polite');\n\n\t\t\t\t// Table is described by our info div\n\t\t\t\t$(settings.nTable).attr('aria-describedby', tid + '_info');\n\t\t\t}\n\n\t\t\treturn n[0];\n\t\t}\n\n\n\t\t/**\n\t\t * Update the information elements in the display\n\t\t *  @param {object} settings dataTables settings object\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnUpdateInfo(settings) {\n\t\t\t/* Show information about the table */\n\t\t\tvar nodes = settings.aanFeatures.i;\n\t\t\tif (nodes.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar\n\t\t\t\tlang = settings.oLanguage,\n\t\t\t\tstart = settings._iDisplayStart + 1,\n\t\t\t\tend = settings.fnDisplayEnd(),\n\t\t\t\tmax = settings.fnRecordsTotal(),\n\t\t\t\ttotal = settings.fnRecordsDisplay(),\n\t\t\t\tout = total ?\n\t\t\t\t\tlang.sInfo :\n\t\t\t\t\tlang.sInfoEmpty;\n\n\t\t\tif (total !== max) {\n\t\t\t\t/* Record set after filtering */\n\t\t\t\tout += ' ' + lang.sInfoFiltered;\n\t\t\t}\n\n\t\t\t// Convert the macros\n\t\t\tout += lang.sInfoPostFix;\n\t\t\tout = _fnInfoMacros(settings, out);\n\n\t\t\tvar callback = lang.fnInfoCallback;\n\t\t\tif (callback !== null) {\n\t\t\t\tout = callback.call(settings.oInstance,\n\t\t\t\t\tsettings, start, end, max, total, out\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t$(nodes).html(out);\n\t\t}\n\n\n\t\tfunction _fnInfoMacros(settings, str) {\n\t\t\t// When infinite scrolling, we are always starting at 1. _iDisplayStart is used only\n\t\t\t// internally\n\t\t\tvar\n\t\t\t\tformatter = settings.fnFormatNumber,\n\t\t\t\tstart = settings._iDisplayStart + 1,\n\t\t\t\tlen = settings._iDisplayLength,\n\t\t\t\tvis = settings.fnRecordsDisplay(),\n\t\t\t\tall = len === -1;\n\n\t\t\treturn str.\n\t\t\t\treplace(/_START_/g, formatter.call(settings, start)).\n\t\t\t\treplace(/_END_/g, formatter.call(settings, settings.fnDisplayEnd())).\n\t\t\t\treplace(/_MAX_/g, formatter.call(settings, settings.fnRecordsTotal())).\n\t\t\t\treplace(/_TOTAL_/g, formatter.call(settings, vis)).\n\t\t\t\treplace(/_PAGE_/g, formatter.call(settings, all ? 1 : Math.ceil(start / len))).\n\t\t\t\treplace(/_PAGES_/g, formatter.call(settings, all ? 1 : Math.ceil(vis / len)));\n\t\t}\n\n\n\n\t\t/**\n\t\t * Draw the table for the first time, adding all required features\n\t\t *  @param {object} settings dataTables settings object\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnInitialise(settings) {\n\t\t\tvar i, iLen, iAjaxStart = settings.iInitDisplayStart;\n\t\t\tvar columns = settings.aoColumns, column;\n\t\t\tvar features = settings.oFeatures;\n\t\t\tvar deferLoading = settings.bDeferLoading; // value modified by the draw\n\n\t\t\t/* Ensure that the table data is fully initialised */\n\t\t\tif (!settings.bInitialised) {\n\t\t\t\tsetTimeout(function () { _fnInitialise(settings); }, 200);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t/* Show the display HTML options */\n\t\t\t_fnAddOptionsHtml(settings);\n\n\t\t\t/* Build and draw the header / footer for the table */\n\t\t\t_fnBuildHead(settings);\n\t\t\t_fnDrawHead(settings, settings.aoHeader);\n\t\t\t_fnDrawHead(settings, settings.aoFooter);\n\n\t\t\t/* Okay to show that something is going on now */\n\t\t\t_fnProcessingDisplay(settings, true);\n\n\t\t\t/* Calculate sizes for columns */\n\t\t\tif (features.bAutoWidth) {\n\t\t\t\t_fnCalculateColumnWidths(settings);\n\t\t\t}\n\n\t\t\tfor (i = 0, iLen = columns.length; i < iLen; i++) {\n\t\t\t\tcolumn = columns[i];\n\n\t\t\t\tif (column.sWidth) {\n\t\t\t\t\tcolumn.nTh.style.width = _fnStringToCss(column.sWidth);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_fnCallbackFire(settings, null, 'preInit', [settings]);\n\n\t\t\t// If there is default sorting required - let's do it. The sort function\n\t\t\t// will do the drawing for us. Otherwise we draw the table regardless of the\n\t\t\t// Ajax source - this allows the table to look initialised for Ajax sourcing\n\t\t\t// data (show 'loading' message possibly)\n\t\t\t_fnReDraw(settings);\n\n\t\t\t// Server-side processing init complete is done by _fnAjaxUpdateDraw\n\t\t\tvar dataSrc = _fnDataSource(settings);\n\t\t\tif (dataSrc != 'ssp' || deferLoading) {\n\t\t\t\t// if there is an ajax source load the data\n\t\t\t\tif (dataSrc == 'ajax') {\n\t\t\t\t\t_fnBuildAjax(settings, [], function (json) {\n\t\t\t\t\t\tvar aData = _fnAjaxDataSrc(settings, json);\n\n\t\t\t\t\t\t// Got the data - add it to the table\n\t\t\t\t\t\tfor (i = 0; i < aData.length; i++) {\n\t\t\t\t\t\t\t_fnAddData(settings, aData[i]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Reset the init display for cookie saving. We've already done\n\t\t\t\t\t\t// a filter, and therefore cleared it before. So we need to make\n\t\t\t\t\t\t// it appear 'fresh'\n\t\t\t\t\t\tsettings.iInitDisplayStart = iAjaxStart;\n\n\t\t\t\t\t\t_fnReDraw(settings);\n\n\t\t\t\t\t\t_fnProcessingDisplay(settings, false);\n\t\t\t\t\t\t_fnInitComplete(settings, json);\n\t\t\t\t\t}, settings);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t_fnProcessingDisplay(settings, false);\n\t\t\t\t\t_fnInitComplete(settings);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\t/**\n\t\t * Draw the table for the first time, adding all required features\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @param {object} [json] JSON from the server that completed the table, if using Ajax source\n\t\t *    with client-side processing (optional)\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnInitComplete(settings, json) {\n\t\t\tsettings._bInitComplete = true;\n\n\t\t\t// When data was added after the initialisation (data or Ajax) we need to\n\t\t\t// calculate the column sizing\n\t\t\tif (json || settings.oInit.aaData) {\n\t\t\t\t_fnAdjustColumnSizing(settings);\n\t\t\t}\n\n\t\t\t_fnCallbackFire(settings, null, 'plugin-init', [settings, json]);\n\t\t\t_fnCallbackFire(settings, 'aoInitComplete', 'init', [settings, json]);\n\t\t}\n\n\n\t\tfunction _fnLengthChange(settings, val) {\n\t\t\tvar len = parseInt(val, 10);\n\t\t\tsettings._iDisplayLength = len;\n\n\t\t\t_fnLengthOverflow(settings);\n\n\t\t\t// Fire length change event\n\t\t\t_fnCallbackFire(settings, null, 'length', [settings, len]);\n\t\t}\n\n\n\t\t/**\n\t\t * Generate the node required for user display length changing\n\t\t *  @param {object} settings dataTables settings object\n\t\t *  @returns {node} Display length feature node\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnFeatureHtmlLength(settings) {\n\t\t\tvar\n\t\t\t\tclasses = settings.oClasses,\n\t\t\t\ttableId = settings.sTableId,\n\t\t\t\tmenu = settings.aLengthMenu,\n\t\t\t\td2 = $.isArray(menu[0]),\n\t\t\t\tlengths = d2 ? menu[0] : menu,\n\t\t\t\tlanguage = d2 ? menu[1] : menu;\n\n\t\t\tvar select = $('<select/>', {\n\t\t\t\t'name': tableId + '_length',\n\t\t\t\t'aria-controls': tableId,\n\t\t\t\t'class': classes.sLengthSelect\n\t\t\t});\n\n\t\t\tfor (var i = 0, ien = lengths.length; i < ien; i++) {\n\t\t\t\tselect[0][i] = new Option(language[i], lengths[i]);\n\t\t\t}\n\n\t\t\tvar div = $('<div><label/></div>').addClass(classes.sLength);\n\t\t\tif (!settings.aanFeatures.l) {\n\t\t\t\tdiv[0].id = tableId + '_length';\n\t\t\t}\n\n\t\t\tdiv.children().append(\n\t\t\t\tsettings.oLanguage.sLengthMenu.replace('_MENU_', select[0].outerHTML)\n\t\t\t);\n\n\t\t\t// Can't use `select` variable as user might provide their own and the\n\t\t\t// reference is broken by the use of outerHTML\n\t\t\t$('select', div)\n\t\t\t\t.val(settings._iDisplayLength)\n\t\t\t\t.on('change.DT', function (e) {\n\t\t\t\t\t_fnLengthChange(settings, $(this).val());\n\t\t\t\t\t_fnDraw(settings);\n\t\t\t\t});\n\n\t\t\t// Update node value whenever anything changes the table's length\n\t\t\t$(settings.nTable).on('length.dt.DT', function (e, s, len) {\n\t\t\t\tif (settings === s) {\n\t\t\t\t\t$('select', div).val(len);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn div[0];\n\t\t}\n\n\n\n\t\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t\t * Note that most of the paging logic is done in\n\t\t * DataTable.ext.pager\n\t\t */\n\n\t\t/**\n\t\t * Generate the node required for default pagination\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @returns {node} Pagination feature node\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnFeatureHtmlPaginate(settings) {\n\t\t\tvar\n\t\t\t\ttype = settings.sPaginationType,\n\t\t\t\tplugin = DataTable.ext.pager[type],\n\t\t\t\tmodern = typeof plugin === 'function',\n\t\t\t\tredraw = function (settings) {\n\t\t\t\t\t_fnDraw(settings);\n\t\t\t\t},\n\t\t\t\tnode = $('<div/>').addClass(settings.oClasses.sPaging + type)[0],\n\t\t\t\tfeatures = settings.aanFeatures;\n\n\t\t\tif (!modern) {\n\t\t\t\tplugin.fnInit(settings, node, redraw);\n\t\t\t}\n\n\t\t\t/* Add a draw callback for the pagination on first instance, to update the paging display */\n\t\t\tif (!features.p) {\n\t\t\t\tnode.id = settings.sTableId + '_paginate';\n\n\t\t\t\tsettings.aoDrawCallback.push({\n\t\t\t\t\t\"fn\": function (settings) {\n\t\t\t\t\t\tif (modern) {\n\t\t\t\t\t\t\tvar\n\t\t\t\t\t\t\t\tstart = settings._iDisplayStart,\n\t\t\t\t\t\t\t\tlen = settings._iDisplayLength,\n\t\t\t\t\t\t\t\tvisRecords = settings.fnRecordsDisplay(),\n\t\t\t\t\t\t\t\tall = len === -1,\n\t\t\t\t\t\t\t\tpage = all ? 0 : Math.ceil(start / len),\n\t\t\t\t\t\t\t\tpages = all ? 1 : Math.ceil(visRecords / len),\n\t\t\t\t\t\t\t\tbuttons = plugin(page, pages),\n\t\t\t\t\t\t\t\ti, ien;\n\n\t\t\t\t\t\t\tfor (i = 0, ien = features.p.length; i < ien; i++) {\n\t\t\t\t\t\t\t\t_fnRenderer(settings, 'pageButton')(\n\t\t\t\t\t\t\t\t\tsettings, features.p[i], i, buttons, page, pages\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tplugin.fnUpdate(settings, redraw);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"sName\": \"pagination\"\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn node;\n\t\t}\n\n\n\t\t/**\n\t\t * Alter the display settings to change the page\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {string|int} action Paging action to take: \"first\", \"previous\",\n\t\t *    \"next\" or \"last\" or page number to jump to (integer)\n\t\t *  @param [bool] redraw Automatically draw the update or not\n\t\t *  @returns {bool} true page has changed, false - no change\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnPageChange(settings, action, redraw) {\n\t\t\tvar\n\t\t\t\tstart = settings._iDisplayStart,\n\t\t\t\tlen = settings._iDisplayLength,\n\t\t\t\trecords = settings.fnRecordsDisplay();\n\n\t\t\tif (records === 0 || len === -1) {\n\t\t\t\tstart = 0;\n\t\t\t}\n\t\t\telse if (typeof action === \"number\") {\n\t\t\t\tstart = action * len;\n\n\t\t\t\tif (start > records) {\n\t\t\t\t\tstart = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (action == \"first\") {\n\t\t\t\tstart = 0;\n\t\t\t}\n\t\t\telse if (action == \"previous\") {\n\t\t\t\tstart = len >= 0 ?\n\t\t\t\t\tstart - len :\n\t\t\t\t\t0;\n\n\t\t\t\tif (start < 0) {\n\t\t\t\t\tstart = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (action == \"next\") {\n\t\t\t\tif (start + len < records) {\n\t\t\t\t\tstart += len;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (action == \"last\") {\n\t\t\t\tstart = Math.floor((records - 1) / len) * len;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_fnLog(settings, 0, \"Unknown paging action: \" + action, 5);\n\t\t\t}\n\n\t\t\tvar changed = settings._iDisplayStart !== start;\n\t\t\tsettings._iDisplayStart = start;\n\n\t\t\tif (changed) {\n\t\t\t\t_fnCallbackFire(settings, null, 'page', [settings]);\n\n\t\t\t\tif (redraw) {\n\t\t\t\t\t_fnDraw(settings);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn changed;\n\t\t}\n\n\n\n\t\t/**\n\t\t * Generate the node required for the processing node\n\t\t *  @param {object} settings dataTables settings object\n\t\t *  @returns {node} Processing element\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnFeatureHtmlProcessing(settings) {\n\t\t\treturn $('<div/>', {\n\t\t\t\t'id': !settings.aanFeatures.r ? settings.sTableId + '_processing' : null,\n\t\t\t\t'class': settings.oClasses.sProcessing\n\t\t\t})\n\t\t\t\t.html(settings.oLanguage.sProcessing)\n\t\t\t\t.insertBefore(settings.nTable)[0];\n\t\t}\n\n\n\t\t/**\n\t\t * Display or hide the processing indicator\n\t\t *  @param {object} settings dataTables settings object\n\t\t *  @param {bool} show Show the processing indicator (true) or not (false)\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnProcessingDisplay(settings, show) {\n\t\t\tif (settings.oFeatures.bProcessing) {\n\t\t\t\t$(settings.aanFeatures.r).css('display', show ? 'block' : 'none');\n\t\t\t}\n\n\t\t\t_fnCallbackFire(settings, null, 'processing', [settings, show]);\n\t\t}\n\n\t\t/**\n\t\t * Add any control elements for the table - specifically scrolling\n\t\t *  @param {object} settings dataTables settings object\n\t\t *  @returns {node} Node to add to the DOM\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnFeatureHtmlTable(settings) {\n\t\t\tvar table = $(settings.nTable);\n\n\t\t\t// Add the ARIA grid role to the table\n\t\t\ttable.attr('role', 'grid');\n\n\t\t\t// Scrolling from here on in\n\t\t\tvar scroll = settings.oScroll;\n\n\t\t\tif (scroll.sX === '' && scroll.sY === '') {\n\t\t\t\treturn settings.nTable;\n\t\t\t}\n\n\t\t\tvar scrollX = scroll.sX;\n\t\t\tvar scrollY = scroll.sY;\n\t\t\tvar classes = settings.oClasses;\n\t\t\tvar caption = table.children('caption');\n\t\t\tvar captionSide = caption.length ? caption[0]._captionSide : null;\n\t\t\tvar headerClone = $(table[0].cloneNode(false));\n\t\t\tvar footerClone = $(table[0].cloneNode(false));\n\t\t\tvar footer = table.children('tfoot');\n\t\t\tvar _div = '<div/>';\n\t\t\tvar size = function (s) {\n\t\t\t\treturn !s ? null : _fnStringToCss(s);\n\t\t\t};\n\n\t\t\tif (!footer.length) {\n\t\t\t\tfooter = null;\n\t\t\t}\n\n\t\t\t/*\n\t\t\t * The HTML structure that we want to generate in this function is:\n\t\t\t *  div - scroller\n\t\t\t *    div - scroll head\n\t\t\t *      div - scroll head inner\n\t\t\t *        table - scroll head table\n\t\t\t *          thead - thead\n\t\t\t *    div - scroll body\n\t\t\t *      table - table (master table)\n\t\t\t *        thead - thead clone for sizing\n\t\t\t *        tbody - tbody\n\t\t\t *    div - scroll foot\n\t\t\t *      div - scroll foot inner\n\t\t\t *        table - scroll foot table\n\t\t\t *          tfoot - tfoot\n\t\t\t */\n\t\t\tvar scroller = $(_div, { 'class': classes.sScrollWrapper })\n\t\t\t\t.append(\n\t\t\t\t\t$(_div, { 'class': classes.sScrollHead })\n\t\t\t\t\t\t.css({\n\t\t\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\t\t\tposition: 'relative',\n\t\t\t\t\t\t\tborder: 0,\n\t\t\t\t\t\t\twidth: scrollX ? size(scrollX) : '100%'\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t$(_div, { 'class': classes.sScrollHeadInner })\n\t\t\t\t\t\t\t\t.css({\n\t\t\t\t\t\t\t\t\t'box-sizing': 'content-box',\n\t\t\t\t\t\t\t\t\twidth: scroll.sXInner || '100%'\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\t\theaderClone\n\t\t\t\t\t\t\t\t\t\t.removeAttr('id')\n\t\t\t\t\t\t\t\t\t\t.css('margin-left', 0)\n\t\t\t\t\t\t\t\t\t\t.append(captionSide === 'top' ? caption : null)\n\t\t\t\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\t\t\t\ttable.children('thead')\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t\t.append(\n\t\t\t\t\t$(_div, { 'class': classes.sScrollBody })\n\t\t\t\t\t\t.css({\n\t\t\t\t\t\t\tposition: 'relative',\n\t\t\t\t\t\t\toverflow: 'auto',\n\t\t\t\t\t\t\twidth: size(scrollX)\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.append(table)\n\t\t\t\t);\n\n\t\t\tif (footer) {\n\t\t\t\tscroller.append(\n\t\t\t\t\t$(_div, { 'class': classes.sScrollFoot })\n\t\t\t\t\t\t.css({\n\t\t\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\t\t\tborder: 0,\n\t\t\t\t\t\t\twidth: scrollX ? size(scrollX) : '100%'\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t$(_div, { 'class': classes.sScrollFootInner })\n\t\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\t\tfooterClone\n\t\t\t\t\t\t\t\t\t\t.removeAttr('id')\n\t\t\t\t\t\t\t\t\t\t.css('margin-left', 0)\n\t\t\t\t\t\t\t\t\t\t.append(captionSide === 'bottom' ? caption : null)\n\t\t\t\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\t\t\t\ttable.children('tfoot')\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tvar children = scroller.children();\n\t\t\tvar scrollHead = children[0];\n\t\t\tvar scrollBody = children[1];\n\t\t\tvar scrollFoot = footer ? children[2] : null;\n\n\t\t\t// When the body is scrolled, then we also want to scroll the headers\n\t\t\tif (scrollX) {\n\t\t\t\t$(scrollBody).on('scroll.DT', function (e) {\n\t\t\t\t\tvar scrollLeft = this.scrollLeft;\n\n\t\t\t\t\tscrollHead.scrollLeft = scrollLeft;\n\n\t\t\t\t\tif (footer) {\n\t\t\t\t\t\tscrollFoot.scrollLeft = scrollLeft;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t$(scrollBody).css(\n\t\t\t\tscrollY && scroll.bCollapse ? 'max-height' : 'height',\n\t\t\t\tscrollY\n\t\t\t);\n\n\t\t\tsettings.nScrollHead = scrollHead;\n\t\t\tsettings.nScrollBody = scrollBody;\n\t\t\tsettings.nScrollFoot = scrollFoot;\n\n\t\t\t// On redraw - align columns\n\t\t\tsettings.aoDrawCallback.push({\n\t\t\t\t\"fn\": _fnScrollDraw,\n\t\t\t\t\"sName\": \"scrolling\"\n\t\t\t});\n\n\t\t\treturn scroller[0];\n\t\t}\n\n\n\n\t\t/**\n\t\t * Update the header, footer and body tables for resizing - i.e. column\n\t\t * alignment.\n\t\t *\n\t\t * Welcome to the most horrible function DataTables. The process that this\n\t\t * function follows is basically:\n\t\t *   1. Re-create the table inside the scrolling div\n\t\t *   2. Take live measurements from the DOM\n\t\t *   3. Apply the measurements to align the columns\n\t\t *   4. Clean up\n\t\t *\n\t\t *  @param {object} settings dataTables settings object\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnScrollDraw(settings) {\n\t\t\t// Given that this is such a monster function, a lot of variables are use\n\t\t\t// to try and keep the minimised size as small as possible\n\t\t\tvar\n\t\t\t\tscroll = settings.oScroll,\n\t\t\t\tscrollX = scroll.sX,\n\t\t\t\tscrollXInner = scroll.sXInner,\n\t\t\t\tscrollY = scroll.sY,\n\t\t\t\tbarWidth = scroll.iBarWidth,\n\t\t\t\tdivHeader = $(settings.nScrollHead),\n\t\t\t\tdivHeaderStyle = divHeader[0].style,\n\t\t\t\tdivHeaderInner = divHeader.children('div'),\n\t\t\t\tdivHeaderInnerStyle = divHeaderInner[0].style,\n\t\t\t\tdivHeaderTable = divHeaderInner.children('table'),\n\t\t\t\tdivBodyEl = settings.nScrollBody,\n\t\t\t\tdivBody = $(divBodyEl),\n\t\t\t\tdivBodyStyle = divBodyEl.style,\n\t\t\t\tdivFooter = $(settings.nScrollFoot),\n\t\t\t\tdivFooterInner = divFooter.children('div'),\n\t\t\t\tdivFooterTable = divFooterInner.children('table'),\n\t\t\t\theader = $(settings.nTHead),\n\t\t\t\ttable = $(settings.nTable),\n\t\t\t\ttableEl = table[0],\n\t\t\t\ttableStyle = tableEl.style,\n\t\t\t\tfooter = settings.nTFoot ? $(settings.nTFoot) : null,\n\t\t\t\tbrowser = settings.oBrowser,\n\t\t\t\tie67 = browser.bScrollOversize,\n\t\t\t\tdtHeaderCells = _pluck(settings.aoColumns, 'nTh'),\n\t\t\t\theaderTrgEls, footerTrgEls,\n\t\t\t\theaderSrcEls, footerSrcEls,\n\t\t\t\theaderCopy, footerCopy,\n\t\t\t\theaderWidths = [], footerWidths = [],\n\t\t\t\theaderContent = [], footerContent = [],\n\t\t\t\tidx, correction, sanityWidth,\n\t\t\t\tzeroOut = function (nSizer) {\n\t\t\t\t\tvar style = nSizer.style;\n\t\t\t\t\tstyle.paddingTop = \"0\";\n\t\t\t\t\tstyle.paddingBottom = \"0\";\n\t\t\t\t\tstyle.borderTopWidth = \"0\";\n\t\t\t\t\tstyle.borderBottomWidth = \"0\";\n\t\t\t\t\tstyle.height = 0;\n\t\t\t\t};\n\n\t\t\t// If the scrollbar visibility has changed from the last draw, we need to\n\t\t\t// adjust the column sizes as the table width will have changed to account\n\t\t\t// for the scrollbar\n\t\t\tvar scrollBarVis = divBodyEl.scrollHeight > divBodyEl.clientHeight;\n\n\t\t\tif (settings.scrollBarVis !== scrollBarVis && settings.scrollBarVis !== undefined) {\n\t\t\t\tsettings.scrollBarVis = scrollBarVis;\n\t\t\t\t_fnAdjustColumnSizing(settings);\n\t\t\t\treturn; // adjust column sizing will call this function again\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsettings.scrollBarVis = scrollBarVis;\n\t\t\t}\n\n\t\t\t/*\n\t\t\t * 1. Re-create the table inside the scrolling div\n\t\t\t */\n\n\t\t\t// Remove the old minimised thead and tfoot elements in the inner table\n\t\t\ttable.children('thead, tfoot').remove();\n\n\t\t\tif (footer) {\n\t\t\t\tfooterCopy = footer.clone().prependTo(table);\n\t\t\t\tfooterTrgEls = footer.find('tr'); // the original tfoot is in its own table and must be sized\n\t\t\t\tfooterSrcEls = footerCopy.find('tr');\n\t\t\t}\n\n\t\t\t// Clone the current header and footer elements and then place it into the inner table\n\t\t\theaderCopy = header.clone().prependTo(table);\n\t\t\theaderTrgEls = header.find('tr'); // original header is in its own table\n\t\t\theaderSrcEls = headerCopy.find('tr');\n\t\t\theaderCopy.find('th, td').removeAttr('tabindex');\n\n\n\t\t\t/*\n\t\t\t * 2. Take live measurements from the DOM - do not alter the DOM itself!\n\t\t\t */\n\n\t\t\t// Remove old sizing and apply the calculated column widths\n\t\t\t// Get the unique column headers in the newly created (cloned) header. We want to apply the\n\t\t\t// calculated sizes to this header\n\t\t\tif (!scrollX) {\n\t\t\t\tdivBodyStyle.width = '100%';\n\t\t\t\tdivHeader[0].style.width = '100%';\n\t\t\t}\n\n\t\t\t$.each(_fnGetUniqueThs(settings, headerCopy), function (i, el) {\n\t\t\t\tidx = _fnVisibleToColumnIndex(settings, i);\n\t\t\t\tel.style.width = settings.aoColumns[idx].sWidth;\n\t\t\t});\n\n\t\t\tif (footer) {\n\t\t\t\t_fnApplyToChildren(function (n) {\n\t\t\t\t\tn.style.width = \"\";\n\t\t\t\t}, footerSrcEls);\n\t\t\t}\n\n\t\t\t// Size the table as a whole\n\t\t\tsanityWidth = table.outerWidth();\n\t\t\tif (scrollX === \"\") {\n\t\t\t\t// No x scrolling\n\t\t\t\ttableStyle.width = \"100%\";\n\n\t\t\t\t// IE7 will make the width of the table when 100% include the scrollbar\n\t\t\t\t// - which is shouldn't. When there is a scrollbar we need to take this\n\t\t\t\t// into account.\n\t\t\t\tif (ie67 && (table.find('tbody').height() > divBodyEl.offsetHeight ||\n\t\t\t\t\tdivBody.css('overflow-y') == \"scroll\")\n\t\t\t\t) {\n\t\t\t\t\ttableStyle.width = _fnStringToCss(table.outerWidth() - barWidth);\n\t\t\t\t}\n\n\t\t\t\t// Recalculate the sanity width\n\t\t\t\tsanityWidth = table.outerWidth();\n\t\t\t}\n\t\t\telse if (scrollXInner !== \"\") {\n\t\t\t\t// legacy x scroll inner has been given - use it\n\t\t\t\ttableStyle.width = _fnStringToCss(scrollXInner);\n\n\t\t\t\t// Recalculate the sanity width\n\t\t\t\tsanityWidth = table.outerWidth();\n\t\t\t}\n\n\t\t\t// Hidden header should have zero height, so remove padding and borders. Then\n\t\t\t// set the width based on the real headers\n\n\t\t\t// Apply all styles in one pass\n\t\t\t_fnApplyToChildren(zeroOut, headerSrcEls);\n\n\t\t\t// Read all widths in next pass\n\t\t\t_fnApplyToChildren(function (nSizer) {\n\t\t\t\theaderContent.push(nSizer.innerHTML);\n\t\t\t\theaderWidths.push(_fnStringToCss($(nSizer).css('width')));\n\t\t\t}, headerSrcEls);\n\n\t\t\t// Apply all widths in final pass\n\t\t\t_fnApplyToChildren(function (nToSize, i) {\n\t\t\t\t// Only apply widths to the DataTables detected header cells - this\n\t\t\t\t// prevents complex headers from having contradictory sizes applied\n\t\t\t\tif ($.inArray(nToSize, dtHeaderCells) !== -1) {\n\t\t\t\t\tnToSize.style.width = headerWidths[i];\n\t\t\t\t}\n\t\t\t}, headerTrgEls);\n\n\t\t\t$(headerSrcEls).height(0);\n\n\t\t\t/* Same again with the footer if we have one */\n\t\t\tif (footer) {\n\t\t\t\t_fnApplyToChildren(zeroOut, footerSrcEls);\n\n\t\t\t\t_fnApplyToChildren(function (nSizer) {\n\t\t\t\t\tfooterContent.push(nSizer.innerHTML);\n\t\t\t\t\tfooterWidths.push(_fnStringToCss($(nSizer).css('width')));\n\t\t\t\t}, footerSrcEls);\n\n\t\t\t\t_fnApplyToChildren(function (nToSize, i) {\n\t\t\t\t\tnToSize.style.width = footerWidths[i];\n\t\t\t\t}, footerTrgEls);\n\n\t\t\t\t$(footerSrcEls).height(0);\n\t\t\t}\n\n\n\t\t\t/*\n\t\t\t * 3. Apply the measurements\n\t\t\t */\n\n\t\t\t// \"Hide\" the header and footer that we used for the sizing. We need to keep\n\t\t\t// the content of the cell so that the width applied to the header and body\n\t\t\t// both match, but we want to hide it completely. We want to also fix their\n\t\t\t// width to what they currently are\n\t\t\t_fnApplyToChildren(function (nSizer, i) {\n\t\t\t\tnSizer.innerHTML = '<div class=\"dataTables_sizing\" style=\"height:0;overflow:hidden;\">' + headerContent[i] + '</div>';\n\t\t\t\tnSizer.style.width = headerWidths[i];\n\t\t\t}, headerSrcEls);\n\n\t\t\tif (footer) {\n\t\t\t\t_fnApplyToChildren(function (nSizer, i) {\n\t\t\t\t\tnSizer.innerHTML = '<div class=\"dataTables_sizing\" style=\"height:0;overflow:hidden;\">' + footerContent[i] + '</div>';\n\t\t\t\t\tnSizer.style.width = footerWidths[i];\n\t\t\t\t}, footerSrcEls);\n\t\t\t}\n\n\t\t\t// Sanity check that the table is of a sensible width. If not then we are going to get\n\t\t\t// misalignment - try to prevent this by not allowing the table to shrink below its min width\n\t\t\tif (table.outerWidth() < sanityWidth) {\n\t\t\t\t// The min width depends upon if we have a vertical scrollbar visible or not */\n\t\t\t\tcorrection = ((divBodyEl.scrollHeight > divBodyEl.offsetHeight ||\n\t\t\t\t\tdivBody.css('overflow-y') == \"scroll\")) ?\n\t\t\t\t\tsanityWidth + barWidth :\n\t\t\t\t\tsanityWidth;\n\n\t\t\t\t// IE6/7 are a law unto themselves...\n\t\t\t\tif (ie67 && (divBodyEl.scrollHeight >\n\t\t\t\t\tdivBodyEl.offsetHeight || divBody.css('overflow-y') == \"scroll\")\n\t\t\t\t) {\n\t\t\t\t\ttableStyle.width = _fnStringToCss(correction - barWidth);\n\t\t\t\t}\n\n\t\t\t\t// And give the user a warning that we've stopped the table getting too small\n\t\t\t\tif (scrollX === \"\" || scrollXInner !== \"\") {\n\t\t\t\t\t_fnLog(settings, 1, 'Possible column misalignment', 6);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcorrection = '100%';\n\t\t\t}\n\n\t\t\t// Apply to the container elements\n\t\t\tdivBodyStyle.width = _fnStringToCss(correction);\n\t\t\tdivHeaderStyle.width = _fnStringToCss(correction);\n\n\t\t\tif (footer) {\n\t\t\t\tsettings.nScrollFoot.style.width = _fnStringToCss(correction);\n\t\t\t}\n\n\n\t\t\t/*\n\t\t\t * 4. Clean up\n\t\t\t */\n\t\t\tif (!scrollY) {\n\t\t\t\t/* IE7< puts a vertical scrollbar in place (when it shouldn't be) due to subtracting\n\t\t\t\t * the scrollbar height from the visible display, rather than adding it on. We need to\n\t\t\t\t * set the height in order to sort this. Don't want to do it in any other browsers.\n\t\t\t\t */\n\t\t\t\tif (ie67) {\n\t\t\t\t\tdivBodyStyle.height = _fnStringToCss(tableEl.offsetHeight + barWidth);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/* Finally set the width's of the header and footer tables */\n\t\t\tvar iOuterWidth = table.outerWidth();\n\t\t\tdivHeaderTable[0].style.width = _fnStringToCss(iOuterWidth);\n\t\t\tdivHeaderInnerStyle.width = _fnStringToCss(iOuterWidth);\n\n\t\t\t// Figure out if there are scrollbar present - if so then we need a the header and footer to\n\t\t\t// provide a bit more space to allow \"overflow\" scrolling (i.e. past the scrollbar)\n\t\t\tvar bScrolling = table.height() > divBodyEl.clientHeight || divBody.css('overflow-y') == \"scroll\";\n\t\t\tvar padding = 'padding' + (browser.bScrollbarLeft ? 'Left' : 'Right');\n\t\t\tdivHeaderInnerStyle[padding] = bScrolling ? barWidth + \"px\" : \"0px\";\n\n\t\t\tif (footer) {\n\t\t\t\tdivFooterTable[0].style.width = _fnStringToCss(iOuterWidth);\n\t\t\t\tdivFooterInner[0].style.width = _fnStringToCss(iOuterWidth);\n\t\t\t\tdivFooterInner[0].style[padding] = bScrolling ? barWidth + \"px\" : \"0px\";\n\t\t\t}\n\n\t\t\t// Correct DOM ordering for colgroup - comes before the thead\n\t\t\ttable.children('colgroup').insertBefore(table.children('thead'));\n\n\t\t\t/* Adjust the position of the header in case we loose the y-scrollbar */\n\t\t\tdivBody.scroll();\n\n\t\t\t// If sorting or filtering has occurred, jump the scrolling back to the top\n\t\t\t// only if we aren't holding the position\n\t\t\tif ((settings.bSorted || settings.bFiltered) && !settings._drawHold) {\n\t\t\t\tdivBodyEl.scrollTop = 0;\n\t\t\t}\n\t\t}\n\n\n\n\t\t/**\n\t\t * Apply a given function to the display child nodes of an element array (typically\n\t\t * TD children of TR rows\n\t\t *  @param {function} fn Method to apply to the objects\n\t\t *  @param array {nodes} an1 List of elements to look through for display children\n\t\t *  @param array {nodes} an2 Another list (identical structure to the first) - optional\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnApplyToChildren(fn, an1, an2) {\n\t\t\tvar index = 0, i = 0, iLen = an1.length;\n\t\t\tvar nNode1, nNode2;\n\n\t\t\twhile (i < iLen) {\n\t\t\t\tnNode1 = an1[i].firstChild;\n\t\t\t\tnNode2 = an2 ? an2[i].firstChild : null;\n\n\t\t\t\twhile (nNode1) {\n\t\t\t\t\tif (nNode1.nodeType === 1) {\n\t\t\t\t\t\tif (an2) {\n\t\t\t\t\t\t\tfn(nNode1, nNode2, index);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tfn(nNode1, index);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t}\n\n\t\t\t\t\tnNode1 = nNode1.nextSibling;\n\t\t\t\t\tnNode2 = an2 ? nNode2.nextSibling : null;\n\t\t\t\t}\n\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\n\n\n\t\tvar __re_html_remove = /<.*?>/g;\n\n\n\t\t/**\n\t\t * Calculate the width of columns for the table\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnCalculateColumnWidths(oSettings) {\n\t\t\tvar\n\t\t\t\ttable = oSettings.nTable,\n\t\t\t\tcolumns = oSettings.aoColumns,\n\t\t\t\tscroll = oSettings.oScroll,\n\t\t\t\tscrollY = scroll.sY,\n\t\t\t\tscrollX = scroll.sX,\n\t\t\t\tscrollXInner = scroll.sXInner,\n\t\t\t\tcolumnCount = columns.length,\n\t\t\t\tvisibleColumns = _fnGetColumns(oSettings, 'bVisible'),\n\t\t\t\theaderCells = $('th', oSettings.nTHead),\n\t\t\t\ttableWidthAttr = table.getAttribute('width'), // from DOM element\n\t\t\t\ttableContainer = table.parentNode,\n\t\t\t\tuserInputs = false,\n\t\t\t\ti, column, columnIdx, width, outerWidth,\n\t\t\t\tbrowser = oSettings.oBrowser,\n\t\t\t\tie67 = browser.bScrollOversize;\n\n\t\t\tvar styleWidth = table.style.width;\n\t\t\tif (styleWidth && styleWidth.indexOf('%') !== -1) {\n\t\t\t\ttableWidthAttr = styleWidth;\n\t\t\t}\n\n\t\t\t/* Convert any user input sizes into pixel sizes */\n\t\t\tfor (i = 0; i < visibleColumns.length; i++) {\n\t\t\t\tcolumn = columns[visibleColumns[i]];\n\n\t\t\t\tif (column.sWidth !== null) {\n\t\t\t\t\tcolumn.sWidth = _fnConvertToWidth(column.sWidthOrig, tableContainer);\n\n\t\t\t\t\tuserInputs = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/* If the number of columns in the DOM equals the number that we have to\n\t\t\t * process in DataTables, then we can use the offsets that are created by\n\t\t\t * the web- browser. No custom sizes can be set in order for this to happen,\n\t\t\t * nor scrolling used\n\t\t\t */\n\t\t\tif (ie67 || !userInputs && !scrollX && !scrollY &&\n\t\t\t\tcolumnCount == _fnVisbleColumns(oSettings) &&\n\t\t\t\tcolumnCount == headerCells.length\n\t\t\t) {\n\t\t\t\tfor (i = 0; i < columnCount; i++) {\n\t\t\t\t\tvar colIdx = _fnVisibleToColumnIndex(oSettings, i);\n\n\t\t\t\t\tif (colIdx !== null) {\n\t\t\t\t\t\tcolumns[colIdx].sWidth = _fnStringToCss(headerCells.eq(i).width());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Otherwise construct a single row, worst case, table with the widest\n\t\t\t\t// node in the data, assign any user defined widths, then insert it into\n\t\t\t\t// the DOM and allow the browser to do all the hard work of calculating\n\t\t\t\t// table widths\n\t\t\t\tvar tmpTable = $(table).clone() // don't use cloneNode - IE8 will remove events on the main table\n\t\t\t\t\t.css('visibility', 'hidden')\n\t\t\t\t\t.removeAttr('id');\n\n\t\t\t\t// Clean up the table body\n\t\t\t\ttmpTable.find('tbody tr').remove();\n\t\t\t\tvar tr = $('<tr/>').appendTo(tmpTable.find('tbody'));\n\n\t\t\t\t// Clone the table header and footer - we can't use the header / footer\n\t\t\t\t// from the cloned table, since if scrolling is active, the table's\n\t\t\t\t// real header and footer are contained in different table tags\n\t\t\t\ttmpTable.find('thead, tfoot').remove();\n\t\t\t\ttmpTable\n\t\t\t\t\t.append($(oSettings.nTHead).clone())\n\t\t\t\t\t.append($(oSettings.nTFoot).clone());\n\n\t\t\t\t// Remove any assigned widths from the footer (from scrolling)\n\t\t\t\ttmpTable.find('tfoot th, tfoot td').css('width', '');\n\n\t\t\t\t// Apply custom sizing to the cloned header\n\t\t\t\theaderCells = _fnGetUniqueThs(oSettings, tmpTable.find('thead')[0]);\n\n\t\t\t\tfor (i = 0; i < visibleColumns.length; i++) {\n\t\t\t\t\tcolumn = columns[visibleColumns[i]];\n\n\t\t\t\t\theaderCells[i].style.width = column.sWidthOrig !== null && column.sWidthOrig !== '' ?\n\t\t\t\t\t\t_fnStringToCss(column.sWidthOrig) :\n\t\t\t\t\t\t'';\n\n\t\t\t\t\t// For scrollX we need to force the column width otherwise the\n\t\t\t\t\t// browser will collapse it. If this width is smaller than the\n\t\t\t\t\t// width the column requires, then it will have no effect\n\t\t\t\t\tif (column.sWidthOrig && scrollX) {\n\t\t\t\t\t\t$(headerCells[i]).append($('<div/>').css({\n\t\t\t\t\t\t\twidth: column.sWidthOrig,\n\t\t\t\t\t\t\tmargin: 0,\n\t\t\t\t\t\t\tpadding: 0,\n\t\t\t\t\t\t\tborder: 0,\n\t\t\t\t\t\t\theight: 1\n\t\t\t\t\t\t}));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Find the widest cell for each column and put it into the table\n\t\t\t\tif (oSettings.aoData.length) {\n\t\t\t\t\tfor (i = 0; i < visibleColumns.length; i++) {\n\t\t\t\t\t\tcolumnIdx = visibleColumns[i];\n\t\t\t\t\t\tcolumn = columns[columnIdx];\n\n\t\t\t\t\t\t$(_fnGetWidestNode(oSettings, columnIdx))\n\t\t\t\t\t\t\t.clone(false)\n\t\t\t\t\t\t\t.append(column.sContentPadding)\n\t\t\t\t\t\t\t.appendTo(tr);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Tidy the temporary table - remove name attributes so there aren't\n\t\t\t\t// duplicated in the dom (radio elements for example)\n\t\t\t\t$('[name]', tmpTable).removeAttr('name');\n\n\t\t\t\t// Table has been built, attach to the document so we can work with it.\n\t\t\t\t// A holding element is used, positioned at the top of the container\n\t\t\t\t// with minimal height, so it has no effect on if the container scrolls\n\t\t\t\t// or not. Otherwise it might trigger scrolling when it actually isn't\n\t\t\t\t// needed\n\t\t\t\tvar holder = $('<div/>').css(scrollX || scrollY ?\n\t\t\t\t\t{\n\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\theight: 1,\n\t\t\t\t\t\tright: 0,\n\t\t\t\t\t\toverflow: 'hidden'\n\t\t\t\t\t} :\n\t\t\t\t\t{}\n\t\t\t\t)\n\t\t\t\t\t.append(tmpTable)\n\t\t\t\t\t.appendTo(tableContainer);\n\n\t\t\t\t// When scrolling (X or Y) we want to set the width of the table as\n\t\t\t\t// appropriate. However, when not scrolling leave the table width as it\n\t\t\t\t// is. This results in slightly different, but I think correct behaviour\n\t\t\t\tif (scrollX && scrollXInner) {\n\t\t\t\t\ttmpTable.width(scrollXInner);\n\t\t\t\t}\n\t\t\t\telse if (scrollX) {\n\t\t\t\t\ttmpTable.css('width', 'auto');\n\t\t\t\t\ttmpTable.removeAttr('width');\n\n\t\t\t\t\t// If there is no width attribute or style, then allow the table to\n\t\t\t\t\t// collapse\n\t\t\t\t\tif (tmpTable.width() < tableContainer.clientWidth && tableWidthAttr) {\n\t\t\t\t\t\ttmpTable.width(tableContainer.clientWidth);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (scrollY) {\n\t\t\t\t\ttmpTable.width(tableContainer.clientWidth);\n\t\t\t\t}\n\t\t\t\telse if (tableWidthAttr) {\n\t\t\t\t\ttmpTable.width(tableWidthAttr);\n\t\t\t\t}\n\n\t\t\t\t// Get the width of each column in the constructed table - we need to\n\t\t\t\t// know the inner width (so it can be assigned to the other table's\n\t\t\t\t// cells) and the outer width so we can calculate the full width of the\n\t\t\t\t// table. This is safe since DataTables requires a unique cell for each\n\t\t\t\t// column, but if ever a header can span multiple columns, this will\n\t\t\t\t// need to be modified.\n\t\t\t\tvar total = 0;\n\t\t\t\tfor (i = 0; i < visibleColumns.length; i++) {\n\t\t\t\t\tvar cell = $(headerCells[i]);\n\t\t\t\t\tvar border = cell.outerWidth() - cell.width();\n\n\t\t\t\t\t// Use getBounding... where possible (not IE8-) because it can give\n\t\t\t\t\t// sub-pixel accuracy, which we then want to round up!\n\t\t\t\t\tvar bounding = browser.bBounding ?\n\t\t\t\t\t\tMath.ceil(headerCells[i].getBoundingClientRect().width) :\n\t\t\t\t\t\tcell.outerWidth();\n\n\t\t\t\t\t// Total is tracked to remove any sub-pixel errors as the outerWidth\n\t\t\t\t\t// of the table might not equal the total given here (IE!).\n\t\t\t\t\ttotal += bounding;\n\n\t\t\t\t\t// Width for each column to use\n\t\t\t\t\tcolumns[visibleColumns[i]].sWidth = _fnStringToCss(bounding - border);\n\t\t\t\t}\n\n\t\t\t\ttable.style.width = _fnStringToCss(total);\n\n\t\t\t\t// Finished with the table - ditch it\n\t\t\t\tholder.remove();\n\t\t\t}\n\n\t\t\t// If there is a width attr, we want to attach an event listener which\n\t\t\t// allows the table sizing to automatically adjust when the window is\n\t\t\t// resized. Use the width attr rather than CSS, since we can't know if the\n\t\t\t// CSS is a relative value or absolute - DOM read is always px.\n\t\t\tif (tableWidthAttr) {\n\t\t\t\ttable.style.width = _fnStringToCss(tableWidthAttr);\n\t\t\t}\n\n\t\t\tif ((tableWidthAttr || scrollX) && !oSettings._reszEvt) {\n\t\t\t\tvar bindResize = function () {\n\t\t\t\t\t$(window).on('resize.DT-' + oSettings.sInstance, _fnThrottle(function () {\n\t\t\t\t\t\t_fnAdjustColumnSizing(oSettings);\n\t\t\t\t\t}));\n\t\t\t\t};\n\n\t\t\t\t// IE6/7 will crash if we bind a resize event handler on page load.\n\t\t\t\t// To be removed in 1.11 which drops IE6/7 support\n\t\t\t\tif (ie67) {\n\t\t\t\t\tsetTimeout(bindResize, 1000);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tbindResize();\n\t\t\t\t}\n\n\t\t\t\toSettings._reszEvt = true;\n\t\t\t}\n\t\t}\n\n\n\t\t/**\n\t\t * Throttle the calls to a function. Arguments and context are maintained for\n\t\t * the throttled function\n\t\t *  @param {function} fn Function to be called\n\t\t *  @param {int} [freq=200] call frequency in mS\n\t\t *  @returns {function} wrapped function\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tvar _fnThrottle = DataTable.util.throttle;\n\n\n\t\t/**\n\t\t * Convert a CSS unit width to pixels (e.g. 2em)\n\t\t *  @param {string} width width to be converted\n\t\t *  @param {node} parent parent to get the with for (required for relative widths) - optional\n\t\t *  @returns {int} width in pixels\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnConvertToWidth(width, parent) {\n\t\t\tif (!width) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tvar n = $('<div/>')\n\t\t\t\t.css('width', _fnStringToCss(width))\n\t\t\t\t.appendTo(parent || document.body);\n\n\t\t\tvar val = n[0].offsetWidth;\n\t\t\tn.remove();\n\n\t\t\treturn val;\n\t\t}\n\n\n\t\t/**\n\t\t * Get the widest node\n\t\t *  @param {object} settings dataTables settings object\n\t\t *  @param {int} colIdx column of interest\n\t\t *  @returns {node} widest table node\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnGetWidestNode(settings, colIdx) {\n\t\t\tvar idx = _fnGetMaxLenString(settings, colIdx);\n\t\t\tif (idx < 0) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar data = settings.aoData[idx];\n\t\t\treturn !data.nTr ? // Might not have been created when deferred rendering\n\t\t\t\t$('<td/>').html(_fnGetCellData(settings, idx, colIdx, 'display'))[0] :\n\t\t\t\tdata.anCells[colIdx];\n\t\t}\n\n\n\t\t/**\n\t\t * Get the maximum strlen for each data column\n\t\t *  @param {object} settings dataTables settings object\n\t\t *  @param {int} colIdx column of interest\n\t\t *  @returns {string} max string length for each column\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnGetMaxLenString(settings, colIdx) {\n\t\t\tvar s, max = -1, maxIdx = -1;\n\n\t\t\tfor (var i = 0, ien = settings.aoData.length; i < ien; i++) {\n\t\t\t\ts = _fnGetCellData(settings, i, colIdx, 'display') + '';\n\t\t\t\ts = s.replace(__re_html_remove, '');\n\t\t\t\ts = s.replace(/&nbsp;/g, ' ');\n\n\t\t\t\tif (s.length > max) {\n\t\t\t\t\tmax = s.length;\n\t\t\t\t\tmaxIdx = i;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn maxIdx;\n\t\t}\n\n\n\t\t/**\n\t\t * Append a CSS unit (only if required) to a string\n\t\t *  @param {string} value to css-ify\n\t\t *  @returns {string} value with css unit\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnStringToCss(s) {\n\t\t\tif (s === null) {\n\t\t\t\treturn '0px';\n\t\t\t}\n\n\t\t\tif (typeof s == 'number') {\n\t\t\t\treturn s < 0 ?\n\t\t\t\t\t'0px' :\n\t\t\t\t\ts + 'px';\n\t\t\t}\n\n\t\t\t// Check it has a unit character already\n\t\t\treturn s.match(/\\d$/) ?\n\t\t\t\ts + 'px' :\n\t\t\t\ts;\n\t\t}\n\n\n\n\t\tfunction _fnSortFlatten(settings) {\n\t\t\tvar\n\t\t\t\ti, iLen, k, kLen,\n\t\t\t\taSort = [],\n\t\t\t\taiOrig = [],\n\t\t\t\taoColumns = settings.aoColumns,\n\t\t\t\taDataSort, iCol, sType, srcCol,\n\t\t\t\tfixed = settings.aaSortingFixed,\n\t\t\t\tfixedObj = $.isPlainObject(fixed),\n\t\t\t\tnestedSort = [],\n\t\t\t\tadd = function (a) {\n\t\t\t\t\tif (a.length && !$.isArray(a[0])) {\n\t\t\t\t\t\t// 1D array\n\t\t\t\t\t\tnestedSort.push(a);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// 2D array\n\t\t\t\t\t\t$.merge(nestedSort, a);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t// Build the sort array, with pre-fix and post-fix options if they have been\n\t\t\t// specified\n\t\t\tif ($.isArray(fixed)) {\n\t\t\t\tadd(fixed);\n\t\t\t}\n\n\t\t\tif (fixedObj && fixed.pre) {\n\t\t\t\tadd(fixed.pre);\n\t\t\t}\n\n\t\t\tadd(settings.aaSorting);\n\n\t\t\tif (fixedObj && fixed.post) {\n\t\t\t\tadd(fixed.post);\n\t\t\t}\n\n\t\t\tfor (i = 0; i < nestedSort.length; i++) {\n\t\t\t\tsrcCol = nestedSort[i][0];\n\t\t\t\taDataSort = aoColumns[srcCol].aDataSort;\n\n\t\t\t\tfor (k = 0, kLen = aDataSort.length; k < kLen; k++) {\n\t\t\t\t\tiCol = aDataSort[k];\n\t\t\t\t\tsType = aoColumns[iCol].sType || 'string';\n\n\t\t\t\t\tif (nestedSort[i]._idx === undefined) {\n\t\t\t\t\t\tnestedSort[i]._idx = $.inArray(nestedSort[i][1], aoColumns[iCol].asSorting);\n\t\t\t\t\t}\n\n\t\t\t\t\taSort.push({\n\t\t\t\t\t\tsrc: srcCol,\n\t\t\t\t\t\tcol: iCol,\n\t\t\t\t\t\tdir: nestedSort[i][1],\n\t\t\t\t\t\tindex: nestedSort[i]._idx,\n\t\t\t\t\t\ttype: sType,\n\t\t\t\t\t\tformatter: DataTable.ext.type.order[sType + \"-pre\"]\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn aSort;\n\t\t}\n\n\t\t/**\n\t\t * Change the order of the table\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @memberof DataTable#oApi\n\t\t *  @todo This really needs split up!\n\t\t */\n\t\tfunction _fnSort(oSettings) {\n\t\t\tvar\n\t\t\t\ti, ien, iLen, j, jLen, k, kLen,\n\t\t\t\tsDataType, nTh,\n\t\t\t\taiOrig = [],\n\t\t\t\toExtSort = DataTable.ext.type.order,\n\t\t\t\taoData = oSettings.aoData,\n\t\t\t\taoColumns = oSettings.aoColumns,\n\t\t\t\taDataSort, data, iCol, sType, oSort,\n\t\t\t\tformatters = 0,\n\t\t\t\tsortCol,\n\t\t\t\tdisplayMaster = oSettings.aiDisplayMaster,\n\t\t\t\taSort;\n\n\t\t\t// Resolve any column types that are unknown due to addition or invalidation\n\t\t\t// @todo Can this be moved into a 'data-ready' handler which is called when\n\t\t\t//   data is going to be used in the table?\n\t\t\t_fnColumnTypes(oSettings);\n\n\t\t\taSort = _fnSortFlatten(oSettings);\n\n\t\t\tfor (i = 0, ien = aSort.length; i < ien; i++) {\n\t\t\t\tsortCol = aSort[i];\n\n\t\t\t\t// Track if we can use the fast sort algorithm\n\t\t\t\tif (sortCol.formatter) {\n\t\t\t\t\tformatters++;\n\t\t\t\t}\n\n\t\t\t\t// Load the data needed for the sort, for each cell\n\t\t\t\t_fnSortData(oSettings, sortCol.col);\n\t\t\t}\n\n\t\t\t/* No sorting required if server-side or no sorting array */\n\t\t\tif (_fnDataSource(oSettings) != 'ssp' && aSort.length !== 0) {\n\t\t\t\t// Create a value - key array of the current row positions such that we can use their\n\t\t\t\t// current position during the sort, if values match, in order to perform stable sorting\n\t\t\t\tfor (i = 0, iLen = displayMaster.length; i < iLen; i++) {\n\t\t\t\t\taiOrig[displayMaster[i]] = i;\n\t\t\t\t}\n\n\t\t\t\t/* Do the sort - here we want multi-column sorting based on a given data source (column)\n\t\t\t\t * and sorting function (from oSort) in a certain direction. It's reasonably complex to\n\t\t\t\t * follow on it's own, but this is what we want (example two column sorting):\n\t\t\t\t *  fnLocalSorting = function(a,b){\n\t\t\t\t *    var iTest;\n\t\t\t\t *    iTest = oSort['string-asc']('data11', 'data12');\n\t\t\t\t *      if (iTest !== 0)\n\t\t\t\t *        return iTest;\n\t\t\t\t *    iTest = oSort['numeric-desc']('data21', 'data22');\n\t\t\t\t *    if (iTest !== 0)\n\t\t\t\t *      return iTest;\n\t\t\t\t *    return oSort['numeric-asc']( aiOrig[a], aiOrig[b] );\n\t\t\t\t *  }\n\t\t\t\t * Basically we have a test for each sorting column, if the data in that column is equal,\n\t\t\t\t * test the next column. If all columns match, then we use a numeric sort on the row\n\t\t\t\t * positions in the original data array to provide a stable sort.\n\t\t\t\t *\n\t\t\t\t * Note - I know it seems excessive to have two sorting methods, but the first is around\n\t\t\t\t * 15% faster, so the second is only maintained for backwards compatibility with sorting\n\t\t\t\t * methods which do not have a pre-sort formatting function.\n\t\t\t\t */\n\t\t\t\tif (formatters === aSort.length) {\n\t\t\t\t\t// All sort types have formatting functions\n\t\t\t\t\tdisplayMaster.sort(function (a, b) {\n\t\t\t\t\t\tvar\n\t\t\t\t\t\t\tx, y, k, test, sort,\n\t\t\t\t\t\t\tlen = aSort.length,\n\t\t\t\t\t\t\tdataA = aoData[a]._aSortData,\n\t\t\t\t\t\t\tdataB = aoData[b]._aSortData;\n\n\t\t\t\t\t\tfor (k = 0; k < len; k++) {\n\t\t\t\t\t\t\tsort = aSort[k];\n\n\t\t\t\t\t\t\tx = dataA[sort.col];\n\t\t\t\t\t\t\ty = dataB[sort.col];\n\n\t\t\t\t\t\t\ttest = x < y ? -1 : x > y ? 1 : 0;\n\t\t\t\t\t\t\tif (test !== 0) {\n\t\t\t\t\t\t\t\treturn sort.dir === 'asc' ? test : -test;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tx = aiOrig[a];\n\t\t\t\t\t\ty = aiOrig[b];\n\t\t\t\t\t\treturn x < y ? -1 : x > y ? 1 : 0;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Depreciated - remove in 1.11 (providing a plug-in option)\n\t\t\t\t\t// Not all sort types have formatting methods, so we have to call their sorting\n\t\t\t\t\t// methods.\n\t\t\t\t\tdisplayMaster.sort(function (a, b) {\n\t\t\t\t\t\tvar\n\t\t\t\t\t\t\tx, y, k, l, test, sort, fn,\n\t\t\t\t\t\t\tlen = aSort.length,\n\t\t\t\t\t\t\tdataA = aoData[a]._aSortData,\n\t\t\t\t\t\t\tdataB = aoData[b]._aSortData;\n\n\t\t\t\t\t\tfor (k = 0; k < len; k++) {\n\t\t\t\t\t\t\tsort = aSort[k];\n\n\t\t\t\t\t\t\tx = dataA[sort.col];\n\t\t\t\t\t\t\ty = dataB[sort.col];\n\n\t\t\t\t\t\t\tfn = oExtSort[sort.type + \"-\" + sort.dir] || oExtSort[\"string-\" + sort.dir];\n\t\t\t\t\t\t\ttest = fn(x, y);\n\t\t\t\t\t\t\tif (test !== 0) {\n\t\t\t\t\t\t\t\treturn test;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tx = aiOrig[a];\n\t\t\t\t\t\ty = aiOrig[b];\n\t\t\t\t\t\treturn x < y ? -1 : x > y ? 1 : 0;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/* Tell the draw function that we have sorted the data */\n\t\t\toSettings.bSorted = true;\n\t\t}\n\n\n\t\tfunction _fnSortAria(settings) {\n\t\t\tvar label;\n\t\t\tvar nextSort;\n\t\t\tvar columns = settings.aoColumns;\n\t\t\tvar aSort = _fnSortFlatten(settings);\n\t\t\tvar oAria = settings.oLanguage.oAria;\n\n\t\t\t// ARIA attributes - need to loop all columns, to update all (removing old\n\t\t\t// attributes as needed)\n\t\t\tfor (var i = 0, iLen = columns.length; i < iLen; i++) {\n\t\t\t\tvar col = columns[i];\n\t\t\t\tvar asSorting = col.asSorting;\n\t\t\t\tvar sTitle = col.sTitle.replace(/<.*?>/g, \"\");\n\t\t\t\tvar th = col.nTh;\n\n\t\t\t\t// IE7 is throwing an error when setting these properties with jQuery's\n\t\t\t\t// attr() and removeAttr() methods...\n\t\t\t\tth.removeAttribute('aria-sort');\n\n\t\t\t\t/* In ARIA only the first sorting column can be marked as sorting - no multi-sort option */\n\t\t\t\tif (col.bSortable) {\n\t\t\t\t\tif (aSort.length > 0 && aSort[0].col == i) {\n\t\t\t\t\t\tth.setAttribute('aria-sort', aSort[0].dir == \"asc\" ? \"ascending\" : \"descending\");\n\t\t\t\t\t\tnextSort = asSorting[aSort[0].index + 1] || asSorting[0];\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnextSort = asSorting[0];\n\t\t\t\t\t}\n\n\t\t\t\t\tlabel = sTitle + (nextSort === \"asc\" ?\n\t\t\t\t\t\toAria.sSortAscending :\n\t\t\t\t\t\toAria.sSortDescending\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel = sTitle;\n\t\t\t\t}\n\n\t\t\t\tth.setAttribute('aria-label', label);\n\t\t\t}\n\t\t}\n\n\n\t\t/**\n\t\t * Function to run on user sort request\n\t\t *  @param {object} settings dataTables settings object\n\t\t *  @param {node} attachTo node to attach the handler to\n\t\t *  @param {int} colIdx column sorting index\n\t\t *  @param {boolean} [append=false] Append the requested sort to the existing\n\t\t *    sort if true (i.e. multi-column sort)\n\t\t *  @param {function} [callback] callback function\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnSortListener(settings, colIdx, append, callback) {\n\t\t\tvar col = settings.aoColumns[colIdx];\n\t\t\tvar sorting = settings.aaSorting;\n\t\t\tvar asSorting = col.asSorting;\n\t\t\tvar nextSortIdx;\n\t\t\tvar next = function (a, overflow) {\n\t\t\t\tvar idx = a._idx;\n\t\t\t\tif (idx === undefined) {\n\t\t\t\t\tidx = $.inArray(a[1], asSorting);\n\t\t\t\t}\n\n\t\t\t\treturn idx + 1 < asSorting.length ?\n\t\t\t\t\tidx + 1 :\n\t\t\t\t\toverflow ?\n\t\t\t\t\t\tnull :\n\t\t\t\t\t\t0;\n\t\t\t};\n\n\t\t\t// Convert to 2D array if needed\n\t\t\tif (typeof sorting[0] === 'number') {\n\t\t\t\tsorting = settings.aaSorting = [sorting];\n\t\t\t}\n\n\t\t\t// If appending the sort then we are multi-column sorting\n\t\t\tif (append && settings.oFeatures.bSortMulti) {\n\t\t\t\t// Are we already doing some kind of sort on this column?\n\t\t\t\tvar sortIdx = $.inArray(colIdx, _pluck(sorting, '0'));\n\n\t\t\t\tif (sortIdx !== -1) {\n\t\t\t\t\t// Yes, modify the sort\n\t\t\t\t\tnextSortIdx = next(sorting[sortIdx], true);\n\n\t\t\t\t\tif (nextSortIdx === null && sorting.length === 1) {\n\t\t\t\t\t\tnextSortIdx = 0; // can't remove sorting completely\n\t\t\t\t\t}\n\n\t\t\t\t\tif (nextSortIdx === null) {\n\t\t\t\t\t\tsorting.splice(sortIdx, 1);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tsorting[sortIdx][1] = asSorting[nextSortIdx];\n\t\t\t\t\t\tsorting[sortIdx]._idx = nextSortIdx;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// No sort on this column yet\n\t\t\t\t\tsorting.push([colIdx, asSorting[0], 0]);\n\t\t\t\t\tsorting[sorting.length - 1]._idx = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (sorting.length && sorting[0][0] == colIdx) {\n\t\t\t\t// Single column - already sorting on this column, modify the sort\n\t\t\t\tnextSortIdx = next(sorting[0]);\n\n\t\t\t\tsorting.length = 1;\n\t\t\t\tsorting[0][1] = asSorting[nextSortIdx];\n\t\t\t\tsorting[0]._idx = nextSortIdx;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Single column - sort only on this column\n\t\t\t\tsorting.length = 0;\n\t\t\t\tsorting.push([colIdx, asSorting[0]]);\n\t\t\t\tsorting[0]._idx = 0;\n\t\t\t}\n\n\t\t\t// Run the sort by calling a full redraw\n\t\t\t_fnReDraw(settings);\n\n\t\t\t// callback used for async user interaction\n\t\t\tif (typeof callback == 'function') {\n\t\t\t\tcallback(settings);\n\t\t\t}\n\t\t}\n\n\n\t\t/**\n\t\t * Attach a sort handler (click) to a node\n\t\t *  @param {object} settings dataTables settings object\n\t\t *  @param {node} attachTo node to attach the handler to\n\t\t *  @param {int} colIdx column sorting index\n\t\t *  @param {function} [callback] callback function\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnSortAttachListener(settings, attachTo, colIdx, callback) {\n\t\t\tvar col = settings.aoColumns[colIdx];\n\n\t\t\t_fnBindAction(attachTo, {}, function (e) {\n\t\t\t\t/* If the column is not sortable - don't to anything */\n\t\t\t\tif (col.bSortable === false) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// If processing is enabled use a timeout to allow the processing\n\t\t\t\t// display to be shown - otherwise to it synchronously\n\t\t\t\tif (settings.oFeatures.bProcessing) {\n\t\t\t\t\t_fnProcessingDisplay(settings, true);\n\n\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\t_fnSortListener(settings, colIdx, e.shiftKey, callback);\n\n\t\t\t\t\t\t// In server-side processing, the draw callback will remove the\n\t\t\t\t\t\t// processing display\n\t\t\t\t\t\tif (_fnDataSource(settings) !== 'ssp') {\n\t\t\t\t\t\t\t_fnProcessingDisplay(settings, false);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, 0);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t_fnSortListener(settings, colIdx, e.shiftKey, callback);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\n\t\t/**\n\t\t * Set the sorting classes on table's body, Note: it is safe to call this function\n\t\t * when bSort and bSortClasses are false\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnSortingClasses(settings) {\n\t\t\tvar oldSort = settings.aLastSort;\n\t\t\tvar sortClass = settings.oClasses.sSortColumn;\n\t\t\tvar sort = _fnSortFlatten(settings);\n\t\t\tvar features = settings.oFeatures;\n\t\t\tvar i, ien, colIdx;\n\n\t\t\tif (features.bSort && features.bSortClasses) {\n\t\t\t\t// Remove old sorting classes\n\t\t\t\tfor (i = 0, ien = oldSort.length; i < ien; i++) {\n\t\t\t\t\tcolIdx = oldSort[i].src;\n\n\t\t\t\t\t// Remove column sorting\n\t\t\t\t\t$(_pluck(settings.aoData, 'anCells', colIdx))\n\t\t\t\t\t\t.removeClass(sortClass + (i < 2 ? i + 1 : 3));\n\t\t\t\t}\n\n\t\t\t\t// Add new column sorting\n\t\t\t\tfor (i = 0, ien = sort.length; i < ien; i++) {\n\t\t\t\t\tcolIdx = sort[i].src;\n\n\t\t\t\t\t$(_pluck(settings.aoData, 'anCells', colIdx))\n\t\t\t\t\t\t.addClass(sortClass + (i < 2 ? i + 1 : 3));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tsettings.aLastSort = sort;\n\t\t}\n\n\n\t\t// Get the data to sort a column, be it from cache, fresh (populating the\n\t\t// cache), or from a sort formatter\n\t\tfunction _fnSortData(settings, idx) {\n\t\t\t// Custom sorting function - provided by the sort data type\n\t\t\tvar column = settings.aoColumns[idx];\n\t\t\tvar customSort = DataTable.ext.order[column.sSortDataType];\n\t\t\tvar customData;\n\n\t\t\tif (customSort) {\n\t\t\t\tcustomData = customSort.call(settings.oInstance, settings, idx,\n\t\t\t\t\t_fnColumnIndexToVisible(settings, idx)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Use / populate cache\n\t\t\tvar row, cellData;\n\t\t\tvar formatter = DataTable.ext.type.order[column.sType + \"-pre\"];\n\n\t\t\tfor (var i = 0, ien = settings.aoData.length; i < ien; i++) {\n\t\t\t\trow = settings.aoData[i];\n\n\t\t\t\tif (!row._aSortData) {\n\t\t\t\t\trow._aSortData = [];\n\t\t\t\t}\n\n\t\t\t\tif (!row._aSortData[idx] || customSort) {\n\t\t\t\t\tcellData = customSort ?\n\t\t\t\t\t\tcustomData[i] : // If there was a custom sort function, use data from there\n\t\t\t\t\t\t_fnGetCellData(settings, i, idx, 'sort');\n\n\t\t\t\t\trow._aSortData[idx] = formatter ?\n\t\t\t\t\t\tformatter(cellData) :\n\t\t\t\t\t\tcellData;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\n\t\t/**\n\t\t * Save the state of a table\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnSaveState(settings) {\n\t\t\tif (!settings.oFeatures.bStateSave || settings.bDestroying) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t/* Store the interesting variables */\n\t\t\tvar state = {\n\t\t\t\ttime: +new Date(),\n\t\t\t\tstart: settings._iDisplayStart,\n\t\t\t\tlength: settings._iDisplayLength,\n\t\t\t\torder: $.extend(true, [], settings.aaSorting),\n\t\t\t\tsearch: _fnSearchToCamel(settings.oPreviousSearch),\n\t\t\t\tcolumns: $.map(settings.aoColumns, function (col, i) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tvisible: col.bVisible,\n\t\t\t\t\t\tsearch: _fnSearchToCamel(settings.aoPreSearchCols[i])\n\t\t\t\t\t};\n\t\t\t\t})\n\t\t\t};\n\n\t\t\t_fnCallbackFire(settings, \"aoStateSaveParams\", 'stateSaveParams', [settings, state]);\n\n\t\t\tsettings.oSavedState = state;\n\t\t\tsettings.fnStateSaveCallback.call(settings.oInstance, settings, state);\n\t\t}\n\n\n\t\t/**\n\t\t * Attempt to load a saved table state\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @param {object} oInit DataTables init object so we can override settings\n\t\t *  @param {function} callback Callback to execute when the state has been loaded\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnLoadState(settings, oInit, callback) {\n\t\t\tvar i, ien;\n\t\t\tvar columns = settings.aoColumns;\n\t\t\tvar loaded = function (s) {\n\t\t\t\tif (!s || !s.time) {\n\t\t\t\t\tcallback();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Allow custom and plug-in manipulation functions to alter the saved data set and\n\t\t\t\t// cancelling of loading by returning false\n\t\t\t\tvar abStateLoad = _fnCallbackFire(settings, 'aoStateLoadParams', 'stateLoadParams', [settings, s]);\n\t\t\t\tif ($.inArray(false, abStateLoad) !== -1) {\n\t\t\t\t\tcallback();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Reject old data\n\t\t\t\tvar duration = settings.iStateDuration;\n\t\t\t\tif (duration > 0 && s.time < +new Date() - (duration * 1000)) {\n\t\t\t\t\tcallback();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Number of columns have changed - all bets are off, no restore of settings\n\t\t\t\tif (s.columns && columns.length !== s.columns.length) {\n\t\t\t\t\tcallback();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Store the saved state so it might be accessed at any time\n\t\t\t\tsettings.oLoadedState = $.extend(true, {}, s);\n\n\t\t\t\t// Restore key features - todo - for 1.11 this needs to be done by\n\t\t\t\t// subscribed events\n\t\t\t\tif (s.start !== undefined) {\n\t\t\t\t\tsettings._iDisplayStart = s.start;\n\t\t\t\t\tsettings.iInitDisplayStart = s.start;\n\t\t\t\t}\n\t\t\t\tif (s.length !== undefined) {\n\t\t\t\t\tsettings._iDisplayLength = s.length;\n\t\t\t\t}\n\n\t\t\t\t// Order\n\t\t\t\tif (s.order !== undefined) {\n\t\t\t\t\tsettings.aaSorting = [];\n\t\t\t\t\t$.each(s.order, function (i, col) {\n\t\t\t\t\t\tsettings.aaSorting.push(col[0] >= columns.length ?\n\t\t\t\t\t\t\t[0, col[1]] :\n\t\t\t\t\t\t\tcol\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Search\n\t\t\t\tif (s.search !== undefined) {\n\t\t\t\t\t$.extend(settings.oPreviousSearch, _fnSearchToHung(s.search));\n\t\t\t\t}\n\n\t\t\t\t// Columns\n\t\t\t\t//\n\t\t\t\tif (s.columns) {\n\t\t\t\t\tfor (i = 0, ien = s.columns.length; i < ien; i++) {\n\t\t\t\t\t\tvar col = s.columns[i];\n\n\t\t\t\t\t\t// Visibility\n\t\t\t\t\t\tif (col.visible !== undefined) {\n\t\t\t\t\t\t\tcolumns[i].bVisible = col.visible;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Search\n\t\t\t\t\t\tif (col.search !== undefined) {\n\t\t\t\t\t\t\t$.extend(settings.aoPreSearchCols[i], _fnSearchToHung(col.search));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t_fnCallbackFire(settings, 'aoStateLoaded', 'stateLoaded', [settings, s]);\n\t\t\t\tcallback();\n\t\t\t}\n\n\t\t\tif (!settings.oFeatures.bStateSave) {\n\t\t\t\tcallback();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar state = settings.fnStateLoadCallback.call(settings.oInstance, settings, loaded);\n\n\t\t\tif (state !== undefined) {\n\t\t\t\tloaded(state);\n\t\t\t}\n\t\t\t// otherwise, wait for the loaded callback to be executed\n\t\t}\n\n\n\t\t/**\n\t\t * Return the settings object for a particular table\n\t\t *  @param {node} table table we are using as a dataTable\n\t\t *  @returns {object} Settings object - or null if not found\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnSettingsFromNode(table) {\n\t\t\tvar settings = DataTable.settings;\n\t\t\tvar idx = $.inArray(table, _pluck(settings, 'nTable'));\n\n\t\t\treturn idx !== -1 ?\n\t\t\t\tsettings[idx] :\n\t\t\t\tnull;\n\t\t}\n\n\n\t\t/**\n\t\t * Log an error message\n\t\t *  @param {object} settings dataTables settings object\n\t\t *  @param {int} level log error messages, or display them to the user\n\t\t *  @param {string} msg error message\n\t\t *  @param {int} tn Technical note id to get more information about the error.\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnLog(settings, level, msg, tn) {\n\t\t\tmsg = 'DataTables warning: ' +\n\t\t\t\t(settings ? 'table id=' + settings.sTableId + ' - ' : '') + msg;\n\n\t\t\tif (tn) {\n\t\t\t\tmsg += '. For more information about this error, please see ' +\n\t\t\t\t\t'http://datatables.net/tn/' + tn;\n\t\t\t}\n\n\t\t\tif (!level) {\n\t\t\t\t// Backwards compatibility pre 1.10\n\t\t\t\tvar ext = DataTable.ext;\n\t\t\t\tvar type = ext.sErrMode || ext.errMode;\n\n\t\t\t\tif (settings) {\n\t\t\t\t\t_fnCallbackFire(settings, null, 'error', [settings, tn, msg]);\n\t\t\t\t}\n\n\t\t\t\tif (type == 'alert') {\n\t\t\t\t\talert(msg);\n\t\t\t\t}\n\t\t\t\telse if (type == 'throw') {\n\t\t\t\t\tthrow new Error(msg);\n\t\t\t\t}\n\t\t\t\telse if (typeof type == 'function') {\n\t\t\t\t\ttype(settings, tn, msg);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (window.console && console.log) {\n\t\t\t\tconsole.log(msg);\n\t\t\t}\n\t\t}\n\n\n\t\t/**\n\t\t * See if a property is defined on one object, if so assign it to the other object\n\t\t *  @param {object} ret target object\n\t\t *  @param {object} src source object\n\t\t *  @param {string} name property\n\t\t *  @param {string} [mappedName] name to map too - optional, name used if not given\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnMap(ret, src, name, mappedName) {\n\t\t\tif ($.isArray(name)) {\n\t\t\t\t$.each(name, function (i, val) {\n\t\t\t\t\tif ($.isArray(val)) {\n\t\t\t\t\t\t_fnMap(ret, src, val[0], val[1]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t_fnMap(ret, src, val);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (mappedName === undefined) {\n\t\t\t\tmappedName = name;\n\t\t\t}\n\n\t\t\tif (src[name] !== undefined) {\n\t\t\t\tret[mappedName] = src[name];\n\t\t\t}\n\t\t}\n\n\n\t\t/**\n\t\t * Extend objects - very similar to jQuery.extend, but deep copy objects, and\n\t\t * shallow copy arrays. The reason we need to do this, is that we don't want to\n\t\t * deep copy array init values (such as aaSorting) since the dev wouldn't be\n\t\t * able to override them, but we do want to deep copy arrays.\n\t\t *  @param {object} out Object to extend\n\t\t *  @param {object} extender Object from which the properties will be applied to\n\t\t *      out\n\t\t *  @param {boolean} breakRefs If true, then arrays will be sliced to take an\n\t\t *      independent copy with the exception of the `data` or `aaData` parameters\n\t\t *      if they are present. This is so you can pass in a collection to\n\t\t *      DataTables and have that used as your data source without breaking the\n\t\t *      references\n\t\t *  @returns {object} out Reference, just for convenience - out === the return.\n\t\t *  @memberof DataTable#oApi\n\t\t *  @todo This doesn't take account of arrays inside the deep copied objects.\n\t\t */\n\t\tfunction _fnExtend(out, extender, breakRefs) {\n\t\t\tvar val;\n\n\t\t\tfor (var prop in extender) {\n\t\t\t\tif (extender.hasOwnProperty(prop)) {\n\t\t\t\t\tval = extender[prop];\n\n\t\t\t\t\tif ($.isPlainObject(val)) {\n\t\t\t\t\t\tif (!$.isPlainObject(out[prop])) {\n\t\t\t\t\t\t\tout[prop] = {};\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$.extend(true, out[prop], val);\n\t\t\t\t\t}\n\t\t\t\t\telse if (breakRefs && prop !== 'data' && prop !== 'aaData' && $.isArray(val)) {\n\t\t\t\t\t\tout[prop] = val.slice();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tout[prop] = val;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn out;\n\t\t}\n\n\n\t\t/**\n\t\t * Bind an event handers to allow a click or return key to activate the callback.\n\t\t * This is good for accessibility since a return on the keyboard will have the\n\t\t * same effect as a click, if the element has focus.\n\t\t *  @param {element} n Element to bind the action to\n\t\t *  @param {object} oData Data object to pass to the triggered function\n\t\t *  @param {function} fn Callback function for when the event is triggered\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnBindAction(n, oData, fn) {\n\t\t\t$(n)\n\t\t\t\t.on('click.DT', oData, function (e) {\n\t\t\t\t\tn.blur(); // Remove focus outline for mouse users\n\t\t\t\t\tfn(e);\n\t\t\t\t})\n\t\t\t\t.on('keypress.DT', oData, function (e) {\n\t\t\t\t\tif (e.which === 13) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tfn(e);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.on('selectstart.DT', function () {\n\t\t\t\t\t/* Take the brutal approach to cancelling text selection */\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t\t}\n\n\n\t\t/**\n\t\t * Register a callback function. Easily allows a callback function to be added to\n\t\t * an array store of callback functions that can then all be called together.\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @param {string} sStore Name of the array storage for the callbacks in oSettings\n\t\t *  @param {function} fn Function to be called back\n\t\t *  @param {string} sName Identifying name for the callback (i.e. a label)\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnCallbackReg(oSettings, sStore, fn, sName) {\n\t\t\tif (fn) {\n\t\t\t\toSettings[sStore].push({\n\t\t\t\t\t\"fn\": fn,\n\t\t\t\t\t\"sName\": sName\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\n\t\t/**\n\t\t * Fire callback functions and trigger events. Note that the loop over the\n\t\t * callback array store is done backwards! Further note that you do not want to\n\t\t * fire off triggers in time sensitive applications (for example cell creation)\n\t\t * as its slow.\n\t\t *  @param {object} settings dataTables settings object\n\t\t *  @param {string} callbackArr Name of the array storage for the callbacks in\n\t\t *      oSettings\n\t\t *  @param {string} eventName Name of the jQuery custom event to trigger. If\n\t\t *      null no trigger is fired\n\t\t *  @param {array} args Array of arguments to pass to the callback function /\n\t\t *      trigger\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnCallbackFire(settings, callbackArr, eventName, args) {\n\t\t\tvar ret = [];\n\n\t\t\tif (callbackArr) {\n\t\t\t\tret = $.map(settings[callbackArr].slice().reverse(), function (val, i) {\n\t\t\t\t\treturn val.fn.apply(settings.oInstance, args);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (eventName !== null) {\n\t\t\t\tvar e = $.Event(eventName + '.dt');\n\n\t\t\t\t$(settings.nTable).trigger(e, args);\n\n\t\t\t\tret.push(e.result);\n\t\t\t}\n\n\t\t\treturn ret;\n\t\t}\n\n\n\t\tfunction _fnLengthOverflow(settings) {\n\t\t\tvar\n\t\t\t\tstart = settings._iDisplayStart,\n\t\t\t\tend = settings.fnDisplayEnd(),\n\t\t\t\tlen = settings._iDisplayLength;\n\n\t\t\t/* If we have space to show extra rows (backing up from the end point - then do so */\n\t\t\tif (start >= end) {\n\t\t\t\tstart = end - len;\n\t\t\t}\n\n\t\t\t// Keep the start record on the current page\n\t\t\tstart -= (start % len);\n\n\t\t\tif (len === -1 || start < 0) {\n\t\t\t\tstart = 0;\n\t\t\t}\n\n\t\t\tsettings._iDisplayStart = start;\n\t\t}\n\n\n\t\tfunction _fnRenderer(settings, type) {\n\t\t\tvar renderer = settings.renderer;\n\t\t\tvar host = DataTable.ext.renderer[type];\n\n\t\t\tif ($.isPlainObject(renderer) && renderer[type]) {\n\t\t\t\t// Specific renderer for this type. If available use it, otherwise use\n\t\t\t\t// the default.\n\t\t\t\treturn host[renderer[type]] || host._;\n\t\t\t}\n\t\t\telse if (typeof renderer === 'string') {\n\t\t\t\t// Common renderer - if there is one available for this type use it,\n\t\t\t\t// otherwise use the default\n\t\t\t\treturn host[renderer] || host._;\n\t\t\t}\n\n\t\t\t// Use the default\n\t\t\treturn host._;\n\t\t}\n\n\n\t\t/**\n\t\t * Detect the data source being used for the table. Used to simplify the code\n\t\t * a little (ajax) and to make it compress a little smaller.\n\t\t *\n\t\t *  @param {object} settings dataTables settings object\n\t\t *  @returns {string} Data source\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnDataSource(settings) {\n\t\t\tif (settings.oFeatures.bServerSide) {\n\t\t\t\treturn 'ssp';\n\t\t\t}\n\t\t\telse if (settings.ajax || settings.sAjaxSource) {\n\t\t\t\treturn 'ajax';\n\t\t\t}\n\t\t\treturn 'dom';\n\t\t}\n\n\n\n\n\t\t/**\n\t\t * Computed structure of the DataTables API, defined by the options passed to\n\t\t * `DataTable.Api.register()` when building the API.\n\t\t *\n\t\t * The structure is built in order to speed creation and extension of the Api\n\t\t * objects since the extensions are effectively pre-parsed.\n\t\t *\n\t\t * The array is an array of objects with the following structure, where this\n\t\t * base array represents the Api prototype base:\n\t\t *\n\t\t *     [\n\t\t *       {\n\t\t *         name:      'data'                -- string   - Property name\n\t\t *         val:       function () {},       -- function - Api method (or undefined if just an object\n\t\t *         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n\t\t *         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n\t\t *       },\n\t\t *       {\n\t\t *         name:     'row'\n\t\t *         val:       {},\n\t\t *         methodExt: [ ... ],\n\t\t *         propExt:   [\n\t\t *           {\n\t\t *             name:      'data'\n\t\t *             val:       function () {},\n\t\t *             methodExt: [ ... ],\n\t\t *             propExt:   [ ... ]\n\t\t *           },\n\t\t *           ...\n\t\t *         ]\n\t\t *       }\n\t\t *     ]\n\t\t *\n\t\t * @type {Array}\n\t\t * @ignore\n\t\t */\n\t\tvar __apiStruct = [];\n\n\n\t\t/**\n\t\t * `Array.prototype` reference.\n\t\t *\n\t\t * @type object\n\t\t * @ignore\n\t\t */\n\t\tvar __arrayProto = Array.prototype;\n\n\n\t\t/**\n\t\t * Abstraction for `context` parameter of the `Api` constructor to allow it to\n\t\t * take several different forms for ease of use.\n\t\t *\n\t\t * Each of the input parameter types will be converted to a DataTables settings\n\t\t * object where possible.\n\t\t *\n\t\t * @param  {string|node|jQuery|object} mixed DataTable identifier. Can be one\n\t\t *   of:\n\t\t *\n\t\t *   * `string` - jQuery selector. Any DataTables' matching the given selector\n\t\t *     with be found and used.\n\t\t *   * `node` - `TABLE` node which has already been formed into a DataTable.\n\t\t *   * `jQuery` - A jQuery object of `TABLE` nodes.\n\t\t *   * `object` - DataTables settings object\n\t\t *   * `DataTables.Api` - API instance\n\t\t * @return {array|null} Matching DataTables settings objects. `null` or\n\t\t *   `undefined` is returned if no matching DataTable is found.\n\t\t * @ignore\n\t\t */\n\t\tvar _toSettings = function (mixed) {\n\t\t\tvar idx, jq;\n\t\t\tvar settings = DataTable.settings;\n\t\t\tvar tables = $.map(settings, function (el, i) {\n\t\t\t\treturn el.nTable;\n\t\t\t});\n\n\t\t\tif (!mixed) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\telse if (mixed.nTable && mixed.oApi) {\n\t\t\t\t// DataTables settings object\n\t\t\t\treturn [mixed];\n\t\t\t}\n\t\t\telse if (mixed.nodeName && mixed.nodeName.toLowerCase() === 'table') {\n\t\t\t\t// Table node\n\t\t\t\tidx = $.inArray(mixed, tables);\n\t\t\t\treturn idx !== -1 ? [settings[idx]] : null;\n\t\t\t}\n\t\t\telse if (mixed && typeof mixed.settings === 'function') {\n\t\t\t\treturn mixed.settings().toArray();\n\t\t\t}\n\t\t\telse if (typeof mixed === 'string') {\n\t\t\t\t// jQuery selector\n\t\t\t\tjq = $(mixed);\n\t\t\t}\n\t\t\telse if (mixed instanceof $) {\n\t\t\t\t// jQuery object (also DataTables instance)\n\t\t\t\tjq = mixed;\n\t\t\t}\n\n\t\t\tif (jq) {\n\t\t\t\treturn jq.map(function (i) {\n\t\t\t\t\tidx = $.inArray(this, tables);\n\t\t\t\t\treturn idx !== -1 ? settings[idx] : null;\n\t\t\t\t}).toArray();\n\t\t\t}\n\t\t};\n\n\n\t\t/**\n\t\t * DataTables API class - used to control and interface with  one or more\n\t\t * DataTables enhanced tables.\n\t\t *\n\t\t * The API class is heavily based on jQuery, presenting a chainable interface\n\t\t * that you can use to interact with tables. Each instance of the API class has\n\t\t * a \"context\" - i.e. the tables that it will operate on. This could be a single\n\t\t * table, all tables on a page or a sub-set thereof.\n\t\t *\n\t\t * Additionally the API is designed to allow you to easily work with the data in\n\t\t * the tables, retrieving and manipulating it as required. This is done by\n\t\t * presenting the API class as an array like interface. The contents of the\n\t\t * array depend upon the actions requested by each method (for example\n\t\t * `rows().nodes()` will return an array of nodes, while `rows().data()` will\n\t\t * return an array of objects or arrays depending upon your table's\n\t\t * configuration). The API object has a number of array like methods (`push`,\n\t\t * `pop`, `reverse` etc) as well as additional helper methods (`each`, `pluck`,\n\t\t * `unique` etc) to assist your working with the data held in a table.\n\t\t *\n\t\t * Most methods (those which return an Api instance) are chainable, which means\n\t\t * the return from a method call also has all of the methods available that the\n\t\t * top level object had. For example, these two calls are equivalent:\n\t\t *\n\t\t *     // Not chained\n\t\t *     api.row.add( {...} );\n\t\t *     api.draw();\n\t\t *\n\t\t *     // Chained\n\t\t *     api.row.add( {...} ).draw();\n\t\t *\n\t\t * @class DataTable.Api\n\t\t * @param {array|object|string|jQuery} context DataTable identifier. This is\n\t\t *   used to define which DataTables enhanced tables this API will operate on.\n\t\t *   Can be one of:\n\t\t *\n\t\t *   * `string` - jQuery selector. Any DataTables' matching the given selector\n\t\t *     with be found and used.\n\t\t *   * `node` - `TABLE` node which has already been formed into a DataTable.\n\t\t *   * `jQuery` - A jQuery object of `TABLE` nodes.\n\t\t *   * `object` - DataTables settings object\n\t\t * @param {array} [data] Data to initialise the Api instance with.\n\t\t *\n\t\t * @example\n\t\t *   // Direct initialisation during DataTables construction\n\t\t *   var api = $('#example').DataTable();\n\t\t *\n\t\t * @example\n\t\t *   // Initialisation using a DataTables jQuery object\n\t\t *   var api = $('#example').dataTable().api();\n\t\t *\n\t\t * @example\n\t\t *   // Initialisation as a constructor\n\t\t *   var api = new $.fn.DataTable.Api( 'table.dataTable' );\n\t\t */\n\t\t_Api = function (context, data) {\n\t\t\tif (!(this instanceof _Api)) {\n\t\t\t\treturn new _Api(context, data);\n\t\t\t}\n\n\t\t\tvar settings = [];\n\t\t\tvar ctxSettings = function (o) {\n\t\t\t\tvar a = _toSettings(o);\n\t\t\t\tif (a) {\n\t\t\t\t\tsettings = settings.concat(a);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif ($.isArray(context)) {\n\t\t\t\tfor (var i = 0, ien = context.length; i < ien; i++) {\n\t\t\t\t\tctxSettings(context[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tctxSettings(context);\n\t\t\t}\n\n\t\t\t// Remove duplicates\n\t\t\tthis.context = _unique(settings);\n\n\t\t\t// Initial data\n\t\t\tif (data) {\n\t\t\t\t$.merge(this, data);\n\t\t\t}\n\n\t\t\t// selector\n\t\t\tthis.selector = {\n\t\t\t\trows: null,\n\t\t\t\tcols: null,\n\t\t\t\topts: null\n\t\t\t};\n\n\t\t\t_Api.extend(this, this, __apiStruct);\n\t\t};\n\n\t\tDataTable.Api = _Api;\n\n\t\t// Don't destroy the existing prototype, just extend it. Required for jQuery 2's\n\t\t// isPlainObject.\n\t\t$.extend(_Api.prototype, {\n\t\t\tany: function () {\n\t\t\t\treturn this.count() !== 0;\n\t\t\t},\n\n\n\t\t\tconcat: __arrayProto.concat,\n\n\n\t\t\tcontext: [], // array of table settings objects\n\n\n\t\t\tcount: function () {\n\t\t\t\treturn this.flatten().length;\n\t\t\t},\n\n\n\t\t\teach: function (fn) {\n\t\t\t\tfor (var i = 0, ien = this.length; i < ien; i++) {\n\t\t\t\t\tfn.call(this, this[i], i, this);\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\t\t\t},\n\n\n\t\t\teq: function (idx) {\n\t\t\t\tvar ctx = this.context;\n\n\t\t\t\treturn ctx.length > idx ?\n\t\t\t\t\tnew _Api(ctx[idx], this[idx]) :\n\t\t\t\t\tnull;\n\t\t\t},\n\n\n\t\t\tfilter: function (fn) {\n\t\t\t\tvar a = [];\n\n\t\t\t\tif (__arrayProto.filter) {\n\t\t\t\t\ta = __arrayProto.filter.call(this, fn, this);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Compatibility for browsers without EMCA-252-5 (JS 1.6)\n\t\t\t\t\tfor (var i = 0, ien = this.length; i < ien; i++) {\n\t\t\t\t\t\tif (fn.call(this, this[i], i, this)) {\n\t\t\t\t\t\t\ta.push(this[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn new _Api(this.context, a);\n\t\t\t},\n\n\n\t\t\tflatten: function () {\n\t\t\t\tvar a = [];\n\t\t\t\treturn new _Api(this.context, a.concat.apply(a, this.toArray()));\n\t\t\t},\n\n\n\t\t\tjoin: __arrayProto.join,\n\n\n\t\t\tindexOf: __arrayProto.indexOf || function (obj, start) {\n\t\t\t\tfor (var i = (start || 0), ien = this.length; i < ien; i++) {\n\t\t\t\t\tif (this[i] === obj) {\n\t\t\t\t\t\treturn i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn -1;\n\t\t\t},\n\n\t\t\titerator: function (flatten, type, fn, alwaysNew) {\n\t\t\t\tvar\n\t\t\t\t\ta = [], ret,\n\t\t\t\t\ti, ien, j, jen,\n\t\t\t\t\tcontext = this.context,\n\t\t\t\t\trows, items, item,\n\t\t\t\t\tselector = this.selector;\n\n\t\t\t\t// Argument shifting\n\t\t\t\tif (typeof flatten === 'string') {\n\t\t\t\t\talwaysNew = fn;\n\t\t\t\t\tfn = type;\n\t\t\t\t\ttype = flatten;\n\t\t\t\t\tflatten = false;\n\t\t\t\t}\n\n\t\t\t\tfor (i = 0, ien = context.length; i < ien; i++) {\n\t\t\t\t\tvar apiInst = new _Api(context[i]);\n\n\t\t\t\t\tif (type === 'table') {\n\t\t\t\t\t\tret = fn.call(apiInst, context[i], i);\n\n\t\t\t\t\t\tif (ret !== undefined) {\n\t\t\t\t\t\t\ta.push(ret);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (type === 'columns' || type === 'rows') {\n\t\t\t\t\t\t// this has same length as context - one entry for each table\n\t\t\t\t\t\tret = fn.call(apiInst, context[i], this[i], i);\n\n\t\t\t\t\t\tif (ret !== undefined) {\n\t\t\t\t\t\t\ta.push(ret);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (type === 'column' || type === 'column-rows' || type === 'row' || type === 'cell') {\n\t\t\t\t\t\t// columns and rows share the same structure.\n\t\t\t\t\t\t// 'this' is an array of column indexes for each context\n\t\t\t\t\t\titems = this[i];\n\n\t\t\t\t\t\tif (type === 'column-rows') {\n\t\t\t\t\t\t\trows = _selector_row_indexes(context[i], selector.opts);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (j = 0, jen = items.length; j < jen; j++) {\n\t\t\t\t\t\t\titem = items[j];\n\n\t\t\t\t\t\t\tif (type === 'cell') {\n\t\t\t\t\t\t\t\tret = fn.call(apiInst, context[i], item.row, item.column, i, j);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tret = fn.call(apiInst, context[i], item, i, j, rows);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (ret !== undefined) {\n\t\t\t\t\t\t\t\ta.push(ret);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (a.length || alwaysNew) {\n\t\t\t\t\tvar api = new _Api(context, flatten ? a.concat.apply([], a) : a);\n\t\t\t\t\tvar apiSelector = api.selector;\n\t\t\t\t\tapiSelector.rows = selector.rows;\n\t\t\t\t\tapiSelector.cols = selector.cols;\n\t\t\t\t\tapiSelector.opts = selector.opts;\n\t\t\t\t\treturn api;\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\n\t\t\tlastIndexOf: __arrayProto.lastIndexOf || function (obj, start) {\n\t\t\t\t// Bit cheeky...\n\t\t\t\treturn this.indexOf.apply(this.toArray.reverse(), arguments);\n\t\t\t},\n\n\n\t\t\tlength: 0,\n\n\n\t\t\tmap: function (fn) {\n\t\t\t\tvar a = [];\n\n\t\t\t\tif (__arrayProto.map) {\n\t\t\t\t\ta = __arrayProto.map.call(this, fn, this);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Compatibility for browsers without EMCA-252-5 (JS 1.6)\n\t\t\t\t\tfor (var i = 0, ien = this.length; i < ien; i++) {\n\t\t\t\t\t\ta.push(fn.call(this, this[i], i));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn new _Api(this.context, a);\n\t\t\t},\n\n\n\t\t\tpluck: function (prop) {\n\t\t\t\treturn this.map(function (el) {\n\t\t\t\t\treturn el[prop];\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tpop: __arrayProto.pop,\n\n\n\t\t\tpush: __arrayProto.push,\n\n\n\t\t\t// Does not return an API instance\n\t\t\treduce: __arrayProto.reduce || function (fn, init) {\n\t\t\t\treturn _fnReduce(this, fn, init, 0, this.length, 1);\n\t\t\t},\n\n\n\t\t\treduceRight: __arrayProto.reduceRight || function (fn, init) {\n\t\t\t\treturn _fnReduce(this, fn, init, this.length - 1, -1, -1);\n\t\t\t},\n\n\n\t\t\treverse: __arrayProto.reverse,\n\n\n\t\t\t// Object with rows, columns and opts\n\t\t\tselector: null,\n\n\n\t\t\tshift: __arrayProto.shift,\n\n\n\t\t\tslice: function () {\n\t\t\t\treturn new _Api(this.context, this);\n\t\t\t},\n\n\n\t\t\tsort: __arrayProto.sort, // ? name - order?\n\n\n\t\t\tsplice: __arrayProto.splice,\n\n\n\t\t\ttoArray: function () {\n\t\t\t\treturn __arrayProto.slice.call(this);\n\t\t\t},\n\n\n\t\t\tto$: function () {\n\t\t\t\treturn $(this);\n\t\t\t},\n\n\n\t\t\ttoJQuery: function () {\n\t\t\t\treturn $(this);\n\t\t\t},\n\n\n\t\t\tunique: function () {\n\t\t\t\treturn new _Api(this.context, _unique(this));\n\t\t\t},\n\n\n\t\t\tunshift: __arrayProto.unshift\n\t\t});\n\n\n\t\t_Api.extend = function (scope, obj, ext) {\n\t\t\t// Only extend API instances and static properties of the API\n\t\t\tif (!ext.length || !obj || (!(obj instanceof _Api) && !obj.__dt_wrapper)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar\n\t\t\t\ti, ien,\n\t\t\t\tj, jen,\n\t\t\t\tstruct, inner,\n\t\t\t\tmethodScoping = function (scope, fn, struc) {\n\t\t\t\t\treturn function () {\n\t\t\t\t\t\tvar ret = fn.apply(scope, arguments);\n\n\t\t\t\t\t\t// Method extension\n\t\t\t\t\t\t_Api.extend(ret, ret, struc.methodExt);\n\t\t\t\t\t\treturn ret;\n\t\t\t\t\t};\n\t\t\t\t};\n\n\t\t\tfor (i = 0, ien = ext.length; i < ien; i++) {\n\t\t\t\tstruct = ext[i];\n\n\t\t\t\t// Value\n\t\t\t\tobj[struct.name] = typeof struct.val === 'function' ?\n\t\t\t\t\tmethodScoping(scope, struct.val, struct) :\n\t\t\t\t\t$.isPlainObject(struct.val) ?\n\t\t\t\t\t\t{} :\n\t\t\t\t\t\tstruct.val;\n\n\t\t\t\tobj[struct.name].__dt_wrapper = true;\n\n\t\t\t\t// Property extension\n\t\t\t\t_Api.extend(scope, obj[struct.name], struct.propExt);\n\t\t\t}\n\t\t};\n\n\n\t\t// @todo - Is there need for an augment function?\n\t\t// _Api.augment = function ( inst, name )\n\t\t// {\n\t\t// \t// Find src object in the structure from the name\n\t\t// \tvar parts = name.split('.');\n\n\t\t// \t_Api.extend( inst, obj );\n\t\t// };\n\n\n\t\t//     [\n\t\t//       {\n\t\t//         name:      'data'                -- string   - Property name\n\t\t//         val:       function () {},       -- function - Api method (or undefined if just an object\n\t\t//         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n\t\t//         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n\t\t//       },\n\t\t//       {\n\t\t//         name:     'row'\n\t\t//         val:       {},\n\t\t//         methodExt: [ ... ],\n\t\t//         propExt:   [\n\t\t//           {\n\t\t//             name:      'data'\n\t\t//             val:       function () {},\n\t\t//             methodExt: [ ... ],\n\t\t//             propExt:   [ ... ]\n\t\t//           },\n\t\t//           ...\n\t\t//         ]\n\t\t//       }\n\t\t//     ]\n\n\t\t_Api.register = _api_register = function (name, val) {\n\t\t\tif ($.isArray(name)) {\n\t\t\t\tfor (var j = 0, jen = name.length; j < jen; j++) {\n\t\t\t\t\t_Api.register(name[j], val);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar\n\t\t\t\ti, ien,\n\t\t\t\their = name.split('.'),\n\t\t\t\tstruct = __apiStruct,\n\t\t\t\tkey, method;\n\n\t\t\tvar find = function (src, name) {\n\t\t\t\tfor (var i = 0, ien = src.length; i < ien; i++) {\n\t\t\t\t\tif (src[i].name === name) {\n\t\t\t\t\t\treturn src[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t};\n\n\t\t\tfor (i = 0, ien = heir.length; i < ien; i++) {\n\t\t\t\tmethod = heir[i].indexOf('()') !== -1;\n\t\t\t\tkey = method ?\n\t\t\t\t\their[i].replace('()', '') :\n\t\t\t\t\their[i];\n\n\t\t\t\tvar src = find(struct, key);\n\t\t\t\tif (!src) {\n\t\t\t\t\tsrc = {\n\t\t\t\t\t\tname: key,\n\t\t\t\t\t\tval: {},\n\t\t\t\t\t\tmethodExt: [],\n\t\t\t\t\t\tpropExt: []\n\t\t\t\t\t};\n\t\t\t\t\tstruct.push(src);\n\t\t\t\t}\n\n\t\t\t\tif (i === ien - 1) {\n\t\t\t\t\tsrc.val = val;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tstruct = method ?\n\t\t\t\t\t\tsrc.methodExt :\n\t\t\t\t\t\tsrc.propExt;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\n\t\t_Api.registerPlural = _api_registerPlural = function (pluralName, singularName, val) {\n\t\t\t_Api.register(pluralName, val);\n\n\t\t\t_Api.register(singularName, function () {\n\t\t\t\tvar ret = val.apply(this, arguments);\n\n\t\t\t\tif (ret === this) {\n\t\t\t\t\t// Returned item is the API instance that was passed in, return it\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t\telse if (ret instanceof _Api) {\n\t\t\t\t\t// New API instance returned, want the value from the first item\n\t\t\t\t\t// in the returned array for the singular result.\n\t\t\t\t\treturn ret.length ?\n\t\t\t\t\t\t$.isArray(ret[0]) ?\n\t\t\t\t\t\t\tnew _Api(ret.context, ret[0]) : // Array results are 'enhanced'\n\t\t\t\t\t\t\tret[0] :\n\t\t\t\t\t\tundefined;\n\t\t\t\t}\n\n\t\t\t\t// Non-API return - just fire it back\n\t\t\t\treturn ret;\n\t\t\t});\n\t\t};\n\n\n\t\t/**\n\t\t * Selector for HTML tables. Apply the given selector to the give array of\n\t\t * DataTables settings objects.\n\t\t *\n\t\t * @param {string|integer} [selector] jQuery selector string or integer\n\t\t * @param  {array} Array of DataTables settings objects to be filtered\n\t\t * @return {array}\n\t\t * @ignore\n\t\t */\n\t\tvar __table_selector = function (selector, a) {\n\t\t\t// Integer is used to pick out a table by index\n\t\t\tif (typeof selector === 'number') {\n\t\t\t\treturn [a[selector]];\n\t\t\t}\n\n\t\t\t// Perform a jQuery selector on the table nodes\n\t\t\tvar nodes = $.map(a, function (el, i) {\n\t\t\t\treturn el.nTable;\n\t\t\t});\n\n\t\t\treturn $(nodes)\n\t\t\t\t.filter(selector)\n\t\t\t\t.map(function (i) {\n\t\t\t\t\t// Need to translate back from the table node to the settings\n\t\t\t\t\tvar idx = $.inArray(this, nodes);\n\t\t\t\t\treturn a[idx];\n\t\t\t\t})\n\t\t\t\t.toArray();\n\t\t};\n\n\n\n\t\t/**\n\t\t * Context selector for the API's context (i.e. the tables the API instance\n\t\t * refers to.\n\t\t *\n\t\t * @name    DataTable.Api#tables\n\t\t * @param {string|integer} [selector] Selector to pick which tables the iterator\n\t\t *   should operate on. If not given, all tables in the current context are\n\t\t *   used. This can be given as a jQuery selector (for example `':gt(0)'`) to\n\t\t *   select multiple tables or as an integer to select a single table.\n\t\t * @returns {DataTable.Api} Returns a new API instance if a selector is given.\n\t\t */\n\t\t_api_register('tables()', function (selector) {\n\t\t\t// A new instance is created if there was a selector specified\n\t\t\treturn selector ?\n\t\t\t\tnew _Api(__table_selector(selector, this.context)) :\n\t\t\t\tthis;\n\t\t});\n\n\n\t\t_api_register('table()', function (selector) {\n\t\t\tvar tables = this.tables(selector);\n\t\t\tvar ctx = tables.context;\n\n\t\t\t// Truncate to the first matched table\n\t\t\treturn ctx.length ?\n\t\t\t\tnew _Api(ctx[0]) :\n\t\t\t\ttables;\n\t\t});\n\n\n\t\t_api_registerPlural('tables().nodes()', 'table().node()', function () {\n\t\t\treturn this.iterator('table', function (ctx) {\n\t\t\t\treturn ctx.nTable;\n\t\t\t}, 1);\n\t\t});\n\n\n\t\t_api_registerPlural('tables().body()', 'table().body()', function () {\n\t\t\treturn this.iterator('table', function (ctx) {\n\t\t\t\treturn ctx.nTBody;\n\t\t\t}, 1);\n\t\t});\n\n\n\t\t_api_registerPlural('tables().header()', 'table().header()', function () {\n\t\t\treturn this.iterator('table', function (ctx) {\n\t\t\t\treturn ctx.nTHead;\n\t\t\t}, 1);\n\t\t});\n\n\n\t\t_api_registerPlural('tables().footer()', 'table().footer()', function () {\n\t\t\treturn this.iterator('table', function (ctx) {\n\t\t\t\treturn ctx.nTFoot;\n\t\t\t}, 1);\n\t\t});\n\n\n\t\t_api_registerPlural('tables().containers()', 'table().container()', function () {\n\t\t\treturn this.iterator('table', function (ctx) {\n\t\t\t\treturn ctx.nTableWrapper;\n\t\t\t}, 1);\n\t\t});\n\n\n\n\t\t/**\n\t\t * Redraw the tables in the current context.\n\t\t */\n\t\t_api_register('draw()', function (paging) {\n\t\t\treturn this.iterator('table', function (settings) {\n\t\t\t\tif (paging === 'page') {\n\t\t\t\t\t_fnDraw(settings);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (typeof paging === 'string') {\n\t\t\t\t\t\tpaging = paging === 'full-hold' ?\n\t\t\t\t\t\t\tfalse :\n\t\t\t\t\t\t\ttrue;\n\t\t\t\t\t}\n\n\t\t\t\t\t_fnReDraw(settings, paging === false);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\n\n\t\t/**\n\t\t * Get the current page index.\n\t\t *\n\t\t * @return {integer} Current page index (zero based)\n\t\t *//**\n\t\t* Set the current page.\n\t\t*\n\t\t* Note that if you attempt to show a page which does not exist, DataTables will\n\t\t* not throw an error, but rather reset the paging.\n\t\t*\n\t\t* @param {integer|string} action The paging action to take. This can be one of:\n\t\t*  * `integer` - The page index to jump to\n\t\t*  * `string` - An action to take:\n\t\t*    * `first` - Jump to first page.\n\t\t*    * `next` - Jump to the next page\n\t\t*    * `previous` - Jump to previous page\n\t\t*    * `last` - Jump to the last page.\n\t\t* @returns {DataTables.Api} this\n\t\t*/\n\t\t_api_register('page()', function (action) {\n\t\t\tif (action === undefined) {\n\t\t\t\treturn this.page.info().page; // not an expensive call\n\t\t\t}\n\n\t\t\t// else, have an action to take on all tables\n\t\t\treturn this.iterator('table', function (settings) {\n\t\t\t\t_fnPageChange(settings, action);\n\t\t\t});\n\t\t});\n\n\n\t\t/**\n\t\t * Paging information for the first table in the current context.\n\t\t *\n\t\t * If you require paging information for another table, use the `table()` method\n\t\t * with a suitable selector.\n\t\t *\n\t\t * @return {object} Object with the following properties set:\n\t\t *  * `page` - Current page index (zero based - i.e. the first page is `0`)\n\t\t *  * `pages` - Total number of pages\n\t\t *  * `start` - Display index for the first record shown on the current page\n\t\t *  * `end` - Display index for the last record shown on the current page\n\t\t *  * `length` - Display length (number of records). Note that generally `start\n\t\t *    + length = end`, but this is not always true, for example if there are\n\t\t *    only 2 records to show on the final page, with a length of 10.\n\t\t *  * `recordsTotal` - Full data set length\n\t\t *  * `recordsDisplay` - Data set length once the current filtering criterion\n\t\t *    are applied.\n\t\t */\n\t\t_api_register('page.info()', function (action) {\n\t\t\tif (this.context.length === 0) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tvar\n\t\t\t\tsettings = this.context[0],\n\t\t\t\tstart = settings._iDisplayStart,\n\t\t\t\tlen = settings.oFeatures.bPaginate ? settings._iDisplayLength : -1,\n\t\t\t\tvisRecords = settings.fnRecordsDisplay(),\n\t\t\t\tall = len === -1;\n\n\t\t\treturn {\n\t\t\t\t\"page\": all ? 0 : Math.floor(start / len),\n\t\t\t\t\"pages\": all ? 1 : Math.ceil(visRecords / len),\n\t\t\t\t\"start\": start,\n\t\t\t\t\"end\": settings.fnDisplayEnd(),\n\t\t\t\t\"length\": len,\n\t\t\t\t\"recordsTotal\": settings.fnRecordsTotal(),\n\t\t\t\t\"recordsDisplay\": visRecords,\n\t\t\t\t\"serverSide\": _fnDataSource(settings) === 'ssp'\n\t\t\t};\n\t\t});\n\n\n\t\t/**\n\t\t * Get the current page length.\n\t\t *\n\t\t * @return {integer} Current page length. Note `-1` indicates that all records\n\t\t *   are to be shown.\n\t\t *//**\n\t\t* Set the current page length.\n\t\t*\n\t\t* @param {integer} Page length to set. Use `-1` to show all records.\n\t\t* @returns {DataTables.Api} this\n\t\t*/\n\t\t_api_register('page.len()', function (len) {\n\t\t\t// Note that we can't call this function 'length()' because `length`\n\t\t\t// is a Javascript property of functions which defines how many arguments\n\t\t\t// the function expects.\n\t\t\tif (len === undefined) {\n\t\t\t\treturn this.context.length !== 0 ?\n\t\t\t\t\tthis.context[0]._iDisplayLength :\n\t\t\t\t\tundefined;\n\t\t\t}\n\n\t\t\t// else, set the page length\n\t\t\treturn this.iterator('table', function (settings) {\n\t\t\t\t_fnLengthChange(settings, len);\n\t\t\t});\n\t\t});\n\n\n\n\t\tvar __reload = function (settings, holdPosition, callback) {\n\t\t\t// Use the draw event to trigger a callback\n\t\t\tif (callback) {\n\t\t\t\tvar api = new _Api(settings);\n\n\t\t\t\tapi.one('draw', function () {\n\t\t\t\t\tcallback(api.ajax.json());\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (_fnDataSource(settings) == 'ssp') {\n\t\t\t\t_fnReDraw(settings, holdPosition);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_fnProcessingDisplay(settings, true);\n\n\t\t\t\t// Cancel an existing request\n\t\t\t\tvar xhr = settings.jqXHR;\n\t\t\t\tif (xhr && xhr.readyState !== 4) {\n\t\t\t\t\txhr.abort();\n\t\t\t\t}\n\n\t\t\t\t// Trigger xhr\n\t\t\t\t_fnBuildAjax(settings, [], function (json) {\n\t\t\t\t\t_fnClearTable(settings);\n\n\t\t\t\t\tvar data = _fnAjaxDataSrc(settings, json);\n\t\t\t\t\tfor (var i = 0, ien = data.length; i < ien; i++) {\n\t\t\t\t\t\t_fnAddData(settings, data[i]);\n\t\t\t\t\t}\n\n\t\t\t\t\t_fnReDraw(settings, holdPosition);\n\t\t\t\t\t_fnProcessingDisplay(settings, false);\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\n\t\t/**\n\t\t * Get the JSON response from the last Ajax request that DataTables made to the\n\t\t * server. Note that this returns the JSON from the first table in the current\n\t\t * context.\n\t\t *\n\t\t * @return {object} JSON received from the server.\n\t\t */\n\t\t_api_register('ajax.json()', function () {\n\t\t\tvar ctx = this.context;\n\n\t\t\tif (ctx.length > 0) {\n\t\t\t\treturn ctx[0].json;\n\t\t\t}\n\n\t\t\t// else return undefined;\n\t\t});\n\n\n\t\t/**\n\t\t * Get the data submitted in the last Ajax request\n\t\t */\n\t\t_api_register('ajax.params()', function () {\n\t\t\tvar ctx = this.context;\n\n\t\t\tif (ctx.length > 0) {\n\t\t\t\treturn ctx[0].oAjaxData;\n\t\t\t}\n\n\t\t\t// else return undefined;\n\t\t});\n\n\n\t\t/**\n\t\t * Reload tables from the Ajax data source. Note that this function will\n\t\t * automatically re-draw the table when the remote data has been loaded.\n\t\t *\n\t\t * @param {boolean} [reset=true] Reset (default) or hold the current paging\n\t\t *   position. A full re-sort and re-filter is performed when this method is\n\t\t *   called, which is why the pagination reset is the default action.\n\t\t * @returns {DataTables.Api} this\n\t\t */\n\t\t_api_register('ajax.reload()', function (callback, resetPaging) {\n\t\t\treturn this.iterator('table', function (settings) {\n\t\t\t\t__reload(settings, resetPaging === false, callback);\n\t\t\t});\n\t\t});\n\n\n\t\t/**\n\t\t * Get the current Ajax URL. Note that this returns the URL from the first\n\t\t * table in the current context.\n\t\t *\n\t\t * @return {string} Current Ajax source URL\n\t\t *//**\n\t\t* Set the Ajax URL. Note that this will set the URL for all tables in the\n\t\t* current context.\n\t\t*\n\t\t* @param {string} url URL to set.\n\t\t* @returns {DataTables.Api} this\n\t\t*/\n\t\t_api_register('ajax.url()', function (url) {\n\t\t\tvar ctx = this.context;\n\n\t\t\tif (url === undefined) {\n\t\t\t\t// get\n\t\t\t\tif (ctx.length === 0) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\tctx = ctx[0];\n\n\t\t\t\treturn ctx.ajax ?\n\t\t\t\t\t$.isPlainObject(ctx.ajax) ?\n\t\t\t\t\t\tctx.ajax.url :\n\t\t\t\t\t\tctx.ajax :\n\t\t\t\t\tctx.sAjaxSource;\n\t\t\t}\n\n\t\t\t// set\n\t\t\treturn this.iterator('table', function (settings) {\n\t\t\t\tif ($.isPlainObject(settings.ajax)) {\n\t\t\t\t\tsettings.ajax.url = url;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsettings.ajax = url;\n\t\t\t\t}\n\t\t\t\t// No need to consider sAjaxSource here since DataTables gives priority\n\t\t\t\t// to `ajax` over `sAjaxSource`. So setting `ajax` here, renders any\n\t\t\t\t// value of `sAjaxSource` redundant.\n\t\t\t});\n\t\t});\n\n\n\t\t/**\n\t\t * Load data from the newly set Ajax URL. Note that this method is only\n\t\t * available when `ajax.url()` is used to set a URL. Additionally, this method\n\t\t * has the same effect as calling `ajax.reload()` but is provided for\n\t\t * convenience when setting a new URL. Like `ajax.reload()` it will\n\t\t * automatically redraw the table once the remote data has been loaded.\n\t\t *\n\t\t * @returns {DataTables.Api} this\n\t\t */\n\t\t_api_register('ajax.url().load()', function (callback, resetPaging) {\n\t\t\t// Same as a reload, but makes sense to present it for easy access after a\n\t\t\t// url change\n\t\t\treturn this.iterator('table', function (ctx) {\n\t\t\t\t__reload(ctx, resetPaging === false, callback);\n\t\t\t});\n\t\t});\n\n\n\n\n\t\tvar _selector_run = function (type, selector, selectFn, settings, opts) {\n\t\t\tvar\n\t\t\t\tout = [], res,\n\t\t\t\ta, i, ien, j, jen,\n\t\t\t\tselectorType = typeof selector;\n\n\t\t\t// Can't just check for isArray here, as an API or jQuery instance might be\n\t\t\t// given with their array like look\n\t\t\tif (!selector || selectorType === 'string' || selectorType === 'function' || selector.length === undefined) {\n\t\t\t\tselector = [selector];\n\t\t\t}\n\n\t\t\tfor (i = 0, ien = selector.length; i < ien; i++) {\n\t\t\t\t// Only split on simple strings - complex expressions will be jQuery selectors\n\t\t\t\ta = selector[i] && selector[i].split && !selector[i].match(/[\\[\\(:]/) ?\n\t\t\t\t\tselector[i].split(',') :\n\t\t\t\t\t[selector[i]];\n\n\t\t\t\tfor (j = 0, jen = a.length; j < jen; j++) {\n\t\t\t\t\tres = selectFn(typeof a[j] === 'string' ? $.trim(a[j]) : a[j]);\n\n\t\t\t\t\tif (res && res.length) {\n\t\t\t\t\t\tout = out.concat(res);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// selector extensions\n\t\t\tvar ext = _ext.selector[type];\n\t\t\tif (ext.length) {\n\t\t\t\tfor (i = 0, ien = ext.length; i < ien; i++) {\n\t\t\t\t\tout = ext[i](settings, opts, out);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn _unique(out);\n\t\t};\n\n\n\t\tvar _selector_opts = function (opts) {\n\t\t\tif (!opts) {\n\t\t\t\topts = {};\n\t\t\t}\n\n\t\t\t// Backwards compatibility for 1.9- which used the terminology filter rather\n\t\t\t// than search\n\t\t\tif (opts.filter && opts.search === undefined) {\n\t\t\t\topts.search = opts.filter;\n\t\t\t}\n\n\t\t\treturn $.extend({\n\t\t\t\tsearch: 'none',\n\t\t\t\torder: 'current',\n\t\t\t\tpage: 'all'\n\t\t\t}, opts);\n\t\t};\n\n\n\t\tvar _selector_first = function (inst) {\n\t\t\t// Reduce the API instance to the first item found\n\t\t\tfor (var i = 0, ien = inst.length; i < ien; i++) {\n\t\t\t\tif (inst[i].length > 0) {\n\t\t\t\t\t// Assign the first element to the first item in the instance\n\t\t\t\t\t// and truncate the instance and context\n\t\t\t\t\tinst[0] = inst[i];\n\t\t\t\t\tinst[0].length = 1;\n\t\t\t\t\tinst.length = 1;\n\t\t\t\t\tinst.context = [inst.context[i]];\n\n\t\t\t\t\treturn inst;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Not found - return an empty instance\n\t\t\tinst.length = 0;\n\t\t\treturn inst;\n\t\t};\n\n\n\t\tvar _selector_row_indexes = function (settings, opts) {\n\t\t\tvar\n\t\t\t\ti, ien, tmp, a = [],\n\t\t\t\tdisplayFiltered = settings.aiDisplay,\n\t\t\t\tdisplayMaster = settings.aiDisplayMaster;\n\n\t\t\tvar\n\t\t\t\tsearch = opts.search,  // none, applied, removed\n\t\t\t\torder = opts.order,   // applied, current, index (original - compatibility with 1.9)\n\t\t\t\tpage = opts.page;    // all, current\n\n\t\t\tif (_fnDataSource(settings) == 'ssp') {\n\t\t\t\t// In server-side processing mode, most options are irrelevant since\n\t\t\t\t// rows not shown don't exist and the index order is the applied order\n\t\t\t\t// Removed is a special case - for consistency just return an empty\n\t\t\t\t// array\n\t\t\t\treturn search === 'removed' ?\n\t\t\t\t\t[] :\n\t\t\t\t\t_range(0, displayMaster.length);\n\t\t\t}\n\t\t\telse if (page == 'current') {\n\t\t\t\t// Current page implies that order=current and fitler=applied, since it is\n\t\t\t\t// fairly senseless otherwise, regardless of what order and search actually\n\t\t\t\t// are\n\t\t\t\tfor (i = settings._iDisplayStart, ien = settings.fnDisplayEnd(); i < ien; i++) {\n\t\t\t\t\ta.push(displayFiltered[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (order == 'current' || order == 'applied') {\n\t\t\t\ta = search == 'none' ?\n\t\t\t\t\tdisplayMaster.slice() :                      // no search\n\t\t\t\t\tsearch == 'applied' ?\n\t\t\t\t\t\tdisplayFiltered.slice() :                // applied search\n\t\t\t\t\t\t$.map(displayMaster, function (el, i) { // removed search\n\t\t\t\t\t\t\treturn $.inArray(el, displayFiltered) === -1 ? el : null;\n\t\t\t\t\t\t});\n\t\t\t}\n\t\t\telse if (order == 'index' || order == 'original') {\n\t\t\t\tfor (i = 0, ien = settings.aoData.length; i < ien; i++) {\n\t\t\t\t\tif (search == 'none') {\n\t\t\t\t\t\ta.push(i);\n\t\t\t\t\t}\n\t\t\t\t\telse { // applied | removed\n\t\t\t\t\t\ttmp = $.inArray(i, displayFiltered);\n\n\t\t\t\t\t\tif ((tmp === -1 && search == 'removed') ||\n\t\t\t\t\t\t\t(tmp >= 0 && search == 'applied')) {\n\t\t\t\t\t\t\ta.push(i);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn a;\n\t\t};\n\n\n\t\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t\t * Rows\n\t\t *\n\t\t * {}          - no selector - use all available rows\n\t\t * {integer}   - row aoData index\n\t\t * {node}      - TR node\n\t\t * {string}    - jQuery selector to apply to the TR elements\n\t\t * {array}     - jQuery array of nodes, or simply an array of TR nodes\n\t\t *\n\t\t */\n\n\n\t\tvar __row_selector = function (settings, selector, opts) {\n\t\t\tvar rows;\n\t\t\tvar run = function (sel) {\n\t\t\t\tvar selInt = _intVal(sel);\n\t\t\t\tvar i, ien;\n\n\t\t\t\t// Short cut - selector is a number and no options provided (default is\n\t\t\t\t// all records, so no need to check if the index is in there, since it\n\t\t\t\t// must be - dev error if the index doesn't exist).\n\t\t\t\tif (selInt !== null && !opts) {\n\t\t\t\t\treturn [selInt];\n\t\t\t\t}\n\n\t\t\t\tif (!rows) {\n\t\t\t\t\trows = _selector_row_indexes(settings, opts);\n\t\t\t\t}\n\n\t\t\t\tif (selInt !== null && $.inArray(selInt, rows) !== -1) {\n\t\t\t\t\t// Selector - integer\n\t\t\t\t\treturn [selInt];\n\t\t\t\t}\n\t\t\t\telse if (sel === null || sel === undefined || sel === '') {\n\t\t\t\t\t// Selector - none\n\t\t\t\t\treturn rows;\n\t\t\t\t}\n\n\t\t\t\t// Selector - function\n\t\t\t\tif (typeof sel === 'function') {\n\t\t\t\t\treturn $.map(rows, function (idx) {\n\t\t\t\t\t\tvar row = settings.aoData[idx];\n\t\t\t\t\t\treturn sel(idx, row._aData, row.nTr) ? idx : null;\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Get nodes in the order from the `rows` array with null values removed\n\t\t\t\tvar nodes = _removeEmpty(\n\t\t\t\t\t_pluck_order(settings.aoData, rows, 'nTr')\n\t\t\t\t);\n\n\t\t\t\t// Selector - node\n\t\t\t\tif (sel.nodeName) {\n\t\t\t\t\tif (sel._DT_RowIndex !== undefined) {\n\t\t\t\t\t\treturn [sel._DT_RowIndex]; // Property added by DT for fast lookup\n\t\t\t\t\t}\n\t\t\t\t\telse if (sel._DT_CellIndex) {\n\t\t\t\t\t\treturn [sel._DT_CellIndex.row];\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tvar host = $(sel).closest('*[data-dt-row]');\n\t\t\t\t\t\treturn host.length ?\n\t\t\t\t\t\t\t[host.data('dt-row')] :\n\t\t\t\t\t\t\t[];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// ID selector. Want to always be able to select rows by id, regardless\n\t\t\t\t// of if the tr element has been created or not, so can't rely upon\n\t\t\t\t// jQuery here - hence a custom implementation. This does not match\n\t\t\t\t// Sizzle's fast selector or HTML4 - in HTML5 the ID can be anything,\n\t\t\t\t// but to select it using a CSS selector engine (like Sizzle or\n\t\t\t\t// querySelect) it would need to need to be escaped for some characters.\n\t\t\t\t// DataTables simplifies this for row selectors since you can select\n\t\t\t\t// only a row. A # indicates an id any anything that follows is the id -\n\t\t\t\t// unescaped.\n\t\t\t\tif (typeof sel === 'string' && sel.charAt(0) === '#') {\n\t\t\t\t\t// get row index from id\n\t\t\t\t\tvar rowObj = settings.aIds[sel.replace(/^#/, '')];\n\t\t\t\t\tif (rowObj !== undefined) {\n\t\t\t\t\t\treturn [rowObj.idx];\n\t\t\t\t\t}\n\n\t\t\t\t\t// need to fall through to jQuery in case there is DOM id that\n\t\t\t\t\t// matches\n\t\t\t\t}\n\n\t\t\t\t// Selector - jQuery selector string, array of nodes or jQuery object/\n\t\t\t\t// As jQuery's .filter() allows jQuery objects to be passed in filter,\n\t\t\t\t// it also allows arrays, so this will cope with all three options\n\t\t\t\treturn $(nodes)\n\t\t\t\t\t.filter(sel)\n\t\t\t\t\t.map(function () {\n\t\t\t\t\t\treturn this._DT_RowIndex;\n\t\t\t\t\t})\n\t\t\t\t\t.toArray();\n\t\t\t};\n\n\t\t\treturn _selector_run('row', selector, run, settings, opts);\n\t\t};\n\n\n\t\t_api_register('rows()', function (selector, opts) {\n\t\t\t// argument shifting\n\t\t\tif (selector === undefined) {\n\t\t\t\tselector = '';\n\t\t\t}\n\t\t\telse if ($.isPlainObject(selector)) {\n\t\t\t\topts = selector;\n\t\t\t\tselector = '';\n\t\t\t}\n\n\t\t\topts = _selector_opts(opts);\n\n\t\t\tvar inst = this.iterator('table', function (settings) {\n\t\t\t\treturn __row_selector(settings, selector, opts);\n\t\t\t}, 1);\n\n\t\t\t// Want argument shifting here and in __row_selector?\n\t\t\tinst.selector.rows = selector;\n\t\t\tinst.selector.opts = opts;\n\n\t\t\treturn inst;\n\t\t});\n\n\t\t_api_register('rows().nodes()', function () {\n\t\t\treturn this.iterator('row', function (settings, row) {\n\t\t\t\treturn settings.aoData[row].nTr || undefined;\n\t\t\t}, 1);\n\t\t});\n\n\t\t_api_register('rows().data()', function () {\n\t\t\treturn this.iterator(true, 'rows', function (settings, rows) {\n\t\t\t\treturn _pluck_order(settings.aoData, rows, '_aData');\n\t\t\t}, 1);\n\t\t});\n\n\t\t_api_registerPlural('rows().cache()', 'row().cache()', function (type) {\n\t\t\treturn this.iterator('row', function (settings, row) {\n\t\t\t\tvar r = settings.aoData[row];\n\t\t\t\treturn type === 'search' ? r._aFilterData : r._aSortData;\n\t\t\t}, 1);\n\t\t});\n\n\t\t_api_registerPlural('rows().invalidate()', 'row().invalidate()', function (src) {\n\t\t\treturn this.iterator('row', function (settings, row) {\n\t\t\t\t_fnInvalidate(settings, row, src);\n\t\t\t});\n\t\t});\n\n\t\t_api_registerPlural('rows().indexes()', 'row().index()', function () {\n\t\t\treturn this.iterator('row', function (settings, row) {\n\t\t\t\treturn row;\n\t\t\t}, 1);\n\t\t});\n\n\t\t_api_registerPlural('rows().ids()', 'row().id()', function (hash) {\n\t\t\tvar a = [];\n\t\t\tvar context = this.context;\n\n\t\t\t// `iterator` will drop undefined values, but in this case we want them\n\t\t\tfor (var i = 0, ien = context.length; i < ien; i++) {\n\t\t\t\tfor (var j = 0, jen = this[i].length; j < jen; j++) {\n\t\t\t\t\tvar id = context[i].rowIdFn(context[i].aoData[this[i][j]]._aData);\n\t\t\t\t\ta.push((hash === true ? '#' : '') + id);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn new _Api(context, a);\n\t\t});\n\n\t\t_api_registerPlural('rows().remove()', 'row().remove()', function () {\n\t\t\tvar that = this;\n\n\t\t\tthis.iterator('row', function (settings, row, thatIdx) {\n\t\t\t\tvar data = settings.aoData;\n\t\t\t\tvar rowData = data[row];\n\t\t\t\tvar i, ien, j, jen;\n\t\t\t\tvar loopRow, loopCells;\n\n\t\t\t\tdata.splice(row, 1);\n\n\t\t\t\t// Update the cached indexes\n\t\t\t\tfor (i = 0, ien = data.length; i < ien; i++) {\n\t\t\t\t\tloopRow = data[i];\n\t\t\t\t\tloopCells = loopRow.anCells;\n\n\t\t\t\t\t// Rows\n\t\t\t\t\tif (loopRow.nTr !== null) {\n\t\t\t\t\t\tloopRow.nTr._DT_RowIndex = i;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Cells\n\t\t\t\t\tif (loopCells !== null) {\n\t\t\t\t\t\tfor (j = 0, jen = loopCells.length; j < jen; j++) {\n\t\t\t\t\t\t\tloopCells[j]._DT_CellIndex.row = i;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Delete from the display arrays\n\t\t\t\t_fnDeleteIndex(settings.aiDisplayMaster, row);\n\t\t\t\t_fnDeleteIndex(settings.aiDisplay, row);\n\t\t\t\t_fnDeleteIndex(that[thatIdx], row, false); // maintain local indexes\n\n\t\t\t\t// Check for an 'overflow' they case for displaying the table\n\t\t\t\t_fnLengthOverflow(settings);\n\n\t\t\t\t// Remove the row's ID reference if there is one\n\t\t\t\tvar id = settings.rowIdFn(rowData._aData);\n\t\t\t\tif (id !== undefined) {\n\t\t\t\t\tdelete settings.aIds[id];\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.iterator('table', function (settings) {\n\t\t\t\tfor (var i = 0, ien = settings.aoData.length; i < ien; i++) {\n\t\t\t\t\tsettings.aoData[i].idx = i;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn this;\n\t\t});\n\n\n\t\t_api_register('rows.add()', function (rows) {\n\t\t\tvar newRows = this.iterator('table', function (settings) {\n\t\t\t\tvar row, i, ien;\n\t\t\t\tvar out = [];\n\n\t\t\t\tfor (i = 0, ien = rows.length; i < ien; i++) {\n\t\t\t\t\trow = rows[i];\n\n\t\t\t\t\tif (row.nodeName && row.nodeName.toUpperCase() === 'TR') {\n\t\t\t\t\t\tout.push(_fnAddTr(settings, row)[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tout.push(_fnAddData(settings, row));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn out;\n\t\t\t}, 1);\n\n\t\t\t// Return an Api.rows() extended instance, so rows().nodes() etc can be used\n\t\t\tvar modRows = this.rows(-1);\n\t\t\tmodRows.pop();\n\t\t\t$.merge(modRows, newRows);\n\n\t\t\treturn modRows;\n\t\t});\n\n\n\n\n\n\t\t/**\n\t\t *\n\t\t */\n\t\t_api_register('row()', function (selector, opts) {\n\t\t\treturn _selector_first(this.rows(selector, opts));\n\t\t});\n\n\n\t\t_api_register('row().data()', function (data) {\n\t\t\tvar ctx = this.context;\n\n\t\t\tif (data === undefined) {\n\t\t\t\t// Get\n\t\t\t\treturn ctx.length && this.length ?\n\t\t\t\t\tctx[0].aoData[this[0]]._aData :\n\t\t\t\t\tundefined;\n\t\t\t}\n\n\t\t\t// Set\n\t\t\tctx[0].aoData[this[0]]._aData = data;\n\n\t\t\t// Automatically invalidate\n\t\t\t_fnInvalidate(ctx[0], this[0], 'data');\n\n\t\t\treturn this;\n\t\t});\n\n\n\t\t_api_register('row().node()', function () {\n\t\t\tvar ctx = this.context;\n\n\t\t\treturn ctx.length && this.length ?\n\t\t\t\tctx[0].aoData[this[0]].nTr || null :\n\t\t\t\tnull;\n\t\t});\n\n\n\t\t_api_register('row.add()', function (row) {\n\t\t\t// Allow a jQuery object to be passed in - only a single row is added from\n\t\t\t// it though - the first element in the set\n\t\t\tif (row instanceof $ && row.length) {\n\t\t\t\trow = row[0];\n\t\t\t}\n\n\t\t\tvar rows = this.iterator('table', function (settings) {\n\t\t\t\tif (row.nodeName && row.nodeName.toUpperCase() === 'TR') {\n\t\t\t\t\treturn _fnAddTr(settings, row)[0];\n\t\t\t\t}\n\t\t\t\treturn _fnAddData(settings, row);\n\t\t\t});\n\n\t\t\t// Return an Api.rows() extended instance, with the newly added row selected\n\t\t\treturn this.row(rows[0]);\n\t\t});\n\n\n\n\t\tvar __details_add = function (ctx, row, data, klass) {\n\t\t\t// Convert to array of TR elements\n\t\t\tvar rows = [];\n\t\t\tvar addRow = function (r, k) {\n\t\t\t\t// Recursion to allow for arrays of jQuery objects\n\t\t\t\tif ($.isArray(r) || r instanceof $) {\n\t\t\t\t\tfor (var i = 0, ien = r.length; i < ien; i++) {\n\t\t\t\t\t\taddRow(r[i], k);\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// If we get a TR element, then just add it directly - up to the dev\n\t\t\t\t// to add the correct number of columns etc\n\t\t\t\tif (r.nodeName && r.nodeName.toLowerCase() === 'tr') {\n\t\t\t\t\trows.push(r);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Otherwise create a row with a wrapper\n\t\t\t\t\tvar created = $('<tr><td/></tr>').addClass(k);\n\t\t\t\t\t$('td', created)\n\t\t\t\t\t\t.addClass(k)\n\t\t\t\t\t\t.html(r)\n\t\t\t\t\t[0].colSpan = _fnVisbleColumns(ctx);\n\n\t\t\t\t\trows.push(created[0]);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\taddRow(data, klass);\n\n\t\t\tif (row._details) {\n\t\t\t\trow._details.detach();\n\t\t\t}\n\n\t\t\trow._details = $(rows);\n\n\t\t\t// If the children were already shown, that state should be retained\n\t\t\tif (row._detailsShow) {\n\t\t\t\trow._details.insertAfter(row.nTr);\n\t\t\t}\n\t\t};\n\n\n\t\tvar __details_remove = function (api, idx) {\n\t\t\tvar ctx = api.context;\n\n\t\t\tif (ctx.length) {\n\t\t\t\tvar row = ctx[0].aoData[idx !== undefined ? idx : api[0]];\n\n\t\t\t\tif (row && row._details) {\n\t\t\t\t\trow._details.remove();\n\n\t\t\t\t\trow._detailsShow = undefined;\n\t\t\t\t\trow._details = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\n\t\tvar __details_display = function (api, show) {\n\t\t\tvar ctx = api.context;\n\n\t\t\tif (ctx.length && api.length) {\n\t\t\t\tvar row = ctx[0].aoData[api[0]];\n\n\t\t\t\tif (row._details) {\n\t\t\t\t\trow._detailsShow = show;\n\n\t\t\t\t\tif (show) {\n\t\t\t\t\t\trow._details.insertAfter(row.nTr);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\trow._details.detach();\n\t\t\t\t\t}\n\n\t\t\t\t\t__details_events(ctx[0]);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\n\t\tvar __details_events = function (settings) {\n\t\t\tvar api = new _Api(settings);\n\t\t\tvar namespace = '.dt.DT_details';\n\t\t\tvar drawEvent = 'draw' + namespace;\n\t\t\tvar colvisEvent = 'column-visibility' + namespace;\n\t\t\tvar destroyEvent = 'destroy' + namespace;\n\t\t\tvar data = settings.aoData;\n\n\t\t\tapi.off(drawEvent + ' ' + colvisEvent + ' ' + destroyEvent);\n\n\t\t\tif (_pluck(data, '_details').length > 0) {\n\t\t\t\t// On each draw, insert the required elements into the document\n\t\t\t\tapi.on(drawEvent, function (e, ctx) {\n\t\t\t\t\tif (settings !== ctx) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tapi.rows({ page: 'current' }).eq(0).each(function (idx) {\n\t\t\t\t\t\t// Internal data grab\n\t\t\t\t\t\tvar row = data[idx];\n\n\t\t\t\t\t\tif (row._detailsShow) {\n\t\t\t\t\t\t\trow._details.insertAfter(row.nTr);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\t// Column visibility change - update the colspan\n\t\t\t\tapi.on(colvisEvent, function (e, ctx, idx, vis) {\n\t\t\t\t\tif (settings !== ctx) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Update the colspan for the details rows (note, only if it already has\n\t\t\t\t\t// a colspan)\n\t\t\t\t\tvar row, visible = _fnVisbleColumns(ctx);\n\n\t\t\t\t\tfor (var i = 0, ien = data.length; i < ien; i++) {\n\t\t\t\t\t\trow = data[i];\n\n\t\t\t\t\t\tif (row._details) {\n\t\t\t\t\t\t\trow._details.children('td[colspan]').attr('colspan', visible);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Table destroyed - nuke any child rows\n\t\t\t\tapi.on(destroyEvent, function (e, ctx) {\n\t\t\t\t\tif (settings !== ctx) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (var i = 0, ien = data.length; i < ien; i++) {\n\t\t\t\t\t\tif (data[i]._details) {\n\t\t\t\t\t\t\t__details_remove(api, i);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\t// Strings for the method names to help minification\n\t\tvar _emp = '';\n\t\tvar _child_obj = _emp + 'row().child';\n\t\tvar _child_mth = _child_obj + '()';\n\n\t\t// data can be:\n\t\t//  tr\n\t\t//  string\n\t\t//  jQuery or array of any of the above\n\t\t_api_register(_child_mth, function (data, klass) {\n\t\t\tvar ctx = this.context;\n\n\t\t\tif (data === undefined) {\n\t\t\t\t// get\n\t\t\t\treturn ctx.length && this.length ?\n\t\t\t\t\tctx[0].aoData[this[0]]._details :\n\t\t\t\t\tundefined;\n\t\t\t}\n\t\t\telse if (data === true) {\n\t\t\t\t// show\n\t\t\t\tthis.child.show();\n\t\t\t}\n\t\t\telse if (data === false) {\n\t\t\t\t// remove\n\t\t\t\t__details_remove(this);\n\t\t\t}\n\t\t\telse if (ctx.length && this.length) {\n\t\t\t\t// set\n\t\t\t\t__details_add(ctx[0], ctx[0].aoData[this[0]], data, klass);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t});\n\n\n\t\t_api_register([\n\t\t\t_child_obj + '.show()',\n\t\t\t_child_mth + '.show()' // only when `child()` was called with parameters (without\n\t\t], function (show) {   // it returns an object and this method is not executed)\n\t\t\t__details_display(this, true);\n\t\t\treturn this;\n\t\t});\n\n\n\t\t_api_register([\n\t\t\t_child_obj + '.hide()',\n\t\t\t_child_mth + '.hide()' // only when `child()` was called with parameters (without\n\t\t], function () {         // it returns an object and this method is not executed)\n\t\t\t__details_display(this, false);\n\t\t\treturn this;\n\t\t});\n\n\n\t\t_api_register([\n\t\t\t_child_obj + '.remove()',\n\t\t\t_child_mth + '.remove()' // only when `child()` was called with parameters (without\n\t\t], function () {           // it returns an object and this method is not executed)\n\t\t\t__details_remove(this);\n\t\t\treturn this;\n\t\t});\n\n\n\t\t_api_register(_child_obj + '.isShown()', function () {\n\t\t\tvar ctx = this.context;\n\n\t\t\tif (ctx.length && this.length) {\n\t\t\t\t// _detailsShown as false or undefined will fall through to return false\n\t\t\t\treturn ctx[0].aoData[this[0]]._detailsShow || false;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\n\n\n\t\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t\t * Columns\n\t\t *\n\t\t * {integer}           - column index (>=0 count from left, <0 count from right)\n\t\t * \"{integer}:visIdx\"  - visible column index (i.e. translate to column index)  (>=0 count from left, <0 count from right)\n\t\t * \"{integer}:visible\" - alias for {integer}:visIdx  (>=0 count from left, <0 count from right)\n\t\t * \"{string}:name\"     - column name\n\t\t * \"{string}\"          - jQuery selector on column header nodes\n\t\t *\n\t\t */\n\n\t\t// can be an array of these items, comma separated list, or an array of comma\n\t\t// separated lists\n\n\t\tvar __re_column_selector = /^([^:]+):(name|visIdx|visible)$/;\n\n\n\t\t// r1 and r2 are redundant - but it means that the parameters match for the\n\t\t// iterator callback in columns().data()\n\t\tvar __columnData = function (settings, column, r1, r2, rows) {\n\t\t\tvar a = [];\n\t\t\tfor (var row = 0, ien = rows.length; row < ien; row++) {\n\t\t\t\ta.push(_fnGetCellData(settings, rows[row], column));\n\t\t\t}\n\t\t\treturn a;\n\t\t};\n\n\n\t\tvar __column_selector = function (settings, selector, opts) {\n\t\t\tvar\n\t\t\t\tcolumns = settings.aoColumns,\n\t\t\t\tnames = _pluck(columns, 'sName'),\n\t\t\t\tnodes = _pluck(columns, 'nTh');\n\n\t\t\tvar run = function (s) {\n\t\t\t\tvar selInt = _intVal(s);\n\n\t\t\t\t// Selector - all\n\t\t\t\tif (s === '') {\n\t\t\t\t\treturn _range(columns.length);\n\t\t\t\t}\n\n\t\t\t\t// Selector - index\n\t\t\t\tif (selInt !== null) {\n\t\t\t\t\treturn [selInt >= 0 ?\n\t\t\t\t\t\tselInt : // Count from left\n\t\t\t\t\t\tcolumns.length + selInt // Count from right (+ because its a negative value)\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\t// Selector = function\n\t\t\t\tif (typeof s === 'function') {\n\t\t\t\t\tvar rows = _selector_row_indexes(settings, opts);\n\n\t\t\t\t\treturn $.map(columns, function (col, idx) {\n\t\t\t\t\t\treturn s(\n\t\t\t\t\t\t\tidx,\n\t\t\t\t\t\t\t__columnData(settings, idx, 0, 0, rows),\n\t\t\t\t\t\t\tnodes[idx]\n\t\t\t\t\t\t) ? idx : null;\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// jQuery or string selector\n\t\t\t\tvar match = typeof s === 'string' ?\n\t\t\t\t\ts.match(__re_column_selector) :\n\t\t\t\t\t'';\n\n\t\t\t\tif (match) {\n\t\t\t\t\tswitch (match[2]) {\n\t\t\t\t\t\tcase 'visIdx':\n\t\t\t\t\t\tcase 'visible':\n\t\t\t\t\t\t\tvar idx = parseInt(match[1], 10);\n\t\t\t\t\t\t\t// Visible index given, convert to column index\n\t\t\t\t\t\t\tif (idx < 0) {\n\t\t\t\t\t\t\t\t// Counting from the right\n\t\t\t\t\t\t\t\tvar visColumns = $.map(columns, function (col, i) {\n\t\t\t\t\t\t\t\t\treturn col.bVisible ? i : null;\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\treturn [visColumns[visColumns.length + idx]];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// Counting from the left\n\t\t\t\t\t\t\treturn [_fnVisibleToColumnIndex(settings, idx)];\n\n\t\t\t\t\t\tcase 'name':\n\t\t\t\t\t\t\t// match by name. `names` is column index complete and in order\n\t\t\t\t\t\t\treturn $.map(names, function (name, i) {\n\t\t\t\t\t\t\t\treturn name === match[1] ? i : null;\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn [];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Cell in the table body\n\t\t\t\tif (s.nodeName && s._DT_CellIndex) {\n\t\t\t\t\treturn [s._DT_CellIndex.column];\n\t\t\t\t}\n\n\t\t\t\t// jQuery selector on the TH elements for the columns\n\t\t\t\tvar jqResult = $(nodes)\n\t\t\t\t\t.filter(s)\n\t\t\t\t\t.map(function () {\n\t\t\t\t\t\treturn $.inArray(this, nodes); // `nodes` is column index complete and in order\n\t\t\t\t\t})\n\t\t\t\t\t.toArray();\n\n\t\t\t\tif (jqResult.length || !s.nodeName) {\n\t\t\t\t\treturn jqResult;\n\t\t\t\t}\n\n\t\t\t\t// Otherwise a node which might have a `dt-column` data attribute, or be\n\t\t\t\t// a child or such an element\n\t\t\t\tvar host = $(s).closest('*[data-dt-column]');\n\t\t\t\treturn host.length ?\n\t\t\t\t\t[host.data('dt-column')] :\n\t\t\t\t\t[];\n\t\t\t};\n\n\t\t\treturn _selector_run('column', selector, run, settings, opts);\n\t\t};\n\n\n\t\tvar __setColumnVis = function (settings, column, vis) {\n\t\t\tvar\n\t\t\t\tcols = settings.aoColumns,\n\t\t\t\tcol = cols[column],\n\t\t\t\tdata = settings.aoData,\n\t\t\t\trow, cells, i, ien, tr;\n\n\t\t\t// Get\n\t\t\tif (vis === undefined) {\n\t\t\t\treturn col.bVisible;\n\t\t\t}\n\n\t\t\t// Set\n\t\t\t// No change\n\t\t\tif (col.bVisible === vis) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (vis) {\n\t\t\t\t// Insert column\n\t\t\t\t// Need to decide if we should use appendChild or insertBefore\n\t\t\t\tvar insertBefore = $.inArray(true, _pluck(cols, 'bVisible'), column + 1);\n\n\t\t\t\tfor (i = 0, ien = data.length; i < ien; i++) {\n\t\t\t\t\ttr = data[i].nTr;\n\t\t\t\t\tcells = data[i].anCells;\n\n\t\t\t\t\tif (tr) {\n\t\t\t\t\t\t// insertBefore can act like appendChild if 2nd arg is null\n\t\t\t\t\t\ttr.insertBefore(cells[column], cells[insertBefore] || null);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Remove column\n\t\t\t\t$(_pluck(settings.aoData, 'anCells', column)).detach();\n\t\t\t}\n\n\t\t\t// Common actions\n\t\t\tcol.bVisible = vis;\n\t\t\t_fnDrawHead(settings, settings.aoHeader);\n\t\t\t_fnDrawHead(settings, settings.aoFooter);\n\n\t\t\t_fnSaveState(settings);\n\t\t};\n\n\n\t\t_api_register('columns()', function (selector, opts) {\n\t\t\t// argument shifting\n\t\t\tif (selector === undefined) {\n\t\t\t\tselector = '';\n\t\t\t}\n\t\t\telse if ($.isPlainObject(selector)) {\n\t\t\t\topts = selector;\n\t\t\t\tselector = '';\n\t\t\t}\n\n\t\t\topts = _selector_opts(opts);\n\n\t\t\tvar inst = this.iterator('table', function (settings) {\n\t\t\t\treturn __column_selector(settings, selector, opts);\n\t\t\t}, 1);\n\n\t\t\t// Want argument shifting here and in _row_selector?\n\t\t\tinst.selector.cols = selector;\n\t\t\tinst.selector.opts = opts;\n\n\t\t\treturn inst;\n\t\t});\n\n\t\t_api_registerPlural('columns().header()', 'column().header()', function (selector, opts) {\n\t\t\treturn this.iterator('column', function (settings, column) {\n\t\t\t\treturn settings.aoColumns[column].nTh;\n\t\t\t}, 1);\n\t\t});\n\n\t\t_api_registerPlural('columns().footer()', 'column().footer()', function (selector, opts) {\n\t\t\treturn this.iterator('column', function (settings, column) {\n\t\t\t\treturn settings.aoColumns[column].nTf;\n\t\t\t}, 1);\n\t\t});\n\n\t\t_api_registerPlural('columns().data()', 'column().data()', function () {\n\t\t\treturn this.iterator('column-rows', __columnData, 1);\n\t\t});\n\n\t\t_api_registerPlural('columns().dataSrc()', 'column().dataSrc()', function () {\n\t\t\treturn this.iterator('column', function (settings, column) {\n\t\t\t\treturn settings.aoColumns[column].mData;\n\t\t\t}, 1);\n\t\t});\n\n\t\t_api_registerPlural('columns().cache()', 'column().cache()', function (type) {\n\t\t\treturn this.iterator('column-rows', function (settings, column, i, j, rows) {\n\t\t\t\treturn _pluck_order(settings.aoData, rows,\n\t\t\t\t\ttype === 'search' ? '_aFilterData' : '_aSortData', column\n\t\t\t\t);\n\t\t\t}, 1);\n\t\t});\n\n\t\t_api_registerPlural('columns().nodes()', 'column().nodes()', function () {\n\t\t\treturn this.iterator('column-rows', function (settings, column, i, j, rows) {\n\t\t\t\treturn _pluck_order(settings.aoData, rows, 'anCells', column);\n\t\t\t}, 1);\n\t\t});\n\n\t\t_api_registerPlural('columns().visible()', 'column().visible()', function (vis, calc) {\n\t\t\tvar ret = this.iterator('column', function (settings, column) {\n\t\t\t\tif (vis === undefined) {\n\t\t\t\t\treturn settings.aoColumns[column].bVisible;\n\t\t\t\t} // else\n\t\t\t\t__setColumnVis(settings, column, vis);\n\t\t\t});\n\n\t\t\t// Group the column visibility changes\n\t\t\tif (vis !== undefined) {\n\t\t\t\t// Second loop once the first is done for events\n\t\t\t\tthis.iterator('column', function (settings, column) {\n\t\t\t\t\t_fnCallbackFire(settings, null, 'column-visibility', [settings, column, vis, calc]);\n\t\t\t\t});\n\n\t\t\t\tif (calc === undefined || calc) {\n\t\t\t\t\tthis.columns.adjust();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn ret;\n\t\t});\n\n\t\t_api_registerPlural('columns().indexes()', 'column().index()', function (type) {\n\t\t\treturn this.iterator('column', function (settings, column) {\n\t\t\t\treturn type === 'visible' ?\n\t\t\t\t\t_fnColumnIndexToVisible(settings, column) :\n\t\t\t\t\tcolumn;\n\t\t\t}, 1);\n\t\t});\n\n\t\t_api_register('columns.adjust()', function () {\n\t\t\treturn this.iterator('table', function (settings) {\n\t\t\t\t_fnAdjustColumnSizing(settings);\n\t\t\t}, 1);\n\t\t});\n\n\t\t_api_register('column.index()', function (type, idx) {\n\t\t\tif (this.context.length !== 0) {\n\t\t\t\tvar ctx = this.context[0];\n\n\t\t\t\tif (type === 'fromVisible' || type === 'toData') {\n\t\t\t\t\treturn _fnVisibleToColumnIndex(ctx, idx);\n\t\t\t\t}\n\t\t\t\telse if (type === 'fromData' || type === 'toVisible') {\n\t\t\t\t\treturn _fnColumnIndexToVisible(ctx, idx);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t_api_register('column()', function (selector, opts) {\n\t\t\treturn _selector_first(this.columns(selector, opts));\n\t\t});\n\n\n\n\t\tvar __cell_selector = function (settings, selector, opts) {\n\t\t\tvar data = settings.aoData;\n\t\t\tvar rows = _selector_row_indexes(settings, opts);\n\t\t\tvar cells = _removeEmpty(_pluck_order(data, rows, 'anCells'));\n\t\t\tvar allCells = $([].concat.apply([], cells));\n\t\t\tvar row;\n\t\t\tvar columns = settings.aoColumns.length;\n\t\t\tvar a, i, ien, j, o, host;\n\n\t\t\tvar run = function (s) {\n\t\t\t\tvar fnSelector = typeof s === 'function';\n\n\t\t\t\tif (s === null || s === undefined || fnSelector) {\n\t\t\t\t\t// All cells and function selectors\n\t\t\t\t\ta = [];\n\n\t\t\t\t\tfor (i = 0, ien = rows.length; i < ien; i++) {\n\t\t\t\t\t\trow = rows[i];\n\n\t\t\t\t\t\tfor (j = 0; j < columns; j++) {\n\t\t\t\t\t\t\to = {\n\t\t\t\t\t\t\t\trow: row,\n\t\t\t\t\t\t\t\tcolumn: j\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tif (fnSelector) {\n\t\t\t\t\t\t\t\t// Selector - function\n\t\t\t\t\t\t\t\thost = data[row];\n\n\t\t\t\t\t\t\t\tif (s(o, _fnGetCellData(settings, row, j), host.anCells ? host.anCells[j] : null)) {\n\t\t\t\t\t\t\t\t\ta.push(o);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t// Selector - all\n\t\t\t\t\t\t\t\ta.push(o);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn a;\n\t\t\t\t}\n\n\t\t\t\t// Selector - index\n\t\t\t\tif ($.isPlainObject(s)) {\n\t\t\t\t\treturn [s];\n\t\t\t\t}\n\n\t\t\t\t// Selector - jQuery filtered cells\n\t\t\t\tvar jqResult = allCells\n\t\t\t\t\t.filter(s)\n\t\t\t\t\t.map(function (i, el) {\n\t\t\t\t\t\treturn { // use a new object, in case someone changes the values\n\t\t\t\t\t\t\trow: el._DT_CellIndex.row,\n\t\t\t\t\t\t\tcolumn: el._DT_CellIndex.column\n\t\t\t\t\t\t};\n\t\t\t\t\t})\n\t\t\t\t\t.toArray();\n\n\t\t\t\tif (jqResult.length || !s.nodeName) {\n\t\t\t\t\treturn jqResult;\n\t\t\t\t}\n\n\t\t\t\t// Otherwise the selector is a node, and there is one last option - the\n\t\t\t\t// element might be a child of an element which has dt-row and dt-column\n\t\t\t\t// data attributes\n\t\t\t\thost = $(s).closest('*[data-dt-row]');\n\t\t\t\treturn host.length ?\n\t\t\t\t\t[{\n\t\t\t\t\t\trow: host.data('dt-row'),\n\t\t\t\t\t\tcolumn: host.data('dt-column')\n\t\t\t\t\t}] :\n\t\t\t\t\t[];\n\t\t\t};\n\n\t\t\treturn _selector_run('cell', selector, run, settings, opts);\n\t\t};\n\n\n\n\n\t\t_api_register('cells()', function (rowSelector, columnSelector, opts) {\n\t\t\t// Argument shifting\n\t\t\tif ($.isPlainObject(rowSelector)) {\n\t\t\t\t// Indexes\n\t\t\t\tif (rowSelector.row === undefined) {\n\t\t\t\t\t// Selector options in first parameter\n\t\t\t\t\topts = rowSelector;\n\t\t\t\t\trowSelector = null;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Cell index objects in first parameter\n\t\t\t\t\topts = columnSelector;\n\t\t\t\t\tcolumnSelector = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ($.isPlainObject(columnSelector)) {\n\t\t\t\topts = columnSelector;\n\t\t\t\tcolumnSelector = null;\n\t\t\t}\n\n\t\t\t// Cell selector\n\t\t\tif (columnSelector === null || columnSelector === undefined) {\n\t\t\t\treturn this.iterator('table', function (settings) {\n\t\t\t\t\treturn __cell_selector(settings, rowSelector, _selector_opts(opts));\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Row + column selector\n\t\t\tvar columns = this.columns(columnSelector, opts);\n\t\t\tvar rows = this.rows(rowSelector, opts);\n\t\t\tvar a, i, ien, j, jen;\n\n\t\t\tvar cells = this.iterator('table', function (settings, idx) {\n\t\t\t\ta = [];\n\n\t\t\t\tfor (i = 0, ien = rows[idx].length; i < ien; i++) {\n\t\t\t\t\tfor (j = 0, jen = columns[idx].length; j < jen; j++) {\n\t\t\t\t\t\ta.push({\n\t\t\t\t\t\t\trow: rows[idx][i],\n\t\t\t\t\t\t\tcolumn: columns[idx][j]\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn a;\n\t\t\t}, 1);\n\n\t\t\t$.extend(cells.selector, {\n\t\t\t\tcols: columnSelector,\n\t\t\t\trows: rowSelector,\n\t\t\t\topts: opts\n\t\t\t});\n\n\t\t\treturn cells;\n\t\t});\n\n\n\t\t_api_registerPlural('cells().nodes()', 'cell().node()', function () {\n\t\t\treturn this.iterator('cell', function (settings, row, column) {\n\t\t\t\tvar data = settings.aoData[row];\n\n\t\t\t\treturn data && data.anCells ?\n\t\t\t\t\tdata.anCells[column] :\n\t\t\t\t\tundefined;\n\t\t\t}, 1);\n\t\t});\n\n\n\t\t_api_register('cells().data()', function () {\n\t\t\treturn this.iterator('cell', function (settings, row, column) {\n\t\t\t\treturn _fnGetCellData(settings, row, column);\n\t\t\t}, 1);\n\t\t});\n\n\n\t\t_api_registerPlural('cells().cache()', 'cell().cache()', function (type) {\n\t\t\ttype = type === 'search' ? '_aFilterData' : '_aSortData';\n\n\t\t\treturn this.iterator('cell', function (settings, row, column) {\n\t\t\t\treturn settings.aoData[row][type][column];\n\t\t\t}, 1);\n\t\t});\n\n\n\t\t_api_registerPlural('cells().render()', 'cell().render()', function (type) {\n\t\t\treturn this.iterator('cell', function (settings, row, column) {\n\t\t\t\treturn _fnGetCellData(settings, row, column, type);\n\t\t\t}, 1);\n\t\t});\n\n\n\t\t_api_registerPlural('cells().indexes()', 'cell().index()', function () {\n\t\t\treturn this.iterator('cell', function (settings, row, column) {\n\t\t\t\treturn {\n\t\t\t\t\trow: row,\n\t\t\t\t\tcolumn: column,\n\t\t\t\t\tcolumnVisible: _fnColumnIndexToVisible(settings, column)\n\t\t\t\t};\n\t\t\t}, 1);\n\t\t});\n\n\n\t\t_api_registerPlural('cells().invalidate()', 'cell().invalidate()', function (src) {\n\t\t\treturn this.iterator('cell', function (settings, row, column) {\n\t\t\t\t_fnInvalidate(settings, row, src, column);\n\t\t\t});\n\t\t});\n\n\n\n\t\t_api_register('cell()', function (rowSelector, columnSelector, opts) {\n\t\t\treturn _selector_first(this.cells(rowSelector, columnSelector, opts));\n\t\t});\n\n\n\t\t_api_register('cell().data()', function (data) {\n\t\t\tvar ctx = this.context;\n\t\t\tvar cell = this[0];\n\n\t\t\tif (data === undefined) {\n\t\t\t\t// Get\n\t\t\t\treturn ctx.length && cell.length ?\n\t\t\t\t\t_fnGetCellData(ctx[0], cell[0].row, cell[0].column) :\n\t\t\t\t\tundefined;\n\t\t\t}\n\n\t\t\t// Set\n\t\t\t_fnSetCellData(ctx[0], cell[0].row, cell[0].column, data);\n\t\t\t_fnInvalidate(ctx[0], cell[0].row, 'data', cell[0].column);\n\n\t\t\treturn this;\n\t\t});\n\n\n\n\t\t/**\n\t\t * Get current ordering (sorting) that has been applied to the table.\n\t\t *\n\t\t * @returns {array} 2D array containing the sorting information for the first\n\t\t *   table in the current context. Each element in the parent array represents\n\t\t *   a column being sorted upon (i.e. multi-sorting with two columns would have\n\t\t *   2 inner arrays). The inner arrays may have 2 or 3 elements. The first is\n\t\t *   the column index that the sorting condition applies to, the second is the\n\t\t *   direction of the sort (`desc` or `asc`) and, optionally, the third is the\n\t\t *   index of the sorting order from the `column.sorting` initialisation array.\n\t\t *//**\n\t\t* Set the ordering for the table.\n\t\t*\n\t\t* @param {integer} order Column index to sort upon.\n\t\t* @param {string} direction Direction of the sort to be applied (`asc` or `desc`)\n\t\t* @returns {DataTables.Api} this\n\t\t*//**\n\t\t* Set the ordering for the table.\n\t\t*\n\t\t* @param {array} order 1D array of sorting information to be applied.\n\t\t* @param {array} [...] Optional additional sorting conditions\n\t\t* @returns {DataTables.Api} this\n\t\t*//**\n\t\t* Set the ordering for the table.\n\t\t*\n\t\t* @param {array} order 2D array of sorting information to be applied.\n\t\t* @returns {DataTables.Api} this\n\t\t*/\n\t\t_api_register('order()', function (order, dir) {\n\t\t\tvar ctx = this.context;\n\n\t\t\tif (order === undefined) {\n\t\t\t\t// get\n\t\t\t\treturn ctx.length !== 0 ?\n\t\t\t\t\tctx[0].aaSorting :\n\t\t\t\t\tundefined;\n\t\t\t}\n\n\t\t\t// set\n\t\t\tif (typeof order === 'number') {\n\t\t\t\t// Simple column / direction passed in\n\t\t\t\torder = [[order, dir]];\n\t\t\t}\n\t\t\telse if (order.length && !$.isArray(order[0])) {\n\t\t\t\t// Arguments passed in (list of 1D arrays)\n\t\t\t\torder = Array.prototype.slice.call(arguments);\n\t\t\t}\n\t\t\t// otherwise a 2D array was passed in\n\n\t\t\treturn this.iterator('table', function (settings) {\n\t\t\t\tsettings.aaSorting = order.slice();\n\t\t\t});\n\t\t});\n\n\n\t\t/**\n\t\t * Attach a sort listener to an element for a given column\n\t\t *\n\t\t * @param {node|jQuery|string} node Identifier for the element(s) to attach the\n\t\t *   listener to. This can take the form of a single DOM node, a jQuery\n\t\t *   collection of nodes or a jQuery selector which will identify the node(s).\n\t\t * @param {integer} column the column that a click on this node will sort on\n\t\t * @param {function} [callback] callback function when sort is run\n\t\t * @returns {DataTables.Api} this\n\t\t */\n\t\t_api_register('order.listener()', function (node, column, callback) {\n\t\t\treturn this.iterator('table', function (settings) {\n\t\t\t\t_fnSortAttachListener(settings, node, column, callback);\n\t\t\t});\n\t\t});\n\n\n\t\t_api_register('order.fixed()', function (set) {\n\t\t\tif (!set) {\n\t\t\t\tvar ctx = this.context;\n\t\t\t\tvar fixed = ctx.length ?\n\t\t\t\t\tctx[0].aaSortingFixed :\n\t\t\t\t\tundefined;\n\n\t\t\t\treturn $.isArray(fixed) ?\n\t\t\t\t\t{ pre: fixed } :\n\t\t\t\t\tfixed;\n\t\t\t}\n\n\t\t\treturn this.iterator('table', function (settings) {\n\t\t\t\tsettings.aaSortingFixed = $.extend(true, {}, set);\n\t\t\t});\n\t\t});\n\n\n\t\t// Order by the selected column(s)\n\t\t_api_register([\n\t\t\t'columns().order()',\n\t\t\t'column().order()'\n\t\t], function (dir) {\n\t\t\tvar that = this;\n\n\t\t\treturn this.iterator('table', function (settings, i) {\n\t\t\t\tvar sort = [];\n\n\t\t\t\t$.each(that[i], function (j, col) {\n\t\t\t\t\tsort.push([col, dir]);\n\t\t\t\t});\n\n\t\t\t\tsettings.aaSorting = sort;\n\t\t\t});\n\t\t});\n\n\n\n\t\t_api_register('search()', function (input, regex, smart, caseInsen) {\n\t\t\tvar ctx = this.context;\n\n\t\t\tif (input === undefined) {\n\t\t\t\t// get\n\t\t\t\treturn ctx.length !== 0 ?\n\t\t\t\t\tctx[0].oPreviousSearch.sSearch :\n\t\t\t\t\tundefined;\n\t\t\t}\n\n\t\t\t// set\n\t\t\treturn this.iterator('table', function (settings) {\n\t\t\t\tif (!settings.oFeatures.bFilter) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t_fnFilterComplete(settings, $.extend({}, settings.oPreviousSearch, {\n\t\t\t\t\t\"sSearch\": input + \"\",\n\t\t\t\t\t\"bRegex\": regex === null ? false : regex,\n\t\t\t\t\t\"bSmart\": smart === null ? true : smart,\n\t\t\t\t\t\"bCaseInsensitive\": caseInsen === null ? true : caseInsen\n\t\t\t\t}), 1);\n\t\t\t});\n\t\t});\n\n\n\t\t_api_registerPlural(\n\t\t\t'columns().search()',\n\t\t\t'column().search()',\n\t\t\tfunction (input, regex, smart, caseInsen) {\n\t\t\t\treturn this.iterator('column', function (settings, column) {\n\t\t\t\t\tvar preSearch = settings.aoPreSearchCols;\n\n\t\t\t\t\tif (input === undefined) {\n\t\t\t\t\t\t// get\n\t\t\t\t\t\treturn preSearch[column].sSearch;\n\t\t\t\t\t}\n\n\t\t\t\t\t// set\n\t\t\t\t\tif (!settings.oFeatures.bFilter) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t$.extend(preSearch[column], {\n\t\t\t\t\t\t\"sSearch\": input + \"\",\n\t\t\t\t\t\t\"bRegex\": regex === null ? false : regex,\n\t\t\t\t\t\t\"bSmart\": smart === null ? true : smart,\n\t\t\t\t\t\t\"bCaseInsensitive\": caseInsen === null ? true : caseInsen\n\t\t\t\t\t});\n\n\t\t\t\t\t_fnFilterComplete(settings, settings.oPreviousSearch, 1);\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\n\t\t/*\n\t\t * State API methods\n\t\t */\n\n\t\t_api_register('state()', function () {\n\t\t\treturn this.context.length ?\n\t\t\t\tthis.context[0].oSavedState :\n\t\t\t\tnull;\n\t\t});\n\n\n\t\t_api_register('state.clear()', function () {\n\t\t\treturn this.iterator('table', function (settings) {\n\t\t\t\t// Save an empty object\n\t\t\t\tsettings.fnStateSaveCallback.call(settings.oInstance, settings, {});\n\t\t\t});\n\t\t});\n\n\n\t\t_api_register('state.loaded()', function () {\n\t\t\treturn this.context.length ?\n\t\t\t\tthis.context[0].oLoadedState :\n\t\t\t\tnull;\n\t\t});\n\n\n\t\t_api_register('state.save()', function () {\n\t\t\treturn this.iterator('table', function (settings) {\n\t\t\t\t_fnSaveState(settings);\n\t\t\t});\n\t\t});\n\n\n\n\t\t/**\n\t\t * Provide a common method for plug-ins to check the version of DataTables being\n\t\t * used, in order to ensure compatibility.\n\t\t *\n\t\t *  @param {string} version Version string to check for, in the format \"X.Y.Z\".\n\t\t *    Note that the formats \"X\" and \"X.Y\" are also acceptable.\n\t\t *  @returns {boolean} true if this version of DataTables is greater or equal to\n\t\t *    the required version, or false if this version of DataTales is not\n\t\t *    suitable\n\t\t *  @static\n\t\t *  @dtopt API-Static\n\t\t *\n\t\t *  @example\n\t\t *    alert( $.fn.dataTable.versionCheck( '1.9.0' ) );\n\t\t */\n\t\tDataTable.versionCheck = DataTable.fnVersionCheck = function (version) {\n\t\t\tvar aThis = DataTable.version.split('.');\n\t\t\tvar aThat = version.split('.');\n\t\t\tvar iThis, iThat;\n\n\t\t\tfor (var i = 0, iLen = aThat.length; i < iLen; i++) {\n\t\t\t\tiThis = parseInt(aThis[i], 10) || 0;\n\t\t\t\tiThat = parseInt(aThat[i], 10) || 0;\n\n\t\t\t\t// Parts are the same, keep comparing\n\t\t\t\tif (iThis === iThat) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Parts are different, return immediately\n\t\t\t\treturn iThis > iThat;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t};\n\n\n\t\t/**\n\t\t * Check if a `<table>` node is a DataTable table already or not.\n\t\t *\n\t\t *  @param {node|jquery|string} table Table node, jQuery object or jQuery\n\t\t *      selector for the table to test. Note that if more than more than one\n\t\t *      table is passed on, only the first will be checked\n\t\t *  @returns {boolean} true the table given is a DataTable, or false otherwise\n\t\t *  @static\n\t\t *  @dtopt API-Static\n\t\t *\n\t\t *  @example\n\t\t *    if ( ! $.fn.DataTable.isDataTable( '#example' ) ) {\n\t\t *      $('#example').dataTable();\n\t\t *    }\n\t\t */\n\t\tDataTable.isDataTable = DataTable.fnIsDataTable = function (table) {\n\t\t\tvar t = $(table).get(0);\n\t\t\tvar is = false;\n\n\t\t\tif (table instanceof DataTable.Api) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t$.each(DataTable.settings, function (i, o) {\n\t\t\t\tvar head = o.nScrollHead ? $('table', o.nScrollHead)[0] : null;\n\t\t\t\tvar foot = o.nScrollFoot ? $('table', o.nScrollFoot)[0] : null;\n\n\t\t\t\tif (o.nTable === t || head === t || foot === t) {\n\t\t\t\t\tis = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn is;\n\t\t};\n\n\n\t\t/**\n\t\t * Get all DataTable tables that have been initialised - optionally you can\n\t\t * select to get only currently visible tables.\n\t\t *\n\t\t *  @param {boolean} [visible=false] Flag to indicate if you want all (default)\n\t\t *    or visible tables only.\n\t\t *  @returns {array} Array of `table` nodes (not DataTable instances) which are\n\t\t *    DataTables\n\t\t *  @static\n\t\t *  @dtopt API-Static\n\t\t *\n\t\t *  @example\n\t\t *    $.each( $.fn.dataTable.tables(true), function () {\n\t\t *      $(table).DataTable().columns.adjust();\n\t\t *    } );\n\t\t */\n\t\tDataTable.tables = DataTable.fnTables = function (visible) {\n\t\t\tvar api = false;\n\n\t\t\tif ($.isPlainObject(visible)) {\n\t\t\t\tapi = visible.api;\n\t\t\t\tvisible = visible.visible;\n\t\t\t}\n\n\t\t\tvar a = $.map(DataTable.settings, function (o) {\n\t\t\t\tif (!visible || (visible && $(o.nTable).is(':visible'))) {\n\t\t\t\t\treturn o.nTable;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn api ?\n\t\t\t\tnew _Api(a) :\n\t\t\t\ta;\n\t\t};\n\n\n\t\t/**\n\t\t * Convert from camel case parameters to Hungarian notation. This is made public\n\t\t * for the extensions to provide the same ability as DataTables core to accept\n\t\t * either the 1.9 style Hungarian notation, or the 1.10+ style camelCase\n\t\t * parameters.\n\t\t *\n\t\t *  @param {object} src The model object which holds all parameters that can be\n\t\t *    mapped.\n\t\t *  @param {object} user The object to convert from camel case to Hungarian.\n\t\t *  @param {boolean} force When set to `true`, properties which already have a\n\t\t *    Hungarian value in the `user` object will be overwritten. Otherwise they\n\t\t *    won't be.\n\t\t */\n\t\tDataTable.camelToHungarian = _fnCamelToHungarian;\n\n\n\n\t\t/**\n\t\t *\n\t\t */\n\t\t_api_register('$()', function (selector, opts) {\n\t\t\tvar\n\t\t\t\trows = this.rows(opts).nodes(), // Get all rows\n\t\t\t\tjqRows = $(rows);\n\n\t\t\treturn $([].concat(\n\t\t\t\tjqRows.filter(selector).toArray(),\n\t\t\t\tjqRows.find(selector).toArray()\n\t\t\t));\n\t\t});\n\n\n\t\t// jQuery functions to operate on the tables\n\t\t$.each(['on', 'one', 'off'], function (i, key) {\n\t\t\t_api_register(key + '()', function ( /* event, handler */) {\n\t\t\t\tvar args = Array.prototype.slice.call(arguments);\n\n\t\t\t\t// Add the `dt` namespace automatically if it isn't already present\n\t\t\t\targs[0] = $.map(args[0].split(/\\s/), function (e) {\n\t\t\t\t\treturn !e.match(/\\.dt\\b/) ?\n\t\t\t\t\t\te + '.dt' :\n\t\t\t\t\t\te;\n\t\t\t\t}).join(' ');\n\n\t\t\t\tvar inst = $(this.tables().nodes());\n\t\t\t\tinst[key].apply(inst, args);\n\t\t\t\treturn this;\n\t\t\t});\n\t\t});\n\n\n\t\t_api_register('clear()', function () {\n\t\t\treturn this.iterator('table', function (settings) {\n\t\t\t\t_fnClearTable(settings);\n\t\t\t});\n\t\t});\n\n\n\t\t_api_register('settings()', function () {\n\t\t\treturn new _Api(this.context, this.context);\n\t\t});\n\n\n\t\t_api_register('init()', function () {\n\t\t\tvar ctx = this.context;\n\t\t\treturn ctx.length ? ctx[0].oInit : null;\n\t\t});\n\n\n\t\t_api_register('data()', function () {\n\t\t\treturn this.iterator('table', function (settings) {\n\t\t\t\treturn _pluck(settings.aoData, '_aData');\n\t\t\t}).flatten();\n\t\t});\n\n\n\t\t_api_register('destroy()', function (remove) {\n\t\t\tremove = remove || false;\n\n\t\t\treturn this.iterator('table', function (settings) {\n\t\t\t\tvar orig = settings.nTableWrapper.parentNode;\n\t\t\t\tvar classes = settings.oClasses;\n\t\t\t\tvar table = settings.nTable;\n\t\t\t\tvar tbody = settings.nTBody;\n\t\t\t\tvar thead = settings.nTHead;\n\t\t\t\tvar tfoot = settings.nTFoot;\n\t\t\t\tvar jqTable = $(table);\n\t\t\t\tvar jqTbody = $(tbody);\n\t\t\t\tvar jqWrapper = $(settings.nTableWrapper);\n\t\t\t\tvar rows = $.map(settings.aoData, function (r) { return r.nTr; });\n\t\t\t\tvar i, ien;\n\n\t\t\t\t// Flag to note that the table is currently being destroyed - no action\n\t\t\t\t// should be taken\n\t\t\t\tsettings.bDestroying = true;\n\n\t\t\t\t// Fire off the destroy callbacks for plug-ins etc\n\t\t\t\t_fnCallbackFire(settings, \"aoDestroyCallback\", \"destroy\", [settings]);\n\n\t\t\t\t// If not being removed from the document, make all columns visible\n\t\t\t\tif (!remove) {\n\t\t\t\t\tnew _Api(settings).columns().visible(true);\n\t\t\t\t}\n\n\t\t\t\t// Blitz all `DT` namespaced events (these are internal events, the\n\t\t\t\t// lowercase, `dt` events are user subscribed and they are responsible\n\t\t\t\t// for removing them\n\t\t\t\tjqWrapper.off('.DT').find(':not(tbody *)').off('.DT');\n\t\t\t\t$(window).off('.DT-' + settings.sInstance);\n\n\t\t\t\t// When scrolling we had to break the table up - restore it\n\t\t\t\tif (table != thead.parentNode) {\n\t\t\t\t\tjqTable.children('thead').detach();\n\t\t\t\t\tjqTable.append(thead);\n\t\t\t\t}\n\n\t\t\t\tif (tfoot && table != tfoot.parentNode) {\n\t\t\t\t\tjqTable.children('tfoot').detach();\n\t\t\t\t\tjqTable.append(tfoot);\n\t\t\t\t}\n\n\t\t\t\tsettings.aaSorting = [];\n\t\t\t\tsettings.aaSortingFixed = [];\n\t\t\t\t_fnSortingClasses(settings);\n\n\t\t\t\t$(rows).removeClass(settings.asStripeClasses.join(' '));\n\n\t\t\t\t$('th, td', thead).removeClass(classes.sSortable + ' ' +\n\t\t\t\t\tclasses.sSortableAsc + ' ' + classes.sSortableDesc + ' ' + classes.sSortableNone\n\t\t\t\t);\n\n\t\t\t\tif (settings.bJUI) {\n\t\t\t\t\t$('th span.' + classes.sSortIcon + ', td span.' + classes.sSortIcon, thead).detach();\n\t\t\t\t\t$('th, td', thead).each(function () {\n\t\t\t\t\t\tvar wrapper = $('div.' + classes.sSortJUIWrapper, this);\n\t\t\t\t\t\t$(this).append(wrapper.contents());\n\t\t\t\t\t\twrapper.detach();\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Add the TR elements back into the table in their original order\n\t\t\t\tjqTbody.children().detach();\n\t\t\t\tjqTbody.append(rows);\n\n\t\t\t\t// Remove the DataTables generated nodes, events and classes\n\t\t\t\tvar removedMethod = remove ? 'remove' : 'detach';\n\t\t\t\tjqTable[removedMethod]();\n\t\t\t\tjqWrapper[removedMethod]();\n\n\t\t\t\t// If we need to reattach the table to the document\n\t\t\t\tif (!remove && orig) {\n\t\t\t\t\t// insertBefore acts like appendChild if !arg[1]\n\t\t\t\t\torig.insertBefore(table, settings.nTableReinsertBefore);\n\n\t\t\t\t\t// Restore the width of the original table - was read from the style property,\n\t\t\t\t\t// so we can restore directly to that\n\t\t\t\t\tjqTable\n\t\t\t\t\t\t.css('width', settings.sDestroyWidth)\n\t\t\t\t\t\t.removeClass(classes.sTable);\n\n\t\t\t\t\t// If the were originally stripe classes - then we add them back here.\n\t\t\t\t\t// Note this is not fool proof (for example if not all rows had stripe\n\t\t\t\t\t// classes - but it's a good effort without getting carried away\n\t\t\t\t\tien = settings.asDestroyStripes.length;\n\n\t\t\t\t\tif (ien) {\n\t\t\t\t\t\tjqTbody.children().each(function (i) {\n\t\t\t\t\t\t\t$(this).addClass(settings.asDestroyStripes[i % ien]);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/* Remove the settings object from the settings array */\n\t\t\t\tvar idx = $.inArray(settings, DataTable.settings);\n\t\t\t\tif (idx !== -1) {\n\t\t\t\t\tDataTable.settings.splice(idx, 1);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\n\t\t// Add the `every()` method for rows, columns and cells in a compact form\n\t\t$.each(['column', 'row', 'cell'], function (i, type) {\n\t\t\t_api_register(type + 's().every()', function (fn) {\n\t\t\t\tvar opts = this.selector.opts;\n\t\t\t\tvar api = this;\n\n\t\t\t\treturn this.iterator(type, function (settings, arg1, arg2, arg3, arg4) {\n\t\t\t\t\t// Rows and columns:\n\t\t\t\t\t//  arg1 - index\n\t\t\t\t\t//  arg2 - table counter\n\t\t\t\t\t//  arg3 - loop counter\n\t\t\t\t\t//  arg4 - undefined\n\t\t\t\t\t// Cells:\n\t\t\t\t\t//  arg1 - row index\n\t\t\t\t\t//  arg2 - column index\n\t\t\t\t\t//  arg3 - table counter\n\t\t\t\t\t//  arg4 - loop counter\n\t\t\t\t\tfn.call(\n\t\t\t\t\t\tapi[type](\n\t\t\t\t\t\t\targ1,\n\t\t\t\t\t\t\ttype === 'cell' ? arg2 : opts,\n\t\t\t\t\t\t\ttype === 'cell' ? opts : undefined\n\t\t\t\t\t\t),\n\t\t\t\t\t\targ1, arg2, arg3, arg4\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\n\n\t\t// i18n method for extensions to be able to use the language object from the\n\t\t// DataTable\n\t\t_api_register('i18n()', function (token, def, plural) {\n\t\t\tvar ctx = this.context[0];\n\t\t\tvar resolved = _fnGetObjectDataFn(token)(ctx.oLanguage);\n\n\t\t\tif (resolved === undefined) {\n\t\t\t\tresolved = def;\n\t\t\t}\n\n\t\t\tif (plural !== undefined && $.isPlainObject(resolved)) {\n\t\t\t\tresolved = resolved[plural] !== undefined ?\n\t\t\t\t\tresolved[plural] :\n\t\t\t\t\tresolved._;\n\t\t\t}\n\n\t\t\treturn resolved.replace('%d', plural); // nb: plural might be undefined,\n\t\t});\n\t\t/**\n\t\t * Version string for plug-ins to check compatibility. Allowed format is\n\t\t * `a.b.c-d` where: a:int, b:int, c:int, d:string(dev|beta|alpha). `d` is used\n\t\t * only for non-release builds. See http://semver.org/ for more information.\n\t\t *  @member\n\t\t *  @type string\n\t\t *  @default Version number\n\t\t */\n\t\tDataTable.version = \"1.10.15\";\n\n\t\t/**\n\t\t * Private data store, containing all of the settings objects that are\n\t\t * created for the tables on a given page.\n\t\t *\n\t\t * Note that the `DataTable.settings` object is aliased to\n\t\t * `jQuery.fn.dataTableExt` through which it may be accessed and\n\t\t * manipulated, or `jQuery.fn.dataTable.settings`.\n\t\t *  @member\n\t\t *  @type array\n\t\t *  @default []\n\t\t *  @private\n\t\t */\n\t\tDataTable.settings = [];\n\n\t\t/**\n\t\t * Object models container, for the various models that DataTables has\n\t\t * available to it. These models define the objects that are used to hold\n\t\t * the active state and configuration of the table.\n\t\t *  @namespace\n\t\t */\n\t\tDataTable.models = {};\n\n\n\n\t\t/**\n\t\t * Template object for the way in which DataTables holds information about\n\t\t * search information for the global filter and individual column filters.\n\t\t *  @namespace\n\t\t */\n\t\tDataTable.models.oSearch = {\n\t\t\t/**\n\t\t\t * Flag to indicate if the filtering should be case insensitive or not\n\t\t\t *  @type boolean\n\t\t\t *  @default true\n\t\t\t */\n\t\t\t\"bCaseInsensitive\": true,\n\n\t\t\t/**\n\t\t\t * Applied search term\n\t\t\t *  @type string\n\t\t\t *  @default <i>Empty string</i>\n\t\t\t */\n\t\t\t\"sSearch\": \"\",\n\n\t\t\t/**\n\t\t\t * Flag to indicate if the search term should be interpreted as a\n\t\t\t * regular expression (true) or not (false) and therefore and special\n\t\t\t * regex characters escaped.\n\t\t\t *  @type boolean\n\t\t\t *  @default false\n\t\t\t */\n\t\t\t\"bRegex\": false,\n\n\t\t\t/**\n\t\t\t * Flag to indicate if DataTables is to use its smart filtering or not.\n\t\t\t *  @type boolean\n\t\t\t *  @default true\n\t\t\t */\n\t\t\t\"bSmart\": true\n\t\t};\n\n\n\n\n\t\t/**\n\t\t * Template object for the way in which DataTables holds information about\n\t\t * each individual row. This is the object format used for the settings\n\t\t * aoData array.\n\t\t *  @namespace\n\t\t */\n\t\tDataTable.models.oRow = {\n\t\t\t/**\n\t\t\t * TR element for the row\n\t\t\t *  @type node\n\t\t\t *  @default null\n\t\t\t */\n\t\t\t\"nTr\": null,\n\n\t\t\t/**\n\t\t\t * Array of TD elements for each row. This is null until the row has been\n\t\t\t * created.\n\t\t\t *  @type array nodes\n\t\t\t *  @default []\n\t\t\t */\n\t\t\t\"anCells\": null,\n\n\t\t\t/**\n\t\t\t * Data object from the original data source for the row. This is either\n\t\t\t * an array if using the traditional form of DataTables, or an object if\n\t\t\t * using mData options. The exact type will depend on the passed in\n\t\t\t * data from the data source, or will be an array if using DOM a data\n\t\t\t * source.\n\t\t\t *  @type array|object\n\t\t\t *  @default []\n\t\t\t */\n\t\t\t\"_aData\": [],\n\n\t\t\t/**\n\t\t\t * Sorting data cache - this array is ostensibly the same length as the\n\t\t\t * number of columns (although each index is generated only as it is\n\t\t\t * needed), and holds the data that is used for sorting each column in the\n\t\t\t * row. We do this cache generation at the start of the sort in order that\n\t\t\t * the formatting of the sort data need be done only once for each cell\n\t\t\t * per sort. This array should not be read from or written to by anything\n\t\t\t * other than the master sorting methods.\n\t\t\t *  @type array\n\t\t\t *  @default null\n\t\t\t *  @private\n\t\t\t */\n\t\t\t\"_aSortData\": null,\n\n\t\t\t/**\n\t\t\t * Per cell filtering data cache. As per the sort data cache, used to\n\t\t\t * increase the performance of the filtering in DataTables\n\t\t\t *  @type array\n\t\t\t *  @default null\n\t\t\t *  @private\n\t\t\t */\n\t\t\t\"_aFilterData\": null,\n\n\t\t\t/**\n\t\t\t * Filtering data cache. This is the same as the cell filtering cache, but\n\t\t\t * in this case a string rather than an array. This is easily computed with\n\t\t\t * a join on `_aFilterData`, but is provided as a cache so the join isn't\n\t\t\t * needed on every search (memory traded for performance)\n\t\t\t *  @type array\n\t\t\t *  @default null\n\t\t\t *  @private\n\t\t\t */\n\t\t\t\"_sFilterRow\": null,\n\n\t\t\t/**\n\t\t\t * Cache of the class name that DataTables has applied to the row, so we\n\t\t\t * can quickly look at this variable rather than needing to do a DOM check\n\t\t\t * on className for the nTr property.\n\t\t\t *  @type string\n\t\t\t *  @default <i>Empty string</i>\n\t\t\t *  @private\n\t\t\t */\n\t\t\t\"_sRowStripe\": \"\",\n\n\t\t\t/**\n\t\t\t * Denote if the original data source was from the DOM, or the data source\n\t\t\t * object. This is used for invalidating data, so DataTables can\n\t\t\t * automatically read data from the original source, unless uninstructed\n\t\t\t * otherwise.\n\t\t\t *  @type string\n\t\t\t *  @default null\n\t\t\t *  @private\n\t\t\t */\n\t\t\t\"src\": null,\n\n\t\t\t/**\n\t\t\t * Index in the aoData array. This saves an indexOf lookup when we have the\n\t\t\t * object, but want to know the index\n\t\t\t *  @type integer\n\t\t\t *  @default -1\n\t\t\t *  @private\n\t\t\t */\n\t\t\t\"idx\": -1\n\t\t};\n\n\n\t\t/**\n\t\t * Template object for the column information object in DataTables. This object\n\t\t * is held in the settings aoColumns array and contains all the information that\n\t\t * DataTables needs about each individual column.\n\t\t *\n\t\t * Note that this object is related to {@link DataTable.defaults.column}\n\t\t * but this one is the internal data store for DataTables's cache of columns.\n\t\t * It should NOT be manipulated outside of DataTables. Any configuration should\n\t\t * be done through the initialisation options.\n\t\t *  @namespace\n\t\t */\n\t\tDataTable.models.oColumn = {\n\t\t\t/**\n\t\t\t * Column index. This could be worked out on-the-fly with $.inArray, but it\n\t\t\t * is faster to just hold it as a variable\n\t\t\t *  @type integer\n\t\t\t *  @default null\n\t\t\t */\n\t\t\t\"idx\": null,\n\n\t\t\t/**\n\t\t\t * A list of the columns that sorting should occur on when this column\n\t\t\t * is sorted. That this property is an array allows multi-column sorting\n\t\t\t * to be defined for a column (for example first name / last name columns\n\t\t\t * would benefit from this). The values are integers pointing to the\n\t\t\t * columns to be sorted on (typically it will be a single integer pointing\n\t\t\t * at itself, but that doesn't need to be the case).\n\t\t\t *  @type array\n\t\t\t */\n\t\t\t\"aDataSort\": null,\n\n\t\t\t/**\n\t\t\t * Define the sorting directions that are applied to the column, in sequence\n\t\t\t * as the column is repeatedly sorted upon - i.e. the first value is used\n\t\t\t * as the sorting direction when the column if first sorted (clicked on).\n\t\t\t * Sort it again (click again) and it will move on to the next index.\n\t\t\t * Repeat until loop.\n\t\t\t *  @type array\n\t\t\t */\n\t\t\t\"asSorting\": null,\n\n\t\t\t/**\n\t\t\t * Flag to indicate if the column is searchable, and thus should be included\n\t\t\t * in the filtering or not.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bSearchable\": null,\n\n\t\t\t/**\n\t\t\t * Flag to indicate if the column is sortable or not.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bSortable\": null,\n\n\t\t\t/**\n\t\t\t * Flag to indicate if the column is currently visible in the table or not\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bVisible\": null,\n\n\t\t\t/**\n\t\t\t * Store for manual type assignment using the `column.type` option. This\n\t\t\t * is held in store so we can manipulate the column's `sType` property.\n\t\t\t *  @type string\n\t\t\t *  @default null\n\t\t\t *  @private\n\t\t\t */\n\t\t\t\"_sManualType\": null,\n\n\t\t\t/**\n\t\t\t * Flag to indicate if HTML5 data attributes should be used as the data\n\t\t\t * source for filtering or sorting. True is either are.\n\t\t\t *  @type boolean\n\t\t\t *  @default false\n\t\t\t *  @private\n\t\t\t */\n\t\t\t\"_bAttrSrc\": false,\n\n\t\t\t/**\n\t\t\t * Developer definable function that is called whenever a cell is created (Ajax source,\n\t\t\t * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n\t\t\t * allowing you to modify the DOM element (add background colour for example) when the\n\t\t\t * element is available.\n\t\t\t *  @type function\n\t\t\t *  @param {element} nTd The TD node that has been created\n\t\t\t *  @param {*} sData The Data for the cell\n\t\t\t *  @param {array|object} oData The data for the whole row\n\t\t\t *  @param {int} iRow The row index for the aoData data store\n\t\t\t *  @default null\n\t\t\t */\n\t\t\t\"fnCreatedCell\": null,\n\n\t\t\t/**\n\t\t\t * Function to get data from a cell in a column. You should <b>never</b>\n\t\t\t * access data directly through _aData internally in DataTables - always use\n\t\t\t * the method attached to this property. It allows mData to function as\n\t\t\t * required. This function is automatically assigned by the column\n\t\t\t * initialisation method\n\t\t\t *  @type function\n\t\t\t *  @param {array|object} oData The data array/object for the array\n\t\t\t *    (i.e. aoData[]._aData)\n\t\t\t *  @param {string} sSpecific The specific data type you want to get -\n\t\t\t *    'display', 'type' 'filter' 'sort'\n\t\t\t *  @returns {*} The data for the cell from the given row's data\n\t\t\t *  @default null\n\t\t\t */\n\t\t\t\"fnGetData\": null,\n\n\t\t\t/**\n\t\t\t * Function to set data for a cell in the column. You should <b>never</b>\n\t\t\t * set the data directly to _aData internally in DataTables - always use\n\t\t\t * this method. It allows mData to function as required. This function\n\t\t\t * is automatically assigned by the column initialisation method\n\t\t\t *  @type function\n\t\t\t *  @param {array|object} oData The data array/object for the array\n\t\t\t *    (i.e. aoData[]._aData)\n\t\t\t *  @param {*} sValue Value to set\n\t\t\t *  @default null\n\t\t\t */\n\t\t\t\"fnSetData\": null,\n\n\t\t\t/**\n\t\t\t * Property to read the value for the cells in the column from the data\n\t\t\t * source array / object. If null, then the default content is used, if a\n\t\t\t * function is given then the return from the function is used.\n\t\t\t *  @type function|int|string|null\n\t\t\t *  @default null\n\t\t\t */\n\t\t\t\"mData\": null,\n\n\t\t\t/**\n\t\t\t * Partner property to mData which is used (only when defined) to get\n\t\t\t * the data - i.e. it is basically the same as mData, but without the\n\t\t\t * 'set' option, and also the data fed to it is the result from mData.\n\t\t\t * This is the rendering method to match the data method of mData.\n\t\t\t *  @type function|int|string|null\n\t\t\t *  @default null\n\t\t\t */\n\t\t\t\"mRender\": null,\n\n\t\t\t/**\n\t\t\t * Unique header TH/TD element for this column - this is what the sorting\n\t\t\t * listener is attached to (if sorting is enabled.)\n\t\t\t *  @type node\n\t\t\t *  @default null\n\t\t\t */\n\t\t\t\"nTh\": null,\n\n\t\t\t/**\n\t\t\t * Unique footer TH/TD element for this column (if there is one). Not used\n\t\t\t * in DataTables as such, but can be used for plug-ins to reference the\n\t\t\t * footer for each column.\n\t\t\t *  @type node\n\t\t\t *  @default null\n\t\t\t */\n\t\t\t\"nTf\": null,\n\n\t\t\t/**\n\t\t\t * The class to apply to all TD elements in the table's TBODY for the column\n\t\t\t *  @type string\n\t\t\t *  @default null\n\t\t\t */\n\t\t\t\"sClass\": null,\n\n\t\t\t/**\n\t\t\t * When DataTables calculates the column widths to assign to each column,\n\t\t\t * it finds the longest string in each column and then constructs a\n\t\t\t * temporary table and reads the widths from that. The problem with this\n\t\t\t * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n\t\t\t * string - thus the calculation can go wrong (doing it properly and putting\n\t\t\t * it into an DOM object and measuring that is horribly(!) slow). Thus as\n\t\t\t * a \"work around\" we provide this option. It will append its value to the\n\t\t\t * text that is found to be the longest string for the column - i.e. padding.\n\t\t\t *  @type string\n\t\t\t */\n\t\t\t\"sContentPadding\": null,\n\n\t\t\t/**\n\t\t\t * Allows a default value to be given for a column's data, and will be used\n\t\t\t * whenever a null data source is encountered (this can be because mData\n\t\t\t * is set to null, or because the data source itself is null).\n\t\t\t *  @type string\n\t\t\t *  @default null\n\t\t\t */\n\t\t\t\"sDefaultContent\": null,\n\n\t\t\t/**\n\t\t\t * Name for the column, allowing reference to the column by name as well as\n\t\t\t * by index (needs a lookup to work by name).\n\t\t\t *  @type string\n\t\t\t */\n\t\t\t\"sName\": null,\n\n\t\t\t/**\n\t\t\t * Custom sorting data type - defines which of the available plug-ins in\n\t\t\t * afnSortData the custom sorting will use - if any is defined.\n\t\t\t *  @type string\n\t\t\t *  @default std\n\t\t\t */\n\t\t\t\"sSortDataType\": 'std',\n\n\t\t\t/**\n\t\t\t * Class to be applied to the header element when sorting on this column\n\t\t\t *  @type string\n\t\t\t *  @default null\n\t\t\t */\n\t\t\t\"sSortingClass\": null,\n\n\t\t\t/**\n\t\t\t * Class to be applied to the header element when sorting on this column -\n\t\t\t * when jQuery UI theming is used.\n\t\t\t *  @type string\n\t\t\t *  @default null\n\t\t\t */\n\t\t\t\"sSortingClassJUI\": null,\n\n\t\t\t/**\n\t\t\t * Title of the column - what is seen in the TH element (nTh).\n\t\t\t *  @type string\n\t\t\t */\n\t\t\t\"sTitle\": null,\n\n\t\t\t/**\n\t\t\t * Column sorting and filtering type\n\t\t\t *  @type string\n\t\t\t *  @default null\n\t\t\t */\n\t\t\t\"sType\": null,\n\n\t\t\t/**\n\t\t\t * Width of the column\n\t\t\t *  @type string\n\t\t\t *  @default null\n\t\t\t */\n\t\t\t\"sWidth\": null,\n\n\t\t\t/**\n\t\t\t * Width of the column when it was first \"encountered\"\n\t\t\t *  @type string\n\t\t\t *  @default null\n\t\t\t */\n\t\t\t\"sWidthOrig\": null\n\t\t};\n\n\n\t\t/*\n\t\t * Developer note: The properties of the object below are given in Hungarian\n\t\t * notation, that was used as the interface for DataTables prior to v1.10, however\n\t\t * from v1.10 onwards the primary interface is camel case. In order to avoid\n\t\t * breaking backwards compatibility utterly with this change, the Hungarian\n\t\t * version is still, internally the primary interface, but is is not documented\n\t\t * - hence the @name tags in each doc comment. This allows a Javascript function\n\t\t * to create a map from Hungarian notation to camel case (going the other direction\n\t\t * would require each property to be listed, which would at around 3K to the size\n\t\t * of DataTables, while this method is about a 0.5K hit.\n\t\t *\n\t\t * Ultimately this does pave the way for Hungarian notation to be dropped\n\t\t * completely, but that is a massive amount of work and will break current\n\t\t * installs (therefore is on-hold until v2).\n\t\t */\n\n\t\t/**\n\t\t * Initialisation options that can be given to DataTables at initialisation\n\t\t * time.\n\t\t *  @namespace\n\t\t */\n\t\tDataTable.defaults = {\n\t\t\t/**\n\t\t\t * An array of data to use for the table, passed in at initialisation which\n\t\t\t * will be used in preference to any data which is already in the DOM. This is\n\t\t\t * particularly useful for constructing tables purely in Javascript, for\n\t\t\t * example with a custom Ajax call.\n\t\t\t *  @type array\n\t\t\t *  @default null\n\t\t\t *\n\t\t\t *  @dtopt Option\n\t\t\t *  @name DataTable.defaults.data\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Using a 2D array data source\n\t\t\t *    $(document).ready( function () {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"data\": [\n\t\t\t *          ['Trident', 'Internet Explorer 4.0', 'Win 95+', 4, 'X'],\n\t\t\t *          ['Trident', 'Internet Explorer 5.0', 'Win 95+', 5, 'C'],\n\t\t\t *        ],\n\t\t\t *        \"columns\": [\n\t\t\t *          { \"title\": \"Engine\" },\n\t\t\t *          { \"title\": \"Browser\" },\n\t\t\t *          { \"title\": \"Platform\" },\n\t\t\t *          { \"title\": \"Version\" },\n\t\t\t *          { \"title\": \"Grade\" }\n\t\t\t *        ]\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Using an array of objects as a data source (`data`)\n\t\t\t *    $(document).ready( function () {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"data\": [\n\t\t\t *          {\n\t\t\t *            \"engine\":   \"Trident\",\n\t\t\t *            \"browser\":  \"Internet Explorer 4.0\",\n\t\t\t *            \"platform\": \"Win 95+\",\n\t\t\t *            \"version\":  4,\n\t\t\t *            \"grade\":    \"X\"\n\t\t\t *          },\n\t\t\t *          {\n\t\t\t *            \"engine\":   \"Trident\",\n\t\t\t *            \"browser\":  \"Internet Explorer 5.0\",\n\t\t\t *            \"platform\": \"Win 95+\",\n\t\t\t *            \"version\":  5,\n\t\t\t *            \"grade\":    \"C\"\n\t\t\t *          }\n\t\t\t *        ],\n\t\t\t *        \"columns\": [\n\t\t\t *          { \"title\": \"Engine\",   \"data\": \"engine\" },\n\t\t\t *          { \"title\": \"Browser\",  \"data\": \"browser\" },\n\t\t\t *          { \"title\": \"Platform\", \"data\": \"platform\" },\n\t\t\t *          { \"title\": \"Version\",  \"data\": \"version\" },\n\t\t\t *          { \"title\": \"Grade\",    \"data\": \"grade\" }\n\t\t\t *        ]\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"aaData\": null,\n\n\n\t\t\t/**\n\t\t\t * If ordering is enabled, then DataTables will perform a first pass sort on\n\t\t\t * initialisation. You can define which column(s) the sort is performed\n\t\t\t * upon, and the sorting direction, with this variable. The `sorting` array\n\t\t\t * should contain an array for each column to be sorted initially containing\n\t\t\t * the column's index and a direction string ('asc' or 'desc').\n\t\t\t *  @type array\n\t\t\t *  @default [[0,'asc']]\n\t\t\t *\n\t\t\t *  @dtopt Option\n\t\t\t *  @name DataTable.defaults.order\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Sort by 3rd column first, and then 4th column\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"order\": [[2,'asc'], [3,'desc']]\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t *\n\t\t\t *    // No initial sorting\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"order\": []\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"aaSorting\": [[0, 'asc']],\n\n\n\t\t\t/**\n\t\t\t * This parameter is basically identical to the `sorting` parameter, but\n\t\t\t * cannot be overridden by user interaction with the table. What this means\n\t\t\t * is that you could have a column (visible or hidden) which the sorting\n\t\t\t * will always be forced on first - any sorting after that (from the user)\n\t\t\t * will then be performed as required. This can be useful for grouping rows\n\t\t\t * together.\n\t\t\t *  @type array\n\t\t\t *  @default null\n\t\t\t *\n\t\t\t *  @dtopt Option\n\t\t\t *  @name DataTable.defaults.orderFixed\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"orderFixed\": [[0,'asc']]\n\t\t\t *      } );\n\t\t\t *    } )\n\t\t\t */\n\t\t\t\"aaSortingFixed\": [],\n\n\n\t\t\t/**\n\t\t\t * DataTables can be instructed to load data to display in the table from a\n\t\t\t * Ajax source. This option defines how that Ajax call is made and where to.\n\t\t\t *\n\t\t\t * The `ajax` property has three different modes of operation, depending on\n\t\t\t * how it is defined. These are:\n\t\t\t *\n\t\t\t * * `string` - Set the URL from where the data should be loaded from.\n\t\t\t * * `object` - Define properties for `jQuery.ajax`.\n\t\t\t * * `function` - Custom data get function\n\t\t\t *\n\t\t\t * `string`\n\t\t\t * --------\n\t\t\t *\n\t\t\t * As a string, the `ajax` property simply defines the URL from which\n\t\t\t * DataTables will load data.\n\t\t\t *\n\t\t\t * `object`\n\t\t\t * --------\n\t\t\t *\n\t\t\t * As an object, the parameters in the object are passed to\n\t\t\t * [jQuery.ajax](http://api.jquery.com/jQuery.ajax/) allowing fine control\n\t\t\t * of the Ajax request. DataTables has a number of default parameters which\n\t\t\t * you can override using this option. Please refer to the jQuery\n\t\t\t * documentation for a full description of the options available, although\n\t\t\t * the following parameters provide additional options in DataTables or\n\t\t\t * require special consideration:\n\t\t\t *\n\t\t\t * * `data` - As with jQuery, `data` can be provided as an object, but it\n\t\t\t *   can also be used as a function to manipulate the data DataTables sends\n\t\t\t *   to the server. The function takes a single parameter, an object of\n\t\t\t *   parameters with the values that DataTables has readied for sending. An\n\t\t\t *   object may be returned which will be merged into the DataTables\n\t\t\t *   defaults, or you can add the items to the object that was passed in and\n\t\t\t *   not return anything from the function. This supersedes `fnServerParams`\n\t\t\t *   from DataTables 1.9-.\n\t\t\t *\n\t\t\t * * `dataSrc` - By default DataTables will look for the property `data` (or\n\t\t\t *   `aaData` for compatibility with DataTables 1.9-) when obtaining data\n\t\t\t *   from an Ajax source or for server-side processing - this parameter\n\t\t\t *   allows that property to be changed. You can use Javascript dotted\n\t\t\t *   object notation to get a data source for multiple levels of nesting, or\n\t\t\t *   it my be used as a function. As a function it takes a single parameter,\n\t\t\t *   the JSON returned from the server, which can be manipulated as\n\t\t\t *   required, with the returned value being that used by DataTables as the\n\t\t\t *   data source for the table. This supersedes `sAjaxDataProp` from\n\t\t\t *   DataTables 1.9-.\n\t\t\t *\n\t\t\t * * `success` - Should not be overridden it is used internally in\n\t\t\t *   DataTables. To manipulate / transform the data returned by the server\n\t\t\t *   use `ajax.dataSrc`, or use `ajax` as a function (see below).\n\t\t\t *\n\t\t\t * `function`\n\t\t\t * ----------\n\t\t\t *\n\t\t\t * As a function, making the Ajax call is left up to yourself allowing\n\t\t\t * complete control of the Ajax request. Indeed, if desired, a method other\n\t\t\t * than Ajax could be used to obtain the required data, such as Web storage\n\t\t\t * or an AIR database.\n\t\t\t *\n\t\t\t * The function is given four parameters and no return is required. The\n\t\t\t * parameters are:\n\t\t\t *\n\t\t\t * 1. _object_ - Data to send to the server\n\t\t\t * 2. _function_ - Callback function that must be executed when the required\n\t\t\t *    data has been obtained. That data should be passed into the callback\n\t\t\t *    as the only parameter\n\t\t\t * 3. _object_ - DataTables settings object for the table\n\t\t\t *\n\t\t\t * Note that this supersedes `fnServerData` from DataTables 1.9-.\n\t\t\t *\n\t\t\t *  @type string|object|function\n\t\t\t *  @default null\n\t\t\t *\n\t\t\t *  @dtopt Option\n\t\t\t *  @name DataTable.defaults.ajax\n\t\t\t *  @since 1.10.0\n\t\t\t *\n\t\t\t * @example\n\t\t\t *   // Get JSON data from a file via Ajax.\n\t\t\t *   // Note DataTables expects data in the form `{ data: [ ...data... ] }` by default).\n\t\t\t *   $('#example').dataTable( {\n\t\t\t *     \"ajax\": \"data.json\"\n\t\t\t *   } );\n\t\t\t *\n\t\t\t * @example\n\t\t\t *   // Get JSON data from a file via Ajax, using `dataSrc` to change\n\t\t\t *   // `data` to `tableData` (i.e. `{ tableData: [ ...data... ] }`)\n\t\t\t *   $('#example').dataTable( {\n\t\t\t *     \"ajax\": {\n\t\t\t *       \"url\": \"data.json\",\n\t\t\t *       \"dataSrc\": \"tableData\"\n\t\t\t *     }\n\t\t\t *   } );\n\t\t\t *\n\t\t\t * @example\n\t\t\t *   // Get JSON data from a file via Ajax, using `dataSrc` to read data\n\t\t\t *   // from a plain array rather than an array in an object\n\t\t\t *   $('#example').dataTable( {\n\t\t\t *     \"ajax\": {\n\t\t\t *       \"url\": \"data.json\",\n\t\t\t *       \"dataSrc\": \"\"\n\t\t\t *     }\n\t\t\t *   } );\n\t\t\t *\n\t\t\t * @example\n\t\t\t *   // Manipulate the data returned from the server - add a link to data\n\t\t\t *   // (note this can, should, be done using `render` for the column - this\n\t\t\t *   // is just a simple example of how the data can be manipulated).\n\t\t\t *   $('#example').dataTable( {\n\t\t\t *     \"ajax\": {\n\t\t\t *       \"url\": \"data.json\",\n\t\t\t *       \"dataSrc\": function ( json ) {\n\t\t\t *         for ( var i=0, ien=json.length ; i<ien ; i++ ) {\n\t\t\t *           json[i][0] = '<a href=\"/message/'+json[i][0]+'>View message</a>';\n\t\t\t *         }\n\t\t\t *         return json;\n\t\t\t *       }\n\t\t\t *     }\n\t\t\t *   } );\n\t\t\t *\n\t\t\t * @example\n\t\t\t *   // Add data to the request\n\t\t\t *   $('#example').dataTable( {\n\t\t\t *     \"ajax\": {\n\t\t\t *       \"url\": \"data.json\",\n\t\t\t *       \"data\": function ( d ) {\n\t\t\t *         return {\n\t\t\t *           \"extra_search\": $('#extra').val()\n\t\t\t *         };\n\t\t\t *       }\n\t\t\t *     }\n\t\t\t *   } );\n\t\t\t *\n\t\t\t * @example\n\t\t\t *   // Send request as POST\n\t\t\t *   $('#example').dataTable( {\n\t\t\t *     \"ajax\": {\n\t\t\t *       \"url\": \"data.json\",\n\t\t\t *       \"type\": \"POST\"\n\t\t\t *     }\n\t\t\t *   } );\n\t\t\t *\n\t\t\t * @example\n\t\t\t *   // Get the data from localStorage (could interface with a form for\n\t\t\t *   // adding, editing and removing rows).\n\t\t\t *   $('#example').dataTable( {\n\t\t\t *     \"ajax\": function (data, callback, settings) {\n\t\t\t *       callback(\n\t\t\t *         JSON.parse( localStorage.getItem('dataTablesData') )\n\t\t\t *       );\n\t\t\t *     }\n\t\t\t *   } );\n\t\t\t */\n\t\t\t\"ajax\": null,\n\n\n\t\t\t/**\n\t\t\t * This parameter allows you to readily specify the entries in the length drop\n\t\t\t * down menu that DataTables shows when pagination is enabled. It can be\n\t\t\t * either a 1D array of options which will be used for both the displayed\n\t\t\t * option and the value, or a 2D array which will use the array in the first\n\t\t\t * position as the value, and the array in the second position as the\n\t\t\t * displayed options (useful for language strings such as 'All').\n\t\t\t *\n\t\t\t * Note that the `pageLength` property will be automatically set to the\n\t\t\t * first value given in this array, unless `pageLength` is also provided.\n\t\t\t *  @type array\n\t\t\t *  @default [ 10, 25, 50, 100 ]\n\t\t\t *\n\t\t\t *  @dtopt Option\n\t\t\t *  @name DataTable.defaults.lengthMenu\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"lengthMenu\": [[10, 25, 50, -1], [10, 25, 50, \"All\"]]\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"aLengthMenu\": [10, 25, 50, 100],\n\n\n\t\t\t/**\n\t\t\t * The `columns` option in the initialisation parameter allows you to define\n\t\t\t * details about the way individual columns behave. For a full list of\n\t\t\t * column options that can be set, please see\n\t\t\t * {@link DataTable.defaults.column}. Note that if you use `columns` to\n\t\t\t * define your columns, you must have an entry in the array for every single\n\t\t\t * column that you have in your table (these can be null if you don't which\n\t\t\t * to specify any options).\n\t\t\t *  @member\n\t\t\t *\n\t\t\t *  @name DataTable.defaults.column\n\t\t\t */\n\t\t\t\"aoColumns\": null,\n\n\t\t\t/**\n\t\t\t * Very similar to `columns`, `columnDefs` allows you to target a specific\n\t\t\t * column, multiple columns, or all columns, using the `targets` property of\n\t\t\t * each object in the array. This allows great flexibility when creating\n\t\t\t * tables, as the `columnDefs` arrays can be of any length, targeting the\n\t\t\t * columns you specifically want. `columnDefs` may use any of the column\n\t\t\t * options available: {@link DataTable.defaults.column}, but it _must_\n\t\t\t * have `targets` defined in each object in the array. Values in the `targets`\n\t\t\t * array may be:\n\t\t\t *   <ul>\n\t\t\t *     <li>a string - class name will be matched on the TH for the column</li>\n\t\t\t *     <li>0 or a positive integer - column index counting from the left</li>\n\t\t\t *     <li>a negative integer - column index counting from the right</li>\n\t\t\t *     <li>the string \"_all\" - all columns (i.e. assign a default)</li>\n\t\t\t *   </ul>\n\t\t\t *  @member\n\t\t\t *\n\t\t\t *  @name DataTable.defaults.columnDefs\n\t\t\t */\n\t\t\t\"aoColumnDefs\": null,\n\n\n\t\t\t/**\n\t\t\t * Basically the same as `search`, this parameter defines the individual column\n\t\t\t * filtering state at initialisation time. The array must be of the same size\n\t\t\t * as the number of columns, and each element be an object with the parameters\n\t\t\t * `search` and `escapeRegex` (the latter is optional). 'null' is also\n\t\t\t * accepted and the default will be used.\n\t\t\t *  @type array\n\t\t\t *  @default []\n\t\t\t *\n\t\t\t *  @dtopt Option\n\t\t\t *  @name DataTable.defaults.searchCols\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"searchCols\": [\n\t\t\t *          null,\n\t\t\t *          { \"search\": \"My filter\" },\n\t\t\t *          null,\n\t\t\t *          { \"search\": \"^[0-9]\", \"escapeRegex\": false }\n\t\t\t *        ]\n\t\t\t *      } );\n\t\t\t *    } )\n\t\t\t */\n\t\t\t\"aoSearchCols\": [],\n\n\n\t\t\t/**\n\t\t\t * An array of CSS classes that should be applied to displayed rows. This\n\t\t\t * array may be of any length, and DataTables will apply each class\n\t\t\t * sequentially, looping when required.\n\t\t\t *  @type array\n\t\t\t *  @default null <i>Will take the values determined by the `oClasses.stripe*`\n\t\t\t *    options</i>\n\t\t\t *\n\t\t\t *  @dtopt Option\n\t\t\t *  @name DataTable.defaults.stripeClasses\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"stripeClasses\": [ 'strip1', 'strip2', 'strip3' ]\n\t\t\t *      } );\n\t\t\t *    } )\n\t\t\t */\n\t\t\t\"asStripeClasses\": null,\n\n\n\t\t\t/**\n\t\t\t * Enable or disable automatic column width calculation. This can be disabled\n\t\t\t * as an optimisation (it takes some time to calculate the widths) if the\n\t\t\t * tables widths are passed in using `columns`.\n\t\t\t *  @type boolean\n\t\t\t *  @default true\n\t\t\t *\n\t\t\t *  @dtopt Features\n\t\t\t *  @name DataTable.defaults.autoWidth\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function () {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"autoWidth\": false\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"bAutoWidth\": true,\n\n\n\t\t\t/**\n\t\t\t * Deferred rendering can provide DataTables with a huge speed boost when you\n\t\t\t * are using an Ajax or JS data source for the table. This option, when set to\n\t\t\t * true, will cause DataTables to defer the creation of the table elements for\n\t\t\t * each row until they are needed for a draw - saving a significant amount of\n\t\t\t * time.\n\t\t\t *  @type boolean\n\t\t\t *  @default false\n\t\t\t *\n\t\t\t *  @dtopt Features\n\t\t\t *  @name DataTable.defaults.deferRender\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"ajax\": \"sources/arrays.txt\",\n\t\t\t *        \"deferRender\": true\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"bDeferRender\": false,\n\n\n\t\t\t/**\n\t\t\t * Replace a DataTable which matches the given selector and replace it with\n\t\t\t * one which has the properties of the new initialisation object passed. If no\n\t\t\t * table matches the selector, then the new DataTable will be constructed as\n\t\t\t * per normal.\n\t\t\t *  @type boolean\n\t\t\t *  @default false\n\t\t\t *\n\t\t\t *  @dtopt Options\n\t\t\t *  @name DataTable.defaults.destroy\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"srollY\": \"200px\",\n\t\t\t *        \"paginate\": false\n\t\t\t *      } );\n\t\t\t *\n\t\t\t *      // Some time later....\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"filter\": false,\n\t\t\t *        \"destroy\": true\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"bDestroy\": false,\n\n\n\t\t\t/**\n\t\t\t * Enable or disable filtering of data. Filtering in DataTables is \"smart\" in\n\t\t\t * that it allows the end user to input multiple words (space separated) and\n\t\t\t * will match a row containing those words, even if not in the order that was\n\t\t\t * specified (this allow matching across multiple columns). Note that if you\n\t\t\t * wish to use filtering in DataTables this must remain 'true' - to remove the\n\t\t\t * default filtering input box and retain filtering abilities, please use\n\t\t\t * {@link DataTable.defaults.dom}.\n\t\t\t *  @type boolean\n\t\t\t *  @default true\n\t\t\t *\n\t\t\t *  @dtopt Features\n\t\t\t *  @name DataTable.defaults.searching\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function () {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"searching\": false\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"bFilter\": true,\n\n\n\t\t\t/**\n\t\t\t * Enable or disable the table information display. This shows information\n\t\t\t * about the data that is currently visible on the page, including information\n\t\t\t * about filtered data if that action is being performed.\n\t\t\t *  @type boolean\n\t\t\t *  @default true\n\t\t\t *\n\t\t\t *  @dtopt Features\n\t\t\t *  @name DataTable.defaults.info\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function () {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"info\": false\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"bInfo\": true,\n\n\n\t\t\t/**\n\t\t\t * Enable jQuery UI ThemeRoller support (required as ThemeRoller requires some\n\t\t\t * slightly different and additional mark-up from what DataTables has\n\t\t\t * traditionally used).\n\t\t\t *  @type boolean\n\t\t\t *  @default false\n\t\t\t *\n\t\t\t *  @dtopt Features\n\t\t\t *  @name DataTable.defaults.jQueryUI\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"jQueryUI\": true\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"bJQueryUI\": false,\n\n\n\t\t\t/**\n\t\t\t * Allows the end user to select the size of a formatted page from a select\n\t\t\t * menu (sizes are 10, 25, 50 and 100). Requires pagination (`paginate`).\n\t\t\t *  @type boolean\n\t\t\t *  @default true\n\t\t\t *\n\t\t\t *  @dtopt Features\n\t\t\t *  @name DataTable.defaults.lengthChange\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function () {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"lengthChange\": false\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"bLengthChange\": true,\n\n\n\t\t\t/**\n\t\t\t * Enable or disable pagination.\n\t\t\t *  @type boolean\n\t\t\t *  @default true\n\t\t\t *\n\t\t\t *  @dtopt Features\n\t\t\t *  @name DataTable.defaults.paging\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function () {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"paging\": false\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"bPaginate\": true,\n\n\n\t\t\t/**\n\t\t\t * Enable or disable the display of a 'processing' indicator when the table is\n\t\t\t * being processed (e.g. a sort). This is particularly useful for tables with\n\t\t\t * large amounts of data where it can take a noticeable amount of time to sort\n\t\t\t * the entries.\n\t\t\t *  @type boolean\n\t\t\t *  @default false\n\t\t\t *\n\t\t\t *  @dtopt Features\n\t\t\t *  @name DataTable.defaults.processing\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function () {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"processing\": true\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"bProcessing\": false,\n\n\n\t\t\t/**\n\t\t\t * Retrieve the DataTables object for the given selector. Note that if the\n\t\t\t * table has already been initialised, this parameter will cause DataTables\n\t\t\t * to simply return the object that has already been set up - it will not take\n\t\t\t * account of any changes you might have made to the initialisation object\n\t\t\t * passed to DataTables (setting this parameter to true is an acknowledgement\n\t\t\t * that you understand this). `destroy` can be used to reinitialise a table if\n\t\t\t * you need.\n\t\t\t *  @type boolean\n\t\t\t *  @default false\n\t\t\t *\n\t\t\t *  @dtopt Options\n\t\t\t *  @name DataTable.defaults.retrieve\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      initTable();\n\t\t\t *      tableActions();\n\t\t\t *    } );\n\t\t\t *\n\t\t\t *    function initTable ()\n\t\t\t *    {\n\t\t\t *      return $('#example').dataTable( {\n\t\t\t *        \"scrollY\": \"200px\",\n\t\t\t *        \"paginate\": false,\n\t\t\t *        \"retrieve\": true\n\t\t\t *      } );\n\t\t\t *    }\n\t\t\t *\n\t\t\t *    function tableActions ()\n\t\t\t *    {\n\t\t\t *      var table = initTable();\n\t\t\t *      // perform API operations with oTable\n\t\t\t *    }\n\t\t\t */\n\t\t\t\"bRetrieve\": false,\n\n\n\t\t\t/**\n\t\t\t * When vertical (y) scrolling is enabled, DataTables will force the height of\n\t\t\t * the table's viewport to the given height at all times (useful for layout).\n\t\t\t * However, this can look odd when filtering data down to a small data set,\n\t\t\t * and the footer is left \"floating\" further down. This parameter (when\n\t\t\t * enabled) will cause DataTables to collapse the table's viewport down when\n\t\t\t * the result set will fit within the given Y height.\n\t\t\t *  @type boolean\n\t\t\t *  @default false\n\t\t\t *\n\t\t\t *  @dtopt Options\n\t\t\t *  @name DataTable.defaults.scrollCollapse\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"scrollY\": \"200\",\n\t\t\t *        \"scrollCollapse\": true\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"bScrollCollapse\": false,\n\n\n\t\t\t/**\n\t\t\t * Configure DataTables to use server-side processing. Note that the\n\t\t\t * `ajax` parameter must also be given in order to give DataTables a\n\t\t\t * source to obtain the required data for each draw.\n\t\t\t *  @type boolean\n\t\t\t *  @default false\n\t\t\t *\n\t\t\t *  @dtopt Features\n\t\t\t *  @dtopt Server-side\n\t\t\t *  @name DataTable.defaults.serverSide\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function () {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"serverSide\": true,\n\t\t\t *        \"ajax\": \"xhr.php\"\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"bServerSide\": false,\n\n\n\t\t\t/**\n\t\t\t * Enable or disable sorting of columns. Sorting of individual columns can be\n\t\t\t * disabled by the `sortable` option for each column.\n\t\t\t *  @type boolean\n\t\t\t *  @default true\n\t\t\t *\n\t\t\t *  @dtopt Features\n\t\t\t *  @name DataTable.defaults.ordering\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function () {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"ordering\": false\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"bSort\": true,\n\n\n\t\t\t/**\n\t\t\t * Enable or display DataTables' ability to sort multiple columns at the\n\t\t\t * same time (activated by shift-click by the user).\n\t\t\t *  @type boolean\n\t\t\t *  @default true\n\t\t\t *\n\t\t\t *  @dtopt Options\n\t\t\t *  @name DataTable.defaults.orderMulti\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Disable multiple column sorting ability\n\t\t\t *    $(document).ready( function () {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"orderMulti\": false\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"bSortMulti\": true,\n\n\n\t\t\t/**\n\t\t\t * Allows control over whether DataTables should use the top (true) unique\n\t\t\t * cell that is found for a single column, or the bottom (false - default).\n\t\t\t * This is useful when using complex headers.\n\t\t\t *  @type boolean\n\t\t\t *  @default false\n\t\t\t *\n\t\t\t *  @dtopt Options\n\t\t\t *  @name DataTable.defaults.orderCellsTop\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"orderCellsTop\": true\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"bSortCellsTop\": false,\n\n\n\t\t\t/**\n\t\t\t * Enable or disable the addition of the classes `sorting\\_1`, `sorting\\_2` and\n\t\t\t * `sorting\\_3` to the columns which are currently being sorted on. This is\n\t\t\t * presented as a feature switch as it can increase processing time (while\n\t\t\t * classes are removed and added) so for large data sets you might want to\n\t\t\t * turn this off.\n\t\t\t *  @type boolean\n\t\t\t *  @default true\n\t\t\t *\n\t\t\t *  @dtopt Features\n\t\t\t *  @name DataTable.defaults.orderClasses\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function () {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"orderClasses\": false\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"bSortClasses\": true,\n\n\n\t\t\t/**\n\t\t\t * Enable or disable state saving. When enabled HTML5 `localStorage` will be\n\t\t\t * used to save table display information such as pagination information,\n\t\t\t * display length, filtering and sorting. As such when the end user reloads\n\t\t\t * the page the display display will match what thy had previously set up.\n\t\t\t *\n\t\t\t * Due to the use of `localStorage` the default state saving is not supported\n\t\t\t * in IE6 or 7. If state saving is required in those browsers, use\n\t\t\t * `stateSaveCallback` to provide a storage solution such as cookies.\n\t\t\t *  @type boolean\n\t\t\t *  @default false\n\t\t\t *\n\t\t\t *  @dtopt Features\n\t\t\t *  @name DataTable.defaults.stateSave\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function () {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"stateSave\": true\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"bStateSave\": false,\n\n\n\t\t\t/**\n\t\t\t * This function is called when a TR element is created (and all TD child\n\t\t\t * elements have been inserted), or registered if using a DOM source, allowing\n\t\t\t * manipulation of the TR element (adding classes etc).\n\t\t\t *  @type function\n\t\t\t *  @param {node} row \"TR\" element for the current row\n\t\t\t *  @param {array} data Raw data array for this row\n\t\t\t *  @param {int} dataIndex The index of this row in the internal aoData array\n\t\t\t *\n\t\t\t *  @dtopt Callbacks\n\t\t\t *  @name DataTable.defaults.createdRow\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"createdRow\": function( row, data, dataIndex ) {\n\t\t\t *          // Bold the grade for all 'A' grade browsers\n\t\t\t *          if ( data[4] == \"A\" )\n\t\t\t *          {\n\t\t\t *            $('td:eq(4)', row).html( '<b>A</b>' );\n\t\t\t *          }\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"fnCreatedRow\": null,\n\n\n\t\t\t/**\n\t\t\t * This function is called on every 'draw' event, and allows you to\n\t\t\t * dynamically modify any aspect you want about the created DOM.\n\t\t\t *  @type function\n\t\t\t *  @param {object} settings DataTables settings object\n\t\t\t *\n\t\t\t *  @dtopt Callbacks\n\t\t\t *  @name DataTable.defaults.drawCallback\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"drawCallback\": function( settings ) {\n\t\t\t *          alert( 'DataTables has redrawn the table' );\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"fnDrawCallback\": null,\n\n\n\t\t\t/**\n\t\t\t * Identical to fnHeaderCallback() but for the table footer this function\n\t\t\t * allows you to modify the table footer on every 'draw' event.\n\t\t\t *  @type function\n\t\t\t *  @param {node} foot \"TR\" element for the footer\n\t\t\t *  @param {array} data Full table data (as derived from the original HTML)\n\t\t\t *  @param {int} start Index for the current display starting point in the\n\t\t\t *    display array\n\t\t\t *  @param {int} end Index for the current display ending point in the\n\t\t\t *    display array\n\t\t\t *  @param {array int} display Index array to translate the visual position\n\t\t\t *    to the full data array\n\t\t\t *\n\t\t\t *  @dtopt Callbacks\n\t\t\t *  @name DataTable.defaults.footerCallback\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"footerCallback\": function( tfoot, data, start, end, display ) {\n\t\t\t *          tfoot.getElementsByTagName('th')[0].innerHTML = \"Starting index is \"+start;\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } )\n\t\t\t */\n\t\t\t\"fnFooterCallback\": null,\n\n\n\t\t\t/**\n\t\t\t * When rendering large numbers in the information element for the table\n\t\t\t * (i.e. \"Showing 1 to 10 of 57 entries\") DataTables will render large numbers\n\t\t\t * to have a comma separator for the 'thousands' units (e.g. 1 million is\n\t\t\t * rendered as \"1,000,000\") to help readability for the end user. This\n\t\t\t * function will override the default method DataTables uses.\n\t\t\t *  @type function\n\t\t\t *  @member\n\t\t\t *  @param {int} toFormat number to be formatted\n\t\t\t *  @returns {string} formatted string for DataTables to show the number\n\t\t\t *\n\t\t\t *  @dtopt Callbacks\n\t\t\t *  @name DataTable.defaults.formatNumber\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Format a number using a single quote for the separator (note that\n\t\t\t *    // this can also be done with the language.thousands option)\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"formatNumber\": function ( toFormat ) {\n\t\t\t *          return toFormat.toString().replace(\n\t\t\t *            /\\B(?=(\\d{3})+(?!\\d))/g, \"'\"\n\t\t\t *          );\n\t\t\t *        };\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"fnFormatNumber\": function (toFormat) {\n\t\t\t\treturn toFormat.toString().replace(\n\t\t\t\t\t/\\B(?=(\\d{3})+(?!\\d))/g,\n\t\t\t\t\tthis.oLanguage.sThousands\n\t\t\t\t);\n\t\t\t},\n\n\n\t\t\t/**\n\t\t\t * This function is called on every 'draw' event, and allows you to\n\t\t\t * dynamically modify the header row. This can be used to calculate and\n\t\t\t * display useful information about the table.\n\t\t\t *  @type function\n\t\t\t *  @param {node} head \"TR\" element for the header\n\t\t\t *  @param {array} data Full table data (as derived from the original HTML)\n\t\t\t *  @param {int} start Index for the current display starting point in the\n\t\t\t *    display array\n\t\t\t *  @param {int} end Index for the current display ending point in the\n\t\t\t *    display array\n\t\t\t *  @param {array int} display Index array to translate the visual position\n\t\t\t *    to the full data array\n\t\t\t *\n\t\t\t *  @dtopt Callbacks\n\t\t\t *  @name DataTable.defaults.headerCallback\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"fheaderCallback\": function( head, data, start, end, display ) {\n\t\t\t *          head.getElementsByTagName('th')[0].innerHTML = \"Displaying \"+(end-start)+\" records\";\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } )\n\t\t\t */\n\t\t\t\"fnHeaderCallback\": null,\n\n\n\t\t\t/**\n\t\t\t * The information element can be used to convey information about the current\n\t\t\t * state of the table. Although the internationalisation options presented by\n\t\t\t * DataTables are quite capable of dealing with most customisations, there may\n\t\t\t * be times where you wish to customise the string further. This callback\n\t\t\t * allows you to do exactly that.\n\t\t\t *  @type function\n\t\t\t *  @param {object} oSettings DataTables settings object\n\t\t\t *  @param {int} start Starting position in data for the draw\n\t\t\t *  @param {int} end End position in data for the draw\n\t\t\t *  @param {int} max Total number of rows in the table (regardless of\n\t\t\t *    filtering)\n\t\t\t *  @param {int} total Total number of rows in the data set, after filtering\n\t\t\t *  @param {string} pre The string that DataTables has formatted using it's\n\t\t\t *    own rules\n\t\t\t *  @returns {string} The string to be displayed in the information element.\n\t\t\t *\n\t\t\t *  @dtopt Callbacks\n\t\t\t *  @name DataTable.defaults.infoCallback\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $('#example').dataTable( {\n\t\t\t *      \"infoCallback\": function( settings, start, end, max, total, pre ) {\n\t\t\t *        return start +\" to \"+ end;\n\t\t\t *      }\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"fnInfoCallback\": null,\n\n\n\t\t\t/**\n\t\t\t * Called when the table has been initialised. Normally DataTables will\n\t\t\t * initialise sequentially and there will be no need for this function,\n\t\t\t * however, this does not hold true when using external language information\n\t\t\t * since that is obtained using an async XHR call.\n\t\t\t *  @type function\n\t\t\t *  @param {object} settings DataTables settings object\n\t\t\t *  @param {object} json The JSON object request from the server - only\n\t\t\t *    present if client-side Ajax sourced data is used\n\t\t\t *\n\t\t\t *  @dtopt Callbacks\n\t\t\t *  @name DataTable.defaults.initComplete\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"initComplete\": function(settings, json) {\n\t\t\t *          alert( 'DataTables has finished its initialisation.' );\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } )\n\t\t\t */\n\t\t\t\"fnInitComplete\": null,\n\n\n\t\t\t/**\n\t\t\t * Called at the very start of each table draw and can be used to cancel the\n\t\t\t * draw by returning false, any other return (including undefined) results in\n\t\t\t * the full draw occurring).\n\t\t\t *  @type function\n\t\t\t *  @param {object} settings DataTables settings object\n\t\t\t *  @returns {boolean} False will cancel the draw, anything else (including no\n\t\t\t *    return) will allow it to complete.\n\t\t\t *\n\t\t\t *  @dtopt Callbacks\n\t\t\t *  @name DataTable.defaults.preDrawCallback\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"preDrawCallback\": function( settings ) {\n\t\t\t *          if ( $('#test').val() == 1 ) {\n\t\t\t *            return false;\n\t\t\t *          }\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"fnPreDrawCallback\": null,\n\n\n\t\t\t/**\n\t\t\t * This function allows you to 'post process' each row after it have been\n\t\t\t * generated for each table draw, but before it is rendered on screen. This\n\t\t\t * function might be used for setting the row class name etc.\n\t\t\t *  @type function\n\t\t\t *  @param {node} row \"TR\" element for the current row\n\t\t\t *  @param {array} data Raw data array for this row\n\t\t\t *  @param {int} displayIndex The display index for the current table draw\n\t\t\t *  @param {int} displayIndexFull The index of the data in the full list of\n\t\t\t *    rows (after filtering)\n\t\t\t *\n\t\t\t *  @dtopt Callbacks\n\t\t\t *  @name DataTable.defaults.rowCallback\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"rowCallback\": function( row, data, displayIndex, displayIndexFull ) {\n\t\t\t *          // Bold the grade for all 'A' grade browsers\n\t\t\t *          if ( data[4] == \"A\" ) {\n\t\t\t *            $('td:eq(4)', row).html( '<b>A</b>' );\n\t\t\t *          }\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"fnRowCallback\": null,\n\n\n\t\t\t/**\n\t\t\t * __Deprecated__ The functionality provided by this parameter has now been\n\t\t\t * superseded by that provided through `ajax`, which should be used instead.\n\t\t\t *\n\t\t\t * This parameter allows you to override the default function which obtains\n\t\t\t * the data from the server so something more suitable for your application.\n\t\t\t * For example you could use POST data, or pull information from a Gears or\n\t\t\t * AIR database.\n\t\t\t *  @type function\n\t\t\t *  @member\n\t\t\t *  @param {string} source HTTP source to obtain the data from (`ajax`)\n\t\t\t *  @param {array} data A key/value pair object containing the data to send\n\t\t\t *    to the server\n\t\t\t *  @param {function} callback to be called on completion of the data get\n\t\t\t *    process that will draw the data on the page.\n\t\t\t *  @param {object} settings DataTables settings object\n\t\t\t *\n\t\t\t *  @dtopt Callbacks\n\t\t\t *  @dtopt Server-side\n\t\t\t *  @name DataTable.defaults.serverData\n\t\t\t *\n\t\t\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t\t\t */\n\t\t\t\"fnServerData\": null,\n\n\n\t\t\t/**\n\t\t\t * __Deprecated__ The functionality provided by this parameter has now been\n\t\t\t * superseded by that provided through `ajax`, which should be used instead.\n\t\t\t *\n\t\t\t *  It is often useful to send extra data to the server when making an Ajax\n\t\t\t * request - for example custom filtering information, and this callback\n\t\t\t * function makes it trivial to send extra information to the server. The\n\t\t\t * passed in parameter is the data set that has been constructed by\n\t\t\t * DataTables, and you can add to this or modify it as you require.\n\t\t\t *  @type function\n\t\t\t *  @param {array} data Data array (array of objects which are name/value\n\t\t\t *    pairs) that has been constructed by DataTables and will be sent to the\n\t\t\t *    server. In the case of Ajax sourced data with server-side processing\n\t\t\t *    this will be an empty array, for server-side processing there will be a\n\t\t\t *    significant number of parameters!\n\t\t\t *  @returns {undefined} Ensure that you modify the data array passed in,\n\t\t\t *    as this is passed by reference.\n\t\t\t *\n\t\t\t *  @dtopt Callbacks\n\t\t\t *  @dtopt Server-side\n\t\t\t *  @name DataTable.defaults.serverParams\n\t\t\t *\n\t\t\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t\t\t */\n\t\t\t\"fnServerParams\": null,\n\n\n\t\t\t/**\n\t\t\t * Load the table state. With this function you can define from where, and how, the\n\t\t\t * state of a table is loaded. By default DataTables will load from `localStorage`\n\t\t\t * but you might wish to use a server-side database or cookies.\n\t\t\t *  @type function\n\t\t\t *  @member\n\t\t\t *  @param {object} settings DataTables settings object\n\t\t\t *  @param {object} callback Callback that can be executed when done. It\n\t\t\t *    should be passed the loaded state object.\n\t\t\t *  @return {object} The DataTables state object to be loaded\n\t\t\t *\n\t\t\t *  @dtopt Callbacks\n\t\t\t *  @name DataTable.defaults.stateLoadCallback\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"stateSave\": true,\n\t\t\t *        \"stateLoadCallback\": function (settings, callback) {\n\t\t\t *          $.ajax( {\n\t\t\t *            \"url\": \"/state_load\",\n\t\t\t *            \"dataType\": \"json\",\n\t\t\t *            \"success\": function (json) {\n\t\t\t *              callback( json );\n\t\t\t *            }\n\t\t\t *          } );\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"fnStateLoadCallback\": function (settings) {\n\t\t\t\ttry {\n\t\t\t\t\treturn JSON.parse(\n\t\t\t\t\t\t(settings.iStateDuration === -1 ? sessionStorage : localStorage).getItem(\n\t\t\t\t\t\t\t'DataTables_' + settings.sInstance + '_' + location.pathname\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t} catch (e) { }\n\t\t\t},\n\n\n\t\t\t/**\n\t\t\t * Callback which allows modification of the saved state prior to loading that state.\n\t\t\t * This callback is called when the table is loading state from the stored data, but\n\t\t\t * prior to the settings object being modified by the saved state. Note that for\n\t\t\t * plug-in authors, you should use the `stateLoadParams` event to load parameters for\n\t\t\t * a plug-in.\n\t\t\t *  @type function\n\t\t\t *  @param {object} settings DataTables settings object\n\t\t\t *  @param {object} data The state object that is to be loaded\n\t\t\t *\n\t\t\t *  @dtopt Callbacks\n\t\t\t *  @name DataTable.defaults.stateLoadParams\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Remove a saved filter, so filtering is never loaded\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"stateSave\": true,\n\t\t\t *        \"stateLoadParams\": function (settings, data) {\n\t\t\t *          data.oSearch.sSearch = \"\";\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Disallow state loading by returning false\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"stateSave\": true,\n\t\t\t *        \"stateLoadParams\": function (settings, data) {\n\t\t\t *          return false;\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"fnStateLoadParams\": null,\n\n\n\t\t\t/**\n\t\t\t * Callback that is called when the state has been loaded from the state saving method\n\t\t\t * and the DataTables settings object has been modified as a result of the loaded state.\n\t\t\t *  @type function\n\t\t\t *  @param {object} settings DataTables settings object\n\t\t\t *  @param {object} data The state object that was loaded\n\t\t\t *\n\t\t\t *  @dtopt Callbacks\n\t\t\t *  @name DataTable.defaults.stateLoaded\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Show an alert with the filtering value that was saved\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"stateSave\": true,\n\t\t\t *        \"stateLoaded\": function (settings, data) {\n\t\t\t *          alert( 'Saved filter was: '+data.oSearch.sSearch );\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"fnStateLoaded\": null,\n\n\n\t\t\t/**\n\t\t\t * Save the table state. This function allows you to define where and how the state\n\t\t\t * information for the table is stored By default DataTables will use `localStorage`\n\t\t\t * but you might wish to use a server-side database or cookies.\n\t\t\t *  @type function\n\t\t\t *  @member\n\t\t\t *  @param {object} settings DataTables settings object\n\t\t\t *  @param {object} data The state object to be saved\n\t\t\t *\n\t\t\t *  @dtopt Callbacks\n\t\t\t *  @name DataTable.defaults.stateSaveCallback\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"stateSave\": true,\n\t\t\t *        \"stateSaveCallback\": function (settings, data) {\n\t\t\t *          // Send an Ajax request to the server with the state object\n\t\t\t *          $.ajax( {\n\t\t\t *            \"url\": \"/state_save\",\n\t\t\t *            \"data\": data,\n\t\t\t *            \"dataType\": \"json\",\n\t\t\t *            \"method\": \"POST\"\n\t\t\t *            \"success\": function () {}\n\t\t\t *          } );\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"fnStateSaveCallback\": function (settings, data) {\n\t\t\t\ttry {\n\t\t\t\t\t(settings.iStateDuration === -1 ? sessionStorage : localStorage).setItem(\n\t\t\t\t\t\t'DataTables_' + settings.sInstance + '_' + location.pathname,\n\t\t\t\t\t\tJSON.stringify(data)\n\t\t\t\t\t);\n\t\t\t\t} catch (e) { }\n\t\t\t},\n\n\n\t\t\t/**\n\t\t\t * Callback which allows modification of the state to be saved. Called when the table\n\t\t\t * has changed state a new state save is required. This method allows modification of\n\t\t\t * the state saving object prior to actually doing the save, including addition or\n\t\t\t * other state properties or modification. Note that for plug-in authors, you should\n\t\t\t * use the `stateSaveParams` event to save parameters for a plug-in.\n\t\t\t *  @type function\n\t\t\t *  @param {object} settings DataTables settings object\n\t\t\t *  @param {object} data The state object to be saved\n\t\t\t *\n\t\t\t *  @dtopt Callbacks\n\t\t\t *  @name DataTable.defaults.stateSaveParams\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Remove a saved filter, so filtering is never saved\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"stateSave\": true,\n\t\t\t *        \"stateSaveParams\": function (settings, data) {\n\t\t\t *          data.oSearch.sSearch = \"\";\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"fnStateSaveParams\": null,\n\n\n\t\t\t/**\n\t\t\t * Duration for which the saved state information is considered valid. After this period\n\t\t\t * has elapsed the state will be returned to the default.\n\t\t\t * Value is given in seconds.\n\t\t\t *  @type int\n\t\t\t *  @default 7200 <i>(2 hours)</i>\n\t\t\t *\n\t\t\t *  @dtopt Options\n\t\t\t *  @name DataTable.defaults.stateDuration\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"stateDuration\": 60*60*24; // 1 day\n\t\t\t *      } );\n\t\t\t *    } )\n\t\t\t */\n\t\t\t\"iStateDuration\": 7200,\n\n\n\t\t\t/**\n\t\t\t * When enabled DataTables will not make a request to the server for the first\n\t\t\t * page draw - rather it will use the data already on the page (no sorting etc\n\t\t\t * will be applied to it), thus saving on an XHR at load time. `deferLoading`\n\t\t\t * is used to indicate that deferred loading is required, but it is also used\n\t\t\t * to tell DataTables how many records there are in the full table (allowing\n\t\t\t * the information element and pagination to be displayed correctly). In the case\n\t\t\t * where a filtering is applied to the table on initial load, this can be\n\t\t\t * indicated by giving the parameter as an array, where the first element is\n\t\t\t * the number of records available after filtering and the second element is the\n\t\t\t * number of records without filtering (allowing the table information element\n\t\t\t * to be shown correctly).\n\t\t\t *  @type int | array\n\t\t\t *  @default null\n\t\t\t *\n\t\t\t *  @dtopt Options\n\t\t\t *  @name DataTable.defaults.deferLoading\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // 57 records available in the table, no filtering applied\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"serverSide\": true,\n\t\t\t *        \"ajax\": \"scripts/server_processing.php\",\n\t\t\t *        \"deferLoading\": 57\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // 57 records after filtering, 100 without filtering (an initial filter applied)\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"serverSide\": true,\n\t\t\t *        \"ajax\": \"scripts/server_processing.php\",\n\t\t\t *        \"deferLoading\": [ 57, 100 ],\n\t\t\t *        \"search\": {\n\t\t\t *          \"search\": \"my_filter\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"iDeferLoading\": null,\n\n\n\t\t\t/**\n\t\t\t * Number of rows to display on a single page when using pagination. If\n\t\t\t * feature enabled (`lengthChange`) then the end user will be able to override\n\t\t\t * this to a custom setting using a pop-up menu.\n\t\t\t *  @type int\n\t\t\t *  @default 10\n\t\t\t *\n\t\t\t *  @dtopt Options\n\t\t\t *  @name DataTable.defaults.pageLength\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"pageLength\": 50\n\t\t\t *      } );\n\t\t\t *    } )\n\t\t\t */\n\t\t\t\"iDisplayLength\": 10,\n\n\n\t\t\t/**\n\t\t\t * Define the starting point for data display when using DataTables with\n\t\t\t * pagination. Note that this parameter is the number of records, rather than\n\t\t\t * the page number, so if you have 10 records per page and want to start on\n\t\t\t * the third page, it should be \"20\".\n\t\t\t *  @type int\n\t\t\t *  @default 0\n\t\t\t *\n\t\t\t *  @dtopt Options\n\t\t\t *  @name DataTable.defaults.displayStart\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"displayStart\": 20\n\t\t\t *      } );\n\t\t\t *    } )\n\t\t\t */\n\t\t\t\"iDisplayStart\": 0,\n\n\n\t\t\t/**\n\t\t\t * By default DataTables allows keyboard navigation of the table (sorting, paging,\n\t\t\t * and filtering) by adding a `tabindex` attribute to the required elements. This\n\t\t\t * allows you to tab through the controls and press the enter key to activate them.\n\t\t\t * The tabindex is default 0, meaning that the tab follows the flow of the document.\n\t\t\t * You can overrule this using this parameter if you wish. Use a value of -1 to\n\t\t\t * disable built-in keyboard navigation.\n\t\t\t *  @type int\n\t\t\t *  @default 0\n\t\t\t *\n\t\t\t *  @dtopt Options\n\t\t\t *  @name DataTable.defaults.tabIndex\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"tabIndex\": 1\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"iTabIndex\": 0,\n\n\n\t\t\t/**\n\t\t\t * Classes that DataTables assigns to the various components and features\n\t\t\t * that it adds to the HTML table. This allows classes to be configured\n\t\t\t * during initialisation in addition to through the static\n\t\t\t * {@link DataTable.ext.oStdClasses} object).\n\t\t\t *  @namespace\n\t\t\t *  @name DataTable.defaults.classes\n\t\t\t */\n\t\t\t\"oClasses\": {},\n\n\n\t\t\t/**\n\t\t\t * All strings that DataTables uses in the user interface that it creates\n\t\t\t * are defined in this object, allowing you to modified them individually or\n\t\t\t * completely replace them all as required.\n\t\t\t *  @namespace\n\t\t\t *  @name DataTable.defaults.language\n\t\t\t */\n\t\t\t\"oLanguage\": {\n\t\t\t\t/**\n\t\t\t\t * Strings that are used for WAI-ARIA labels and controls only (these are not\n\t\t\t\t * actually visible on the page, but will be read by screenreaders, and thus\n\t\t\t\t * must be internationalised as well).\n\t\t\t\t *  @namespace\n\t\t\t\t *  @name DataTable.defaults.language.aria\n\t\t\t\t */\n\t\t\t\t\"oAria\": {\n\t\t\t\t\t/**\n\t\t\t\t\t * ARIA label that is added to the table headers when the column may be\n\t\t\t\t\t * sorted ascending by activing the column (click or return when focused).\n\t\t\t\t\t * Note that the column header is prefixed to this string.\n\t\t\t\t\t *  @type string\n\t\t\t\t\t *  @default : activate to sort column ascending\n\t\t\t\t\t *\n\t\t\t\t\t *  @dtopt Language\n\t\t\t\t\t *  @name DataTable.defaults.language.aria.sortAscending\n\t\t\t\t\t *\n\t\t\t\t\t *  @example\n\t\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t\t *        \"language\": {\n\t\t\t\t\t *          \"aria\": {\n\t\t\t\t\t *            \"sortAscending\": \" - click/return to sort ascending\"\n\t\t\t\t\t *          }\n\t\t\t\t\t *        }\n\t\t\t\t\t *      } );\n\t\t\t\t\t *    } );\n\t\t\t\t\t */\n\t\t\t\t\t\"sSortAscending\": \": activate to sort column ascending\",\n\n\t\t\t\t\t/**\n\t\t\t\t\t * ARIA label that is added to the table headers when the column may be\n\t\t\t\t\t * sorted descending by activing the column (click or return when focused).\n\t\t\t\t\t * Note that the column header is prefixed to this string.\n\t\t\t\t\t *  @type string\n\t\t\t\t\t *  @default : activate to sort column ascending\n\t\t\t\t\t *\n\t\t\t\t\t *  @dtopt Language\n\t\t\t\t\t *  @name DataTable.defaults.language.aria.sortDescending\n\t\t\t\t\t *\n\t\t\t\t\t *  @example\n\t\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t\t *        \"language\": {\n\t\t\t\t\t *          \"aria\": {\n\t\t\t\t\t *            \"sortDescending\": \" - click/return to sort descending\"\n\t\t\t\t\t *          }\n\t\t\t\t\t *        }\n\t\t\t\t\t *      } );\n\t\t\t\t\t *    } );\n\t\t\t\t\t */\n\t\t\t\t\t\"sSortDescending\": \": activate to sort column descending\"\n\t\t\t\t},\n\n\t\t\t\t/**\n\t\t\t\t * Pagination string used by DataTables for the built-in pagination\n\t\t\t\t * control types.\n\t\t\t\t *  @namespace\n\t\t\t\t *  @name DataTable.defaults.language.paginate\n\t\t\t\t */\n\t\t\t\t\"oPaginate\": {\n\t\t\t\t\t/**\n\t\t\t\t\t * Text to use when using the 'full_numbers' type of pagination for the\n\t\t\t\t\t * button to take the user to the first page.\n\t\t\t\t\t *  @type string\n\t\t\t\t\t *  @default First\n\t\t\t\t\t *\n\t\t\t\t\t *  @dtopt Language\n\t\t\t\t\t *  @name DataTable.defaults.language.paginate.first\n\t\t\t\t\t *\n\t\t\t\t\t *  @example\n\t\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t\t *        \"language\": {\n\t\t\t\t\t *          \"paginate\": {\n\t\t\t\t\t *            \"first\": \"First page\"\n\t\t\t\t\t *          }\n\t\t\t\t\t *        }\n\t\t\t\t\t *      } );\n\t\t\t\t\t *    } );\n\t\t\t\t\t */\n\t\t\t\t\t\"sFirst\": \"First\",\n\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Text to use when using the 'full_numbers' type of pagination for the\n\t\t\t\t\t * button to take the user to the last page.\n\t\t\t\t\t *  @type string\n\t\t\t\t\t *  @default Last\n\t\t\t\t\t *\n\t\t\t\t\t *  @dtopt Language\n\t\t\t\t\t *  @name DataTable.defaults.language.paginate.last\n\t\t\t\t\t *\n\t\t\t\t\t *  @example\n\t\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t\t *        \"language\": {\n\t\t\t\t\t *          \"paginate\": {\n\t\t\t\t\t *            \"last\": \"Last page\"\n\t\t\t\t\t *          }\n\t\t\t\t\t *        }\n\t\t\t\t\t *      } );\n\t\t\t\t\t *    } );\n\t\t\t\t\t */\n\t\t\t\t\t\"sLast\": \"Last\",\n\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Text to use for the 'next' pagination button (to take the user to the\n\t\t\t\t\t * next page).\n\t\t\t\t\t *  @type string\n\t\t\t\t\t *  @default Next\n\t\t\t\t\t *\n\t\t\t\t\t *  @dtopt Language\n\t\t\t\t\t *  @name DataTable.defaults.language.paginate.next\n\t\t\t\t\t *\n\t\t\t\t\t *  @example\n\t\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t\t *        \"language\": {\n\t\t\t\t\t *          \"paginate\": {\n\t\t\t\t\t *            \"next\": \"Next page\"\n\t\t\t\t\t *          }\n\t\t\t\t\t *        }\n\t\t\t\t\t *      } );\n\t\t\t\t\t *    } );\n\t\t\t\t\t */\n\t\t\t\t\t\"sNext\": \"Next\",\n\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Text to use for the 'previous' pagination button (to take the user to\n\t\t\t\t\t * the previous page).\n\t\t\t\t\t *  @type string\n\t\t\t\t\t *  @default Previous\n\t\t\t\t\t *\n\t\t\t\t\t *  @dtopt Language\n\t\t\t\t\t *  @name DataTable.defaults.language.paginate.previous\n\t\t\t\t\t *\n\t\t\t\t\t *  @example\n\t\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t\t *        \"language\": {\n\t\t\t\t\t *          \"paginate\": {\n\t\t\t\t\t *            \"previous\": \"Previous page\"\n\t\t\t\t\t *          }\n\t\t\t\t\t *        }\n\t\t\t\t\t *      } );\n\t\t\t\t\t *    } );\n\t\t\t\t\t */\n\t\t\t\t\t\"sPrevious\": \"Previous\"\n\t\t\t\t},\n\n\t\t\t\t/**\n\t\t\t\t * This string is shown in preference to `zeroRecords` when the table is\n\t\t\t\t * empty of data (regardless of filtering). Note that this is an optional\n\t\t\t\t * parameter - if it is not given, the value of `zeroRecords` will be used\n\t\t\t\t * instead (either the default or given value).\n\t\t\t\t *  @type string\n\t\t\t\t *  @default No data available in table\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.emptyTable\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"emptyTable\": \"No data available in table\"\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sEmptyTable\": \"No courses are available\",\n\n\n\t\t\t\t/**\n\t\t\t\t * This string gives information to the end user about the information\n\t\t\t\t * that is current on display on the page. The following tokens can be\n\t\t\t\t * used in the string and will be dynamically replaced as the table\n\t\t\t\t * display updates. This tokens can be placed anywhere in the string, or\n\t\t\t\t * removed as needed by the language requires:\n\t\t\t\t *\n\t\t\t\t * * `\\_START\\_` - Display index of the first record on the current page\n\t\t\t\t * * `\\_END\\_` - Display index of the last record on the current page\n\t\t\t\t * * `\\_TOTAL\\_` - Number of records in the table after filtering\n\t\t\t\t * * `\\_MAX\\_` - Number of records in the table without filtering\n\t\t\t\t * * `\\_PAGE\\_` - Current page number\n\t\t\t\t * * `\\_PAGES\\_` - Total number of pages of data in the table\n\t\t\t\t *\n\t\t\t\t *  @type string\n\t\t\t\t *  @default Showing _START_ to _END_ of _TOTAL_ entries\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.info\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"info\": \"Showing page _PAGE_ of _PAGES_\"\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sInfo\": \"Showing _START_ to _END_ of _TOTAL_ entries\",\n\n\n\t\t\t\t/**\n\t\t\t\t * Display information string for when the table is empty. Typically the\n\t\t\t\t * format of this string should match `info`.\n\t\t\t\t *  @type string\n\t\t\t\t *  @default Showing 0 to 0 of 0 entries\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.infoEmpty\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"infoEmpty\": \"No entries to show\"\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sInfoEmpty\": \"Showing 0 to 0 of 0 entries\",\n\n\n\t\t\t\t/**\n\t\t\t\t * When a user filters the information in a table, this string is appended\n\t\t\t\t * to the information (`info`) to give an idea of how strong the filtering\n\t\t\t\t * is. The variable _MAX_ is dynamically updated.\n\t\t\t\t *  @type string\n\t\t\t\t *  @default (filtered from _MAX_ total entries)\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.infoFiltered\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"infoFiltered\": \" - filtering from _MAX_ records\"\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sInfoFiltered\": \"(filtered from _MAX_ total entries)\",\n\n\n\t\t\t\t/**\n\t\t\t\t * If can be useful to append extra information to the info string at times,\n\t\t\t\t * and this variable does exactly that. This information will be appended to\n\t\t\t\t * the `info` (`infoEmpty` and `infoFiltered` in whatever combination they are\n\t\t\t\t * being used) at all times.\n\t\t\t\t *  @type string\n\t\t\t\t *  @default <i>Empty string</i>\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.infoPostFix\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"infoPostFix\": \"All records shown are derived from real information.\"\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sInfoPostFix\": \"\",\n\n\n\t\t\t\t/**\n\t\t\t\t * This decimal place operator is a little different from the other\n\t\t\t\t * language options since DataTables doesn't output floating point\n\t\t\t\t * numbers, so it won't ever use this for display of a number. Rather,\n\t\t\t\t * what this parameter does is modify the sort methods of the table so\n\t\t\t\t * that numbers which are in a format which has a character other than\n\t\t\t\t * a period (`.`) as a decimal place will be sorted numerically.\n\t\t\t\t *\n\t\t\t\t * Note that numbers with different decimal places cannot be shown in\n\t\t\t\t * the same table and still be sortable, the table must be consistent.\n\t\t\t\t * However, multiple different tables on the page can use different\n\t\t\t\t * decimal place characters.\n\t\t\t\t *  @type string\n\t\t\t\t *  @default\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.decimal\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"decimal\": \",\"\n\t\t\t\t *          \"thousands\": \".\"\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sDecimal\": \"\",\n\n\n\t\t\t\t/**\n\t\t\t\t * DataTables has a build in number formatter (`formatNumber`) which is\n\t\t\t\t * used to format large numbers that are used in the table information.\n\t\t\t\t * By default a comma is used, but this can be trivially changed to any\n\t\t\t\t * character you wish with this parameter.\n\t\t\t\t *  @type string\n\t\t\t\t *  @default ,\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.thousands\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"thousands\": \"'\"\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sThousands\": \",\",\n\n\n\t\t\t\t/**\n\t\t\t\t * Detail the action that will be taken when the drop down menu for the\n\t\t\t\t * pagination length option is changed. The '_MENU_' variable is replaced\n\t\t\t\t * with a default select list of 10, 25, 50 and 100, and can be replaced\n\t\t\t\t * with a custom select box if required.\n\t\t\t\t *  @type string\n\t\t\t\t *  @default Show _MENU_ entries\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.lengthMenu\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    // Language change only\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"lengthMenu\": \"Display _MENU_ records\"\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    // Language and options change\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"lengthMenu\": 'Display <select>'+\n\t\t\t\t *            '<option value=\"10\">10</option>'+\n\t\t\t\t *            '<option value=\"20\">20</option>'+\n\t\t\t\t *            '<option value=\"30\">30</option>'+\n\t\t\t\t *            '<option value=\"40\">40</option>'+\n\t\t\t\t *            '<option value=\"50\">50</option>'+\n\t\t\t\t *            '<option value=\"-1\">All</option>'+\n\t\t\t\t *            '</select> records'\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sLengthMenu\": \"Show _MENU_ entries\",\n\n\n\t\t\t\t/**\n\t\t\t\t * When using Ajax sourced data and during the first draw when DataTables is\n\t\t\t\t * gathering the data, this message is shown in an empty row in the table to\n\t\t\t\t * indicate to the end user the the data is being loaded. Note that this\n\t\t\t\t * parameter is not used when loading data by server-side processing, just\n\t\t\t\t * Ajax sourced data with client-side processing.\n\t\t\t\t *  @type string\n\t\t\t\t *  @default Loading...\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.loadingRecords\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"loadingRecords\": \"Please wait - loading...\"\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sLoadingRecords\": \"Loading...\",\n\n\n\t\t\t\t/**\n\t\t\t\t * Text which is displayed when the table is processing a user action\n\t\t\t\t * (usually a sort command or similar).\n\t\t\t\t *  @type string\n\t\t\t\t *  @default Processing...\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.processing\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"processing\": \"DataTables is currently busy\"\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sProcessing\": \"Processing...\",\n\n\n\t\t\t\t/**\n\t\t\t\t * Details the actions that will be taken when the user types into the\n\t\t\t\t * filtering input text box. The variable \"_INPUT_\", if used in the string,\n\t\t\t\t * is replaced with the HTML text box for the filtering input allowing\n\t\t\t\t * control over where it appears in the string. If \"_INPUT_\" is not given\n\t\t\t\t * then the input box is appended to the string automatically.\n\t\t\t\t *  @type string\n\t\t\t\t *  @default Search:\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.search\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    // Input text box will be appended at the end automatically\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"search\": \"Filter records:\"\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    // Specify where the filter should appear\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"search\": \"Apply filter _INPUT_ to table\"\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sSearch\": \"\",\n\n\n\t\t\t\t/**\n\t\t\t\t * Assign a `placeholder` attribute to the search `input` element\n\t\t\t\t *  @type string\n\t\t\t\t *  @default\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.searchPlaceholder\n\t\t\t\t */\n\t\t\t\t\"sSearchPlaceholder\": \"\",\n\n\n\t\t\t\t/**\n\t\t\t\t * All of the language information can be stored in a file on the\n\t\t\t\t * server-side, which DataTables will look up if this parameter is passed.\n\t\t\t\t * It must store the URL of the language file, which is in a JSON format,\n\t\t\t\t * and the object has the same properties as the oLanguage object in the\n\t\t\t\t * initialiser object (i.e. the above parameters). Please refer to one of\n\t\t\t\t * the example language files to see how this works in action.\n\t\t\t\t *  @type string\n\t\t\t\t *  @default <i>Empty string - i.e. disabled</i>\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.url\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"url\": \"http://www.sprymedia.co.uk/dataTables/lang.txt\"\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sUrl\": \"\",\n\n\n\t\t\t\t/**\n\t\t\t\t * Text shown inside the table records when the is no information to be\n\t\t\t\t * displayed after filtering. `emptyTable` is shown when there is simply no\n\t\t\t\t * information in the table at all (regardless of filtering).\n\t\t\t\t *  @type string\n\t\t\t\t *  @default No matching records found\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.zeroRecords\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"zeroRecords\": \"No records to display\"\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sZeroRecords\": \"No matching records found\"\n\t\t\t},\n\n\n\t\t\t/**\n\t\t\t * This parameter allows you to have define the global filtering state at\n\t\t\t * initialisation time. As an object the `search` parameter must be\n\t\t\t * defined, but all other parameters are optional. When `regex` is true,\n\t\t\t * the search string will be treated as a regular expression, when false\n\t\t\t * (default) it will be treated as a straight string. When `smart`\n\t\t\t * DataTables will use it's smart filtering methods (to word match at\n\t\t\t * any point in the data), when false this will not be done.\n\t\t\t *  @namespace\n\t\t\t *  @extends DataTable.models.oSearch\n\t\t\t *\n\t\t\t *  @dtopt Options\n\t\t\t *  @name DataTable.defaults.search\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"search\": {\"search\": \"Initial search\"}\n\t\t\t *      } );\n\t\t\t *    } )\n\t\t\t */\n\t\t\t\"oSearch\": $.extend({}, DataTable.models.oSearch),\n\n\n\t\t\t/**\n\t\t\t * __Deprecated__ The functionality provided by this parameter has now been\n\t\t\t * superseded by that provided through `ajax`, which should be used instead.\n\t\t\t *\n\t\t\t * By default DataTables will look for the property `data` (or `aaData` for\n\t\t\t * compatibility with DataTables 1.9-) when obtaining data from an Ajax\n\t\t\t * source or for server-side processing - this parameter allows that\n\t\t\t * property to be changed. You can use Javascript dotted object notation to\n\t\t\t * get a data source for multiple levels of nesting.\n\t\t\t *  @type string\n\t\t\t *  @default data\n\t\t\t *\n\t\t\t *  @dtopt Options\n\t\t\t *  @dtopt Server-side\n\t\t\t *  @name DataTable.defaults.ajaxDataProp\n\t\t\t *\n\t\t\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t\t\t */\n\t\t\t\"sAjaxDataProp\": \"data\",\n\n\n\t\t\t/**\n\t\t\t * __Deprecated__ The functionality provided by this parameter has now been\n\t\t\t * superseded by that provided through `ajax`, which should be used instead.\n\t\t\t *\n\t\t\t * You can instruct DataTables to load data from an external\n\t\t\t * source using this parameter (use aData if you want to pass data in you\n\t\t\t * already have). Simply provide a url a JSON object can be obtained from.\n\t\t\t *  @type string\n\t\t\t *  @default null\n\t\t\t *\n\t\t\t *  @dtopt Options\n\t\t\t *  @dtopt Server-side\n\t\t\t *  @name DataTable.defaults.ajaxSource\n\t\t\t *\n\t\t\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t\t\t */\n\t\t\t\"sAjaxSource\": null,\n\n\n\t\t\t/**\n\t\t\t * This initialisation variable allows you to specify exactly where in the\n\t\t\t * DOM you want DataTables to inject the various controls it adds to the page\n\t\t\t * (for example you might want the pagination controls at the top of the\n\t\t\t * table). DIV elements (with or without a custom class) can also be added to\n\t\t\t * aid styling. The follow syntax is used:\n\t\t\t *   <ul>\n\t\t\t *     <li>The following options are allowed:\n\t\t\t *       <ul>\n\t\t\t *         <li>'l' - Length changing</li>\n\t\t\t *         <li>'f' - Filtering input</li>\n\t\t\t *         <li>'t' - The table!</li>\n\t\t\t *         <li>'i' - Information</li>\n\t\t\t *         <li>'p' - Pagination</li>\n\t\t\t *         <li>'r' - pRocessing</li>\n\t\t\t *       </ul>\n\t\t\t *     </li>\n\t\t\t *     <li>The following constants are allowed:\n\t\t\t *       <ul>\n\t\t\t *         <li>'H' - jQueryUI theme \"header\" classes ('fg-toolbar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix')</li>\n\t\t\t *         <li>'F' - jQueryUI theme \"footer\" classes ('fg-toolbar ui-widget-header ui-corner-bl ui-corner-br ui-helper-clearfix')</li>\n\t\t\t *       </ul>\n\t\t\t *     </li>\n\t\t\t *     <li>The following syntax is expected:\n\t\t\t *       <ul>\n\t\t\t *         <li>'&lt;' and '&gt;' - div elements</li>\n\t\t\t *         <li>'&lt;\"class\" and '&gt;' - div with a class</li>\n\t\t\t *         <li>'&lt;\"#id\" and '&gt;' - div with an ID</li>\n\t\t\t *       </ul>\n\t\t\t *     </li>\n\t\t\t *     <li>Examples:\n\t\t\t *       <ul>\n\t\t\t *         <li>'&lt;\"wrapper\"flipt&gt;'</li>\n\t\t\t *         <li>'&lt;lf&lt;t&gt;ip&gt;'</li>\n\t\t\t *       </ul>\n\t\t\t *     </li>\n\t\t\t *   </ul>\n\t\t\t *  @type string\n\t\t\t *  @default lfrtip <i>(when `jQueryUI` is false)</i> <b>or</b>\n\t\t\t *    <\"H\"lfr>t<\"F\"ip> <i>(when `jQueryUI` is true)</i>\n\t\t\t *\n\t\t\t *  @dtopt Options\n\t\t\t *  @name DataTable.defaults.dom\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"dom\": '&lt;\"top\"i&gt;rt&lt;\"bottom\"flp&gt;&lt;\"clear\"&gt;'\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sDom\": \"lfrtip\",\n\n\n\t\t\t/**\n\t\t\t * Search delay option. This will throttle full table searches that use the\n\t\t\t * DataTables provided search input element (it does not effect calls to\n\t\t\t * `dt-api search()`, providing a delay before the search is made.\n\t\t\t *  @type integer\n\t\t\t *  @default 0\n\t\t\t *\n\t\t\t *  @dtopt Options\n\t\t\t *  @name DataTable.defaults.searchDelay\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"searchDelay\": 200\n\t\t\t *      } );\n\t\t\t *    } )\n\t\t\t */\n\t\t\t\"searchDelay\": null,\n\n\n\t\t\t/**\n\t\t\t * DataTables features six different built-in options for the buttons to\n\t\t\t * display for pagination control:\n\t\t\t *\n\t\t\t * * `numbers` - Page number buttons only\n\t\t\t * * `simple` - 'Previous' and 'Next' buttons only\n\t\t\t * * 'simple_numbers` - 'Previous' and 'Next' buttons, plus page numbers\n\t\t\t * * `full` - 'First', 'Previous', 'Next' and 'Last' buttons\n\t\t\t * * `full_numbers` - 'First', 'Previous', 'Next' and 'Last' buttons, plus page numbers\n\t\t\t * * `first_last_numbers` - 'First' and 'Last' buttons, plus page numbers\n\t\t\t *\n\t\t\t * Further methods can be added using {@link DataTable.ext.oPagination}.\n\t\t\t *  @type string\n\t\t\t *  @default simple_numbers\n\t\t\t *\n\t\t\t *  @dtopt Options\n\t\t\t *  @name DataTable.defaults.pagingType\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"pagingType\": \"full_numbers\"\n\t\t\t *      } );\n\t\t\t *    } )\n\t\t\t */\n\t\t\t\"sPaginationType\": \"simple_numbers\",\n\n\n\t\t\t/**\n\t\t\t * Enable horizontal scrolling. When a table is too wide to fit into a\n\t\t\t * certain layout, or you have a large number of columns in the table, you\n\t\t\t * can enable x-scrolling to show the table in a viewport, which can be\n\t\t\t * scrolled. This property can be `true` which will allow the table to\n\t\t\t * scroll horizontally when needed, or any CSS unit, or a number (in which\n\t\t\t * case it will be treated as a pixel measurement). Setting as simply `true`\n\t\t\t * is recommended.\n\t\t\t *  @type boolean|string\n\t\t\t *  @default <i>blank string - i.e. disabled</i>\n\t\t\t *\n\t\t\t *  @dtopt Features\n\t\t\t *  @name DataTable.defaults.scrollX\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"scrollX\": true,\n\t\t\t *        \"scrollCollapse\": true\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sScrollX\": \"\",\n\n\n\t\t\t/**\n\t\t\t * This property can be used to force a DataTable to use more width than it\n\t\t\t * might otherwise do when x-scrolling is enabled. For example if you have a\n\t\t\t * table which requires to be well spaced, this parameter is useful for\n\t\t\t * \"over-sizing\" the table, and thus forcing scrolling. This property can by\n\t\t\t * any CSS unit, or a number (in which case it will be treated as a pixel\n\t\t\t * measurement).\n\t\t\t *  @type string\n\t\t\t *  @default <i>blank string - i.e. disabled</i>\n\t\t\t *\n\t\t\t *  @dtopt Options\n\t\t\t *  @name DataTable.defaults.scrollXInner\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"scrollX\": \"100%\",\n\t\t\t *        \"scrollXInner\": \"110%\"\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sScrollXInner\": \"\",\n\n\n\t\t\t/**\n\t\t\t * Enable vertical scrolling. Vertical scrolling will constrain the DataTable\n\t\t\t * to the given height, and enable scrolling for any data which overflows the\n\t\t\t * current viewport. This can be used as an alternative to paging to display\n\t\t\t * a lot of data in a small area (although paging and scrolling can both be\n\t\t\t * enabled at the same time). This property can be any CSS unit, or a number\n\t\t\t * (in which case it will be treated as a pixel measurement).\n\t\t\t *  @type string\n\t\t\t *  @default <i>blank string - i.e. disabled</i>\n\t\t\t *\n\t\t\t *  @dtopt Features\n\t\t\t *  @name DataTable.defaults.scrollY\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"scrollY\": \"200px\",\n\t\t\t *        \"paginate\": false\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sScrollY\": \"\",\n\n\n\t\t\t/**\n\t\t\t * __Deprecated__ The functionality provided by this parameter has now been\n\t\t\t * superseded by that provided through `ajax`, which should be used instead.\n\t\t\t *\n\t\t\t * Set the HTTP method that is used to make the Ajax call for server-side\n\t\t\t * processing or Ajax sourced data.\n\t\t\t *  @type string\n\t\t\t *  @default GET\n\t\t\t *\n\t\t\t *  @dtopt Options\n\t\t\t *  @dtopt Server-side\n\t\t\t *  @name DataTable.defaults.serverMethod\n\t\t\t *\n\t\t\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t\t\t */\n\t\t\t\"sServerMethod\": \"GET\",\n\n\n\t\t\t/**\n\t\t\t * DataTables makes use of renderers when displaying HTML elements for\n\t\t\t * a table. These renderers can be added or modified by plug-ins to\n\t\t\t * generate suitable mark-up for a site. For example the Bootstrap\n\t\t\t * integration plug-in for DataTables uses a paging button renderer to\n\t\t\t * display pagination buttons in the mark-up required by Bootstrap.\n\t\t\t *\n\t\t\t * For further information about the renderers available see\n\t\t\t * DataTable.ext.renderer\n\t\t\t *  @type string|object\n\t\t\t *  @default null\n\t\t\t *\n\t\t\t *  @name DataTable.defaults.renderer\n\t\t\t *\n\t\t\t */\n\t\t\t\"renderer\": null,\n\n\n\t\t\t/**\n\t\t\t * Set the data property name that DataTables should use to get a row's id\n\t\t\t * to set as the `id` property in the node.\n\t\t\t *  @type string\n\t\t\t *  @default DT_RowId\n\t\t\t *\n\t\t\t *  @name DataTable.defaults.rowId\n\t\t\t */\n\t\t\t\"rowId\": \"DT_RowId\"\n\t\t};\n\n\t\t_fnHungarianMap(DataTable.defaults);\n\n\n\n\t\t/*\n\t\t * Developer note - See note in model.defaults.js about the use of Hungarian\n\t\t * notation and camel case.\n\t\t */\n\n\t\t/**\n\t\t * Column options that can be given to DataTables at initialisation time.\n\t\t *  @namespace\n\t\t */\n\t\tDataTable.defaults.column = {\n\t\t\t/**\n\t\t\t * Define which column(s) an order will occur on for this column. This\n\t\t\t * allows a column's ordering to take multiple columns into account when\n\t\t\t * doing a sort or use the data from a different column. For example first\n\t\t\t * name / last name columns make sense to do a multi-column sort over the\n\t\t\t * two columns.\n\t\t\t *  @type array|int\n\t\t\t *  @default null <i>Takes the value of the column index automatically</i>\n\t\t\t *\n\t\t\t *  @name DataTable.defaults.column.orderData\n\t\t\t *  @dtopt Columns\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Using `columnDefs`\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"columnDefs\": [\n\t\t\t *          { \"orderData\": [ 0, 1 ], \"targets\": [ 0 ] },\n\t\t\t *          { \"orderData\": [ 1, 0 ], \"targets\": [ 1 ] },\n\t\t\t *          { \"orderData\": 2, \"targets\": [ 2 ] }\n\t\t\t *        ]\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Using `columns`\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"columns\": [\n\t\t\t *          { \"orderData\": [ 0, 1 ] },\n\t\t\t *          { \"orderData\": [ 1, 0 ] },\n\t\t\t *          { \"orderData\": 2 },\n\t\t\t *          null,\n\t\t\t *          null\n\t\t\t *        ]\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"aDataSort\": null,\n\t\t\t\"iDataSort\": -1,\n\n\n\t\t\t/**\n\t\t\t * You can control the default ordering direction, and even alter the\n\t\t\t * behaviour of the sort handler (i.e. only allow ascending ordering etc)\n\t\t\t * using this parameter.\n\t\t\t *  @type array\n\t\t\t *  @default [ 'asc', 'desc' ]\n\t\t\t *\n\t\t\t *  @name DataTable.defaults.column.orderSequence\n\t\t\t *  @dtopt Columns\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Using `columnDefs`\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"columnDefs\": [\n\t\t\t *          { \"orderSequence\": [ \"asc\" ], \"targets\": [ 1 ] },\n\t\t\t *          { \"orderSequence\": [ \"desc\", \"asc\", \"asc\" ], \"targets\": [ 2 ] },\n\t\t\t *          { \"orderSequence\": [ \"desc\" ], \"targets\": [ 3 ] }\n\t\t\t *        ]\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Using `columns`\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"columns\": [\n\t\t\t *          null,\n\t\t\t *          { \"orderSequence\": [ \"asc\" ] },\n\t\t\t *          { \"orderSequence\": [ \"desc\", \"asc\", \"asc\" ] },\n\t\t\t *          { \"orderSequence\": [ \"desc\" ] },\n\t\t\t *          null\n\t\t\t *        ]\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"asSorting\": ['asc', 'desc'],\n\n\n\t\t\t/**\n\t\t\t * Enable or disable filtering on the data in this column.\n\t\t\t *  @type boolean\n\t\t\t *  @default true\n\t\t\t *\n\t\t\t *  @name DataTable.defaults.column.searchable\n\t\t\t *  @dtopt Columns\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Using `columnDefs`\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"columnDefs\": [\n\t\t\t *          { \"searchable\": false, \"targets\": [ 0 ] }\n\t\t\t *        ] } );\n\t\t\t *    } );\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Using `columns`\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"columns\": [\n\t\t\t *          { \"searchable\": false },\n\t\t\t *          null,\n\t\t\t *          null,\n\t\t\t *          null,\n\t\t\t *          null\n\t\t\t *        ] } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"bSearchable\": true,\n\n\n\t\t\t/**\n\t\t\t * Enable or disable ordering on this column.\n\t\t\t *  @type boolean\n\t\t\t *  @default true\n\t\t\t *\n\t\t\t *  @name DataTable.defaults.column.orderable\n\t\t\t *  @dtopt Columns\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Using `columnDefs`\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"columnDefs\": [\n\t\t\t *          { \"orderable\": false, \"targets\": [ 0 ] }\n\t\t\t *        ] } );\n\t\t\t *    } );\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Using `columns`\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"columns\": [\n\t\t\t *          { \"orderable\": false },\n\t\t\t *          null,\n\t\t\t *          null,\n\t\t\t *          null,\n\t\t\t *          null\n\t\t\t *        ] } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"bSortable\": true,\n\n\n\t\t\t/**\n\t\t\t * Enable or disable the display of this column.\n\t\t\t *  @type boolean\n\t\t\t *  @default true\n\t\t\t *\n\t\t\t *  @name DataTable.defaults.column.visible\n\t\t\t *  @dtopt Columns\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Using `columnDefs`\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"columnDefs\": [\n\t\t\t *          { \"visible\": false, \"targets\": [ 0 ] }\n\t\t\t *        ] } );\n\t\t\t *    } );\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Using `columns`\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"columns\": [\n\t\t\t *          { \"visible\": false },\n\t\t\t *          null,\n\t\t\t *          null,\n\t\t\t *          null,\n\t\t\t *          null\n\t\t\t *        ] } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"bVisible\": true,\n\n\n\t\t\t/**\n\t\t\t * Developer definable function that is called whenever a cell is created (Ajax source,\n\t\t\t * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n\t\t\t * allowing you to modify the DOM element (add background colour for example) when the\n\t\t\t * element is available.\n\t\t\t *  @type function\n\t\t\t *  @param {element} td The TD node that has been created\n\t\t\t *  @param {*} cellData The Data for the cell\n\t\t\t *  @param {array|object} rowData The data for the whole row\n\t\t\t *  @param {int} row The row index for the aoData data store\n\t\t\t *  @param {int} col The column index for aoColumns\n\t\t\t *\n\t\t\t *  @name DataTable.defaults.column.createdCell\n\t\t\t *  @dtopt Columns\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"columnDefs\": [ {\n\t\t\t *          \"targets\": [3],\n\t\t\t *          \"createdCell\": function (td, cellData, rowData, row, col) {\n\t\t\t *            if ( cellData == \"1.7\" ) {\n\t\t\t *              $(td).css('color', 'blue')\n\t\t\t *            }\n\t\t\t *          }\n\t\t\t *        } ]\n\t\t\t *      });\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"fnCreatedCell\": null,\n\n\n\t\t\t/**\n\t\t\t * This parameter has been replaced by `data` in DataTables to ensure naming\n\t\t\t * consistency. `dataProp` can still be used, as there is backwards\n\t\t\t * compatibility in DataTables for this option, but it is strongly\n\t\t\t * recommended that you use `data` in preference to `dataProp`.\n\t\t\t *  @name DataTable.defaults.column.dataProp\n\t\t\t */\n\n\n\t\t\t/**\n\t\t\t * This property can be used to read data from any data source property,\n\t\t\t * including deeply nested objects / properties. `data` can be given in a\n\t\t\t * number of different ways which effect its behaviour:\n\t\t\t *\n\t\t\t * * `integer` - treated as an array index for the data source. This is the\n\t\t\t *   default that DataTables uses (incrementally increased for each column).\n\t\t\t * * `string` - read an object property from the data source. There are\n\t\t\t *   three 'special' options that can be used in the string to alter how\n\t\t\t *   DataTables reads the data from the source object:\n\t\t\t *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n\t\t\t *      Javascript to read from nested objects, so to can the options\n\t\t\t *      specified in `data`. For example: `browser.version` or\n\t\t\t *      `browser.name`. If your object parameter name contains a period, use\n\t\t\t *      `\\\\` to escape it - i.e. `first\\\\.name`.\n\t\t\t *    * `[]` - Array notation. DataTables can automatically combine data\n\t\t\t *      from and array source, joining the data with the characters provided\n\t\t\t *      between the two brackets. For example: `name[, ]` would provide a\n\t\t\t *      comma-space separated list from the source array. If no characters\n\t\t\t *      are provided between the brackets, the original array source is\n\t\t\t *      returned.\n\t\t\t *    * `()` - Function notation. Adding `()` to the end of a parameter will\n\t\t\t *      execute a function of the name given. For example: `browser()` for a\n\t\t\t *      simple function on the data source, `browser.version()` for a\n\t\t\t *      function in a nested property or even `browser().version` to get an\n\t\t\t *      object property if the function called returns an object. Note that\n\t\t\t *      function notation is recommended for use in `render` rather than\n\t\t\t *      `data` as it is much simpler to use as a renderer.\n\t\t\t * * `null` - use the original data source for the row rather than plucking\n\t\t\t *   data directly from it. This action has effects on two other\n\t\t\t *   initialisation options:\n\t\t\t *    * `defaultContent` - When null is given as the `data` option and\n\t\t\t *      `defaultContent` is specified for the column, the value defined by\n\t\t\t *      `defaultContent` will be used for the cell.\n\t\t\t *    * `render` - When null is used for the `data` option and the `render`\n\t\t\t *      option is specified for the column, the whole data source for the\n\t\t\t *      row is used for the renderer.\n\t\t\t * * `function` - the function given will be executed whenever DataTables\n\t\t\t *   needs to set or get the data for a cell in the column. The function\n\t\t\t *   takes three parameters:\n\t\t\t *    * Parameters:\n\t\t\t *      * `{array|object}` The data source for the row\n\t\t\t *      * `{string}` The type call data requested - this will be 'set' when\n\t\t\t *        setting data or 'filter', 'display', 'type', 'sort' or undefined\n\t\t\t *        when gathering data. Note that when `undefined` is given for the\n\t\t\t *        type DataTables expects to get the raw data for the object back<\n\t\t\t *      * `{*}` Data to set when the second parameter is 'set'.\n\t\t\t *    * Return:\n\t\t\t *      * The return value from the function is not required when 'set' is\n\t\t\t *        the type of call, but otherwise the return is what will be used\n\t\t\t *        for the data requested.\n\t\t\t *\n\t\t\t * Note that `data` is a getter and setter option. If you just require\n\t\t\t * formatting of data for output, you will likely want to use `render` which\n\t\t\t * is simply a getter and thus simpler to use.\n\t\t\t *\n\t\t\t * Note that prior to DataTables 1.9.2 `data` was called `mDataProp`. The\n\t\t\t * name change reflects the flexibility of this property and is consistent\n\t\t\t * with the naming of mRender. If 'mDataProp' is given, then it will still\n\t\t\t * be used by DataTables, as it automatically maps the old name to the new\n\t\t\t * if required.\n\t\t\t *\n\t\t\t *  @type string|int|function|null\n\t\t\t *  @default null <i>Use automatically calculated column index</i>\n\t\t\t *\n\t\t\t *  @name DataTable.defaults.column.data\n\t\t\t *  @dtopt Columns\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Read table data from objects\n\t\t\t *    // JSON structure for each row:\n\t\t\t *    //   {\n\t\t\t *    //      \"engine\": {value},\n\t\t\t *    //      \"browser\": {value},\n\t\t\t *    //      \"platform\": {value},\n\t\t\t *    //      \"version\": {value},\n\t\t\t *    //      \"grade\": {value}\n\t\t\t *    //   }\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"ajaxSource\": \"sources/objects.txt\",\n\t\t\t *        \"columns\": [\n\t\t\t *          { \"data\": \"engine\" },\n\t\t\t *          { \"data\": \"browser\" },\n\t\t\t *          { \"data\": \"platform\" },\n\t\t\t *          { \"data\": \"version\" },\n\t\t\t *          { \"data\": \"grade\" }\n\t\t\t *        ]\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Read information from deeply nested objects\n\t\t\t *    // JSON structure for each row:\n\t\t\t *    //   {\n\t\t\t *    //      \"engine\": {value},\n\t\t\t *    //      \"browser\": {value},\n\t\t\t *    //      \"platform\": {\n\t\t\t *    //         \"inner\": {value}\n\t\t\t *    //      },\n\t\t\t *    //      \"details\": [\n\t\t\t *    //         {value}, {value}\n\t\t\t *    //      ]\n\t\t\t *    //   }\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"ajaxSource\": \"sources/deep.txt\",\n\t\t\t *        \"columns\": [\n\t\t\t *          { \"data\": \"engine\" },\n\t\t\t *          { \"data\": \"browser\" },\n\t\t\t *          { \"data\": \"platform.inner\" },\n\t\t\t *          { \"data\": \"platform.details.0\" },\n\t\t\t *          { \"data\": \"platform.details.1\" }\n\t\t\t *        ]\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Using `data` as a function to provide different information for\n\t\t\t *    // sorting, filtering and display. In this case, currency (price)\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"columnDefs\": [ {\n\t\t\t *          \"targets\": [ 0 ],\n\t\t\t *          \"data\": function ( source, type, val ) {\n\t\t\t *            if (type === 'set') {\n\t\t\t *              source.price = val;\n\t\t\t *              // Store the computed dislay and filter values for efficiency\n\t\t\t *              source.price_display = val==\"\" ? \"\" : \"$\"+numberFormat(val);\n\t\t\t *              source.price_filter  = val==\"\" ? \"\" : \"$\"+numberFormat(val)+\" \"+val;\n\t\t\t *              return;\n\t\t\t *            }\n\t\t\t *            else if (type === 'display') {\n\t\t\t *              return source.price_display;\n\t\t\t *            }\n\t\t\t *            else if (type === 'filter') {\n\t\t\t *              return source.price_filter;\n\t\t\t *            }\n\t\t\t *            // 'sort', 'type' and undefined all just use the integer\n\t\t\t *            return source.price;\n\t\t\t *          }\n\t\t\t *        } ]\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Using default content\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"columnDefs\": [ {\n\t\t\t *          \"targets\": [ 0 ],\n\t\t\t *          \"data\": null,\n\t\t\t *          \"defaultContent\": \"Click to edit\"\n\t\t\t *        } ]\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Using array notation - outputting a list from an array\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"columnDefs\": [ {\n\t\t\t *          \"targets\": [ 0 ],\n\t\t\t *          \"data\": \"name[, ]\"\n\t\t\t *        } ]\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t *\n\t\t\t */\n\t\t\t\"mData\": null,\n\n\n\t\t\t/**\n\t\t\t * This property is the rendering partner to `data` and it is suggested that\n\t\t\t * when you want to manipulate data for display (including filtering,\n\t\t\t * sorting etc) without altering the underlying data for the table, use this\n\t\t\t * property. `render` can be considered to be the the read only companion to\n\t\t\t * `data` which is read / write (then as such more complex). Like `data`\n\t\t\t * this option can be given in a number of different ways to effect its\n\t\t\t * behaviour:\n\t\t\t *\n\t\t\t * * `integer` - treated as an array index for the data source. This is the\n\t\t\t *   default that DataTables uses (incrementally increased for each column).\n\t\t\t * * `string` - read an object property from the data source. There are\n\t\t\t *   three 'special' options that can be used in the string to alter how\n\t\t\t *   DataTables reads the data from the source object:\n\t\t\t *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n\t\t\t *      Javascript to read from nested objects, so to can the options\n\t\t\t *      specified in `data`. For example: `browser.version` or\n\t\t\t *      `browser.name`. If your object parameter name contains a period, use\n\t\t\t *      `\\\\` to escape it - i.e. `first\\\\.name`.\n\t\t\t *    * `[]` - Array notation. DataTables can automatically combine data\n\t\t\t *      from and array source, joining the data with the characters provided\n\t\t\t *      between the two brackets. For example: `name[, ]` would provide a\n\t\t\t *      comma-space separated list from the source array. If no characters\n\t\t\t *      are provided between the brackets, the original array source is\n\t\t\t *      returned.\n\t\t\t *    * `()` - Function notation. Adding `()` to the end of a parameter will\n\t\t\t *      execute a function of the name given. For example: `browser()` for a\n\t\t\t *      simple function on the data source, `browser.version()` for a\n\t\t\t *      function in a nested property or even `browser().version` to get an\n\t\t\t *      object property if the function called returns an object.\n\t\t\t * * `object` - use different data for the different data types requested by\n\t\t\t *   DataTables ('filter', 'display', 'type' or 'sort'). The property names\n\t\t\t *   of the object is the data type the property refers to and the value can\n\t\t\t *   defined using an integer, string or function using the same rules as\n\t\t\t *   `render` normally does. Note that an `_` option _must_ be specified.\n\t\t\t *   This is the default value to use if you haven't specified a value for\n\t\t\t *   the data type requested by DataTables.\n\t\t\t * * `function` - the function given will be executed whenever DataTables\n\t\t\t *   needs to set or get the data for a cell in the column. The function\n\t\t\t *   takes three parameters:\n\t\t\t *    * Parameters:\n\t\t\t *      * {array|object} The data source for the row (based on `data`)\n\t\t\t *      * {string} The type call data requested - this will be 'filter',\n\t\t\t *        'display', 'type' or 'sort'.\n\t\t\t *      * {array|object} The full data source for the row (not based on\n\t\t\t *        `data`)\n\t\t\t *    * Return:\n\t\t\t *      * The return value from the function is what will be used for the\n\t\t\t *        data requested.\n\t\t\t *\n\t\t\t *  @type string|int|function|object|null\n\t\t\t *  @default null Use the data source value.\n\t\t\t *\n\t\t\t *  @name DataTable.defaults.column.render\n\t\t\t *  @dtopt Columns\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Create a comma separated list from an array of objects\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"ajaxSource\": \"sources/deep.txt\",\n\t\t\t *        \"columns\": [\n\t\t\t *          { \"data\": \"engine\" },\n\t\t\t *          { \"data\": \"browser\" },\n\t\t\t *          {\n\t\t\t *            \"data\": \"platform\",\n\t\t\t *            \"render\": \"[, ].name\"\n\t\t\t *          }\n\t\t\t *        ]\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Execute a function to obtain data\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"columnDefs\": [ {\n\t\t\t *          \"targets\": [ 0 ],\n\t\t\t *          \"data\": null, // Use the full data source object for the renderer's source\n\t\t\t *          \"render\": \"browserName()\"\n\t\t\t *        } ]\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // As an object, extracting different data for the different types\n\t\t\t *    // This would be used with a data source such as:\n\t\t\t *    //   { \"phone\": 5552368, \"phone_filter\": \"5552368 555-2368\", \"phone_display\": \"555-2368\" }\n\t\t\t *    // Here the `phone` integer is used for sorting and type detection, while `phone_filter`\n\t\t\t *    // (which has both forms) is used for filtering for if a user inputs either format, while\n\t\t\t *    // the formatted phone number is the one that is shown in the table.\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"columnDefs\": [ {\n\t\t\t *          \"targets\": [ 0 ],\n\t\t\t *          \"data\": null, // Use the full data source object for the renderer's source\n\t\t\t *          \"render\": {\n\t\t\t *            \"_\": \"phone\",\n\t\t\t *            \"filter\": \"phone_filter\",\n\t\t\t *            \"display\": \"phone_display\"\n\t\t\t *          }\n\t\t\t *        } ]\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Use as a function to create a link from the data source\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"columnDefs\": [ {\n\t\t\t *          \"targets\": [ 0 ],\n\t\t\t *          \"data\": \"download_link\",\n\t\t\t *          \"render\": function ( data, type, full ) {\n\t\t\t *            return '<a href=\"'+data+'\">Download</a>';\n\t\t\t *          }\n\t\t\t *        } ]\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"mRender\": null,\n\n\n\t\t\t/**\n\t\t\t * Change the cell type created for the column - either TD cells or TH cells. This\n\t\t\t * can be useful as TH cells have semantic meaning in the table body, allowing them\n\t\t\t * to act as a header for a row (you may wish to add scope='row' to the TH elements).\n\t\t\t *  @type string\n\t\t\t *  @default td\n\t\t\t *\n\t\t\t *  @name DataTable.defaults.column.cellType\n\t\t\t *  @dtopt Columns\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Make the first column use TH cells\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"columnDefs\": [ {\n\t\t\t *          \"targets\": [ 0 ],\n\t\t\t *          \"cellType\": \"th\"\n\t\t\t *        } ]\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sCellType\": \"td\",\n\n\n\t\t\t/**\n\t\t\t * Class to give to each cell in this column.\n\t\t\t *  @type string\n\t\t\t *  @default <i>Empty string</i>\n\t\t\t *\n\t\t\t *  @name DataTable.defaults.column.class\n\t\t\t *  @dtopt Columns\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Using `columnDefs`\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"columnDefs\": [\n\t\t\t *          { \"class\": \"my_class\", \"targets\": [ 0 ] }\n\t\t\t *        ]\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Using `columns`\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"columns\": [\n\t\t\t *          { \"class\": \"my_class\" },\n\t\t\t *          null,\n\t\t\t *          null,\n\t\t\t *          null,\n\t\t\t *          null\n\t\t\t *        ]\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sClass\": \"\",\n\n\t\t\t/**\n\t\t\t * When DataTables calculates the column widths to assign to each column,\n\t\t\t * it finds the longest string in each column and then constructs a\n\t\t\t * temporary table and reads the widths from that. The problem with this\n\t\t\t * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n\t\t\t * string - thus the calculation can go wrong (doing it properly and putting\n\t\t\t * it into an DOM object and measuring that is horribly(!) slow). Thus as\n\t\t\t * a \"work around\" we provide this option. It will append its value to the\n\t\t\t * text that is found to be the longest string for the column - i.e. padding.\n\t\t\t * Generally you shouldn't need this!\n\t\t\t *  @type string\n\t\t\t *  @default <i>Empty string<i>\n\t\t\t *\n\t\t\t *  @name DataTable.defaults.column.contentPadding\n\t\t\t *  @dtopt Columns\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Using `columns`\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"columns\": [\n\t\t\t *          null,\n\t\t\t *          null,\n\t\t\t *          null,\n\t\t\t *          {\n\t\t\t *            \"contentPadding\": \"mmm\"\n\t\t\t *          }\n\t\t\t *        ]\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sContentPadding\": \"\",\n\n\n\t\t\t/**\n\t\t\t * Allows a default value to be given for a column's data, and will be used\n\t\t\t * whenever a null data source is encountered (this can be because `data`\n\t\t\t * is set to null, or because the data source itself is null).\n\t\t\t *  @type string\n\t\t\t *  @default null\n\t\t\t *\n\t\t\t *  @name DataTable.defaults.column.defaultContent\n\t\t\t *  @dtopt Columns\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Using `columnDefs`\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"columnDefs\": [\n\t\t\t *          {\n\t\t\t *            \"data\": null,\n\t\t\t *            \"defaultContent\": \"Edit\",\n\t\t\t *            \"targets\": [ -1 ]\n\t\t\t *          }\n\t\t\t *        ]\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Using `columns`\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"columns\": [\n\t\t\t *          null,\n\t\t\t *          null,\n\t\t\t *          null,\n\t\t\t *          {\n\t\t\t *            \"data\": null,\n\t\t\t *            \"defaultContent\": \"Edit\"\n\t\t\t *          }\n\t\t\t *        ]\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sDefaultContent\": null,\n\n\n\t\t\t/**\n\t\t\t * This parameter is only used in DataTables' server-side processing. It can\n\t\t\t * be exceptionally useful to know what columns are being displayed on the\n\t\t\t * client side, and to map these to database fields. When defined, the names\n\t\t\t * also allow DataTables to reorder information from the server if it comes\n\t\t\t * back in an unexpected order (i.e. if you switch your columns around on the\n\t\t\t * client-side, your server-side code does not also need updating).\n\t\t\t *  @type string\n\t\t\t *  @default <i>Empty string</i>\n\t\t\t *\n\t\t\t *  @name DataTable.defaults.column.name\n\t\t\t *  @dtopt Columns\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Using `columnDefs`\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"columnDefs\": [\n\t\t\t *          { \"name\": \"engine\", \"targets\": [ 0 ] },\n\t\t\t *          { \"name\": \"browser\", \"targets\": [ 1 ] },\n\t\t\t *          { \"name\": \"platform\", \"targets\": [ 2 ] },\n\t\t\t *          { \"name\": \"version\", \"targets\": [ 3 ] },\n\t\t\t *          { \"name\": \"grade\", \"targets\": [ 4 ] }\n\t\t\t *        ]\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Using `columns`\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"columns\": [\n\t\t\t *          { \"name\": \"engine\" },\n\t\t\t *          { \"name\": \"browser\" },\n\t\t\t *          { \"name\": \"platform\" },\n\t\t\t *          { \"name\": \"version\" },\n\t\t\t *          { \"name\": \"grade\" }\n\t\t\t *        ]\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sName\": \"\",\n\n\n\t\t\t/**\n\t\t\t * Defines a data source type for the ordering which can be used to read\n\t\t\t * real-time information from the table (updating the internally cached\n\t\t\t * version) prior to ordering. This allows ordering to occur on user\n\t\t\t * editable elements such as form inputs.\n\t\t\t *  @type string\n\t\t\t *  @default std\n\t\t\t *\n\t\t\t *  @name DataTable.defaults.column.orderDataType\n\t\t\t *  @dtopt Columns\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Using `columnDefs`\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"columnDefs\": [\n\t\t\t *          { \"orderDataType\": \"dom-text\", \"targets\": [ 2, 3 ] },\n\t\t\t *          { \"type\": \"numeric\", \"targets\": [ 3 ] },\n\t\t\t *          { \"orderDataType\": \"dom-select\", \"targets\": [ 4 ] },\n\t\t\t *          { \"orderDataType\": \"dom-checkbox\", \"targets\": [ 5 ] }\n\t\t\t *        ]\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Using `columns`\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"columns\": [\n\t\t\t *          null,\n\t\t\t *          null,\n\t\t\t *          { \"orderDataType\": \"dom-text\" },\n\t\t\t *          { \"orderDataType\": \"dom-text\", \"type\": \"numeric\" },\n\t\t\t *          { \"orderDataType\": \"dom-select\" },\n\t\t\t *          { \"orderDataType\": \"dom-checkbox\" }\n\t\t\t *        ]\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sSortDataType\": \"std\",\n\n\n\t\t\t/**\n\t\t\t * The title of this column.\n\t\t\t *  @type string\n\t\t\t *  @default null <i>Derived from the 'TH' value for this column in the\n\t\t\t *    original HTML table.</i>\n\t\t\t *\n\t\t\t *  @name DataTable.defaults.column.title\n\t\t\t *  @dtopt Columns\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Using `columnDefs`\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"columnDefs\": [\n\t\t\t *          { \"title\": \"My column title\", \"targets\": [ 0 ] }\n\t\t\t *        ]\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Using `columns`\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"columns\": [\n\t\t\t *          { \"title\": \"My column title\" },\n\t\t\t *          null,\n\t\t\t *          null,\n\t\t\t *          null,\n\t\t\t *          null\n\t\t\t *        ]\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sTitle\": null,\n\n\n\t\t\t/**\n\t\t\t * The type allows you to specify how the data for this column will be\n\t\t\t * ordered. Four types (string, numeric, date and html (which will strip\n\t\t\t * HTML tags before ordering)) are currently available. Note that only date\n\t\t\t * formats understood by Javascript's Date() object will be accepted as type\n\t\t\t * date. For example: \"Mar 26, 2008 5:03 PM\". May take the values: 'string',\n\t\t\t * 'numeric', 'date' or 'html' (by default). Further types can be adding\n\t\t\t * through plug-ins.\n\t\t\t *  @type string\n\t\t\t *  @default null <i>Auto-detected from raw data</i>\n\t\t\t *\n\t\t\t *  @name DataTable.defaults.column.type\n\t\t\t *  @dtopt Columns\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Using `columnDefs`\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"columnDefs\": [\n\t\t\t *          { \"type\": \"html\", \"targets\": [ 0 ] }\n\t\t\t *        ]\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Using `columns`\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"columns\": [\n\t\t\t *          { \"type\": \"html\" },\n\t\t\t *          null,\n\t\t\t *          null,\n\t\t\t *          null,\n\t\t\t *          null\n\t\t\t *        ]\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sType\": null,\n\n\n\t\t\t/**\n\t\t\t * Defining the width of the column, this parameter may take any CSS value\n\t\t\t * (3em, 20px etc). DataTables applies 'smart' widths to columns which have not\n\t\t\t * been given a specific width through this interface ensuring that the table\n\t\t\t * remains readable.\n\t\t\t *  @type string\n\t\t\t *  @default null <i>Automatic</i>\n\t\t\t *\n\t\t\t *  @name DataTable.defaults.column.width\n\t\t\t *  @dtopt Columns\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Using `columnDefs`\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"columnDefs\": [\n\t\t\t *          { \"width\": \"20%\", \"targets\": [ 0 ] }\n\t\t\t *        ]\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Using `columns`\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"columns\": [\n\t\t\t *          { \"width\": \"20%\" },\n\t\t\t *          null,\n\t\t\t *          null,\n\t\t\t *          null,\n\t\t\t *          null\n\t\t\t *        ]\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sWidth\": null\n\t\t};\n\n\t\t_fnHungarianMap(DataTable.defaults.column);\n\n\n\n\t\t/**\n\t\t * DataTables settings object - this holds all the information needed for a\n\t\t * given table, including configuration, data and current application of the\n\t\t * table options. DataTables does not have a single instance for each DataTable\n\t\t * with the settings attached to that instance, but rather instances of the\n\t\t * DataTable \"class\" are created on-the-fly as needed (typically by a\n\t\t * $().dataTable() call) and the settings object is then applied to that\n\t\t * instance.\n\t\t *\n\t\t * Note that this object is related to {@link DataTable.defaults} but this\n\t\t * one is the internal data store for DataTables's cache of columns. It should\n\t\t * NOT be manipulated outside of DataTables. Any configuration should be done\n\t\t * through the initialisation options.\n\t\t *  @namespace\n\t\t *  @todo Really should attach the settings object to individual instances so we\n\t\t *    don't need to create new instances on each $().dataTable() call (if the\n\t\t *    table already exists). It would also save passing oSettings around and\n\t\t *    into every single function. However, this is a very significant\n\t\t *    architecture change for DataTables and will almost certainly break\n\t\t *    backwards compatibility with older installations. This is something that\n\t\t *    will be done in 2.0.\n\t\t */\n\t\tDataTable.models.oSettings = {\n\t\t\t/**\n\t\t\t * Primary features of DataTables and their enablement state.\n\t\t\t *  @namespace\n\t\t\t */\n\t\t\t\"oFeatures\": {\n\n\t\t\t\t/**\n\t\t\t\t * Flag to say if DataTables should automatically try to calculate the\n\t\t\t\t * optimum table and columns widths (true) or not (false).\n\t\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t\t *  @type boolean\n\t\t\t\t */\n\t\t\t\t\"bAutoWidth\": null,\n\n\t\t\t\t/**\n\t\t\t\t * Delay the creation of TR and TD elements until they are actually\n\t\t\t\t * needed by a driven page draw. This can give a significant speed\n\t\t\t\t * increase for Ajax source and Javascript source data, but makes no\n\t\t\t\t * difference at all fro DOM and server-side processing tables.\n\t\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t\t *  @type boolean\n\t\t\t\t */\n\t\t\t\t\"bDeferRender\": null,\n\n\t\t\t\t/**\n\t\t\t\t * Enable filtering on the table or not. Note that if this is disabled\n\t\t\t\t * then there is no filtering at all on the table, including fnFilter.\n\t\t\t\t * To just remove the filtering input use sDom and remove the 'f' option.\n\t\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t\t *  @type boolean\n\t\t\t\t */\n\t\t\t\t\"bFilter\": null,\n\n\t\t\t\t/**\n\t\t\t\t * Table information element (the 'Showing x of y records' div) enable\n\t\t\t\t * flag.\n\t\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t\t *  @type boolean\n\t\t\t\t */\n\t\t\t\t\"bInfo\": null,\n\n\t\t\t\t/**\n\t\t\t\t * Present a user control allowing the end user to change the page size\n\t\t\t\t * when pagination is enabled.\n\t\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t\t *  @type boolean\n\t\t\t\t */\n\t\t\t\t\"bLengthChange\": null,\n\n\t\t\t\t/**\n\t\t\t\t * Pagination enabled or not. Note that if this is disabled then length\n\t\t\t\t * changing must also be disabled.\n\t\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t\t *  @type boolean\n\t\t\t\t */\n\t\t\t\t\"bPaginate\": null,\n\n\t\t\t\t/**\n\t\t\t\t * Processing indicator enable flag whenever DataTables is enacting a\n\t\t\t\t * user request - typically an Ajax request for server-side processing.\n\t\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t\t *  @type boolean\n\t\t\t\t */\n\t\t\t\t\"bProcessing\": null,\n\n\t\t\t\t/**\n\t\t\t\t * Server-side processing enabled flag - when enabled DataTables will\n\t\t\t\t * get all data from the server for every draw - there is no filtering,\n\t\t\t\t * sorting or paging done on the client-side.\n\t\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t\t *  @type boolean\n\t\t\t\t */\n\t\t\t\t\"bServerSide\": null,\n\n\t\t\t\t/**\n\t\t\t\t * Sorting enablement flag.\n\t\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t\t *  @type boolean\n\t\t\t\t */\n\t\t\t\t\"bSort\": null,\n\n\t\t\t\t/**\n\t\t\t\t * Multi-column sorting\n\t\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t\t *  @type boolean\n\t\t\t\t */\n\t\t\t\t\"bSortMulti\": null,\n\n\t\t\t\t/**\n\t\t\t\t * Apply a class to the columns which are being sorted to provide a\n\t\t\t\t * visual highlight or not. This can slow things down when enabled since\n\t\t\t\t * there is a lot of DOM interaction.\n\t\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t\t *  @type boolean\n\t\t\t\t */\n\t\t\t\t\"bSortClasses\": null,\n\n\t\t\t\t/**\n\t\t\t\t * State saving enablement flag.\n\t\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t\t *  @type boolean\n\t\t\t\t */\n\t\t\t\t\"bStateSave\": null\n\t\t\t},\n\n\n\t\t\t/**\n\t\t\t * Scrolling settings for a table.\n\t\t\t *  @namespace\n\t\t\t */\n\t\t\t\"oScroll\": {\n\t\t\t\t/**\n\t\t\t\t * When the table is shorter in height than sScrollY, collapse the\n\t\t\t\t * table container down to the height of the table (when true).\n\t\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t\t *  @type boolean\n\t\t\t\t */\n\t\t\t\t\"bCollapse\": null,\n\n\t\t\t\t/**\n\t\t\t\t * Width of the scrollbar for the web-browser's platform. Calculated\n\t\t\t\t * during table initialisation.\n\t\t\t\t *  @type int\n\t\t\t\t *  @default 0\n\t\t\t\t */\n\t\t\t\t\"iBarWidth\": 0,\n\n\t\t\t\t/**\n\t\t\t\t * Viewport width for horizontal scrolling. Horizontal scrolling is\n\t\t\t\t * disabled if an empty string.\n\t\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t\t *  @type string\n\t\t\t\t */\n\t\t\t\t\"sX\": null,\n\n\t\t\t\t/**\n\t\t\t\t * Width to expand the table to when using x-scrolling. Typically you\n\t\t\t\t * should not need to use this.\n\t\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t\t *  @type string\n\t\t\t\t *  @deprecated\n\t\t\t\t */\n\t\t\t\t\"sXInner\": null,\n\n\t\t\t\t/**\n\t\t\t\t * Viewport height for vertical scrolling. Vertical scrolling is disabled\n\t\t\t\t * if an empty string.\n\t\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t\t *  @type string\n\t\t\t\t */\n\t\t\t\t\"sY\": null\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Language information for the table.\n\t\t\t *  @namespace\n\t\t\t *  @extends DataTable.defaults.oLanguage\n\t\t\t */\n\t\t\t\"oLanguage\": {\n\t\t\t\t/**\n\t\t\t\t * Information callback function. See\n\t\t\t\t * {@link DataTable.defaults.fnInfoCallback}\n\t\t\t\t *  @type function\n\t\t\t\t *  @default null\n\t\t\t\t */\n\t\t\t\t\"fnInfoCallback\": null\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Browser support parameters\n\t\t\t *  @namespace\n\t\t\t */\n\t\t\t\"oBrowser\": {\n\t\t\t\t/**\n\t\t\t\t * Indicate if the browser incorrectly calculates width:100% inside a\n\t\t\t\t * scrolling element (IE6/7)\n\t\t\t\t *  @type boolean\n\t\t\t\t *  @default false\n\t\t\t\t */\n\t\t\t\t\"bScrollOversize\": false,\n\n\t\t\t\t/**\n\t\t\t\t * Determine if the vertical scrollbar is on the right or left of the\n\t\t\t\t * scrolling container - needed for rtl language layout, although not\n\t\t\t\t * all browsers move the scrollbar (Safari).\n\t\t\t\t *  @type boolean\n\t\t\t\t *  @default false\n\t\t\t\t */\n\t\t\t\t\"bScrollbarLeft\": false,\n\n\t\t\t\t/**\n\t\t\t\t * Flag for if `getBoundingClientRect` is fully supported or not\n\t\t\t\t *  @type boolean\n\t\t\t\t *  @default false\n\t\t\t\t */\n\t\t\t\t\"bBounding\": false,\n\n\t\t\t\t/**\n\t\t\t\t * Browser scrollbar width\n\t\t\t\t *  @type integer\n\t\t\t\t *  @default 0\n\t\t\t\t */\n\t\t\t\t\"barWidth\": 0\n\t\t\t},\n\n\n\t\t\t\"ajax\": null,\n\n\n\t\t\t/**\n\t\t\t * Array referencing the nodes which are used for the features. The\n\t\t\t * parameters of this object match what is allowed by sDom - i.e.\n\t\t\t *   <ul>\n\t\t\t *     <li>'l' - Length changing</li>\n\t\t\t *     <li>'f' - Filtering input</li>\n\t\t\t *     <li>'t' - The table!</li>\n\t\t\t *     <li>'i' - Information</li>\n\t\t\t *     <li>'p' - Pagination</li>\n\t\t\t *     <li>'r' - pRocessing</li>\n\t\t\t *   </ul>\n\t\t\t *  @type array\n\t\t\t *  @default []\n\t\t\t */\n\t\t\t\"aanFeatures\": [],\n\n\t\t\t/**\n\t\t\t * Store data information - see {@link DataTable.models.oRow} for detailed\n\t\t\t * information.\n\t\t\t *  @type array\n\t\t\t *  @default []\n\t\t\t */\n\t\t\t\"aoData\": [],\n\n\t\t\t/**\n\t\t\t * Array of indexes which are in the current display (after filtering etc)\n\t\t\t *  @type array\n\t\t\t *  @default []\n\t\t\t */\n\t\t\t\"aiDisplay\": [],\n\n\t\t\t/**\n\t\t\t * Array of indexes for display - no filtering\n\t\t\t *  @type array\n\t\t\t *  @default []\n\t\t\t */\n\t\t\t\"aiDisplayMaster\": [],\n\n\t\t\t/**\n\t\t\t * Map of row ids to data indexes\n\t\t\t *  @type object\n\t\t\t *  @default {}\n\t\t\t */\n\t\t\t\"aIds\": {},\n\n\t\t\t/**\n\t\t\t * Store information about each column that is in use\n\t\t\t *  @type array\n\t\t\t *  @default []\n\t\t\t */\n\t\t\t\"aoColumns\": [],\n\n\t\t\t/**\n\t\t\t * Store information about the table's header\n\t\t\t *  @type array\n\t\t\t *  @default []\n\t\t\t */\n\t\t\t\"aoHeader\": [],\n\n\t\t\t/**\n\t\t\t * Store information about the table's footer\n\t\t\t *  @type array\n\t\t\t *  @default []\n\t\t\t */\n\t\t\t\"aoFooter\": [],\n\n\t\t\t/**\n\t\t\t * Store the applied global search information in case we want to force a\n\t\t\t * research or compare the old search to a new one.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @namespace\n\t\t\t *  @extends DataTable.models.oSearch\n\t\t\t */\n\t\t\t\"oPreviousSearch\": {},\n\n\t\t\t/**\n\t\t\t * Store the applied search for each column - see\n\t\t\t * {@link DataTable.models.oSearch} for the format that is used for the\n\t\t\t * filtering information for each column.\n\t\t\t *  @type array\n\t\t\t *  @default []\n\t\t\t */\n\t\t\t\"aoPreSearchCols\": [],\n\n\t\t\t/**\n\t\t\t * Sorting that is applied to the table. Note that the inner arrays are\n\t\t\t * used in the following manner:\n\t\t\t * <ul>\n\t\t\t *   <li>Index 0 - column number</li>\n\t\t\t *   <li>Index 1 - current sorting direction</li>\n\t\t\t * </ul>\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type array\n\t\t\t *  @todo These inner arrays should really be objects\n\t\t\t */\n\t\t\t\"aaSorting\": null,\n\n\t\t\t/**\n\t\t\t * Sorting that is always applied to the table (i.e. prefixed in front of\n\t\t\t * aaSorting).\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type array\n\t\t\t *  @default []\n\t\t\t */\n\t\t\t\"aaSortingFixed\": [],\n\n\t\t\t/**\n\t\t\t * Classes to use for the striping of a table.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type array\n\t\t\t *  @default []\n\t\t\t */\n\t\t\t\"asStripeClasses\": null,\n\n\t\t\t/**\n\t\t\t * If restoring a table - we should restore its striping classes as well\n\t\t\t *  @type array\n\t\t\t *  @default []\n\t\t\t */\n\t\t\t\"asDestroyStripes\": [],\n\n\t\t\t/**\n\t\t\t * If restoring a table - we should restore its width\n\t\t\t *  @type int\n\t\t\t *  @default 0\n\t\t\t */\n\t\t\t\"sDestroyWidth\": 0,\n\n\t\t\t/**\n\t\t\t * Callback functions array for every time a row is inserted (i.e. on a draw).\n\t\t\t *  @type array\n\t\t\t *  @default []\n\t\t\t */\n\t\t\t\"aoRowCallback\": [],\n\n\t\t\t/**\n\t\t\t * Callback functions for the header on each draw.\n\t\t\t *  @type array\n\t\t\t *  @default []\n\t\t\t */\n\t\t\t\"aoHeaderCallback\": [],\n\n\t\t\t/**\n\t\t\t * Callback function for the footer on each draw.\n\t\t\t *  @type array\n\t\t\t *  @default []\n\t\t\t */\n\t\t\t\"aoFooterCallback\": [],\n\n\t\t\t/**\n\t\t\t * Array of callback functions for draw callback functions\n\t\t\t *  @type array\n\t\t\t *  @default []\n\t\t\t */\n\t\t\t\"aoDrawCallback\": [],\n\n\t\t\t/**\n\t\t\t * Array of callback functions for row created function\n\t\t\t *  @type array\n\t\t\t *  @default []\n\t\t\t */\n\t\t\t\"aoRowCreatedCallback\": [],\n\n\t\t\t/**\n\t\t\t * Callback functions for just before the table is redrawn. A return of\n\t\t\t * false will be used to cancel the draw.\n\t\t\t *  @type array\n\t\t\t *  @default []\n\t\t\t */\n\t\t\t\"aoPreDrawCallback\": [],\n\n\t\t\t/**\n\t\t\t * Callback functions for when the table has been initialised.\n\t\t\t *  @type array\n\t\t\t *  @default []\n\t\t\t */\n\t\t\t\"aoInitComplete\": [],\n\n\n\t\t\t/**\n\t\t\t * Callbacks for modifying the settings to be stored for state saving, prior to\n\t\t\t * saving state.\n\t\t\t *  @type array\n\t\t\t *  @default []\n\t\t\t */\n\t\t\t\"aoStateSaveParams\": [],\n\n\t\t\t/**\n\t\t\t * Callbacks for modifying the settings that have been stored for state saving\n\t\t\t * prior to using the stored values to restore the state.\n\t\t\t *  @type array\n\t\t\t *  @default []\n\t\t\t */\n\t\t\t\"aoStateLoadParams\": [],\n\n\t\t\t/**\n\t\t\t * Callbacks for operating on the settings object once the saved state has been\n\t\t\t * loaded\n\t\t\t *  @type array\n\t\t\t *  @default []\n\t\t\t */\n\t\t\t\"aoStateLoaded\": [],\n\n\t\t\t/**\n\t\t\t * Cache the table ID for quick access\n\t\t\t *  @type string\n\t\t\t *  @default <i>Empty string</i>\n\t\t\t */\n\t\t\t\"sTableId\": \"\",\n\n\t\t\t/**\n\t\t\t * The TABLE node for the main table\n\t\t\t *  @type node\n\t\t\t *  @default null\n\t\t\t */\n\t\t\t\"nTable\": null,\n\n\t\t\t/**\n\t\t\t * Permanent ref to the thead element\n\t\t\t *  @type node\n\t\t\t *  @default null\n\t\t\t */\n\t\t\t\"nTHead\": null,\n\n\t\t\t/**\n\t\t\t * Permanent ref to the tfoot element - if it exists\n\t\t\t *  @type node\n\t\t\t *  @default null\n\t\t\t */\n\t\t\t\"nTFoot\": null,\n\n\t\t\t/**\n\t\t\t * Permanent ref to the tbody element\n\t\t\t *  @type node\n\t\t\t *  @default null\n\t\t\t */\n\t\t\t\"nTBody\": null,\n\n\t\t\t/**\n\t\t\t * Cache the wrapper node (contains all DataTables controlled elements)\n\t\t\t *  @type node\n\t\t\t *  @default null\n\t\t\t */\n\t\t\t\"nTableWrapper\": null,\n\n\t\t\t/**\n\t\t\t * Indicate if when using server-side processing the loading of data\n\t\t\t * should be deferred until the second draw.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t *  @default false\n\t\t\t */\n\t\t\t\"bDeferLoading\": false,\n\n\t\t\t/**\n\t\t\t * Indicate if all required information has been read in\n\t\t\t *  @type boolean\n\t\t\t *  @default false\n\t\t\t */\n\t\t\t\"bInitialised\": false,\n\n\t\t\t/**\n\t\t\t * Information about open rows. Each object in the array has the parameters\n\t\t\t * 'nTr' and 'nParent'\n\t\t\t *  @type array\n\t\t\t *  @default []\n\t\t\t */\n\t\t\t\"aoOpenRows\": [],\n\n\t\t\t/**\n\t\t\t * Dictate the positioning of DataTables' control elements - see\n\t\t\t * {@link DataTable.model.oInit.sDom}.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type string\n\t\t\t *  @default null\n\t\t\t */\n\t\t\t\"sDom\": null,\n\n\t\t\t/**\n\t\t\t * Search delay (in mS)\n\t\t\t *  @type integer\n\t\t\t *  @default null\n\t\t\t */\n\t\t\t\"searchDelay\": null,\n\n\t\t\t/**\n\t\t\t * Which type of pagination should be used.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type string\n\t\t\t *  @default two_button\n\t\t\t */\n\t\t\t\"sPaginationType\": \"two_button\",\n\n\t\t\t/**\n\t\t\t * The state duration (for `stateSave`) in seconds.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type int\n\t\t\t *  @default 0\n\t\t\t */\n\t\t\t\"iStateDuration\": 0,\n\n\t\t\t/**\n\t\t\t * Array of callback functions for state saving. Each array element is an\n\t\t\t * object with the following parameters:\n\t\t\t *   <ul>\n\t\t\t *     <li>function:fn - function to call. Takes two parameters, oSettings\n\t\t\t *       and the JSON string to save that has been thus far created. Returns\n\t\t\t *       a JSON string to be inserted into a json object\n\t\t\t *       (i.e. '\"param\": [ 0, 1, 2]')</li>\n\t\t\t *     <li>string:sName - name of callback</li>\n\t\t\t *   </ul>\n\t\t\t *  @type array\n\t\t\t *  @default []\n\t\t\t */\n\t\t\t\"aoStateSave\": [],\n\n\t\t\t/**\n\t\t\t * Array of callback functions for state loading. Each array element is an\n\t\t\t * object with the following parameters:\n\t\t\t *   <ul>\n\t\t\t *     <li>function:fn - function to call. Takes two parameters, oSettings\n\t\t\t *       and the object stored. May return false to cancel state loading</li>\n\t\t\t *     <li>string:sName - name of callback</li>\n\t\t\t *   </ul>\n\t\t\t *  @type array\n\t\t\t *  @default []\n\t\t\t */\n\t\t\t\"aoStateLoad\": [],\n\n\t\t\t/**\n\t\t\t * State that was saved. Useful for back reference\n\t\t\t *  @type object\n\t\t\t *  @default null\n\t\t\t */\n\t\t\t\"oSavedState\": null,\n\n\t\t\t/**\n\t\t\t * State that was loaded. Useful for back reference\n\t\t\t *  @type object\n\t\t\t *  @default null\n\t\t\t */\n\t\t\t\"oLoadedState\": null,\n\n\t\t\t/**\n\t\t\t * Source url for AJAX data for the table.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type string\n\t\t\t *  @default null\n\t\t\t */\n\t\t\t\"sAjaxSource\": null,\n\n\t\t\t/**\n\t\t\t * Property from a given object from which to read the table data from. This\n\t\t\t * can be an empty string (when not server-side processing), in which case\n\t\t\t * it is  assumed an an array is given directly.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type string\n\t\t\t */\n\t\t\t\"sAjaxDataProp\": null,\n\n\t\t\t/**\n\t\t\t * Note if draw should be blocked while getting data\n\t\t\t *  @type boolean\n\t\t\t *  @default true\n\t\t\t */\n\t\t\t\"bAjaxDataGet\": true,\n\n\t\t\t/**\n\t\t\t * The last jQuery XHR object that was used for server-side data gathering.\n\t\t\t * This can be used for working with the XHR information in one of the\n\t\t\t * callbacks\n\t\t\t *  @type object\n\t\t\t *  @default null\n\t\t\t */\n\t\t\t\"jqXHR\": null,\n\n\t\t\t/**\n\t\t\t * JSON returned from the server in the last Ajax request\n\t\t\t *  @type object\n\t\t\t *  @default undefined\n\t\t\t */\n\t\t\t\"json\": undefined,\n\n\t\t\t/**\n\t\t\t * Data submitted as part of the last Ajax request\n\t\t\t *  @type object\n\t\t\t *  @default undefined\n\t\t\t */\n\t\t\t\"oAjaxData\": undefined,\n\n\t\t\t/**\n\t\t\t * Function to get the server-side data.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type function\n\t\t\t */\n\t\t\t\"fnServerData\": null,\n\n\t\t\t/**\n\t\t\t * Functions which are called prior to sending an Ajax request so extra\n\t\t\t * parameters can easily be sent to the server\n\t\t\t *  @type array\n\t\t\t *  @default []\n\t\t\t */\n\t\t\t\"aoServerParams\": [],\n\n\t\t\t/**\n\t\t\t * Send the XHR HTTP method - GET or POST (could be PUT or DELETE if\n\t\t\t * required).\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type string\n\t\t\t */\n\t\t\t\"sServerMethod\": null,\n\n\t\t\t/**\n\t\t\t * Format numbers for display.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type function\n\t\t\t */\n\t\t\t\"fnFormatNumber\": null,\n\n\t\t\t/**\n\t\t\t * List of options that can be used for the user selectable length menu.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type array\n\t\t\t *  @default []\n\t\t\t */\n\t\t\t\"aLengthMenu\": null,\n\n\t\t\t/**\n\t\t\t * Counter for the draws that the table does. Also used as a tracker for\n\t\t\t * server-side processing\n\t\t\t *  @type int\n\t\t\t *  @default 0\n\t\t\t */\n\t\t\t\"iDraw\": 0,\n\n\t\t\t/**\n\t\t\t * Indicate if a redraw is being done - useful for Ajax\n\t\t\t *  @type boolean\n\t\t\t *  @default false\n\t\t\t */\n\t\t\t\"bDrawing\": false,\n\n\t\t\t/**\n\t\t\t * Draw index (iDraw) of the last error when parsing the returned data\n\t\t\t *  @type int\n\t\t\t *  @default -1\n\t\t\t */\n\t\t\t\"iDrawError\": -1,\n\n\t\t\t/**\n\t\t\t * Paging display length\n\t\t\t *  @type int\n\t\t\t *  @default 10\n\t\t\t */\n\t\t\t\"_iDisplayLength\": 10,\n\n\t\t\t/**\n\t\t\t * Paging start point - aiDisplay index\n\t\t\t *  @type int\n\t\t\t *  @default 0\n\t\t\t */\n\t\t\t\"_iDisplayStart\": 0,\n\n\t\t\t/**\n\t\t\t * Server-side processing - number of records in the result set\n\t\t\t * (i.e. before filtering), Use fnRecordsTotal rather than\n\t\t\t * this property to get the value of the number of records, regardless of\n\t\t\t * the server-side processing setting.\n\t\t\t *  @type int\n\t\t\t *  @default 0\n\t\t\t *  @private\n\t\t\t */\n\t\t\t\"_iRecordsTotal\": 0,\n\n\t\t\t/**\n\t\t\t * Server-side processing - number of records in the current display set\n\t\t\t * (i.e. after filtering). Use fnRecordsDisplay rather than\n\t\t\t * this property to get the value of the number of records, regardless of\n\t\t\t * the server-side processing setting.\n\t\t\t *  @type boolean\n\t\t\t *  @default 0\n\t\t\t *  @private\n\t\t\t */\n\t\t\t\"_iRecordsDisplay\": 0,\n\n\t\t\t/**\n\t\t\t * Flag to indicate if jQuery UI marking and classes should be used.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bJUI\": null,\n\n\t\t\t/**\n\t\t\t * The classes to use for the table\n\t\t\t *  @type object\n\t\t\t *  @default {}\n\t\t\t */\n\t\t\t\"oClasses\": {},\n\n\t\t\t/**\n\t\t\t * Flag attached to the settings object so you can check in the draw\n\t\t\t * callback if filtering has been done in the draw. Deprecated in favour of\n\t\t\t * events.\n\t\t\t *  @type boolean\n\t\t\t *  @default false\n\t\t\t *  @deprecated\n\t\t\t */\n\t\t\t\"bFiltered\": false,\n\n\t\t\t/**\n\t\t\t * Flag attached to the settings object so you can check in the draw\n\t\t\t * callback if sorting has been done in the draw. Deprecated in favour of\n\t\t\t * events.\n\t\t\t *  @type boolean\n\t\t\t *  @default false\n\t\t\t *  @deprecated\n\t\t\t */\n\t\t\t\"bSorted\": false,\n\n\t\t\t/**\n\t\t\t * Indicate that if multiple rows are in the header and there is more than\n\t\t\t * one unique cell per column, if the top one (true) or bottom one (false)\n\t\t\t * should be used for sorting / title by DataTables.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bSortCellsTop\": null,\n\n\t\t\t/**\n\t\t\t * Initialisation object that is used for the table\n\t\t\t *  @type object\n\t\t\t *  @default null\n\t\t\t */\n\t\t\t\"oInit\": null,\n\n\t\t\t/**\n\t\t\t * Destroy callback functions - for plug-ins to attach themselves to the\n\t\t\t * destroy so they can clean up markup and events.\n\t\t\t *  @type array\n\t\t\t *  @default []\n\t\t\t */\n\t\t\t\"aoDestroyCallback\": [],\n\n\n\t\t\t/**\n\t\t\t * Get the number of records in the current record set, before filtering\n\t\t\t *  @type function\n\t\t\t */\n\t\t\t\"fnRecordsTotal\": function () {\n\t\t\t\treturn _fnDataSource(this) == 'ssp' ?\n\t\t\t\t\tthis._iRecordsTotal * 1 :\n\t\t\t\t\tthis.aiDisplayMaster.length;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Get the number of records in the current record set, after filtering\n\t\t\t *  @type function\n\t\t\t */\n\t\t\t\"fnRecordsDisplay\": function () {\n\t\t\t\treturn _fnDataSource(this) == 'ssp' ?\n\t\t\t\t\tthis._iRecordsDisplay * 1 :\n\t\t\t\t\tthis.aiDisplay.length;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Get the display end point - aiDisplay index\n\t\t\t *  @type function\n\t\t\t */\n\t\t\t\"fnDisplayEnd\": function () {\n\t\t\t\tvar\n\t\t\t\t\tlen = this._iDisplayLength,\n\t\t\t\t\tstart = this._iDisplayStart,\n\t\t\t\t\tcalc = start + len,\n\t\t\t\t\trecords = this.aiDisplay.length,\n\t\t\t\t\tfeatures = this.oFeatures,\n\t\t\t\t\tpaginate = features.bPaginate;\n\n\t\t\t\tif (features.bServerSide) {\n\t\t\t\t\treturn paginate === false || len === -1 ?\n\t\t\t\t\t\tstart + records :\n\t\t\t\t\t\tMath.min(start + len, this._iRecordsDisplay);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn !paginate || calc > records || len === -1 ?\n\t\t\t\t\t\trecords :\n\t\t\t\t\t\tcalc;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * The DataTables object for this table\n\t\t\t *  @type object\n\t\t\t *  @default null\n\t\t\t */\n\t\t\t\"oInstance\": null,\n\n\t\t\t/**\n\t\t\t * Unique identifier for each instance of the DataTables object. If there\n\t\t\t * is an ID on the table node, then it takes that value, otherwise an\n\t\t\t * incrementing internal counter is used.\n\t\t\t *  @type string\n\t\t\t *  @default null\n\t\t\t */\n\t\t\t\"sInstance\": null,\n\n\t\t\t/**\n\t\t\t * tabindex attribute value that is added to DataTables control elements, allowing\n\t\t\t * keyboard navigation of the table and its controls.\n\t\t\t */\n\t\t\t\"iTabIndex\": 0,\n\n\t\t\t/**\n\t\t\t * DIV container for the footer scrolling table if scrolling\n\t\t\t */\n\t\t\t\"nScrollHead\": null,\n\n\t\t\t/**\n\t\t\t * DIV container for the footer scrolling table if scrolling\n\t\t\t */\n\t\t\t\"nScrollFoot\": null,\n\n\t\t\t/**\n\t\t\t * Last applied sort\n\t\t\t *  @type array\n\t\t\t *  @default []\n\t\t\t */\n\t\t\t\"aLastSort\": [],\n\n\t\t\t/**\n\t\t\t * Stored plug-in instances\n\t\t\t *  @type object\n\t\t\t *  @default {}\n\t\t\t */\n\t\t\t\"oPlugins\": {},\n\n\t\t\t/**\n\t\t\t * Function used to get a row's id from the row's data\n\t\t\t *  @type function\n\t\t\t *  @default null\n\t\t\t */\n\t\t\t\"rowIdFn\": null,\n\n\t\t\t/**\n\t\t\t * Data location where to store a row's id\n\t\t\t *  @type string\n\t\t\t *  @default null\n\t\t\t */\n\t\t\t\"rowId\": null\n\t\t};\n\n\t\t/**\n\t\t * Extension object for DataTables that is used to provide all extension\n\t\t * options.\n\t\t *\n\t\t * Note that the `DataTable.ext` object is available through\n\t\t * `jQuery.fn.dataTable.ext` where it may be accessed and manipulated. It is\n\t\t * also aliased to `jQuery.fn.dataTableExt` for historic reasons.\n\t\t *  @namespace\n\t\t *  @extends DataTable.models.ext\n\t\t */\n\n\n\t\t/**\n\t\t * DataTables extensions\n\t\t *\n\t\t * This namespace acts as a collection area for plug-ins that can be used to\n\t\t * extend DataTables capabilities. Indeed many of the build in methods\n\t\t * use this method to provide their own capabilities (sorting methods for\n\t\t * example).\n\t\t *\n\t\t * Note that this namespace is aliased to `jQuery.fn.dataTableExt` for legacy\n\t\t * reasons\n\t\t *\n\t\t *  @namespace\n\t\t */\n\t\tDataTable.ext = _ext = {\n\t\t\t/**\n\t\t\t * Buttons. For use with the Buttons extension for DataTables. This is\n\t\t\t * defined here so other extensions can define buttons regardless of load\n\t\t\t * order. It is _not_ used by DataTables core.\n\t\t\t *\n\t\t\t *  @type object\n\t\t\t *  @default {}\n\t\t\t */\n\t\t\tbuttons: {},\n\n\n\t\t\t/**\n\t\t\t * Element class names\n\t\t\t *\n\t\t\t *  @type object\n\t\t\t *  @default {}\n\t\t\t */\n\t\t\tclasses: {},\n\n\n\t\t\t/**\n\t\t\t * DataTables build type (expanded by the download builder)\n\t\t\t *\n\t\t\t *  @type string\n\t\t\t */\n\t\t\tbuilder: \"-source-\",\n\n\n\t\t\t/**\n\t\t\t * Error reporting.\n\t\t\t *\n\t\t\t * How should DataTables report an error. Can take the value 'alert',\n\t\t\t * 'throw', 'none' or a function.\n\t\t\t *\n\t\t\t *  @type string|function\n\t\t\t *  @default alert\n\t\t\t */\n\t\t\terrMode: \"alert\",\n\n\n\t\t\t/**\n\t\t\t * Feature plug-ins.\n\t\t\t *\n\t\t\t * This is an array of objects which describe the feature plug-ins that are\n\t\t\t * available to DataTables. These feature plug-ins are then available for\n\t\t\t * use through the `dom` initialisation option.\n\t\t\t *\n\t\t\t * Each feature plug-in is described by an object which must have the\n\t\t\t * following properties:\n\t\t\t *\n\t\t\t * * `fnInit` - function that is used to initialise the plug-in,\n\t\t\t * * `cFeature` - a character so the feature can be enabled by the `dom`\n\t\t\t *   instillation option. This is case sensitive.\n\t\t\t *\n\t\t\t * The `fnInit` function has the following input parameters:\n\t\t\t *\n\t\t\t * 1. `{object}` DataTables settings object: see\n\t\t\t *    {@link DataTable.models.oSettings}\n\t\t\t *\n\t\t\t * And the following return is expected:\n\t\t\t *\n\t\t\t * * {node|null} The element which contains your feature. Note that the\n\t\t\t *   return may also be void if your plug-in does not require to inject any\n\t\t\t *   DOM elements into DataTables control (`dom`) - for example this might\n\t\t\t *   be useful when developing a plug-in which allows table control via\n\t\t\t *   keyboard entry\n\t\t\t *\n\t\t\t *  @type array\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $.fn.dataTable.ext.features.push( {\n\t\t\t *      \"fnInit\": function( oSettings ) {\n\t\t\t *        return new TableTools( { \"oDTSettings\": oSettings } );\n\t\t\t *      },\n\t\t\t *      \"cFeature\": \"T\"\n\t\t\t *    } );\n\t\t\t */\n\t\t\tfeature: [],\n\n\n\t\t\t/**\n\t\t\t * Row searching.\n\t\t\t *\n\t\t\t * This method of searching is complimentary to the default type based\n\t\t\t * searching, and a lot more comprehensive as it allows you complete control\n\t\t\t * over the searching logic. Each element in this array is a function\n\t\t\t * (parameters described below) that is called for every row in the table,\n\t\t\t * and your logic decides if it should be included in the searching data set\n\t\t\t * or not.\n\t\t\t *\n\t\t\t * Searching functions have the following input parameters:\n\t\t\t *\n\t\t\t * 1. `{object}` DataTables settings object: see\n\t\t\t *    {@link DataTable.models.oSettings}\n\t\t\t * 2. `{array|object}` Data for the row to be processed (same as the\n\t\t\t *    original format that was passed in as the data source, or an array\n\t\t\t *    from a DOM data source\n\t\t\t * 3. `{int}` Row index ({@link DataTable.models.oSettings.aoData}), which\n\t\t\t *    can be useful to retrieve the `TR` element if you need DOM interaction.\n\t\t\t *\n\t\t\t * And the following return is expected:\n\t\t\t *\n\t\t\t * * {boolean} Include the row in the searched result set (true) or not\n\t\t\t *   (false)\n\t\t\t *\n\t\t\t * Note that as with the main search ability in DataTables, technically this\n\t\t\t * is \"filtering\", since it is subtractive. However, for consistency in\n\t\t\t * naming we call it searching here.\n\t\t\t *\n\t\t\t *  @type array\n\t\t\t *  @default []\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // The following example shows custom search being applied to the\n\t\t\t *    // fourth column (i.e. the data[3] index) based on two input values\n\t\t\t *    // from the end-user, matching the data in a certain range.\n\t\t\t *    $.fn.dataTable.ext.search.push(\n\t\t\t *      function( settings, data, dataIndex ) {\n\t\t\t *        var min = document.getElementById('min').value * 1;\n\t\t\t *        var max = document.getElementById('max').value * 1;\n\t\t\t *        var version = data[3] == \"-\" ? 0 : data[3]*1;\n\t\t\t *\n\t\t\t *        if ( min == \"\" && max == \"\" ) {\n\t\t\t *          return true;\n\t\t\t *        }\n\t\t\t *        else if ( min == \"\" && version < max ) {\n\t\t\t *          return true;\n\t\t\t *        }\n\t\t\t *        else if ( min < version && \"\" == max ) {\n\t\t\t *          return true;\n\t\t\t *        }\n\t\t\t *        else if ( min < version && version < max ) {\n\t\t\t *          return true;\n\t\t\t *        }\n\t\t\t *        return false;\n\t\t\t *      }\n\t\t\t *    );\n\t\t\t */\n\t\t\tsearch: [],\n\n\n\t\t\t/**\n\t\t\t * Selector extensions\n\t\t\t *\n\t\t\t * The `selector` option can be used to extend the options available for the\n\t\t\t * selector modifier options (`selector-modifier` object data type) that\n\t\t\t * each of the three built in selector types offer (row, column and cell +\n\t\t\t * their plural counterparts). For example the Select extension uses this\n\t\t\t * mechanism to provide an option to select only rows, columns and cells\n\t\t\t * that have been marked as selected by the end user (`{selected: true}`),\n\t\t\t * which can be used in conjunction with the existing built in selector\n\t\t\t * options.\n\t\t\t *\n\t\t\t * Each property is an array to which functions can be pushed. The functions\n\t\t\t * take three attributes:\n\t\t\t *\n\t\t\t * * Settings object for the host table\n\t\t\t * * Options object (`selector-modifier` object type)\n\t\t\t * * Array of selected item indexes\n\t\t\t *\n\t\t\t * The return is an array of the resulting item indexes after the custom\n\t\t\t * selector has been applied.\n\t\t\t *\n\t\t\t *  @type object\n\t\t\t */\n\t\t\tselector: {\n\t\t\t\tcell: [],\n\t\t\t\tcolumn: [],\n\t\t\t\trow: []\n\t\t\t},\n\n\n\t\t\t/**\n\t\t\t * Internal functions, exposed for used in plug-ins.\n\t\t\t *\n\t\t\t * Please note that you should not need to use the internal methods for\n\t\t\t * anything other than a plug-in (and even then, try to avoid if possible).\n\t\t\t * The internal function may change between releases.\n\t\t\t *\n\t\t\t *  @type object\n\t\t\t *  @default {}\n\t\t\t */\n\t\t\tinternal: {},\n\n\n\t\t\t/**\n\t\t\t * Legacy configuration options. Enable and disable legacy options that\n\t\t\t * are available in DataTables.\n\t\t\t *\n\t\t\t *  @type object\n\t\t\t */\n\t\t\tlegacy: {\n\t\t\t\t/**\n\t\t\t\t * Enable / disable DataTables 1.9 compatible server-side processing\n\t\t\t\t * requests\n\t\t\t\t *\n\t\t\t\t *  @type boolean\n\t\t\t\t *  @default null\n\t\t\t\t */\n\t\t\t\tajax: null\n\t\t\t},\n\n\n\t\t\t/**\n\t\t\t * Pagination plug-in methods.\n\t\t\t *\n\t\t\t * Each entry in this object is a function and defines which buttons should\n\t\t\t * be shown by the pagination rendering method that is used for the table:\n\t\t\t * {@link DataTable.ext.renderer.pageButton}. The renderer addresses how the\n\t\t\t * buttons are displayed in the document, while the functions here tell it\n\t\t\t * what buttons to display. This is done by returning an array of button\n\t\t\t * descriptions (what each button will do).\n\t\t\t *\n\t\t\t * Pagination types (the four built in options and any additional plug-in\n\t\t\t * options defined here) can be used through the `paginationType`\n\t\t\t * initialisation parameter.\n\t\t\t *\n\t\t\t * The functions defined take two parameters:\n\t\t\t *\n\t\t\t * 1. `{int} page` The current page index\n\t\t\t * 2. `{int} pages` The number of pages in the table\n\t\t\t *\n\t\t\t * Each function is expected to return an array where each element of the\n\t\t\t * array can be one of:\n\t\t\t *\n\t\t\t * * `first` - Jump to first page when activated\n\t\t\t * * `last` - Jump to last page when activated\n\t\t\t * * `previous` - Show previous page when activated\n\t\t\t * * `next` - Show next page when activated\n\t\t\t * * `{int}` - Show page of the index given\n\t\t\t * * `{array}` - A nested array containing the above elements to add a\n\t\t\t *   containing 'DIV' element (might be useful for styling).\n\t\t\t *\n\t\t\t * Note that DataTables v1.9- used this object slightly differently whereby\n\t\t\t * an object with two functions would be defined for each plug-in. That\n\t\t\t * ability is still supported by DataTables 1.10+ to provide backwards\n\t\t\t * compatibility, but this option of use is now decremented and no longer\n\t\t\t * documented in DataTables 1.10+.\n\t\t\t *\n\t\t\t *  @type object\n\t\t\t *  @default {}\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Show previous, next and current page buttons only\n\t\t\t *    $.fn.dataTableExt.oPagination.current = function ( page, pages ) {\n\t\t\t *      return [ 'previous', page, 'next' ];\n\t\t\t *    };\n\t\t\t */\n\t\t\tpager: {},\n\n\n\t\t\trenderer: {\n\t\t\t\tpageButton: {},\n\t\t\t\theader: {}\n\t\t\t},\n\n\n\t\t\t/**\n\t\t\t * Ordering plug-ins - custom data source\n\t\t\t *\n\t\t\t * The extension options for ordering of data available here is complimentary\n\t\t\t * to the default type based ordering that DataTables typically uses. It\n\t\t\t * allows much greater control over the the data that is being used to\n\t\t\t * order a column, but is necessarily therefore more complex.\n\t\t\t *\n\t\t\t * This type of ordering is useful if you want to do ordering based on data\n\t\t\t * live from the DOM (for example the contents of an 'input' element) rather\n\t\t\t * than just the static string that DataTables knows of.\n\t\t\t *\n\t\t\t * The way these plug-ins work is that you create an array of the values you\n\t\t\t * wish to be ordering for the column in question and then return that\n\t\t\t * array. The data in the array much be in the index order of the rows in\n\t\t\t * the table (not the currently ordering order!). Which order data gathering\n\t\t\t * function is run here depends on the `dt-init columns.orderDataType`\n\t\t\t * parameter that is used for the column (if any).\n\t\t\t *\n\t\t\t * The functions defined take two parameters:\n\t\t\t *\n\t\t\t * 1. `{object}` DataTables settings object: see\n\t\t\t *    {@link DataTable.models.oSettings}\n\t\t\t * 2. `{int}` Target column index\n\t\t\t *\n\t\t\t * Each function is expected to return an array:\n\t\t\t *\n\t\t\t * * `{array}` Data for the column to be ordering upon\n\t\t\t *\n\t\t\t *  @type array\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Ordering using `input` node values\n\t\t\t *    $.fn.dataTable.ext.order['dom-text'] = function  ( settings, col )\n\t\t\t *    {\n\t\t\t *      return this.api().column( col, {order:'index'} ).nodes().map( function ( td, i ) {\n\t\t\t *        return $('input', td).val();\n\t\t\t *      } );\n\t\t\t *    }\n\t\t\t */\n\t\t\torder: {},\n\n\n\t\t\t/**\n\t\t\t * Type based plug-ins.\n\t\t\t *\n\t\t\t * Each column in DataTables has a type assigned to it, either by automatic\n\t\t\t * detection or by direct assignment using the `type` option for the column.\n\t\t\t * The type of a column will effect how it is ordering and search (plug-ins\n\t\t\t * can also make use of the column type if required).\n\t\t\t *\n\t\t\t * @namespace\n\t\t\t */\n\t\t\ttype: {\n\t\t\t\t/**\n\t\t\t\t * Type detection functions.\n\t\t\t\t *\n\t\t\t\t * The functions defined in this object are used to automatically detect\n\t\t\t\t * a column's type, making initialisation of DataTables super easy, even\n\t\t\t\t * when complex data is in the table.\n\t\t\t\t *\n\t\t\t\t * The functions defined take two parameters:\n\t\t\t\t *\n\t\t\t\t *  1. `{*}` Data from the column cell to be analysed\n\t\t\t\t *  2. `{settings}` DataTables settings object. This can be used to\n\t\t\t\t *     perform context specific type detection - for example detection\n\t\t\t\t *     based on language settings such as using a comma for a decimal\n\t\t\t\t *     place. Generally speaking the options from the settings will not\n\t\t\t\t *     be required\n\t\t\t\t *\n\t\t\t\t * Each function is expected to return:\n\t\t\t\t *\n\t\t\t\t * * `{string|null}` Data type detected, or null if unknown (and thus\n\t\t\t\t *   pass it on to the other type detection functions.\n\t\t\t\t *\n\t\t\t\t *  @type array\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    // Currency type detection plug-in:\n\t\t\t\t *    $.fn.dataTable.ext.type.detect.push(\n\t\t\t\t *      function ( data, settings ) {\n\t\t\t\t *        // Check the numeric part\n\t\t\t\t *        if ( ! $.isNumeric( data.substring(1) ) ) {\n\t\t\t\t *          return null;\n\t\t\t\t *        }\n\t\t\t\t *\n\t\t\t\t *        // Check prefixed by currency\n\t\t\t\t *        if ( data.charAt(0) == '$' || data.charAt(0) == '&pound;' ) {\n\t\t\t\t *          return 'currency';\n\t\t\t\t *        }\n\t\t\t\t *        return null;\n\t\t\t\t *      }\n\t\t\t\t *    );\n\t\t\t\t */\n\t\t\t\tdetect: [],\n\n\n\t\t\t\t/**\n\t\t\t\t * Type based search formatting.\n\t\t\t\t *\n\t\t\t\t * The type based searching functions can be used to pre-format the\n\t\t\t\t * data to be search on. For example, it can be used to strip HTML\n\t\t\t\t * tags or to de-format telephone numbers for numeric only searching.\n\t\t\t\t *\n\t\t\t\t * Note that is a search is not defined for a column of a given type,\n\t\t\t\t * no search formatting will be performed.\n\t\t\t\t *\n\t\t\t\t * Pre-processing of searching data plug-ins - When you assign the sType\n\t\t\t\t * for a column (or have it automatically detected for you by DataTables\n\t\t\t\t * or a type detection plug-in), you will typically be using this for\n\t\t\t\t * custom sorting, but it can also be used to provide custom searching\n\t\t\t\t * by allowing you to pre-processing the data and returning the data in\n\t\t\t\t * the format that should be searched upon. This is done by adding\n\t\t\t\t * functions this object with a parameter name which matches the sType\n\t\t\t\t * for that target column. This is the corollary of <i>afnSortData</i>\n\t\t\t\t * for searching data.\n\t\t\t\t *\n\t\t\t\t * The functions defined take a single parameter:\n\t\t\t\t *\n\t\t\t\t *  1. `{*}` Data from the column cell to be prepared for searching\n\t\t\t\t *\n\t\t\t\t * Each function is expected to return:\n\t\t\t\t *\n\t\t\t\t * * `{string|null}` Formatted string that will be used for the searching.\n\t\t\t\t *\n\t\t\t\t *  @type object\n\t\t\t\t *  @default {}\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $.fn.dataTable.ext.type.search['title-numeric'] = function ( d ) {\n\t\t\t\t *      return d.replace(/\\n/g,\" \").replace( /<.*?>/g, \"\" );\n\t\t\t\t *    }\n\t\t\t\t */\n\t\t\t\tsearch: {},\n\n\n\t\t\t\t/**\n\t\t\t\t * Type based ordering.\n\t\t\t\t *\n\t\t\t\t * The column type tells DataTables what ordering to apply to the table\n\t\t\t\t * when a column is sorted upon. The order for each type that is defined,\n\t\t\t\t * is defined by the functions available in this object.\n\t\t\t\t *\n\t\t\t\t * Each ordering option can be described by three properties added to\n\t\t\t\t * this object:\n\t\t\t\t *\n\t\t\t\t * * `{type}-pre` - Pre-formatting function\n\t\t\t\t * * `{type}-asc` - Ascending order function\n\t\t\t\t * * `{type}-desc` - Descending order function\n\t\t\t\t *\n\t\t\t\t * All three can be used together, only `{type}-pre` or only\n\t\t\t\t * `{type}-asc` and `{type}-desc` together. It is generally recommended\n\t\t\t\t * that only `{type}-pre` is used, as this provides the optimal\n\t\t\t\t * implementation in terms of speed, although the others are provided\n\t\t\t\t * for compatibility with existing Javascript sort functions.\n\t\t\t\t *\n\t\t\t\t * `{type}-pre`: Functions defined take a single parameter:\n\t\t\t\t *\n\t\t\t\t *  1. `{*}` Data from the column cell to be prepared for ordering\n\t\t\t\t *\n\t\t\t\t * And return:\n\t\t\t\t *\n\t\t\t\t * * `{*}` Data to be sorted upon\n\t\t\t\t *\n\t\t\t\t * `{type}-asc` and `{type}-desc`: Functions are typical Javascript sort\n\t\t\t\t * functions, taking two parameters:\n\t\t\t\t *\n\t\t\t\t *  1. `{*}` Data to compare to the second parameter\n\t\t\t\t *  2. `{*}` Data to compare to the first parameter\n\t\t\t\t *\n\t\t\t\t * And returning:\n\t\t\t\t *\n\t\t\t\t * * `{*}` Ordering match: <0 if first parameter should be sorted lower\n\t\t\t\t *   than the second parameter, ===0 if the two parameters are equal and\n\t\t\t\t *   >0 if the first parameter should be sorted height than the second\n\t\t\t\t *   parameter.\n\t\t\t\t *\n\t\t\t\t *  @type object\n\t\t\t\t *  @default {}\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    // Numeric ordering of formatted numbers with a pre-formatter\n\t\t\t\t *    $.extend( $.fn.dataTable.ext.type.order, {\n\t\t\t\t *      \"string-pre\": function(x) {\n\t\t\t\t *        a = (a === \"-\" || a === \"\") ? 0 : a.replace( /[^\\d\\-\\.]/g, \"\" );\n\t\t\t\t *        return parseFloat( a );\n\t\t\t\t *      }\n\t\t\t\t *    } );\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    // Case-sensitive string ordering, with no pre-formatting method\n\t\t\t\t *    $.extend( $.fn.dataTable.ext.order, {\n\t\t\t\t *      \"string-case-asc\": function(x,y) {\n\t\t\t\t *        return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n\t\t\t\t *      },\n\t\t\t\t *      \"string-case-desc\": function(x,y) {\n\t\t\t\t *        return ((x < y) ? 1 : ((x > y) ? -1 : 0));\n\t\t\t\t *      }\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\torder: {}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Unique DataTables instance counter\n\t\t\t *\n\t\t\t * @type int\n\t\t\t * @private\n\t\t\t */\n\t\t\t_unique: 0,\n\n\n\t\t\t//\n\t\t\t// Depreciated\n\t\t\t// The following properties are retained for backwards compatiblity only.\n\t\t\t// The should not be used in new projects and will be removed in a future\n\t\t\t// version\n\t\t\t//\n\n\t\t\t/**\n\t\t\t * Version check function.\n\t\t\t *  @type function\n\t\t\t *  @depreciated Since 1.10\n\t\t\t */\n\t\t\tfnVersionCheck: DataTable.fnVersionCheck,\n\n\n\t\t\t/**\n\t\t\t * Index for what 'this' index API functions should use\n\t\t\t *  @type int\n\t\t\t *  @deprecated Since v1.10\n\t\t\t */\n\t\t\tiApiIndex: 0,\n\n\n\t\t\t/**\n\t\t\t * jQuery UI class container\n\t\t\t *  @type object\n\t\t\t *  @deprecated Since v1.10\n\t\t\t */\n\t\t\toJUIClasses: {},\n\n\n\t\t\t/**\n\t\t\t * Software version\n\t\t\t *  @type string\n\t\t\t *  @deprecated Since v1.10\n\t\t\t */\n\t\t\tsVersion: DataTable.version\n\t\t};\n\n\n\t\t//\n\t\t// Backwards compatibility. Alias to pre 1.10 Hungarian notation counter parts\n\t\t//\n\t\t$.extend(_ext, {\n\t\t\tafnFiltering: _ext.search,\n\t\t\taTypes: _ext.type.detect,\n\t\t\tofnSearch: _ext.type.search,\n\t\t\toSort: _ext.type.order,\n\t\t\tafnSortData: _ext.order,\n\t\t\taoFeatures: _ext.feature,\n\t\t\toApi: _ext.internal,\n\t\t\toStdClasses: _ext.classes,\n\t\t\toPagination: _ext.pager\n\t\t});\n\n\n\t\t$.extend(DataTable.ext.classes, {\n\t\t\t\"sTable\": \"dataTable\",\n\t\t\t\"sNoFooter\": \"no-footer\",\n\n\t\t\t/* Paging buttons */\n\t\t\t\"sPageButton\": \"paginate_button\",\n\t\t\t\"sPageButtonActive\": \"current\",\n\t\t\t\"sPageButtonDisabled\": \"disabled\",\n\n\t\t\t/* Striping classes */\n\t\t\t\"sStripeOdd\": \"odd\",\n\t\t\t\"sStripeEven\": \"even\",\n\n\t\t\t/* Empty row */\n\t\t\t\"sRowEmpty\": \"dataTables_empty\",\n\n\t\t\t/* Features */\n\t\t\t\"sWrapper\": \"dataTables_wrapper\",\n\t\t\t\"sFilter\": \"dataTables_filter\",\n\t\t\t\"sInfo\": \"dataTables_info\",\n\t\t\t\"sPaging\": \"dataTables_paginate paging_\", /* Note that the type is postfixed */\n\t\t\t\"sLength\": \"dataTables_length\",\n\t\t\t\"sProcessing\": \"dataTables_processing\",\n\n\t\t\t/* Sorting */\n\t\t\t\"sSortAsc\": \"sorting_asc\",\n\t\t\t\"sSortDesc\": \"sorting_desc\",\n\t\t\t\"sSortable\": \"sorting\", /* Sortable in both directions */\n\t\t\t\"sSortableAsc\": \"sorting_asc_disabled\",\n\t\t\t\"sSortableDesc\": \"sorting_desc_disabled\",\n\t\t\t\"sSortableNone\": \"sorting_disabled\",\n\t\t\t\"sSortColumn\": \"sorting_\", /* Note that an int is postfixed for the sorting order */\n\n\t\t\t/* Filtering */\n\t\t\t\"sFilterInput\": \"\",\n\n\t\t\t/* Page length */\n\t\t\t\"sLengthSelect\": \"\",\n\n\t\t\t/* Scrolling */\n\t\t\t\"sScrollWrapper\": \"dataTables_scroll\",\n\t\t\t\"sScrollHead\": \"dataTables_scrollHead\",\n\t\t\t\"sScrollHeadInner\": \"dataTables_scrollHeadInner\",\n\t\t\t\"sScrollBody\": \"dataTables_scrollBody\",\n\t\t\t\"sScrollFoot\": \"dataTables_scrollFoot\",\n\t\t\t\"sScrollFootInner\": \"dataTables_scrollFootInner\",\n\n\t\t\t/* Misc */\n\t\t\t\"sHeaderTH\": \"\",\n\t\t\t\"sFooterTH\": \"\",\n\n\t\t\t// Deprecated\n\t\t\t\"sSortJUIAsc\": \"\",\n\t\t\t\"sSortJUIDesc\": \"\",\n\t\t\t\"sSortJUI\": \"\",\n\t\t\t\"sSortJUIAscAllowed\": \"\",\n\t\t\t\"sSortJUIDescAllowed\": \"\",\n\t\t\t\"sSortJUIWrapper\": \"\",\n\t\t\t\"sSortIcon\": \"\",\n\t\t\t\"sJUIHeader\": \"\",\n\t\t\t\"sJUIFooter\": \"\"\n\t\t});\n\n\n\t\t(function () {\n\n\t\t\t// Reused strings for better compression. Closure compiler appears to have a\n\t\t\t// weird edge case where it is trying to expand strings rather than use the\n\t\t\t// variable version. This results in about 200 bytes being added, for very\n\t\t\t// little preference benefit since it this run on script load only.\n\t\t\tvar _empty = '';\n\t\t\t_empty = '';\n\n\t\t\tvar _stateDefault = _empty + 'ui-state-default';\n\t\t\tvar _sortIcon = _empty + 'css_right ui-icon ui-icon-';\n\t\t\tvar _headerFooter = _empty + 'fg-toolbar ui-toolbar ui-widget-header ui-helper-clearfix';\n\n\t\t\t$.extend(DataTable.ext.oJUIClasses, DataTable.ext.classes, {\n\t\t\t\t/* Full numbers paging buttons */\n\t\t\t\t\"sPageButton\": \"fg-button ui-button \" + _stateDefault,\n\t\t\t\t\"sPageButtonActive\": \"ui-state-disabled\",\n\t\t\t\t\"sPageButtonDisabled\": \"ui-state-disabled\",\n\n\t\t\t\t/* Features */\n\t\t\t\t\"sPaging\": \"dataTables_paginate fg-buttonset ui-buttonset fg-buttonset-multi \" +\n\t\t\t\t\t\"ui-buttonset-multi paging_\", /* Note that the type is postfixed */\n\n\t\t\t\t/* Sorting */\n\t\t\t\t\"sSortAsc\": _stateDefault + \" sorting_asc\",\n\t\t\t\t\"sSortDesc\": _stateDefault + \" sorting_desc\",\n\t\t\t\t\"sSortable\": _stateDefault + \" sorting\",\n\t\t\t\t\"sSortableAsc\": _stateDefault + \" sorting_asc_disabled\",\n\t\t\t\t\"sSortableDesc\": _stateDefault + \" sorting_desc_disabled\",\n\t\t\t\t\"sSortableNone\": _stateDefault + \" sorting_disabled\",\n\t\t\t\t\"sSortJUIAsc\": _sortIcon + \"triangle-1-n\",\n\t\t\t\t\"sSortJUIDesc\": _sortIcon + \"triangle-1-s\",\n\t\t\t\t\"sSortJUI\": _sortIcon + \"carat-2-n-s\",\n\t\t\t\t\"sSortJUIAscAllowed\": _sortIcon + \"carat-1-n\",\n\t\t\t\t\"sSortJUIDescAllowed\": _sortIcon + \"carat-1-s\",\n\t\t\t\t\"sSortJUIWrapper\": \"DataTables_sort_wrapper\",\n\t\t\t\t\"sSortIcon\": \"DataTables_sort_icon\",\n\n\t\t\t\t/* Scrolling */\n\t\t\t\t\"sScrollHead\": \"dataTables_scrollHead \" + _stateDefault,\n\t\t\t\t\"sScrollFoot\": \"dataTables_scrollFoot \" + _stateDefault,\n\n\t\t\t\t/* Misc */\n\t\t\t\t\"sHeaderTH\": _stateDefault,\n\t\t\t\t\"sFooterTH\": _stateDefault,\n\t\t\t\t\"sJUIHeader\": _headerFooter + \" ui-corner-tl ui-corner-tr\",\n\t\t\t\t\"sJUIFooter\": _headerFooter + \" ui-corner-bl ui-corner-br\"\n\t\t\t});\n\n\t\t}());\n\n\n\n\t\tvar extPagination = DataTable.ext.pager;\n\n\t\tfunction _numbers(page, pages) {\n\t\t\tvar\n\t\t\t\tnumbers = [],\n\t\t\t\tbuttons = extPagination.numbers_length,\n\t\t\t\thalf = Math.floor(buttons / 2),\n\t\t\t\ti = 1;\n\n\t\t\tif (pages <= buttons) {\n\t\t\t\tnumbers = _range(0, pages);\n\t\t\t}\n\t\t\telse if (page <= half) {\n\t\t\t\tnumbers = _range(0, buttons - 2);\n\t\t\t\tnumbers.push('ellipsis');\n\t\t\t\tnumbers.push(pages - 1);\n\t\t\t}\n\t\t\telse if (page >= pages - 1 - half) {\n\t\t\t\tnumbers = _range(pages - (buttons - 2), pages);\n\t\t\t\tnumbers.splice(0, 0, 'ellipsis'); // no unshift in ie6\n\t\t\t\tnumbers.splice(0, 0, 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnumbers = _range(page - half + 2, page + half - 1);\n\t\t\t\tnumbers.push('ellipsis');\n\t\t\t\tnumbers.push(pages - 1);\n\t\t\t\tnumbers.splice(0, 0, 'ellipsis');\n\t\t\t\tnumbers.splice(0, 0, 0);\n\t\t\t}\n\n\t\t\tnumbers.DT_el = 'span';\n\t\t\treturn numbers;\n\t\t}\n\n\n\t\t$.extend(extPagination, {\n\t\t\tsimple: function (page, pages) {\n\t\t\t\treturn ['previous', 'next'];\n\t\t\t},\n\n\t\t\tfull: function (page, pages) {\n\t\t\t\treturn ['first', 'previous', 'next', 'last'];\n\t\t\t},\n\n\t\t\tnumbers: function (page, pages) {\n\t\t\t\treturn [_numbers(page, pages)];\n\t\t\t},\n\n\t\t\tsimple_numbers: function (page, pages) {\n\t\t\t\treturn ['previous', _numbers(page, pages), 'next'];\n\t\t\t},\n\n\t\t\tfull_numbers: function (page, pages) {\n\t\t\t\treturn ['first', 'previous', _numbers(page, pages), 'next', 'last'];\n\t\t\t},\n\n\t\t\tfirst_last_numbers: function (page, pages) {\n\t\t\t\treturn ['first', _numbers(page, pages), 'last'];\n\t\t\t},\n\n\t\t\t// For testing and plug-ins to use\n\t\t\t_numbers: _numbers,\n\n\t\t\t// Number of number buttons (including ellipsis) to show. _Must be odd!_\n\t\t\tnumbers_length: 7\n\t\t});\n\n\n\t\t$.extend(true, DataTable.ext.renderer, {\n\t\t\tpageButton: {\n\t\t\t\t_: function (settings, host, idx, buttons, page, pages) {\n\t\t\t\t\tvar classes = settings.oClasses;\n\t\t\t\t\tvar lang = settings.oLanguage.oPaginate;\n\t\t\t\t\tvar aria = settings.oLanguage.oAria.paginate || {};\n\t\t\t\t\tvar btnDisplay, btnClass, counter = 0;\n\n\t\t\t\t\tvar attach = function (container, buttons) {\n\t\t\t\t\t\tvar i, ien, node, button;\n\t\t\t\t\t\tvar clickHandler = function (e) {\n\t\t\t\t\t\t\t_fnPageChange(settings, e.data.action, true);\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tfor (i = 0, ien = buttons.length; i < ien; i++) {\n\t\t\t\t\t\t\tbutton = buttons[i];\n\n\t\t\t\t\t\t\tif ($.isArray(button)) {\n\t\t\t\t\t\t\t\tvar inner = $('<' + (button.DT_el || 'div') + '/>')\n\t\t\t\t\t\t\t\t\t.appendTo(container);\n\t\t\t\t\t\t\t\tattach(inner, button);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tbtnDisplay = null;\n\t\t\t\t\t\t\t\tbtnClass = '';\n\n\t\t\t\t\t\t\t\tswitch (button) {\n\t\t\t\t\t\t\t\t\tcase 'ellipsis':\n\t\t\t\t\t\t\t\t\t\tcontainer.append('<span class=\"ellipsis\">&#x2026;</span>');\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase 'first':\n\t\t\t\t\t\t\t\t\t\tbtnDisplay = lang.sFirst;\n\t\t\t\t\t\t\t\t\t\tbtnClass = button + (page > 0 ?\n\t\t\t\t\t\t\t\t\t\t\t'' : ' ' + classes.sPageButtonDisabled);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase 'previous':\n\t\t\t\t\t\t\t\t\t\tbtnDisplay = lang.sPrevious;\n\t\t\t\t\t\t\t\t\t\tbtnClass = button + (page > 0 ?\n\t\t\t\t\t\t\t\t\t\t\t'' : ' ' + classes.sPageButtonDisabled);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase 'next':\n\t\t\t\t\t\t\t\t\t\tbtnDisplay = lang.sNext;\n\t\t\t\t\t\t\t\t\t\tbtnClass = button + (page < pages - 1 ?\n\t\t\t\t\t\t\t\t\t\t\t'' : ' ' + classes.sPageButtonDisabled);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase 'last':\n\t\t\t\t\t\t\t\t\t\tbtnDisplay = lang.sLast;\n\t\t\t\t\t\t\t\t\t\tbtnClass = button + (page < pages - 1 ?\n\t\t\t\t\t\t\t\t\t\t\t'' : ' ' + classes.sPageButtonDisabled);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\tbtnDisplay = button + 1;\n\t\t\t\t\t\t\t\t\t\tbtnClass = page === button ?\n\t\t\t\t\t\t\t\t\t\t\tclasses.sPageButtonActive : '';\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (btnDisplay !== null) {\n\t\t\t\t\t\t\t\t\tnode = $('<a>', {\n\t\t\t\t\t\t\t\t\t\t'class': classes.sPageButton + ' ' + btnClass,\n\t\t\t\t\t\t\t\t\t\t'aria-controls': settings.sTableId,\n\t\t\t\t\t\t\t\t\t\t'aria-label': aria[button],\n\t\t\t\t\t\t\t\t\t\t'data-dt-idx': counter,\n\t\t\t\t\t\t\t\t\t\t'tabindex': settings.iTabIndex,\n\t\t\t\t\t\t\t\t\t\t'id': idx === 0 && typeof button === 'string' ?\n\t\t\t\t\t\t\t\t\t\t\tsettings.sTableId + '_' + button :\n\t\t\t\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t.html(btnDisplay)\n\t\t\t\t\t\t\t\t\t\t.appendTo(container);\n\n\t\t\t\t\t\t\t\t\t_fnBindAction(\n\t\t\t\t\t\t\t\t\t\tnode, { action: button }, clickHandler\n\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\tcounter++;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\t// IE9 throws an 'unknown error' if document.activeElement is used\n\t\t\t\t\t// inside an iframe or frame. Try / catch the error. Not good for\n\t\t\t\t\t// accessibility, but neither are frames.\n\t\t\t\t\tvar activeEl;\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// Because this approach is destroying and recreating the paging\n\t\t\t\t\t\t// elements, focus is lost on the select button which is bad for\n\t\t\t\t\t\t// accessibility. So we want to restore focus once the draw has\n\t\t\t\t\t\t// completed\n\t\t\t\t\t\tactiveEl = $(host).find(document.activeElement).data('dt-idx');\n\t\t\t\t\t}\n\t\t\t\t\tcatch (e) { }\n\n\t\t\t\t\tattach($(host).empty(), buttons);\n\n\t\t\t\t\tif (activeEl !== undefined) {\n\t\t\t\t\t\t$(host).find('[data-dt-idx=' + activeEl + ']').focus();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\n\n\t\t// Built in type detection. See model.ext.aTypes for information about\n\t\t// what is required from this methods.\n\t\t$.extend(DataTable.ext.type.detect, [\n\t\t\t// Plain numbers - first since V8 detects some plain numbers as dates\n\t\t\t// e.g. Date.parse('55') (but not all, e.g. Date.parse('22')...).\n\t\t\tfunction (d, settings) {\n\t\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\t\treturn _isNumber(d, decimal) ? 'num' + decimal : null;\n\t\t\t},\n\n\t\t\t// Dates (only those recognised by the browser's Date.parse)\n\t\t\tfunction (d, settings) {\n\t\t\t\t// V8 tries _very_ hard to make a string passed into `Date.parse()`\n\t\t\t\t// valid, so we need to use a regex to restrict date formats. Use a\n\t\t\t\t// plug-in for anything other than ISO8601 style strings\n\t\t\t\tif (d && !(d instanceof Date) && !_re_date.test(d)) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tvar parsed = Date.parse(d);\n\t\t\t\treturn (parsed !== null && !isNaN(parsed)) || _empty(d) ? 'date' : null;\n\t\t\t},\n\n\t\t\t// Formatted numbers\n\t\t\tfunction (d, settings) {\n\t\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\t\treturn _isNumber(d, decimal, true) ? 'num-fmt' + decimal : null;\n\t\t\t},\n\n\t\t\t// HTML numeric\n\t\t\tfunction (d, settings) {\n\t\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\t\treturn _htmlNumeric(d, decimal) ? 'html-num' + decimal : null;\n\t\t\t},\n\n\t\t\t// HTML numeric, formatted\n\t\t\tfunction (d, settings) {\n\t\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\t\treturn _htmlNumeric(d, decimal, true) ? 'html-num-fmt' + decimal : null;\n\t\t\t},\n\n\t\t\t// HTML (this is strict checking - there must be html)\n\t\t\tfunction (d, settings) {\n\t\t\t\treturn _empty(d) || (typeof d === 'string' && d.indexOf('<') !== -1) ?\n\t\t\t\t\t'html' : null;\n\t\t\t}\n\t\t]);\n\n\n\n\t\t// Filter formatting functions. See model.ext.ofnSearch for information about\n\t\t// what is required from these methods.\n\t\t//\n\t\t// Note that additional search methods are added for the html numbers and\n\t\t// html formatted numbers by `_addNumericSort()` when we know what the decimal\n\t\t// place is\n\n\n\t\t$.extend(DataTable.ext.type.search, {\n\t\t\thtml: function (data) {\n\t\t\t\treturn _empty(data) ?\n\t\t\t\t\tdata :\n\t\t\t\t\ttypeof data === 'string' ?\n\t\t\t\t\t\tdata\n\t\t\t\t\t\t\t.replace(_re_new_lines, \" \")\n\t\t\t\t\t\t\t.replace(_re_html, \"\") :\n\t\t\t\t\t\t'';\n\t\t\t},\n\n\t\t\tstring: function (data) {\n\t\t\t\treturn _empty(data) ?\n\t\t\t\t\tdata :\n\t\t\t\t\ttypeof data === 'string' ?\n\t\t\t\t\t\tdata.replace(_re_new_lines, \" \") :\n\t\t\t\t\t\tdata;\n\t\t\t}\n\t\t});\n\n\n\n\t\tvar __numericReplace = function (d, decimalPlace, re1, re2) {\n\t\t\tif (d !== 0 && (!d || d === '-')) {\n\t\t\t\treturn -Infinity;\n\t\t\t}\n\n\t\t\t// If a decimal place other than `.` is used, it needs to be given to the\n\t\t\t// function so we can detect it and replace with a `.` which is the only\n\t\t\t// decimal place Javascript recognises - it is not locale aware.\n\t\t\tif (decimalPlace) {\n\t\t\t\td = _numToDecimal(d, decimalPlace);\n\t\t\t}\n\n\t\t\tif (d.replace) {\n\t\t\t\tif (re1) {\n\t\t\t\t\td = d.replace(re1, '');\n\t\t\t\t}\n\n\t\t\t\tif (re2) {\n\t\t\t\t\td = d.replace(re2, '');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn d * 1;\n\t\t};\n\n\n\t\t// Add the numeric 'deformatting' functions for sorting and search. This is done\n\t\t// in a function to provide an easy ability for the language options to add\n\t\t// additional methods if a non-period decimal place is used.\n\t\tfunction _addNumericSort(decimalPlace) {\n\t\t\t$.each(\n\t\t\t\t{\n\t\t\t\t\t// Plain numbers\n\t\t\t\t\t\"num\": function (d) {\n\t\t\t\t\t\treturn __numericReplace(d, decimalPlace);\n\t\t\t\t\t},\n\n\t\t\t\t\t// Formatted numbers\n\t\t\t\t\t\"num-fmt\": function (d) {\n\t\t\t\t\t\treturn __numericReplace(d, decimalPlace, _re_formatted_numeric);\n\t\t\t\t\t},\n\n\t\t\t\t\t// HTML numeric\n\t\t\t\t\t\"html-num\": function (d) {\n\t\t\t\t\t\treturn __numericReplace(d, decimalPlace, _re_html);\n\t\t\t\t\t},\n\n\t\t\t\t\t// HTML numeric, formatted\n\t\t\t\t\t\"html-num-fmt\": function (d) {\n\t\t\t\t\t\treturn __numericReplace(d, decimalPlace, _re_html, _re_formatted_numeric);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction (key, fn) {\n\t\t\t\t\t// Add the ordering method\n\t\t\t\t\t_ext.type.order[key + decimalPlace + '-pre'] = fn;\n\n\t\t\t\t\t// For HTML types add a search formatter that will strip the HTML\n\t\t\t\t\tif (key.match(/^html\\-/)) {\n\t\t\t\t\t\t_ext.type.search[key + decimalPlace] = _ext.type.search.html;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\n\t\t// Default sort methods\n\t\t$.extend(_ext.type.order, {\n\t\t\t// Dates\n\t\t\t\"date-pre\": function (d) {\n\t\t\t\treturn Date.parse(d) || -Infinity;\n\t\t\t},\n\n\t\t\t// html\n\t\t\t\"html-pre\": function (a) {\n\t\t\t\treturn _empty(a) ?\n\t\t\t\t\t'' :\n\t\t\t\t\ta.replace ?\n\t\t\t\t\t\ta.replace(/<.*?>/g, \"\").toLowerCase() :\n\t\t\t\t\t\ta + '';\n\t\t\t},\n\n\t\t\t// string\n\t\t\t\"string-pre\": function (a) {\n\t\t\t\t// This is a little complex, but faster than always calling toString,\n\t\t\t\t// http://jsperf.com/tostring-v-check\n\t\t\t\treturn _empty(a) ?\n\t\t\t\t\t'' :\n\t\t\t\t\ttypeof a === 'string' ?\n\t\t\t\t\t\ta.toLowerCase() :\n\t\t\t\t\t\t!a.toString ?\n\t\t\t\t\t\t\t'' :\n\t\t\t\t\t\t\ta.toString();\n\t\t\t},\n\n\t\t\t// string-asc and -desc are retained only for compatibility with the old\n\t\t\t// sort methods\n\t\t\t\"string-asc\": function (x, y) {\n\t\t\t\treturn ((x < y) ? -1 : ((x > y) ? 1 : 0));\n\t\t\t},\n\n\t\t\t\"string-desc\": function (x, y) {\n\t\t\t\treturn ((x < y) ? 1 : ((x > y) ? -1 : 0));\n\t\t\t}\n\t\t});\n\n\n\t\t// Numeric sorting types - order doesn't matter here\n\t\t_addNumericSort('');\n\n\n\t\t$.extend(true, DataTable.ext.renderer, {\n\t\t\theader: {\n\t\t\t\t_: function (settings, cell, column, classes) {\n\t\t\t\t\t// No additional mark-up required\n\t\t\t\t\t// Attach a sort listener to update on sort - note that using the\n\t\t\t\t\t// `DT` namespace will allow the event to be removed automatically\n\t\t\t\t\t// on destroy, while the `dt` namespaced event is the one we are\n\t\t\t\t\t// listening for\n\t\t\t\t\t$(settings.nTable).on('order.dt.DT', function (e, ctx, sorting, columns) {\n\t\t\t\t\t\tif (settings !== ctx) { // need to check this this is the host\n\t\t\t\t\t\t\treturn;               // table, not a nested one\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar colIdx = column.idx;\n\n\t\t\t\t\t\tcell\n\t\t\t\t\t\t\t.removeClass(\n\t\t\t\t\t\t\t\tcolumn.sSortingClass + ' ' +\n\t\t\t\t\t\t\t\tclasses.sSortAsc + ' ' +\n\t\t\t\t\t\t\t\tclasses.sSortDesc\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.addClass(columns[colIdx] == 'asc' ?\n\t\t\t\t\t\t\t\tclasses.sSortAsc : columns[colIdx] == 'desc' ?\n\t\t\t\t\t\t\t\t\tclasses.sSortDesc :\n\t\t\t\t\t\t\t\t\tcolumn.sSortingClass\n\t\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t},\n\n\t\t\t\tjqueryui: function (settings, cell, column, classes) {\n\t\t\t\t\t$('<div/>')\n\t\t\t\t\t\t.addClass(classes.sSortJUIWrapper)\n\t\t\t\t\t\t.append(cell.contents())\n\t\t\t\t\t\t.append($('<span/>')\n\t\t\t\t\t\t\t.addClass(classes.sSortIcon + ' ' + column.sSortingClassJUI)\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.appendTo(cell);\n\n\t\t\t\t\t// Attach a sort listener to update on sort\n\t\t\t\t\t$(settings.nTable).on('order.dt.DT', function (e, ctx, sorting, columns) {\n\t\t\t\t\t\tif (settings !== ctx) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar colIdx = column.idx;\n\n\t\t\t\t\t\tcell\n\t\t\t\t\t\t\t.removeClass(classes.sSortAsc + \" \" + classes.sSortDesc)\n\t\t\t\t\t\t\t.addClass(columns[colIdx] == 'asc' ?\n\t\t\t\t\t\t\t\tclasses.sSortAsc : columns[colIdx] == 'desc' ?\n\t\t\t\t\t\t\t\t\tclasses.sSortDesc :\n\t\t\t\t\t\t\t\t\tcolumn.sSortingClass\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\tcell\n\t\t\t\t\t\t\t.find('span.' + classes.sSortIcon)\n\t\t\t\t\t\t\t.removeClass(\n\t\t\t\t\t\t\t\tclasses.sSortJUIAsc + \" \" +\n\t\t\t\t\t\t\t\tclasses.sSortJUIDesc + \" \" +\n\t\t\t\t\t\t\t\tclasses.sSortJUI + \" \" +\n\t\t\t\t\t\t\t\tclasses.sSortJUIAscAllowed + \" \" +\n\t\t\t\t\t\t\t\tclasses.sSortJUIDescAllowed\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.addClass(columns[colIdx] == 'asc' ?\n\t\t\t\t\t\t\t\tclasses.sSortJUIAsc : columns[colIdx] == 'desc' ?\n\t\t\t\t\t\t\t\t\tclasses.sSortJUIDesc :\n\t\t\t\t\t\t\t\t\tcolumn.sSortingClassJUI\n\t\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t/*\n\t\t * Public helper functions. These aren't used internally by DataTables, or\n\t\t * called by any of the options passed into DataTables, but they can be used\n\t\t * externally by developers working with DataTables. They are helper functions\n\t\t * to make working with DataTables a little bit easier.\n\t\t */\n\n\t\tvar __htmlEscapeEntities = function (d) {\n\t\t\treturn typeof d === 'string' ?\n\t\t\t\td.replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;') :\n\t\t\t\td;\n\t\t};\n\n\t\t/**\n\t\t * Helpers for `columns.render`.\n\t\t *\n\t\t * The options defined here can be used with the `columns.render` initialisation\n\t\t * option to provide a display renderer. The following functions are defined:\n\t\t *\n\t\t * * `number` - Will format numeric data (defined by `columns.data`) for\n\t\t *   display, retaining the original unformatted data for sorting and filtering.\n\t\t *   It takes 5 parameters:\n\t\t *   * `string` - Thousands grouping separator\n\t\t *   * `string` - Decimal point indicator\n\t\t *   * `integer` - Number of decimal points to show\n\t\t *   * `string` (optional) - Prefix.\n\t\t *   * `string` (optional) - Postfix (/suffix).\n\t\t * * `text` - Escape HTML to help prevent XSS attacks. It has no optional\n\t\t *   parameters.\n\t\t *\n\t\t * @example\n\t\t *   // Column definition using the number renderer\n\t\t *   {\n\t\t *     data: \"salary\",\n\t\t *     render: $.fn.dataTable.render.number( '\\'', '.', 0, '$' )\n\t\t *   }\n\t\t *\n\t\t * @namespace\n\t\t */\n\t\tDataTable.render = {\n\t\t\tnumber: function (thousands, decimal, precision, prefix, postfix) {\n\t\t\t\treturn {\n\t\t\t\t\tdisplay: function (d) {\n\t\t\t\t\t\tif (typeof d !== 'number' && typeof d !== 'string') {\n\t\t\t\t\t\t\treturn d;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar negative = d < 0 ? '-' : '';\n\t\t\t\t\t\tvar flo = parseFloat(d);\n\n\t\t\t\t\t\t// If NaN then there isn't much formatting that we can do - just\n\t\t\t\t\t\t// return immediately, escaping any HTML (this was supposed to\n\t\t\t\t\t\t// be a number after all)\n\t\t\t\t\t\tif (isNaN(flo)) {\n\t\t\t\t\t\t\treturn __htmlEscapeEntities(d);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tflo = flo.toFixed(precision);\n\t\t\t\t\t\td = Math.abs(flo);\n\n\t\t\t\t\t\tvar intPart = parseInt(d, 10);\n\t\t\t\t\t\tvar floatPart = precision ?\n\t\t\t\t\t\t\tdecimal + (d - intPart).toFixed(precision).substring(2) :\n\t\t\t\t\t\t\t'';\n\n\t\t\t\t\t\treturn negative + (prefix || '') +\n\t\t\t\t\t\t\tintPart.toString().replace(\n\t\t\t\t\t\t\t\t/\\B(?=(\\d{3})+(?!\\d))/g, thousands\n\t\t\t\t\t\t\t) +\n\t\t\t\t\t\t\tfloatPart +\n\t\t\t\t\t\t\t(postfix || '');\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t},\n\n\t\t\ttext: function () {\n\t\t\t\treturn {\n\t\t\t\t\tdisplay: __htmlEscapeEntities\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\n\n\t\t/*\n\t\t * This is really a good bit rubbish this method of exposing the internal methods\n\t\t * publicly... - To be fixed in 2.0 using methods on the prototype\n\t\t */\n\n\n\t\t/**\n\t\t * Create a wrapper function for exporting an internal functions to an external API.\n\t\t *  @param {string} fn API function name\n\t\t *  @returns {function} wrapped function\n\t\t *  @memberof DataTable#internal\n\t\t */\n\t\tfunction _fnExternApiFunc(fn) {\n\t\t\treturn function () {\n\t\t\t\tvar args = [_fnSettingsFromNode(this[DataTable.ext.iApiIndex])].concat(\n\t\t\t\t\tArray.prototype.slice.call(arguments)\n\t\t\t\t);\n\t\t\t\treturn DataTable.ext.internal[fn].apply(this, args);\n\t\t\t};\n\t\t}\n\n\n\t\t/**\n\t\t * Reference to internal functions for use by plug-in developers. Note that\n\t\t * these methods are references to internal functions and are considered to be\n\t\t * private. If you use these methods, be aware that they are liable to change\n\t\t * between versions.\n\t\t *  @namespace\n\t\t */\n\t\t$.extend(DataTable.ext.internal, {\n\t\t\t_fnExternApiFunc: _fnExternApiFunc,\n\t\t\t_fnBuildAjax: _fnBuildAjax,\n\t\t\t_fnAjaxUpdate: _fnAjaxUpdate,\n\t\t\t_fnAjaxParameters: _fnAjaxParameters,\n\t\t\t_fnAjaxUpdateDraw: _fnAjaxUpdateDraw,\n\t\t\t_fnAjaxDataSrc: _fnAjaxDataSrc,\n\t\t\t_fnAddColumn: _fnAddColumn,\n\t\t\t_fnColumnOptions: _fnColumnOptions,\n\t\t\t_fnAdjustColumnSizing: _fnAdjustColumnSizing,\n\t\t\t_fnVisibleToColumnIndex: _fnVisibleToColumnIndex,\n\t\t\t_fnColumnIndexToVisible: _fnColumnIndexToVisible,\n\t\t\t_fnVisbleColumns: _fnVisbleColumns,\n\t\t\t_fnGetColumns: _fnGetColumns,\n\t\t\t_fnColumnTypes: _fnColumnTypes,\n\t\t\t_fnApplyColumnDefs: _fnApplyColumnDefs,\n\t\t\t_fnHungarianMap: _fnHungarianMap,\n\t\t\t_fnCamelToHungarian: _fnCamelToHungarian,\n\t\t\t_fnLanguageCompat: _fnLanguageCompat,\n\t\t\t_fnBrowserDetect: _fnBrowserDetect,\n\t\t\t_fnAddData: _fnAddData,\n\t\t\t_fnAddTr: _fnAddTr,\n\t\t\t_fnNodeToDataIndex: _fnNodeToDataIndex,\n\t\t\t_fnNodeToColumnIndex: _fnNodeToColumnIndex,\n\t\t\t_fnGetCellData: _fnGetCellData,\n\t\t\t_fnSetCellData: _fnSetCellData,\n\t\t\t_fnSplitObjNotation: _fnSplitObjNotation,\n\t\t\t_fnGetObjectDataFn: _fnGetObjectDataFn,\n\t\t\t_fnSetObjectDataFn: _fnSetObjectDataFn,\n\t\t\t_fnGetDataMaster: _fnGetDataMaster,\n\t\t\t_fnClearTable: _fnClearTable,\n\t\t\t_fnDeleteIndex: _fnDeleteIndex,\n\t\t\t_fnInvalidate: _fnInvalidate,\n\t\t\t_fnGetRowElements: _fnGetRowElements,\n\t\t\t_fnCreateTr: _fnCreateTr,\n\t\t\t_fnBuildHead: _fnBuildHead,\n\t\t\t_fnDrawHead: _fnDrawHead,\n\t\t\t_fnDraw: _fnDraw,\n\t\t\t_fnReDraw: _fnReDraw,\n\t\t\t_fnAddOptionsHtml: _fnAddOptionsHtml,\n\t\t\t_fnDetectHeader: _fnDetectHeader,\n\t\t\t_fnGetUniqueThs: _fnGetUniqueThs,\n\t\t\t_fnFeatureHtmlFilter: _fnFeatureHtmlFilter,\n\t\t\t_fnFilterComplete: _fnFilterComplete,\n\t\t\t_fnFilterCustom: _fnFilterCustom,\n\t\t\t_fnFilterColumn: _fnFilterColumn,\n\t\t\t_fnFilter: _fnFilter,\n\t\t\t_fnFilterCreateSearch: _fnFilterCreateSearch,\n\t\t\t_fnEscapeRegex: _fnEscapeRegex,\n\t\t\t_fnFilterData: _fnFilterData,\n\t\t\t_fnFeatureHtmlInfo: _fnFeatureHtmlInfo,\n\t\t\t_fnUpdateInfo: _fnUpdateInfo,\n\t\t\t_fnInfoMacros: _fnInfoMacros,\n\t\t\t_fnInitialise: _fnInitialise,\n\t\t\t_fnInitComplete: _fnInitComplete,\n\t\t\t_fnLengthChange: _fnLengthChange,\n\t\t\t_fnFeatureHtmlLength: _fnFeatureHtmlLength,\n\t\t\t_fnFeatureHtmlPaginate: _fnFeatureHtmlPaginate,\n\t\t\t_fnPageChange: _fnPageChange,\n\t\t\t_fnFeatureHtmlProcessing: _fnFeatureHtmlProcessing,\n\t\t\t_fnProcessingDisplay: _fnProcessingDisplay,\n\t\t\t_fnFeatureHtmlTable: _fnFeatureHtmlTable,\n\t\t\t_fnScrollDraw: _fnScrollDraw,\n\t\t\t_fnApplyToChildren: _fnApplyToChildren,\n\t\t\t_fnCalculateColumnWidths: _fnCalculateColumnWidths,\n\t\t\t_fnThrottle: _fnThrottle,\n\t\t\t_fnConvertToWidth: _fnConvertToWidth,\n\t\t\t_fnGetWidestNode: _fnGetWidestNode,\n\t\t\t_fnGetMaxLenString: _fnGetMaxLenString,\n\t\t\t_fnStringToCss: _fnStringToCss,\n\t\t\t_fnSortFlatten: _fnSortFlatten,\n\t\t\t_fnSort: _fnSort,\n\t\t\t_fnSortAria: _fnSortAria,\n\t\t\t_fnSortListener: _fnSortListener,\n\t\t\t_fnSortAttachListener: _fnSortAttachListener,\n\t\t\t_fnSortingClasses: _fnSortingClasses,\n\t\t\t_fnSortData: _fnSortData,\n\t\t\t_fnSaveState: _fnSaveState,\n\t\t\t_fnLoadState: _fnLoadState,\n\t\t\t_fnSettingsFromNode: _fnSettingsFromNode,\n\t\t\t_fnLog: _fnLog,\n\t\t\t_fnMap: _fnMap,\n\t\t\t_fnBindAction: _fnBindAction,\n\t\t\t_fnCallbackReg: _fnCallbackReg,\n\t\t\t_fnCallbackFire: _fnCallbackFire,\n\t\t\t_fnLengthOverflow: _fnLengthOverflow,\n\t\t\t_fnRenderer: _fnRenderer,\n\t\t\t_fnDataSource: _fnDataSource,\n\t\t\t_fnRowAttributes: _fnRowAttributes,\n\t\t\t_fnCalculateEnd: function () { } // Used by a lot of plug-ins, but redundant\n\t\t\t// in 1.10, so this dead-end function is\n\t\t\t// added to prevent errors\n\t\t});\n\n\n\t\t// jQuery access\n\t\t$.fn.dataTable = DataTable;\n\n\t\t// Provide access to the host jQuery object (circular reference)\n\t\tDataTable.$ = $;\n\n\t\t// Legacy aliases\n\t\t$.fn.dataTableSettings = DataTable.settings;\n\t\t$.fn.dataTableExt = DataTable.ext;\n\n\t\t// With a capital `D` we return a DataTables API instance rather than a\n\t\t// jQuery object\n\t\t$.fn.DataTable = function (opts) {\n\t\t\treturn $(this).dataTable(opts).api();\n\t\t};\n\n\t\t// All properties that are available to $.fn.dataTable should also be\n\t\t// available on $.fn.DataTable\n\t\t$.each(DataTable, function (prop, val) {\n\t\t\t$.fn.DataTable[prop] = val;\n\t\t});\n\n\n\t\t// Information about events fired by DataTables - for documentation.\n\t\t/**\n\t\t * Draw event, fired whenever the table is redrawn on the page, at the same\n\t\t * point as fnDrawCallback. This may be useful for binding events or\n\t\t * performing calculations when the table is altered at all.\n\t\t *  @name DataTable#draw.dt\n\t\t *  @event\n\t\t *  @param {event} e jQuery event object\n\t\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t\t */\n\n\t\t/**\n\t\t * Search event, fired when the searching applied to the table (using the\n\t\t * built-in global search, or column filters) is altered.\n\t\t *  @name DataTable#search.dt\n\t\t *  @event\n\t\t *  @param {event} e jQuery event object\n\t\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t\t */\n\n\t\t/**\n\t\t * Page change event, fired when the paging of the table is altered.\n\t\t *  @name DataTable#page.dt\n\t\t *  @event\n\t\t *  @param {event} e jQuery event object\n\t\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t\t */\n\n\t\t/**\n\t\t * Order event, fired when the ordering applied to the table is altered.\n\t\t *  @name DataTable#order.dt\n\t\t *  @event\n\t\t *  @param {event} e jQuery event object\n\t\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t\t */\n\n\t\t/**\n\t\t * DataTables initialisation complete event, fired when the table is fully\n\t\t * drawn, including Ajax data loaded, if Ajax data is required.\n\t\t *  @name DataTable#init.dt\n\t\t *  @event\n\t\t *  @param {event} e jQuery event object\n\t\t *  @param {object} oSettings DataTables settings object\n\t\t *  @param {object} json The JSON object request from the server - only\n\t\t *    present if client-side Ajax sourced data is used</li></ol>\n\t\t */\n\n\t\t/**\n\t\t * State save event, fired when the table has changed state a new state save\n\t\t * is required. This event allows modification of the state saving object\n\t\t * prior to actually doing the save, including addition or other state\n\t\t * properties (for plug-ins) or modification of a DataTables core property.\n\t\t *  @name DataTable#stateSaveParams.dt\n\t\t *  @event\n\t\t *  @param {event} e jQuery event object\n\t\t *  @param {object} oSettings DataTables settings object\n\t\t *  @param {object} json The state information to be saved\n\t\t */\n\n\t\t/**\n\t\t * State load event, fired when the table is loading state from the stored\n\t\t * data, but prior to the settings object being modified by the saved state\n\t\t * - allowing modification of the saved state is required or loading of\n\t\t * state for a plug-in.\n\t\t *  @name DataTable#stateLoadParams.dt\n\t\t *  @event\n\t\t *  @param {event} e jQuery event object\n\t\t *  @param {object} oSettings DataTables settings object\n\t\t *  @param {object} json The saved state information\n\t\t */\n\n\t\t/**\n\t\t * State loaded event, fired when state has been loaded from stored data and\n\t\t * the settings object has been modified by the loaded data.\n\t\t *  @name DataTable#stateLoaded.dt\n\t\t *  @event\n\t\t *  @param {event} e jQuery event object\n\t\t *  @param {object} oSettings DataTables settings object\n\t\t *  @param {object} json The saved state information\n\t\t */\n\n\t\t/**\n\t\t * Processing event, fired when DataTables is doing some kind of processing\n\t\t * (be it, order, searcg or anything else). It can be used to indicate to\n\t\t * the end user that there is something happening, or that something has\n\t\t * finished.\n\t\t *  @name DataTable#processing.dt\n\t\t *  @event\n\t\t *  @param {event} e jQuery event object\n\t\t *  @param {object} oSettings DataTables settings object\n\t\t *  @param {boolean} bShow Flag for if DataTables is doing processing or not\n\t\t */\n\n\t\t/**\n\t\t * Ajax (XHR) event, fired whenever an Ajax request is completed from a\n\t\t * request to made to the server for new data. This event is called before\n\t\t * DataTables processed the returned data, so it can also be used to pre-\n\t\t * process the data returned from the server, if needed.\n\t\t *\n\t\t * Note that this trigger is called in `fnServerData`, if you override\n\t\t * `fnServerData` and which to use this event, you need to trigger it in you\n\t\t * success function.\n\t\t *  @name DataTable#xhr.dt\n\t\t *  @event\n\t\t *  @param {event} e jQuery event object\n\t\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t\t *  @param {object} json JSON returned from the server\n\t\t *\n\t\t *  @example\n\t\t *     // Use a custom property returned from the server in another DOM element\n\t\t *     $('#table').dataTable().on('xhr.dt', function (e, settings, json) {\n\t\t *       $('#status').html( json.status );\n\t\t *     } );\n\t\t *\n\t\t *  @example\n\t\t *     // Pre-process the data returned from the server\n\t\t *     $('#table').dataTable().on('xhr.dt', function (e, settings, json) {\n\t\t *       for ( var i=0, ien=json.aaData.length ; i<ien ; i++ ) {\n\t\t *         json.aaData[i].sum = json.aaData[i].one + json.aaData[i].two;\n\t\t *       }\n\t\t *       // Note no return - manipulate the data directly in the JSON object.\n\t\t *     } );\n\t\t */\n\n\t\t/**\n\t\t * Destroy event, fired when the DataTable is destroyed by calling fnDestroy\n\t\t * or passing the bDestroy:true parameter in the initialisation object. This\n\t\t * can be used to remove bound events, added DOM nodes, etc.\n\t\t *  @name DataTable#destroy.dt\n\t\t *  @event\n\t\t *  @param {event} e jQuery event object\n\t\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t\t */\n\n\t\t/**\n\t\t * Page length change event, fired when number of records to show on each\n\t\t * page (the length) is changed.\n\t\t *  @name DataTable#length.dt\n\t\t *  @event\n\t\t *  @param {event} e jQuery event object\n\t\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t\t *  @param {integer} len New length\n\t\t */\n\n\t\t/**\n\t\t * Column sizing has changed.\n\t\t *  @name DataTable#column-sizing.dt\n\t\t *  @event\n\t\t *  @param {event} e jQuery event object\n\t\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t\t */\n\n\t\t/**\n\t\t * Column visibility has changed.\n\t\t *  @name DataTable#column-visibility.dt\n\t\t *  @event\n\t\t *  @param {event} e jQuery event object\n\t\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t\t *  @param {int} column Column index\n\t\t *  @param {bool} vis `false` if column now hidden, or `true` if visible\n\t\t */\n\n\t\treturn $.fn.dataTable;\n\t}));\n"],"file":"jquery.dataTables.min.js"}