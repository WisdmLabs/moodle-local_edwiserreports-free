{"version":3,"sources":["block_learnercourseprogress.js"],"names":["define","$","ApexCharts","Common","CFG","chart","filter","course","barChartDefault","series","type","height","toolbar","show","tools","download","reset","zoom","enabled","tooltip","enabledOnSeries","undefined","shared","followCursor","intersect","inverseOrder","fillSeriesColor","onDatasetHover","highlightDataSeries","marker","items","display","fixed","position","offsetX","offsetY","y","title","grid","borderColor","dataLabels","xaxis","categories","labels","hideOverlappingLabels","trim","rotate","legend","horizontalAlign","itemMargin","horizontal","vertical","noData","text","M","util","get_string","colors","getColorTheme","SELECTOR","PANEL","GRAPH","PROMISE","GET_COURSEPROGRESS","ajax","url","requestUrl","requestType","dataType","requestDataType","data","action","secret","local_edwiserreports","lang","attr","JSON","stringify","loadGraph","loader","done","response","Object","assign","yaxis","max","formatter","progress","name","length","graph","destroy","get","render","setTimeout","hide","renderGraph","find","fail","exception","Notification","init","invalidUser","select2"],"mappings":"AAAA,aA0BAA,OAAO,CAAC,SAAU,qBAAsB,WAAY,kBAAmB,aAAc,SAAUC,EAAGC,EAAYC,EAAQC,GAIpH,IAAIC,EAAQ,KAKRC,EAAS,CACXC,OAAQ,GAMNC,EAAkB,CACpBC,OAAQ,GACRJ,MAAO,CACLK,KAAM,MACNC,OAAQ,IACRC,QAAS,CACPC,MAAM,EACNC,MAAO,CACLC,UAAU,EACVC,MAAO,kCAGXC,KAAM,CACJC,SAAS,IAGbC,QAAS,CACPD,SAAS,EACTE,qBAAiBC,EACjBC,QAAQ,EACRC,cAAc,EACdC,WAAW,EACXC,cAAc,EACdC,iBAAiB,EACjBC,eAAgB,CACdC,qBAAqB,GAEvBC,OAAQ,CACNhB,MAAM,GAERiB,MAAO,CACLC,QAAS,QAEXC,MAAO,CACLd,SAAS,EACTe,SAAU,WACVC,QAAS,EACTC,QAAS,GAEXC,EAAG,CACDC,MAAO,KAGXC,KAAM,CACJC,YAAa,WAEfC,WAAY,CACVtB,SAAS,GAEXuB,MAAO,CACLC,WAAY,KACZC,OAAQ,CACNC,uBAAuB,EACvBC,MAAM,EACNC,OAAQ,MAGZC,OAAQ,CACNd,SAAU,MACVe,gBAAiB,OACjBb,QAAS,MACTc,WAAY,CACVC,WAAY,GACZC,SAAU,IAGdC,OAAQ,CACNC,KAAMC,EAAEC,KAAKC,WAAW,cAAe,yBAEzCC,OAAQ,CAACrD,EAAIsD,gBAAgB,KAM3BC,EAAW,CACbC,MAAO,8BACPC,MAAO,2CAMLC,EAAU,CAMZC,mBAAoB,SAA4BzD,GAC9C,OAAOL,EAAE+D,KAAK,CACZC,IAAK7D,EAAI8D,WACTxD,KAAMN,EAAI+D,YACVC,SAAUhE,EAAIiE,gBACdC,KAAM,CACJC,OAAQ,4CACRC,OAAQlB,EAAEmB,qBAAqBD,OAC/BE,KAAMzE,EAAE,QAAQ0E,KAAK,QACrBL,KAAMM,KAAKC,UAAU,CACnBvE,OAAQA,SAUlB,SAASwE,IACP,IAAIR,EACJnE,EAAO4E,OAAOlE,KAAK8C,EAASC,OAmB5BE,EAAQC,mBAAmBzD,GAAQ0E,KAAK,SAAUC,IAChDX,EAAOY,OAAOC,OAAO,GAAI3E,IACpB4E,MAAQ,CACXC,IAAK,IACL1C,OAAQ,CACN2C,UAAW,SAAmBC,GAC5B,OAAOA,EAAW,OAIxBjB,EAAK7B,MAAMC,WAAauC,EAAStC,OACjC2B,EAAK7D,OAAS,CAAC,CACb+E,KAAMlC,EAAEC,KAAKC,WAAW,iBAAkB,wBAC1Cc,KAAMW,EAASM,WAEjBjB,EAAKjE,MAAMO,QAAQC,KAAOoE,EAAStC,OAAO8C,OAAS,GACnDnB,EAAKjE,MAAMY,KAAKC,QAAU+D,EAAStC,OAAO8C,OAAS,GAEnDnB,EAAKnD,QAAQiB,EAAEC,MAAMiD,UAAY,SAAUjD,GACzC,OAAOiB,EAAEC,KAAKC,WAAW,WAAY,wBAA0B,MA/BnE,SAAqBkC,EAAOpB,GACZ,OAAVjE,GACFA,EAAMsF,WAGRtF,EAAQ,IAAIH,EAAWwF,EAAME,IAAI,GAAItB,IAC/BuB,SACNC,WAAW,WACT3F,EAAO4E,OAAOgB,KAAKpC,EAASC,QAC3B,KAyBHoC,CAAY/F,EAAE0D,EAASC,OAAOqC,KAAKtC,EAASE,OAAQS,KACnD4B,KAAK,SAAUC,GAChBC,aAAaD,UAAUA,GACvBhG,EAAO4E,OAAOgB,KAAKpC,EAASC,SAkBhC,MAAO,CACLyC,KAVF,SAAcC,GACoB,GAA5BrG,EAAE0D,EAASC,OAAO6B,SAItBxF,EAAE0D,EAASC,OAAOqC,KAAK,iBAAiBM,UACxCzB","sourcesContent":["/* eslint-disable no-unused-vars */\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n/**\n * Plugin administration pages are defined here.\n *\n * @copyright   2021 wisdmlabs <support@wisdmlabs.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n/* eslint-disable no-console */\ndefine([\n    'jquery',\n    './chart/apexcharts',\n    './common',\n    './defaultconfig',\n    './select2'\n], function(\n    $,\n    ApexCharts,\n    Common,\n    CFG\n) {\n    /**\n     * Charts list.\n     */\n    var chart = null;\n\n    /**\n     * Filter for ajax.\n     */\n    var filter = {\n        course: 0\n    };\n\n    /**\n     * Bar chart default config.\n     */\n    const barChartDefault = {\n        series: [],\n        chart: {\n            type: 'bar',\n            height: 350,\n            toolbar: {\n                show: false,\n                tools: {\n                    download: false,\n                    reset: '<i class=\"fa fa-refresh\"></i>'\n                }\n            },\n            zoom: {\n                enabled: false\n            }\n        },\n        tooltip: {\n            enabled: true,\n            enabledOnSeries: undefined,\n            shared: true,\n            followCursor: false,\n            intersect: false,\n            inverseOrder: false,\n            fillSeriesColor: false,\n            onDatasetHover: {\n                highlightDataSeries: false,\n            },\n            marker: {\n                show: true\n            },\n            items: {\n                display: 'flex'\n            },\n            fixed: {\n                enabled: false,\n                position: 'topRight',\n                offsetX: 0,\n                offsetY: 0,\n            },\n            y: {\n                title: {}\n            }\n        },\n        grid: {\n            borderColor: '#e7e7e7'\n        },\n        dataLabels: {\n            enabled: false\n        },\n        xaxis: {\n            categories: null,\n            labels: {\n                hideOverlappingLabels: true,\n                trim: true,\n                rotate: 300\n            }\n        },\n        legend: {\n            position: 'top',\n            horizontalAlign: 'left',\n            offsetY: '-20',\n            itemMargin: {\n                horizontal: 10,\n                vertical: 0\n            },\n        },\n        noData: {\n            text: M.util.get_string('nographdata', 'local_edwiserreports')\n        },\n        colors: [CFG.getColorTheme()[2]]\n    };\n\n    /**\n     * Selectors list.\n     */\n    var SELECTOR = {\n        PANEL: '#learnercourseprogressblock',\n        GRAPH: '#apex-chart-learnercourseprogress-block'\n    };\n\n    /**\n     * All promises.\n     */\n    var PROMISE = {\n        /**\n         * Get course progress using filters.\n         * @param {Object} filter Filter data\n         * @returns {PROMISE}\n         */\n        GET_COURSEPROGRESS: function(filter) {\n            return $.ajax({\n                url: CFG.requestUrl,\n                type: CFG.requestType,\n                dataType: CFG.requestDataType,\n                data: {\n                    action: 'get_learnercourseprogress_graph_data_ajax',\n                    secret: M.local_edwiserreports.secret,\n                    lang: $('html').attr('lang'),\n                    data: JSON.stringify({\n                        filter: filter\n                    })\n                },\n            });\n        }\n    };\n\n    /**\n     * Load graph\n     */\n    function loadGraph() {\n        let data;\n        Common.loader.show(SELECTOR.PANEL);\n\n        /**\n         * Render graph.\n         * @param {DOM} graph Graph element\n         * @param {Object} data Graph data\n         */\n        function renderGraph(graph, data) {\n            if (chart !== null) {\n                chart.destroy();\n            }\n            chart = new ApexCharts(graph.get(0), data);\n            chart.render();\n            setTimeout(function() {\n                Common.loader.hide(SELECTOR.PANEL);\n            }, 1000);\n        }\n\n        PROMISE.GET_COURSEPROGRESS(filter)\n            .done(function(response) {\n                data = Object.assign({}, barChartDefault);\n                data.yaxis = {\n                    max: 100,\n                    labels: {\n                        formatter: (progress) => {\n                            return progress + '%';\n                        }\n                    }\n                };\n                data.xaxis.categories = response.labels;\n                data.series = [{\n                    name: M.util.get_string('courseprogress', 'local_edwiserreports'),\n                    data: response.progress,\n                }];\n                data.chart.toolbar.show = response.labels.length > 30;\n                data.chart.zoom.enabled = response.labels.length > 30;\n                data.tooltip.y.title.formatter = (title) => {\n                    return M.util.get_string('progress', 'local_edwiserreports') + ': ';\n                };\n\n                renderGraph($(SELECTOR.PANEL).find(SELECTOR.GRAPH), data);\n            }).fail(function(exception) {\n                Notification.exception(exception);\n                Common.loader.hide(SELECTOR.PANEL);\n            });\n    }\n\n    /**\n     * Initialize\n     * @param {function} invalidUser Callback function\n     */\n    function init(invalidUser) {\n        if ($(SELECTOR.PANEL).length == 0) {\n            return;\n        }\n        $(SELECTOR.PANEL).find('.singleselect').select2();\n\n        loadGraph();\n    }\n    return {\n        init: init\n    };\n});"],"file":"block_learnercourseprogress.min.js"}