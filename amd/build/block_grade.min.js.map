{"version":3,"sources":["block_grade.js"],"names":["define","$","ApexCharts","common","CFG","chart","position","pieChartDefault","type","height","fill","legend","formatter","seriesName","opts","w","globals","series","seriesIndex","colors","getColorTheme","dataLabels","enabled","noData","text","M","util","get_string","SELECTOR","PANEL","GRAPH","GRAPHLABEL","PROMISE","GET_GRAPH_DATA","ajax","url","requestUrl","requestType","dataType","requestDataType","data","action","secret","local_edwiserreports","lang","attr","loadGraph","loader","show","done","response","Object","assign","labels","reverse","grades","find","header","responseTitle","tooltip","custom","_ref","dataPointIndex","value","single","plural","label","config","color","concat","toggleClass","length","events","mounted","prepend","updated","insight","average","title","graph","destroy","get","render","setTimeout","hide","renderGraph","init","invalidUser","select2","handleFilterSize","setInterval","newPosition","width","updateOptions"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n/**\n * Grade table js.\n *\n * @copyright   2021 wisdmlabs <support@wisdmlabs.com>\n * @author      Yogesh Shirsath\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n/* eslint-disable no-unused-vars */\ndefine([\n    'jquery',\n    './chart/apexcharts',\n    './common',\n    './defaultconfig',\n    './select2'\n], function(\n    $,\n    ApexCharts,\n    common,\n    CFG\n) {\n\n    /**\n     * Chart.\n     */\n    var chart = null;\n\n    /**\n     * Default position.\n     */\n    var position = 'right';\n\n    /**\n     * Pie chart default config.\n     */\n    const pieChartDefault = {\n        chart: {\n            type: 'donut',\n            height: 350\n        },\n        fill: {\n            type: 'solid',\n        },\n        legend: {\n            position: position,\n            formatter: function(seriesName, opts) {\n                return [seriesName + \": \" + opts.w.globals.series[opts.seriesIndex]];\n            }\n        },\n        colors: CFG.getColorTheme(),\n        dataLabels: {\n            enabled: false\n        },\n        noData: {\n            text: M.util.get_string('nographdata', 'local_edwiserreports')\n        }\n    };\n\n    /**\n     * Selectors list.\n     */\n    var SELECTOR = {\n        PANEL: '#gradeblock',\n        GRAPH: '.graph',\n        GRAPHLABEL: '.graph-label',\n    };\n\n    /**\n     * All promises.\n     */\n    var PROMISE = {\n        /**\n         * Get graph data using filters.\n         * @returns {PROMISE}\n         */\n        GET_GRAPH_DATA: function() {\n            return $.ajax({\n                url: CFG.requestUrl,\n                type: CFG.requestType,\n                dataType: CFG.requestDataType,\n                data: {\n                    action: 'get_grade_graph_data_ajax',\n                    secret: M.local_edwiserreports.secret,\n                    lang: $('html').attr('lang')\n                },\n            });\n        }\n    };\n\n    /**\n     * Load graph\n     */\n    function loadGraph() {\n        let data;\n        common.loader.show(SELECTOR.PANEL);\n\n        /**\n         * Render graph.\n         * @param {DOM} graph Graph element\n         * @param {Object} data Graph data\n         */\n        function renderGraph(graph, data) {\n            if (chart !== null) {\n                chart.destroy();\n            }\n            chart = new ApexCharts(graph.get(0), data);\n            chart.render();\n            setTimeout(function() {\n                common.loader.hide(SELECTOR.PANEL);\n            }, 1000);\n        }\n        PROMISE.GET_GRAPH_DATA()\n            .done(function(response) {\n                data = Object.assign({}, pieChartDefault);\n                data.legend.position = position;\n                data.labels = response.labels.reverse();\n                data.series = response.grades.reverse();\n                $(SELECTOR.PANEL).find(SELECTOR.GRAPH).data('responseTitle', response.header);\n                data.responseTitle = response.header;\n                data.tooltip = {\n                    custom: function({\n                        series,\n                        seriesIndex,\n                        dataPointIndex,\n                        w\n                    }) {\n                        let value = series[seriesIndex];\n                        let tooltip = value < 2 ? response.tooltip.single : response.tooltip.plural;\n                        let label = w.config.labels[seriesIndex];\n                        let color = w.config.colors[seriesIndex];\n                        return `<div class=\"custom-donut-tooltip\" style=\"color: ${color};\">\n                                <span style=\"font-weight: 500;\"> ${label}:</span>\n                                <span style=\"font-weight: 700;\"> ${value} ${M.util.get_string(\n                                    tooltip,\n                                    'local_edwiserreports'\n                                )}</span>\n                            </div>`;\n                    }\n                };\n                $(SELECTOR.PANEL).find(SELECTOR.GRAPH).toggleClass('empty-donut', data.labels.length == 0);\n                data.chart.events = {\n                    mounted: function() {\n                        $(SELECTOR.PANEL).find(SELECTOR.GRAPH).find('.apexcharts-legend')\n                            .prepend(`<label class=\"graph-label w-100 text-center\">\n                            ${$(SELECTOR.PANEL).find(SELECTOR.GRAPH).data('responseTitle')}</label>`);\n                    },\n                };\n                data.chart.events.updated = data.chart.events.mounted;\n                common.insight('#gradeblock .insight', {\n                    'insight': {\n                        'value': response.average + '%',\n                        'title': 'averagegrade'\n                    }\n                });\n                renderGraph($(SELECTOR.PANEL).find(SELECTOR.GRAPH), data);\n            });\n        common.loader.hide(SELECTOR.PANEL);\n    }\n\n    /**\n     * Initialize event listeners.\n     */\n    function initEvents() {\n\n        // Handling legend position based on width.\n        setInterval(function() {\n            if (chart === null) {\n                return;\n            }\n            let width = $(SELECTOR.PANEL).find(SELECTOR.GRAPH).width();\n            let newPosition = width >= 400 ? 'right' : 'bottom';\n            if (newPosition == position) {\n                return;\n            }\n            position = newPosition;\n            chart.updateOptions({\n                legend: {\n                    position: position\n                }\n            });\n        }, 1000);\n    }\n\n    /**\n     * Initialize\n     * @param {function} invalidUser Callback function\n     */\n    function init(invalidUser) {\n        if ($(SELECTOR.PANEL).length == 0) {\n            return;\n        }\n        $(SELECTOR.PANEL).find('.singleselect').select2();\n        common.handleFilterSize(SELECTOR.PANEL);\n        initEvents();\n        loadGraph();\n    }\n    return {\n        init: init\n    };\n});"],"file":"block_grade.min.js"}