{"version":3,"sources":["block_grade.js"],"names":["define","$","Ajax","Templates","ApexCharts","common","CFG","chart","filter","course","student","pieChartDefault","type","height","fill","legend","position","offsetY","colors","getColorPalette","noData","text","M","util","get_string","SELECTOR","PANEL","COURSE","STUDENT","GRAPH","GRAPHLABEL","FORMFILTER","FILTERS","PROMISE","GET_STUDENTS","courseid","call","methodname","args","GET_GRAPH_DATA","ajax","url","requestUrl","requestType","dataType","requestDataType","data","action","secret","local_edwiserreports","JSON","stringify","loadGraph","loader","show","exportFilter","Object","keys","map","key","join","find","val","done","response","assign","labels","series","grades","header","insight","value","average","toPrecision","title","graph","destroy","get","render","setTimeout","hide","renderGraph","init","invalidUser","length","select2","on","concat","parseInt","this","students","html","js","replaceNode"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n/**\n * Grade table js.\n *\n * @package     local_edwiserreports\n * @copyright   2021 wisdmlabs <support@wisdmlabs.com>\n * @author      Yogesh Shirsath\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine([\n    'jquery',\n    'core/ajax',\n    'core/templates',\n    './chart/apexcharts',\n    './common',\n    './defaultconfig',\n    './select2'\n], function(\n    $,\n    Ajax,\n    Templates,\n    ApexCharts,\n    common,\n    CFG\n) {\n\n    /**\n     * Chart.\n     */\n    var chart = null;\n\n    /**\n     * Filter for ajax.\n     */\n    var filter = {\n        course: 0,\n        student: 0\n    };\n\n    /**\n     * Pie chart default config.\n     */\n    const pieChartDefault = {\n        chart: {\n            type: 'pie',\n            height: 350\n        },\n        fill: {\n            type: 'solid',\n        },\n        legend: {\n            position: 'bottom',\n            offsetY: 0\n        },\n        colors: CFG.getColorPalette(),\n        noData: {\n            text: M.util.get_string('nographdata', 'local_edwiserreports')\n        }\n    };\n\n    /**\n     * Selectors list.\n     */\n    var SELECTOR = {\n        PANEL: '#gradeblock',\n        COURSE: '.course-select',\n        STUDENT: '.student-select',\n        GRAPH: '.graph',\n        GRAPHLABEL: '.graph-label',\n        FORMFILTER: '.download-links [name=\"filter\"]',\n        FILTERS: '.filters'\n    };\n\n    /**\n     * All promises.\n     */\n    var PROMISE = {\n        /**\n         * Get students using course id.\n         *\n         * @param {Integer} courseid Course id\n         * @returns {PROMISE}\n         */\n        GET_STUDENTS: function(courseid) {\n            return Ajax.call([{\n                methodname: 'local_edwiserreports_get_students_of_course',\n                args: {\n                    courseid: courseid\n                }\n            }], false)[0];\n        },\n\n        /**\n         * Get graph data using filters.\n         * @returns {PROMISE}\n         */\n        GET_GRAPH_DATA: function() {\n            return $.ajax({\n                url: CFG.requestUrl,\n                type: CFG.requestType,\n                dataType: CFG.requestDataType,\n                data: {\n                    action: 'get_grade_graph_data_ajax',\n                    secret: M.local_edwiserreports.secret,\n                    data: JSON.stringify({\n                        filter: filter\n                    })\n                },\n            });\n        }\n    };\n\n    /**\n     * Load graph\n     */\n    function loadGraph() {\n        let data;\n        common.loader.show(SELECTOR.PANEL);\n\n        // Set export filter to download link.\n        let exportFilter = Object.keys(filter).map(key => filter[key]).join(\"-\");\n        $(SELECTOR.PANEL).find(SELECTOR.FORMFILTER).val(exportFilter);\n\n        /**\n         * Render graph.\n         * @param {DOM} graph Graph element\n         * @param {Object} data Graph data\n         */\n        function renderGraph(graph, data) {\n            if (chart !== null) {\n                chart.destroy();\n            }\n            chart = new ApexCharts(graph.get(0), data);\n            chart.render();\n            setTimeout(function() {\n                common.loader.hide(SELECTOR.PANEL);\n            }, 1000);\n        }\n        PROMISE.GET_GRAPH_DATA()\n            .done(function(response) {\n                data = Object.assign({}, pieChartDefault);\n                data.labels = response.labels;\n                data.series = response.grades;\n                $(SELECTOR.PANEL).find(SELECTOR.GRAPHLABEL).text(response.header);\n                common.insight('#gradeblock .insight', {\n                    'insight': {\n                        'value': response.average == 0 ? 0 : response.average.toPrecision(2) + '%',\n                        'title': M.util.get_string('averagegrade', 'local_edwiserreports')\n                    }\n                });\n                renderGraph($(SELECTOR.PANEL).find(SELECTOR.GRAPH), data);\n            });\n        common.loader.hide(SELECTOR.PANEL);\n    }\n\n    /**\n     * Initialize event listeners.\n     */\n    function initEvents() {\n\n        // Course selector listener.\n        $('body').on('change', `${SELECTOR.PANEL} ${SELECTOR.COURSE}`, function() {\n            courseid = parseInt($(this).val());\n            filter.course = courseid;\n            filter.student = 0;\n\n            PROMISE.GET_STUDENTS(courseid)\n                .done(function(response) {\n                    // Destroy student selector select2 instance.\n                    $(SELECTOR.PANEL).find(SELECTOR.STUDENT).select2('destroy');\n                    Templates.render('local_edwiserreports/studentengagement/students_filter', { 'students': response })\n                        .done(function(html, js) {\n                            Templates.replaceNode($(SELECTOR.PANEL).find(SELECTOR.STUDENT), html, js);\n\n                            // Reinitialize student selector select2 instance.\n                            $(SELECTOR.PANEL).find(SELECTOR.STUDENT).select2();\n                        });\n                });\n            // Load graph data.\n            loadGraph();\n        });\n\n        // Student selector listener.\n        $('body').on('change', `${SELECTOR.PANEL} ${SELECTOR.STUDENT}`, function() {\n            filter.student = parseInt($(this).val());\n            // Load graph data.\n            loadGraph();\n        });\n    }\n\n    /**\n     * Initialize\n     * @param {function} invalidUser Callback function\n     */\n    function init(invalidUser) {\n        if ($(SELECTOR.PANEL).length == 0) {\n            return;\n        }\n        $(SELECTOR.PANEL).find('.singleselect').select2();\n        initEvents();\n        loadGraph();\n    }\n    return {\n        init: init\n    };\n});"],"file":"block_grade.min.js"}