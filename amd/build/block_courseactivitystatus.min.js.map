{"version":3,"sources":["block_courseactivitystatus.js"],"names":["define","$","ApexCharts","common","CFG","SELECTOR","PANEL","INSIGHT","FORMFILTER","GRAPH","STUDENT","COURSE","PROMISE","GET_COURSEACTIVITYSTATUS","filter","ajax","url","requestUrl","type","requestType","dataType","requestDataType","data","action","secret","M","local_edwiserreports","lang","attr","JSON","stringify","date","course","student","chart","lineChartDefault","series","height","dropShadow","enabled","color","top","left","blur","opacity","toolbar","show","tools","download","reset","zoom","markers","size","tooltip","enabledOnSeries","undefined","shared","followCursor","intersect","inverseOrder","fillSeriesColor","onDatasetHover","highlightDataSeries","y","formatter","title","items","display","fixed","position","offsetX","offsetY","stroke","curve","width","grid","borderColor","xaxis","categories","labels","hideOverlappingLabels","datetimeFormatter","year","month","day","hour","legend","horizontalAlign","itemMargin","horizontal","vertical","dataLabels","colors","getColorTheme","noData","text","util","get_string","loadGraph","invalidUser","loader","done","response","Object","assign","name","submissions","completions","length","insight","graph","destroy","get","render","setTimeout","hide","renderGraph","find","fail","exception","init","select2","handleFilterSize"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n/**\n * Block service call and rendering defined in this file.\n *\n * @copyright   2021 wisdmlabs <support@wisdmlabs.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-console */\ndefine([\n    'jquery',\n    './chart/apexcharts',\n    './common',\n    './defaultconfig'\n], function(\n    $,\n    ApexCharts,\n    common,\n    CFG\n) {\n\n    /**\n     * DOM element selectors list.\n     */\n    let SELECTOR = {\n        PANEL: '#courseactivitystatusblock',\n        INSIGHT: '#courseactivitystatusblock .insight',\n        FORMFILTER: '.download-links [name=\"filter\"]',\n        GRAPH: '#apex-chart-courseactivitystatus-block',\n        STUDENT: '#courseactivitystatus-student-select',\n        COURSE: '#courseactivitystatus-course-select'\n    };\n\n    let PROMISE = {\n        /**\n         * Get timespent on site using filters.\n         * @param {Object} filter Filter data\n         * @returns {PROMISE}\n         */\n        GET_COURSEACTIVITYSTATUS: function(filter) {\n            return $.ajax({\n                url: CFG.requestUrl,\n                type: CFG.requestType,\n                dataType: CFG.requestDataType,\n                data: {\n                    action: 'get_courseactivitystatus_graph_data_ajax',\n                    secret: M.local_edwiserreports.secret,\n                    lang: $('html').attr('lang'),\n                    data: JSON.stringify({\n                        filter: filter\n                    })\n                },\n            });\n        }\n    };\n\n    /**\n     * Filter for ajax.\n     */\n    let filter = {\n        date: 'weekly',\n        course: 0,\n        student: 0\n    };\n\n    /**\n     * Chart object.\n     */\n    let chart = null;\n\n    /**\n     * Line chart default config.\n     */\n    const lineChartDefault = {\n        series: [],\n        chart: {\n            type: 'line',\n            height: 350,\n            dropShadow: {\n                enabled: true,\n                color: '#000',\n                top: 18,\n                left: 7,\n                blur: 10,\n                opacity: 0.2\n            },\n            toolbar: {\n                show: false,\n                tools: {\n                    download: false,\n                    reset: '<i class=\"fa fa-refresh\"></i>'\n                }\n            },\n            zoom: {\n                enabled: false\n            }\n        },\n        markers: {\n            size: 0\n        },\n        tooltip: {\n            enabled: true,\n            enabledOnSeries: undefined,\n            shared: true,\n            followCursor: false,\n            intersect: false,\n            inverseOrder: false,\n            fillSeriesColor: false,\n            onDatasetHover: {\n                highlightDataSeries: false,\n            },\n            y: {\n                formatter: undefined,\n                title: {},\n            },\n            items: {\n                display: 'flex'\n            },\n            fixed: {\n                enabled: false,\n                position: 'topRight',\n                offsetX: 0,\n                offsetY: 0,\n            },\n        },\n        stroke: {\n            curve: 'smooth',\n            width: 2\n        },\n        grid: {\n            borderColor: '#e7e7e7'\n        },\n        xaxis: {\n            categories: null,\n            type: 'datetime',\n            labels: {\n                hideOverlappingLabels: true,\n                datetimeFormatter: {\n                    year: 'yyyy',\n                    month: 'MMM \\'yy',\n                    day: 'dd MMM',\n                    hour: ''\n                }\n            },\n            tooltip: {\n                enabled: false\n            }\n        },\n        legend: {\n            position: 'top',\n            horizontalAlign: 'left',\n            offsetY: '-20',\n            itemMargin: {\n                horizontal: 10,\n                vertical: 0\n            },\n        },\n        dataLabels: {\n            enabled: false\n        },\n        colors: CFG.getColorTheme(),\n        noData: {\n            text: M.util.get_string('nographdata', 'local_edwiserreports')\n        }\n    };\n\n    /**\n     * Load graph\n     * @param {function} invalidUser Function callback\n     */\n    function loadGraph(invalidUser) {\n        common.loader.show(SELECTOR.PANEL);\n\n        /**\n         * Render graph.\n         * @param {DOM} graph Graph element\n         * @param {Object} data Graph data\n         */\n        function renderGraph(graph, data) {\n            if (chart !== null) {\n                chart.destroy();\n            }\n            chart = new ApexCharts(graph.get(0), data);\n            chart.render();\n            setTimeout(function() {\n                common.loader.hide(SELECTOR.PANEL);\n            }, 1000);\n        }\n\n        PROMISE.GET_COURSEACTIVITYSTATUS(filter)\n            .done(function(response) {\n                let data = Object.assign({}, lineChartDefault);\n                data.series = [{\n                    name: M.util.get_string('courseactivitystatus-submissions', 'local_edwiserreports'),\n                    data: response.submissions,\n                }, {\n                    name: M.util.get_string('courseactivitystatus-completions', 'local_edwiserreports'),\n                    data: response.completions,\n                }];\n                data.xaxis.categories = response.labels;\n                data.chart.toolbar.show = response.labels.length > 30;\n                data.chart.zoom.enabled = response.labels.length > 30;\n                data.tooltip.y.title.formatter = null;\n                common.insight(SELECTOR.INSIGHT, response.insight);\n                renderGraph($(SELECTOR.PANEL).find(SELECTOR.GRAPH), data);\n            }).fail(function(exception) {\n                common.loader.hide(SELECTOR.PANEL);\n            });\n    }\n\n    /**\n     * Initialize\n     * @param {function} invalidUser Callback function\n     */\n    function init(invalidUser) {\n\n        if (!$(SELECTOR.PANEL).length) {\n            return;\n        }\n\n        loadGraph(invalidUser);\n\n        $(SELECTOR.PANEL).find('.singleselect').select2();\n        common.handleFilterSize(SELECTOR.PANEL);\n    }\n\n    // Must return the init function\n    return {\n        init: init\n    };\n});"],"file":"block_courseactivitystatus.min.js"}