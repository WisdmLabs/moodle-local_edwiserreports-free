{"version":3,"sources":["apexcharts.js"],"names":["_typeof2","obj","Symbol","iterator","constructor","prototype","define","SVG","_typeof","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","_defineProperty","value","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","_inherits","subClass","superClass","create","_setPrototypeOf","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","p","_possibleConstructorReturn","self","call","ReferenceError","_assertThisInitialized","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","toString","e","_isNativeReflectConstruct","result","Super","NewTarget","this","_toConsumableArray","arr","Array","isArray","_arrayLikeToArray","_arrayWithoutHoles","iter","from","_iterableToArray","minLen","n","slice","name","test","_unsupportedIterableToArray","_nonIterableSpread","len","arr2","Utils","percent","color","f","split","t","R","parseInt","G","B","Math","round","isColorHex","shadeHexColor","shadeRGBColor","fn","me","item","list","array","_this","assign","output","index","_source","nextKey","hasOwnProperty","isObject","extend","arrToExtend","resultArr","extendedArr","map","month","cloneResult","clone","_cloneResult","prop","x","log","LN10","pow","floor","log10","base","val","parseFloat","random","substring","data","String","z","sign","str","replace","mag","Number","el","computedStyle","getComputedStyle","elementHeight","clientHeight","elementWidth","clientWidth","paddingTop","paddingBottom","paddingLeft","paddingRight","element","rect","getBoundingClientRect","top","right","bottom","left","width","height","y","reduce","a","b","aa","bb","hex","undefined","opacity","h","match","RegExp","join","rgba","rgb","size","dataPointsLen","dotsArray","angle","PI","curPos","sin","cos","centerX","centerY","radius","angleInDegrees","angleInRadians","escapeWith","newStr","old_index","new_index","k","splice","s","cls","parentElement","classList","contains","styles","style","isNaN","navigator","userAgent","toLowerCase","indexOf","window","appVersion","ua","msie","rv","edge","string","Animations","ctx","w","setEasingFunctions","easing","globals","config","chart","animations","pos","to","speed","attr","animate","cb","r","afterAll","cx","cy","params","realIndex","j","fill","pathFrom","pathTo","delay","delayFactor","animateGradually","enabled","dynamicAnimation","dataChanged","type","morphSVG","comboCharts","delayedElements","d","remove","animationEnded","showDelayedElements","events","animationEnd","disableAnimationForCorrupPath","path","concat","gridHeight","shouldAnimate","plot","isNumber","series","maxValsInArrayIndex","animationCompleted","Filters","unfilter","Filter","states","normal","applyFilter","dropShadow","node","attrs","intensity","add","shadowAttr","addShadow","componentTransfer","slope","intercept","filterer","setAttribute","_scaleFilterSize","_this2","addNormalFilter","addLightenFilter","addDarkenFilter","blur","shadowBlur","flood","composite","sourceAlpha","offset","gaussianBlur","merge","blend","noUserSpaceOnUse","isIE","isSafari","isFirefox","dataPointIndex","selectedDataPoints","activeFilter","active","setAttributes","Graphics","x1","y1","x2","y2","lineColor","dashArray","strokeWidth","dom","Paper","line","stroke","stroke-dasharray","stroke-width","strokeColor","strokeDashArray","rx","ry","polygonString","polygon","c","circle","_ref","_ref$d","_ref$stroke","_ref$strokeWidth","_ref$fillOpacity","fillOpacity","_ref$strokeOpacity","strokeOpacity","classes","_ref$strokeLinecap","strokeLinecap","_ref$strokeDashArray","lineCap","fill-opacity","stroke-opacity","stroke-linecap","class","g","group","move","hORv","curve","axisRotation","largeArcFlag","sweepFlag","coord","arc","_ref2","animationDelay","initialSpeed","dataChangeSpeed","className","_ref2$shouldClipToGri","shouldClipToGrid","_ref2$bindEventsOnPat","bindEventsOnPaths","_ref2$drawShadow","drawShadow","filters","anim","initialAnim","dynamicAnim","resized","strokeDashArrayOpt","drawPath","clip-path","cuid","getDefaultFilter","enabledOnSeries","shadow","addEventListener","pathMouseEnter","bind","pathMouseLeave","pathMouseDown","defaultAnimateOpts","animatePathsGradually","pattern","gfrom","gto","opacityFrom","opacityTo","stops","colorStops","hexToRgba","stop1","stop2","stop3","stop4","radial","gradient","stop","at","offx","gridWidth","offy","gradientUnits","fx","fy","_ref3","elText","text","textAnchor","fontSize","fontFamily","fontWeight","foreColor","_ref3$cssClass","cssClass","_ref3$isPlainText","isPlainText","tspan","newLine","plain","text-anchor","dominant-baseline","font-size","font-family","font-weight","opts","pSize","elPoint","shape","pRadius","nSize","drawRect","pointFillColor","pointFillOpacity","pointStrokeColor","pointStrokeWidth","pointStrokeOpacity","drawCircle","getAttribute","dataPointMouseEnter","seriesIndex","fireEvent","hover","isTouchDevice","hoverFilter","dataPointMouseLeave","selected","allowMultipleDataPointsSelection","elPaths","select","members","elCircles","deSelect","els","dataPointSelection","getBBox","transform","useBBox","virtualText","drawText","bbox","textObj","textString","getComputedTextLength","textContent","getSubStringLength","Helpers","annoCtx","anno","annoIndex","label","orientation","xAnno","baseEl","querySelector","xAnnoCoord","position","annoRotatingCenter","graphics","rotateAroundCenter","annoEl","trim","elGridRect","coords","pleft","padding","pright","ptop","pbottom","elRect","barPadForNumericAxis","borderRadius","background","borderWidth","borderColor","id","annoLabel","parent","parentNode","addBackgroundToAnno","insertBefore","annotations","xaxis","yaxis","points","rX","convertedCatToNumeric","categoryLabels","catIndex","labels","xLabel","XAnnotations","invertAxis","min","minY","minX","max","maxY","maxX","range","yRange","xRange","inversedReversedAxis","dataFormatXNumeric","helpers","getStringX","drawLine","offsetX","offsetY","appendChild","temp","fillColor","textY","textRects","getTextRects","rel","setOrientations","elg","addXaxisAnnotation","CoreUtils","total","stackedSeriesTotals","acc","cur","every","catLabels","li","formatter","markers","m","largestSize","seriesTotals","ser","seriesX","seriesPercent","_percent","invertedYRatio","xRatio","initialXRatio","invertedXRatio","gl","yRatio","zRatio","baseLineY","baseLineInvertedY","baseLineX","isMultipleYAxis","minYArr","abs","maxYArr","zRange","maxZ","minZ","_i","initialMaxX","initialMinX","MIN_VALUE","hasNegs","_i2","seriesLog","logarithmic","getLogVal","invalidLogScale","yIndex","yLogRatio","logYRange","MAX_VALUE","si","v","comboBarCount","comboCount","configInstance","options","extendYAxis","extendYAxisAnnotations","extendXAxisAnnotations","extendPointAnnotations","YAnnotations","_getY1Y2","_getYAxisAnnotationWidth","textX","yP","yPos","yAxisIndex","reversed","addYaxisAnnotation","PointAnnotations","pointY","console","warn","annoY","duplicateSeriesName","countDuplicateSeriesName","serieName","seriesName","actualSerieIndex","marker","optsPoints","point","drawMarker","customSVG","innerHTML","image","imgWidth","imgHeight","addImage","appendTo","addPointAnnotation","en","months","shortMonths","days","shortDays","toolbar","exportToSVG","exportToPNG","exportToCSV","menu","selection","selectionZoom","zoomIn","zoomOut","pan","reset","Options","yAxis","show","showAlways","showForNullSeries","opposite","tickAmount","forceNiceScale","floating","decimalsInFloat","minWidth","maxWidth","align","rotate","colors","axisBorder","axisTicks","title","tooltip","crosshairs","pointAnnotation","yAxisAnnotation","xAxisAnnotation","backgroundColor","texts","images","shapes","locales","defaultLocale","beforeMount","mounted","updated","click","mouseMove","mouseLeave","legendClick","markerClick","beforeZoom","beforeResetZoom","zoomed","scrolled","brushScrolled","parentHeightOffset","redrawOnParentResize","redrawOnWindowResize","sparkline","brush","autoScaleYaxis","stacked","stackType","tools","download","zoom","zoomin","zoomout","customIcons","export","csv","filename","columnDelimiter","headerCategory","headerValue","dateFormatter","timestamp","toDateString","png","svg","autoSelected","zoomedArea","plotOptions","area","fillTo","bar","horizontal","columnWidth","barHeight","distributed","rangeBarOverlap","rangeBarGroupRows","ranges","backgroundBarColors","backgroundBarOpacity","backgroundBarRadius","dataLabels","maxItems","hideOverflowingLabels","bubble","minBubbleRadius","maxBubbleRadius","candlestick","upward","downward","wick","useFillColor","boxPlot","upper","lower","heatmap","enableShades","shadeIntensity","reverseNegativeShade","useFillColorAsStroke","colorScale","inverse","treemap","radialBar","inverseOrder","startAngle","endAngle","hollow","margin","imageWidth","imageHeight","imageOffsetX","imageOffsetY","imageClipped","track","pie","customScale","expandOnClick","minAngleToShowLabel","donut","polarArea","rings","spokes","connectorColors","radar","polygons","strokeColors","shade","gradientToColors","inverseColors","src","forecastDataPoints","count","grid","lines","row","column","legend","showForSingleSeries","showForZeroSeries","horizontalAlign","tooltipHoverFormatter","customLegendItems","useSeriesColors","fillColors","customHTML","onClick","itemMargin","vertical","onItemClick","toggleDataSeries","onItemHover","highlightDataSeries","discrete","onDblClick","showNullDataPoints","sizeOffset","noData","verticalAlign","responsive","subtitle","shared","followCursor","intersect","custom","fillSeriesColor","theme","onDatasetHover","format","items","display","fixed","categories","overwriteCategories","rotateAlways","hideOverlappingLabels","minHeight","maxHeight","showDuplicates","datetimeUTC","datetimeFormatter","year","day","hour","minute","second","tickPlacement","colorFrom","colorTo","mode","palette","monochrome","shadeTo","Annotations","isBarHorizontal","xAxisAnnotations","yAxisAnnotations","pointsAnnotations","xDivision","dataPoints","axisCharts","yAnnotations","drawYAxisAnnotations","xAnnotations","drawXAxisAnnotations","pointAnnotations","drawPointAnnotations","annoArray","annoElArray","elGraphical","annotationsBackground","addText","_params$appendTo","_params$paddingLeft","_params$paddingRight","_params$paddingBottom","_params$paddingTop","textRect","_params$x","_params$y","_params$width","_params$height","_params$appendTo2","img","pushToMemory","context","addAnnotationExternal","contextMethod","childNodes","axesAnno","axesAnnoLabel","memory","methodsToExec","randomId","method","annos","querySelectorAll","listToArray","firstChild","removeChild","Fill","cnf","svgW","svgH","fillImg","elPattern","document","createElementNS","SVGNS","setAttrs","patternID","patternUnits","elImage","setAttributeNS","xlink","preserveAspectRatio","elDefs","seriesNumber","pathFill","patternFill","gradientFill","getSeriesIndex","getFillColors","seriesColors","fillType","getFillType","defaultColor","getOpacityFromRGBA","handlePatternFill","handleGradientFill","imgSrc","clippedImgArea","solid","patternStrokeWidth","patternLineColor","drawPattern","gradientTo","utils","gradientFrom","shadeColor","rgb2hex","gToColor","drawGradient","Markers","pointsPos","alwaysDrawMarker","elPointsWrap","q","PointClasses","getMarkerConfig","setSelectionFilter","addEvents","pointsArray","pStyle","getMarkerStyle","pointShape","pointStrokeDashArray","passive","Scatter","elSeries","elPointsMain","elParent","shouldDraw","finishRadius","Infinity","seriesZ","drawPoint","markerConfig","pathFillCircle","fillPath","animateMarker","setTimeout","prevX","prevY","prevR","prevPathJ","_speed","previousPaths","cs","collapsedSeries","animateCircle","default-marker-size","DataLabels","alwaysDrawDataLabel","drawnextLabel","dataLabelsRects","lastDrawnIndex","lastDrawnDataLabelsIndexes","lastDataLabelRect","dataLabelsConfig","elDataLabelsWrap","getText","centerTextInBubble","plotDataLabelsText","offsetCorrection","correctedLabels","dataLabelsCorrection","dataLabelColor","offX","offY","dataLabelText","textShadow","bCnf","paddingH","paddingV","elDataLabels","addBackgroundToDataLabel","elDataLabelsNodes","nextSibling","BarDataLabels","barCtx","barWidth","barYPosition","visibleSeries","renderedPath","bcx","bcy","isXNumeric","dataLabelsX","dataLabelsY","dataLabelsPos","barDataLabelsConfig","barOptions","isTimelineBar","yLabel","yLabelFormatters","isHorizontal","calculateBarsDataLabelsPosition","calculateColumnsDataLabelsPosition","drawCalculatedDataLabels","dataPointsDividedWidth","valIsNegative","newY","isReversed","dataPointsDividedHeight","newX","isSeriesNotCollapsed","collapsedSeriesIndices","modifiedDataLabelsConfig","Series","legendInactiveClass","getElementsByClassName","escapeString","targetElement","getSeriesByName","isHidden","iterateOnAllCollapsedSeries","ancillaryCollapsedSeries","isSeriesHidden","legendHelpers","shouldUpdateChart","shouldResetZoom","shouldResetCollapsed","initialSeries","ancillaryCollapsedSeriesIndices","emptyCollapsedSeries","updateHelpers","revertDefaultAxisMinMax","_updateSeries","allSeriesEls","seriesCnt","seriesEl","dataLabelEl","se","_se","allHeatMapElements","activeInactive","action","removeInactiveClassFromHoveredRange","ignoreBars","order","activeIndex","activeSeriesIndex","hasBars","pushPaths","seriesEls","paths","dArr","hasAttribute","chartType","handlePrevBubbleScatterPaths","heatTreeSeries","_loop","_loop2","getAttr","allSeriesCollapsed","noDataOpts","svgWidth","svgHeight","titleText","sl","equalLen","filteredSerX","filteredSeriesX","allSeriesHasEqualX","Helpers$1","totalItems","seriesLen","visibleI","visibleItems","zeroSerieses","radiusOnSeriesNumber","checkZeroSeries","yDivision","zeroH","zeroW","padHorizontal","minXDiff","yaxisIndex","isNullValue","getActiveConfigSeriesIndex","bcolor","barXPosition","shapeOpts","newPath","getRoundedBars","getPreviousPath","pathWithRadius","yArrj","yArrjF","yArrjVal","xArrj","xArrjF","xArrjVal","quadraticCurve","_pathWithRadius","_inverse","_ref4","zs","zsj","_s","xForVal","yForVal","goals","seriesGoals","goal","_goals$push","getXForValue","getYForValue","_ref5","goalX","goalY","lineGroup","Bar","xyRatios","seriesRangeBarTimeline","barHelpers","coreUtils","getLogSeries","getLogYRatios","initVariables","ret","bc","seriesNames","data:realIndex","addCollapsedClassToSeries","initPositions","initialPositions","elGoalsMarkers","getStrokeWidth","pathsParams","indexes","drawBarPaths","drawColumnPaths","barGoalLine","drawGoalLine","getPathFillColor","renderSeries","seriesXvalues","seriesYvalues","lineFill","renderPaths","strokeLineCap","forecast","handleBarDataLabels","getBarpaths","barBackground","getGoalValues","sxI","getColumnPaths","pp","gpp","DateTime","months31","months30","daysCntOfYear","date","parseDate","dateStr","parse","toISOString","substr","getTime","toUTCString","parsed","getTimeStamp","locale","utc","MMMM","MMM","dddd","ddd","ii","getUTCFullYear","getFullYear","M","getUTCMonth","getMonth","getUTCDate","getDate","H","getUTCHours","getHours","getUTCMinutes","getMinutes","getUTCSeconds","getSeconds","getUTCMilliseconds","getMilliseconds","T","charAt","tz","getTimezoneOffset","K","tzMin","getUTCDay","getDay","tsMin","tsMax","minD","formatDate","maxD","minMillisecond","maxMillisecond","minSecond","maxSecond","minMinute","maxMinute","minHour","maxHour","minDate","maxDate","minMonth","maxMonth","minYear","maxYear","subtract","determineDaysOfMonths","isLeapYear","dayOfYear","monthMod","RangeBar","_Bar","_super","rangeBarOptions","rangeBar","seriesRangeStart","seriesRangeEnd","srty","positions","detectOverlappingBars","drawRangeBarPaths","drawRangeColumnPaths","overlaps","rangeName","labelX","rowIndex","overlappedIndex","findIndex","tx","getRangeValue","start","end","ylabel","yLbFormatter","yLbTitleFormatter","isFinite","startVal","endVal","datetimeObj","Defaults","defaults","_getBoxTooltip","rangeCtx","_rangeCtx$getTooltipV","getTooltipValues","buildCustomTooltipHTML","handleTimelineTooltip","_rangeCtx$getTooltipV2","handleRangeColumnTooltip","existingDataLabelFormatter","yaxe","toFixed","cats","defaultFormatter","seriesCandleO","seriesCandleH","seriesCandleM","l","seriesCandleL","seriesCandleC","Config","responsiveOverride","extendAnnotations","init","newDefaults","chartDefaults","stacked100","checkForDarkTheme","Apex","checkForCatToNumericXAxis","mergedWithDefaultConfig","handleUserInputErrors","unsupportedZoom","notNumericXAxis","convertCatToNumeric","extendArray","isLogY","newYaxis","Error","Globals","timescaleLabels","noLabelsProvided","resizeTimer","selectionResizeTimer","xaxisLabelsCount","skipLastTimelinelabel","skipFirstTimelinelabel","isDataXYZ","isMultiLineX","yAxisScale","xAxisScale","xAxisTicksPositions","yLabelsCoords","yTitleCoords","xTickAmount","chartID","clicked","clientX","clientY","radarPolygons","msMaxTouchPoints","isDirty","isExecCalled","initialConfig","lastXAxis","lastYAxis","columnSeries","risingSeries","capturedSeriesIndex","capturedDataPointIndex","goldenPadding","ignoreYAxisIndexes","yAxisSameScaleIndices","radialSize","zoomEnabled","panEnabled","selectionEnabled","mousedown","lastClientPosition","visibleXRange","yValueDecimal","hasNullValues","rotateXLabels","defaultLabels","xLabelFormatter","xaxisTooltipFormatter","ttKeyFormatter","ttVal","ttZFormatter","LINE_HEIGHT_RATIO","xAxisLabelsHeight","xAxisLabelsWidth","yAxisLabelsWidth","scaleX","scaleY","translateX","translateY","translateYAxisX","yAxisWidths","translateXAxisY","translateXAxisX","globalVars","initGlobalVars","Base","Data","twoDSeries","threeDSeries","twoDSeriesX","isFormatXY","isFormat2DArray","sr","isBoxPlot","parseNumber","ts","_j","dt","activeI","_j2","isXString","isXArr","isXDate","isValidDate","isRangeColumn","isRangeData","fallbackToCategory","handleRangeDataFormat","rangeUniques","sarr","sarri","arri","sri","range1y1","range1y2","range2y1","ohlc","handleCandleStickBoxDataFormat","rangeStart","rangeEnd","uniqueKeys","thing","err","_j3","uI","serO","serH","serM","serL","serC","_j4","_j5","xlabels","handleDates","error","handleRangeData","isMultiFormat","handleFormat2DArray","handleFormatXY","handleCandleStickBoxData","singleArray","srt","elem","convertCatToNumericXaxis","_generateExternalLabels","labelArr","gls","glsi","excludeCollapsedSeriesInYAxis","core","resetGlobals","isMultipleY","parseDataAxisCharts","parseDataNonAxisCharts","getLargestSeries","setNullSeriesToZeroValues","getSeriesTotals","getStackedSeriesTotals","getPercentSeries","handleExternalLabelsData","getCategoryLabels","collapsed","Formatters","tooltipKeyFormat","defaultGeneralFormatter","legendFormatter","diff","xyCharts","defaultYFormatter","longest","niceMax","niceMin","AxesUtils","drawnLabels","rawLabel","xlbFormatter","customFormatter","isBold","xLabelFormat","unit","highestUnit","allowDuplicatesInTimeScale","timeScale","labelsLen","ticks","drawnLabelsRects","prev","reverse","isSeriesNull","yColors","pushExtraColors","labelsDivider","elYaxis","tY","elTick","Exports","scale","getAttributeNS","svgData","isIE11","nXmlnsSeen","svgString","svgNode","cloneNode","scaleSvgNode","XMLSerializer","serializeToString","fixSvgStringForIe11","xcrosshairs","ycrosshairs","zoomSelectionRects","cleanup","getSvgString","svgBlob","Blob","URL","createObjectURL","Promise","resolve","canvas","createElement","elWrap","canvasBg","getContext","fillStyle","fillRect","canvg","Canvg","fromString","ignoreClear","ignoreDimensions","blob","msToBlob","svgUrl","encodeURIComponent","Image","crossOrigin","onload","drawImage","_blob","imgURI","toDataURL","triggerDownload","dataURI","then","msSaveOrOpenBlob","_this3","_ref2$lineDelimiter","lineDelimiter","columns","rows","dataFormat","axesUtils","getCat","cat","lbFormatter","activeSeries","getLabel","sI","sname","num","ci","pop","handleAxisRowsColumns","encodeURI","href","ext","downloadLink","body","XAxis","xaxisLabels","isCategoryBarHorizontal","xaxisFontSize","xaxisFontFamily","xaxisForeColors","xaxisBorderWidth","xaxisBorderHeight","colWidth","elXaxis","elXaxisTexts","xPos","offsetYCorrection","checkLabelBasedOnTickamount","checkForOverflowingLabels","xAxisHeight","elTooltipTitle","elXaxisTitle","elXAxisTitleText","elHorzLine","colHeight","elYaxisTexts","ylabels","getYAxisForeColor","multiY","elLabel","labelRotatingCenter","elVerticalLine","drawYAxisTicks","appendToElement","xCount","xCountForCategoryCharts","_i3","x1Count","xAxis","xAxisTexts","yAxisTextsInversed","xAxisTextsInversed","xat","textRotatingCenter","tSpan","placeTextWithEllipsis","_xat","_tSpan","firstLabelPosX","lastLabelPosX","_xat2","Grid","elGrid","elgrid","renderGrid","drawGridArea","strokeSize","strokeMaxSize","elGridRectMask","elGridRectMarkerMask","elForecastMask","elNonForecastMask","barWidthLeft","barWidthRight","getLargestMarkerSize","markerSize","elGridRectMarker","defs","_drawGridLine","drawXaxisTicks","isHorzLine","xC","_drawGridLines","elgridLinesV","datetimeLines","_ref6","categoryLines","_y","_y2","_x2","tA","elgridLinesH","_ref7","_y3","_y4","_x4","hide","yTickAmount","_drawXYLines","_drawInvertedXYLines","drawGridBands","xAxisTickWidth","_drawGridBandRect","xc","_x5","_x6","_y6","_c","Range","yMin","yMax","NO_MIN_MAX_PROVIDED","_adjustTicksForSmallRange","linearScale","tiks","tempStep","magPow","magMsd","stepSize","lb","ub","ceil","valuesDivider","step","logs","newTicks","formattedVal","isFloat","logarithmicScale","noMinMaxProvided","niceScale","scalesIndices","similarIndex","alreadyExists","setYScaleForIndex","sameScaleInMultipleAxes","similarIndices","sj","sortedIndices","sort","indices","stringIndices","ind","JSON","stringify","sameScaleMinYArr","sameScaleMaxYArr","minYValue","yi","sameScaleMin","valueOf","sameScaleMax","sc","isStacked","firstXIndex","xi","initialMin","initialMax","stackedSer","serie","firstValue","yI","valMin","valMax","wS","wSI","Range$1","scales","setYRange","setXRange","setZRange","startingIndex","lowestY","highestY","seriesMin","seriesMax","noExponents","lowestYInAllSeries","minYMaxYArr","getMinYMaxY","minYMaxY","_setStackedMinMax","setMultipleYScales","getInitialMinXMaxX","catScale","setXScale","_handleSingleDataPoint","_getMinXDiff","newMinX","setUTCDate","newMaxX","sX","xDiff","stackedPoss","stackedNegs","poss","negs","YAxis","axisFontFamily","xAxisoffX","yaxisStyle","yaxisFontSize","yaxisFontFamily","yaxisFontWeight","isYAxisHidden","checkForReversedLabels","firstLabel","xPad","firstabelRotatingCenter","elYaxisTitle","_x","elYAxisTitleText","tl","inversedYAxisTitleText","inversedYAxisBorder","lineCorrection","yAxisOpposite","yAxisLabelsCoord","yAxisTitleCoord","elYAxisLabelsWrap","yAxisTitle","xPaddingForYAxisTitle","titleRotatingCenter","oppositeAxisCount","padd","yaxisLabelCoords","xLeft","xRight","leftOffsetX","rightOffsetX","multipleYs","shouldNotDrawAxis","axisWidth","yAxisInner","yAxisTexts","lI","Events","documentEvent","handler","args","evs","clickableArea","chartClass","eventList","event","which","capture","setupBrushHandler","elMenu","touches","Localization","localeName","selectedLocale","Axes","drawYaxisInversed","drawXaxisInversed","drawXaxis","drawYaxis","Crosshairs","crosshairGradient","crosshairShadow","shadowLeft","shadowTop","shadowColor","shadowOpacity","xcrosshairsFill","crosshairsWidth","crosshair","ycrosshairsHidden","Responsive","res","breakpoint","iterateResponsiveOptions","newOptions","largestBreakpoint","innerWidth","screen","extendArrayProps","overrideResponsiveOptions","newConfig","Theme","isColorFn","isHeatmapDistributed","isBarDistributed","setDefaultColors","predefined","monoArr","glsCnt","mainColor","part","gsl","newColor","defaultColors","colorSeries","TitleSubtitle","drawTitleSubtitle","tsConfig","Helpers$2","dCtx","elLegendWrap","lgRect","valArr","maxArrs","xl","idx","maxArrLen","DimXAxis","getxAxisTimeScaleLabelsCoords","lgWidthForSideLegends","getLargestStringFromArr","dimHelpers","getLargestStringFromMultiArr","xFormat","xLabelrect","xArrLabelrect","yAxisWidth","gridPad","getRotatedTextRects","overlappingXLabels","xaxisLabelCoords","xtype","lbWidth","isBarOpposite","padYAxe","isCollapsed","firstimescaleLabel","lastLabelPosition","yAxisWidthRight","firstLabelPosition","yAxisWidthLeft","lgRightRectWidth","xPadRight","rightPad","xPadLeft","DimYAxis","labelPad","yS","yAxisMinWidth","minV","longestStr","barYaxisLabels","rotateStr","arrLabelrect","padForLabelTitle","isHiddenYAxis","yLabelCoord","yTitleCoord","DimGrid","hasBar","gridShrinkOffset","isSparkline","titleCoords","getTitleSubtitleCoords","subtitleCoords","Dimensions","dimYAxis","dimXAxis","dimGrid","getLegendsRect","setDimensionsForAxisCharts","setDimensionsForNonAxisCharts","gridPadFortitleSubtitle","gridPadForColumnsInNumericAxis","getyAxisLabelsCoords","getyAxisTitleCoords","getTotalYAxisWidth","getxAxisLabelsCoords","xtitleCoords","getxAxisTitleCoords","conditionalChecksForAxisCoords","xAxisWidth","additionalPaddingXLabels","legendTopBottom","setGridXPosForDualYAxis","setYAxisXPosition","minYAxisWidth","maxYAxisWidth","Helpers$3","lgCtx","stylesheet","rules","createTextNode","currLegendsWrapRect","currLegendsWrapWidth","clwh","clww","elLegendForeign","elForeign","getLegendStyles","csi","riseCollapsedSeries","hideSeries","_seriesEl","printDataLabelsInner","fire","shouldNotHideYAxis","baseVal","removeIndexOfRising","seriesChildren","_getSeriesBasedOnCollapsedState","seriesIndices","Legend","onLegendClick","onLegendHovered","isBarsDistributed","drawLegends","getElementsByTagName","appendToForeignObject","legendAlignHorizontal","legendAlignVertical","legendNames","fillcolor","isLegendInversed","elMarker","mOffsetX","mOffsetY","mHeight","mWidth","mBorderWidth","mBorderColor","mBorderRadius","mStyle","setProperty","data:collapsed","elLegend","elLegendText","sanitizeDom","textColor","data:default-text","getSeriesTotalByIndex","seriesHaveSameValues","legendRect","dim","titleH","subtitleH","hw","lRect","getLegendBBox","dimensions","titleRect","subtitleRect","setLegendWrapXY","hoverOverLegend","highlightRangeInSeries","toggleSeriesOnHover","Toolbar","ev","selectedClass","localeValues","createDiv","elToolbarWrap","elZoom","elZoomIn","elZoomOut","elPan","elSelection","elZoomReset","elMenuIcon","elCustomIcons","toolbarControls","appendZoomControl","ico","tool","icon","zoomSelectionCtrls","moveIndexInArray","_createHamburgerMenu","addToolbarEventListeners","elMenuItems","menuItems","handleZoomReset","toggleZoomSelection","handleZoomIn","handleZoomOut","togglePanning","toggleMenu","handleDownload","getSyncedCharts","ch","toggleOtherControls","enabledType","el2","getToolbarIconsReference","newMinXMaxX","_getNewMinXMaxX","disableZoomIn","zoomUpdateOptions","disableZoomOut","shouldFloor","beforeZoomRange","getBeforeZoomRange","autoScaleY","_updateOptions","zoomCallback","newRange","_this4","exprt","exportToPng","resetZoomRange","ZoomPanSelection","_Toolbar","dragged","startX","endX","dragX","startY","endY","dragY","moveDirection","zoomRect","selectionRect","gridRect","slDraggableRect","draggable","on","selectionDragging","preselectedSelection","hoverArea","svgMouseEvents","off","zoomtype","shiftKey","shiftWasPressed","enableZoomPanFromToolbar","tc","changedTouches","gridRectDim","panDragging","selectionDrawing","_gridRectDim","selectionDrawn","delayedPanScrolled","hideSelectionRect","makeSelectionRectDraggable","rectDim","selectize","pointSize","pointType","resize","constraint","drawSelectionRect","_ref2$translateX","_ref2$translateY","scalingAttrs","inversedX","inversedY","selectionWidth","selectionHeight","selRect","timerInterval","getSelAttr","draggedProps","clearTimeout","xyAxis","tempX","tempY","xLowestValue","xHighestValue","yHighestValue","yLowestValue","_xaxis","_yaxis","deltaX","deltaY","panScrolled","updateScrolledChart","Utils$1","tooltipContext","ttCtx","hoverWidth","hoverHeight","xDivisor","yDivisor","seriesBound","hoverX","hoverY","jHorz","seriesYValArr","capturedSeries","closest","seriesXValArr","seriesXVal","seriesYVal","closestInMultiArray","closestInArray","Xarrays","Yarrays","currIndex","getFirstActiveXArray","currY","currX","diffX","diffY","arrY","arrIndex","innerKey","newdiffY","newdiffX","newdiff","firstActiveSeriesIndex","xarr","curr","xSameForAllSeriesJArr","sameLen","allbars","markersWraps","getElMarkers","getElBars","hoverSize","state","allTooltipSeriesGroups","Labels","tooltipUtil","_ref$shared","ttItems","_ref$i","_ref$j","handleCustomTooltip","toggleActiveInactiveSeries","values","getValuesToPrint","printLabels","tooltipEl","getElTooltip","tooltipRect","ttWidth","ttHeight","goalVals","hasGoalValues","gi","xVal","zVal","xAxisTTVal","pColor","inverset","getFormatters","getSeriesName","tIndex","getValBySeriesIndex","DOMHandling","ttItemsChildren","children","showTooltipTitle","tooltipTitle","blxaxisTooltip","xaxisTooltipText","ttYLabel","ttYVal","ttGLabel","ttGVal","createGoalsHtml","gLabels","gVals","toggleAllTooltipSeriesGroups","firstTooltipSeriesGroup","customFormatterOpts","zFormatter","bufferXVal","Position","getElXCrosshairs","xcrosshairsWidth","moveXAxisTooltip","xaxisTooltip","xaxisOffY","yaxisTTEls","ycrosshairsHiddenRectY1","yAxisTTHeight","pointR","getElGrid","allPoints","resetPointsSize","enlargeCurrentPoint","moveDynamicPointOnHover","pointsArr","getHoverMarkerSize","serType","moveXCrosshairs","fixedTooltip","moveTooltip","getAllMarkers","pointArr","pcy","tcy","barLen","jBar","bw","bh","Marker","tooltipPosition","elsSeries","pointsMain","elPointOptions","elPointsG","newPointSize","col","newSize","oldPointSize","lastChild","Intersect","opt","tooltipLabels","drawSeriesTexts","findAncestor","showOnIntersect","bx","barXY","getBarTooltipXY","cl","barRect","AxesTooltip","isBottom","tooltipCssClass","renderTo","isRight","yaxisOffX","samescales","ssi","yaxisTooltip","yaxisTooltipText","_bar","_barWidth","_count","yaxisTooltips","moveYCrosshairs","moveYAxisTooltip","Tooltip","tConfig","axesTooltip","isBarShared","drawXaxisTooltip","drawYaxisTooltip","setXCrosshairWidth","handleYCrosshair","getXAxisTicksPositions","drawDynamicPoints","ttItemsCnt","legendLabels","createTTElements","addSVGEvents","gTxt","gYZ","gValText","txtLabel","txtValue","commonBar","chartWithmarkers","tooltipY","tooltipX","seriesHoverParams","addPathsEventListeners","addDatapointEventsListeners","seriesAll","lineAreaPoints","extendedOpts","seriesHover","chartGroups","getGroupedCharts","newOpts","seriesHoverByContext","chartCtx","drawFixedTooltipRect","axisChartsTooltips","nonAxisChartsTooltips","handleMouseOut","isStickyTooltip","hasYAxisTooltip","handleStickyTooltip","markerXY","handleHeatTreeTooltip","handleBarTooltip","hasMarkers","handleMarkerTooltip","yt","drawYaxisTooltipText","defaultText","decodeURIComponent","capj","getNearestValues","handleStickyCapturedSeries","isXoverlap","isInitialSeriesSameLen","allPaths","deactivateHoverFilter","bars","legendName","lsIndex","enlargePoints","moveDynamicPointsOnHover","barSeriesHeight","getBarsHeight","moveStickyTooltipOverBars","moveMarkers","BarStacked","prevYF","prevXF","prevYVal","prevXVal","xArrValues","yArrValues","commonPathOpts","drawStackedBarPaths","drawStackedColumnPaths","prevBarW","bXP","seriesVal","prevBarH","bYP","prevYValue","_ii","BoxCandleStick","candlestickOptions","boxOptions","drawBoxPaths","pi","isPositive","colorPos","colorNeg","getOHLCValue","l1","l2","TreemapHelpers","negRange","chartOpts","colorShadePercent","colorProps","determineColor","rTotal","HeatMap","rectRadius","rev","checkColorRange","heatSeries","heatColor","getShadeColor","heatColorProps","addListeners","animateHeatMap","animateHeatColor","formattedText","calculateDataLabels","unshift","divisor","animateRect","CircularChartsHelpers","yaxisConfig","Pie","animBeginArr","animDur","donutDataLabels","lineColorArr","defaultSize","fullAngle","initialAngle","donutSize","sliceLabels","sliceSizes","prevSectorAngleArr","negToZero","sectorAngleArr","drawPolarElements","previousAngle","prevTotal","_k","scaleSize","halfW","halfH","elG","drawArcs","renderInnerDataLabels","hollowSize","prevStartAngle","prevEndAngle","elPieArc","getChangedPath","elPath","data:angle","data:startAngle","data:strokeWidth","data:value","labelPosition","polarToCartesian","dur","animatePaths","animateStartingPos","shouldSetPrevPaths","pieClicked","elPieLabelWrap","elPieLabel","revertDataLabelsInner","prevAngle","fromStartAngle","toStartAngle","animateArc","currAngle","fromAngle","getPiePath","during","isTrack","allEls","pieSlice","origPath","data:pieClicked","startDeg","startRadians","endDeg","endRadians","startInner","endInner","largeArc","pathBeginning","gCircles","gYAxis","yScale","yTexts","circleSize","drawYAxisTexts","drawSpokes","showTotal","labelColor","valueColor","labelFontSize","labelFontFamily","labelFontWeight","valOffset","elValue","labelsConfig","isTotal","printInnerLabels","dataLabelsGroup","spokeConfig","angleDivision","sliceOut","slices","selectSlice","makeSliceOut","printLabel","Radar","isLog","maxValue","minValue","dataRadiusOfPercent","dataRadius","angleArr","yaxisLabelsTextsPos","allSeries","disAngle","dataPointsPos","elDataPointsMain","yaxisLabels","longestSeries","data:longestSeries","dv","getDataPointsPos","createPaths","defaultRenderedPathOptions","linePathsTo","renderedLinePath","linePathsFrom","renderedAreaPath","areaPathsFrom","areaPathsTo","drawPolygons","xaxisTexts","drawXAxisTexts","elS","yaxisTexts","layers","radiusSizes","layerDis","polygonStrings","radiusSize","getPolygonPos","drawPolygon","yText","xaxisLabelsConfig","elXAxisWrap","polygonPos","textPos","getTextPos","origin","linePathTo","areaPathTo","polygonSize","dataRadiusArr","dataPointsPosArray","curPointPos","Radial","_Pie","totalAngle","trackStartAngle","trackEndAngle","radialDataLabels","colorArr","elTracks","drawTracks","angleRatio","elHollow","elRadialBarTrack","trackConfig","hollowFillID","hollowRadius","drawHollowImage","drawHollow","shown","reverseLoop","elRadialBarArc","dataValue","_shadow","randID","hollowFillImg","loaded","loader","_image","Helpers$4","lineCtx","gSeries","ptX","ptY","xPT1st","categoryAxisCorrection","pathFromLine","pathFromArea","appendPathFrom","lineYPosition","prevSeriesY","zeroY","Line","isPointsChart","pointsChart","scatter","noNegatives","lineHelpers","ptype","sameValueSeriesFix","_initSerieVariables","pY","pX","determineFirstPrevY","pathsFrom","_calculatePathsFrom","_iterateOverDataPoints","linePaths","areaPaths","_handlePaths","areaBottomY","linePath","areaPath","checkPreviousPaths","forecastCutoff","_p","linePathCommonOpts","_renderedPath","renderedForecastPath","iterations","isNull","pii","cpi","prevIndex","calculatePoints","calculatedPaths","_createPaths","handleNullDataPoints","_handleMarkersAndLabels","draw","plotChartMarkers","drawDataLabel","numericOrCatX","TreemapSquared","generate","Container","xoffset","yoffset","shortestEdge","getCoordinates","coordinates","subxoffset","subyoffset","areawidth","sumArray","areaheight","cutArea","newcontainer","newwidth","newheight","treemapSingledimensional","rawtreemap","flattreemap","flattenTreemap","squarify","currentrow","container","stack","nextdatapoint","nextnode","newrow","currentratio","calculateRatio","newratio","improvesRatio","normalizeddata","multiplier","normalize","sum","sumMultidimensionalArray","treemapMultidimensional","mergedtreemap","mergeddata","results","TreemapChart","elDataLabelWrap","fromRect","toRect","animateTreemap","getFontSize","rotateToFitLabel","arearoot","averagelabelsize","totalLabelLength","countLabels","TimeScale","timeScaleArray","daysDiff","determineInterval","MINUTES_IN_DAY","timeIntervals","getTimeUnitsfromTimestamp","daysWidthOnXAxis","hoursWidthOnXAxis","minutesWidthOnXAxis","secondsWidthOnXAxis","numberOfHours","numberOfMinutes","numberOfSeconds","numberOfDays","numberOfMonths","numberOfYears","firstVal","currentMillisecond","currentSecond","currentMinute","currentHour","currentMonthDate","currentDate","currentMonth","currentYear","tickInterval","generateYearScale","generateMonthScale","generateDayScale","generateHourScale","generateMinuteScale","generateSecondScale","adjustedMonthInTimeScaleArray","defaultReturn","modulo","shouldNotSkipUnit","shouldNotPrint","filteredTimeScale","inverted","reformattedTimescaleArray","formatDates","removedOverlappingTS","removeOverlappingTS","plotCoords","hoursDiff","minutesDiff","firstTickValue","firstTickPosition","remainingDays","determineRemainingDaysOfYear","determineDaysOfYear","yrCounter","_month","_year","_getYear","monthVal","changeMonth","dateVal","changeDate","remainingMins","raw","createRawDateString","dateToFormat","parseDateWithTimezone","customFormat","dtFormatter","dateString","constantLabelWidth","equalLabelLengthFlag","filteredArray","prevLabelWidth","prevPos","Core","ct","Doc","xmlns:data","setSVGDimensions","elAnnotations","lineSeries","areaSeries","scatterSeries","bubbleSeries","candlestickSeries","boxplotSeries","st","boxCandlestick","elGraph","barStacked","scatterLine","bubbleLine","elDim","getDimensions","widthUnit","heightUnit","elParentDim","legendHeight","chartInnerDimensions","elRadialRect","newHeight","resetxyValues","globalObj","drawXCrosshairs","drawYCrosshairs","formattedTimeScale","calculateTimeScaleTicks","recalcDimensionsBasedOnFormat","getCalculatedRatios","targetChart","targets","ApexCharts","getChartByID","brushSource","updateSourceChart","multipleYaxis","UpdateHelpers","redraw","updateSyncedCharts","overwriteInitialConfig","charts","getPreviousPaths","update","newSeries","existingSeries","overwriteInitialSeries","_extendSeries","getLastYAxis","invent","inherit","Parent","backgroundAlpha","autoSetIn","put","in1","in2","BlendEffect","colorMatrix","ColorMatrixEffect","convolveMatrix","matrix","ConvolveMatrixEffect","components","ComponentTransferEffect","operator","CompositeEffect","FloodEffect","OffsetEffect","ImageEffect","MergeEffect","GaussianBlurEffect","morphology","MorphologyEffect","diffuseLighting","surfaceScale","diffuseConstant","kernelUnitLength","DiffuseLightingEffect","displacementMap","xChannelSelector","yChannelSelector","DisplacementMapEffect","specularLighting","specularExponent","SpecularLightingEffect","tile","TileEffect","turbulence","baseFrequency","numOctaves","seed","stitchTiles","TurbulenceEffect","Defs","block","Element","Nested","doc","Effect","in","effect","get","_result","ParentEffect","_result2","chainingEffects","ChildEffect","effects","normaliseMatrix","sqrt","kernelMatrix","dx","dy","listString","parentEffects","Set","that","each","MergeNode","compontents","toUpperCase","childEffects","distantLight","azimuth","elevation","pointLight","spotLight","pointsAtX","pointsAtY","pointsAtZ","mergeNode","foreach","sepiatone","handleBlock","startArr","startOffsetM","startOffsetNextM","destArr","destOffsetM","destOffsetNextM","undefined$1","startArrTemp","destArrTemp","posStart","posDest","simplyfy","toBeziere","setPosAndReflection","dest","reflection","retVal","primedCoord","lambda","mat","cSquare","O","OA","OB","tetaStart","tetaEnd","deltaTeta","nbSectors","arcSegPoints","sinAngle","cosAngle","pt","il","xAxisRotation","A","Point","Matrix","acos","tan","arcToBeziere","findNextM","PathArray","morph","destination","DragHandler","remember","transformPoint","matrixTransform","box","rbox","Use","buttons","defaultPrevented","preventDefault","stopPropagation","createSVGPoint","getScreenCTM","anchorOffset","Text","startPoints","drag","gx","gy","snapToGrid","dragHandler","SelectHandler","pointSelection","isSelected","rectSelection","pointsList","lt","rt","rb","pointCoord","setting","isPointCentered","pointCoords","settings","pointsLists","option","pointsExclude","nested","translate","deepSelect","selectPoints","selectRect","observe","set","drawPoints","getPointArray","curriedEvent","returnValue","pageX","pageY","addClass","classPoints","center","updatePointSelection","updateRectSelection","rotationPoint","getMoseDownFunc","eventName","classRect","pointElement","MutationObserver","observerInst","attributes","disconnect","clear","ResizeHandler","parameters","lastUpdateCall","pageXOffset","pageYOffset","_extractPosition","txPt","detail","rotation","calc","snap","checkAspectRatio","current","sAngle","atan2","pAngle","snapToAngle","done","flag","pointCoordsY","constraintToBox","orgX","orgY","isReverse","saveAspectRatio","updatedSnap","aspectRatio","newW","newH","newAspectRatio","css","ref","insertAt","head","styleSheet","cssText","styleInject","resetTriggers","triggers","__resizeTriggers__","expand","firstElementChild","contract","lastElementChild","expandChild","scrollLeft","scrollWidth","scrollTop","scrollHeight","offsetWidth","offsetHeight","scrollListener","__resizeRAF__","cancelFrame","requestFrame","__resizeLast__","checkTriggers","__resizeListeners__","raf","cancel","requestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","cancelAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","animation","animationstartevent","domPrefixes","startEvents","elm","animationName","addResizeListener","removeResizeListener","removeEventListener","InitCtxVariables","publicMethods","axes","exports","localization","formatters","titleSubtitle","zoomPanSelection","Destroy","isUpdating","destroy","clearDomElements","removeClass","ungroup","elSVG","domEls","killSVG","initModules","windowResizeHandler","_windowResizeHandler","parentResizeHandler","_parentResizeCallback","reject","_chartInstances","setLocale","graphData","mount","checkResponsiveConfig","setupElements","combo","checkComboSeries","allSeriesAreEmpty","handleNoData","setupEventHandlers","parseData","setGlobalMarkerSize","setLabelFormatters","hasAllSeriesEqualX","coreCalculations","heatmapLabelFormatters","xySettings","createGridMask","plotChartType","bringForward","dataLabelsBackground","shiftGraphPosition","elInner","drawAxis","drawGrid","drawImageAnnos","drawTextAnnos","xAxisLabelCorrections","setYAxisTextAlignments","yAxisTitleRotate","drawAxesAnnotations","drawTooltip","createToolbar","resizeNonAxisCharts","resetSeries","forceXAxisUpdate","forceYAxisUpdate","clearPreviousPaths","updateThemeOptions","newSerie","newData","allCharts","_this5","toggleSeries","showSeries","addXaxisAnnotationExternal","addYaxisAnnotationExternal","addPointAnnotationExternal","clearAnnotations","removeAnnotation","getSeriesTotalsXRange","toggleDataPointSelection","setCurrentLocaleValues","_windowResize","_this6","chartId","render","_len","_key"],"mappings":"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","sourcesContent":["/*!\n * ApexCharts v3.27.3\n * (c) 2018-2021 Juned Chhipa\n * Released under the MIT License.\n */\ndefine('local_edwiserreports/chart/apexcharts', ['local_edwiserreports/chart/svg'], function(SVG) {\n\n    function _typeof(obj) {\n        \"@babel/helpers - typeof\";\n\n        if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n            _typeof = function(obj) {\n                return typeof obj;\n            };\n        } else {\n            _typeof = function(obj) {\n                return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n            };\n        }\n\n        return _typeof(obj);\n    }\n\n    function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n        }\n    }\n\n    function _defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }\n\n    function _createClass(Constructor, protoProps, staticProps) {\n        if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) _defineProperties(Constructor, staticProps);\n        return Constructor;\n    }\n\n    function _defineProperty(obj, key, value) {\n        if (key in obj) {\n            Object.defineProperty(obj, key, {\n                value: value,\n                enumerable: true,\n                configurable: true,\n                writable: true\n            });\n        } else {\n            obj[key] = value;\n        }\n\n        return obj;\n    }\n\n    function ownKeys(object, enumerableOnly) {\n        var keys = Object.keys(object);\n\n        if (Object.getOwnPropertySymbols) {\n            var symbols = Object.getOwnPropertySymbols(object);\n            if (enumerableOnly) symbols = symbols.filter(function(sym) {\n                return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n            });\n            keys.push.apply(keys, symbols);\n        }\n\n        return keys;\n    }\n\n    function _objectSpread2(target) {\n        for (var i = 1; i < arguments.length; i++) {\n            var source = arguments[i] != null ? arguments[i] : {};\n\n            if (i % 2) {\n                ownKeys(Object(source), true).forEach(function(key) {\n                    _defineProperty(target, key, source[key]);\n                });\n            } else if (Object.getOwnPropertyDescriptors) {\n                Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n            } else {\n                ownKeys(Object(source)).forEach(function(key) {\n                    Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n                });\n            }\n        }\n\n        return target;\n    }\n\n    function _inherits(subClass, superClass) {\n        if (typeof superClass !== \"function\" && superClass !== null) {\n            throw new TypeError(\"Super expression must either be null or a function\");\n        }\n\n        subClass.prototype = Object.create(superClass && superClass.prototype, {\n            constructor: {\n                value: subClass,\n                writable: true,\n                configurable: true\n            }\n        });\n        if (superClass) _setPrototypeOf(subClass, superClass);\n    }\n\n    function _getPrototypeOf(o) {\n        _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n            return o.__proto__ || Object.getPrototypeOf(o);\n        };\n        return _getPrototypeOf(o);\n    }\n\n    function _setPrototypeOf(o, p) {\n        _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n            o.__proto__ = p;\n            return o;\n        };\n\n        return _setPrototypeOf(o, p);\n    }\n\n    function _isNativeReflectConstruct() {\n        if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n        if (Reflect.construct.sham) return false;\n        if (typeof Proxy === \"function\") return true;\n\n        try {\n            Date.prototype.toString.call(Reflect.construct(Date, [], function() {}));\n            return true;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    function _assertThisInitialized(self) {\n        if (self === void 0) {\n            throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n        }\n\n        return self;\n    }\n\n    function _possibleConstructorReturn(self, call) {\n        if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n            return call;\n        }\n\n        return _assertThisInitialized(self);\n    }\n\n    function _createSuper(Derived) {\n        var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n        return function _createSuperInternal() {\n            var Super = _getPrototypeOf(Derived),\n                result;\n\n            if (hasNativeReflectConstruct) {\n                var NewTarget = _getPrototypeOf(this).constructor;\n\n                result = Reflect.construct(Super, arguments, NewTarget);\n            } else {\n                result = Super.apply(this, arguments);\n            }\n\n            return _possibleConstructorReturn(this, result);\n        };\n    }\n\n    function _toConsumableArray(arr) {\n        return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n    }\n\n    function _arrayWithoutHoles(arr) {\n        if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n    }\n\n    function _iterableToArray(iter) {\n        if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n    }\n\n    function _unsupportedIterableToArray(o, minLen) {\n        if (!o) return;\n        if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n        var n = Object.prototype.toString.call(o).slice(8, -1);\n        if (n === \"Object\" && o.constructor) n = o.constructor.name;\n        if (n === \"Map\" || n === \"Set\") return Array.from(o);\n        if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n    }\n\n    function _arrayLikeToArray(arr, len) {\n        if (len == null || len > arr.length) len = arr.length;\n\n        for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n        return arr2;\n    }\n\n    function _nonIterableSpread() {\n        throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n    }\n\n    /*\n     ** Generic functions which are not dependent on ApexCharts\n     */\n    var Utils = /*#__PURE__*/ function() {\n        function Utils() {\n            _classCallCheck(this, Utils);\n        }\n\n        _createClass(Utils, [{\n            key: \"shadeRGBColor\",\n            value: function shadeRGBColor(percent, color) {\n                var f = color.split(','),\n                    t = percent < 0 ? 0 : 255,\n                    p = percent < 0 ? percent * -1 : percent,\n                    R = parseInt(f[0].slice(4), 10),\n                    G = parseInt(f[1], 10),\n                    B = parseInt(f[2], 10);\n                return 'rgb(' + (Math.round((t - R) * p) + R) + ',' + (Math.round((t - G) * p) + G) + ',' + (Math.round((t - B) * p) + B) + ')';\n            }\n        }, {\n            key: \"shadeHexColor\",\n            value: function shadeHexColor(percent, color) {\n                    var f = parseInt(color.slice(1), 16),\n                        t = percent < 0 ? 0 : 255,\n                        p = percent < 0 ? percent * -1 : percent,\n                        R = f >> 16,\n                        G = f >> 8 & 0x00ff,\n                        B = f & 0x0000ff;\n                    return '#' + (0x1000000 + (Math.round((t - R) * p) + R) * 0x10000 + (Math.round((t - G) * p) + G) * 0x100 + (Math.round((t - B) * p) + B)).toString(16).slice(1);\n                } // beautiful color shading blending code\n                // http://stackoverflow.com/questions/5560248/programmatically-lighten-or-darken-a-hex-color-or-rgb-and-blend-colors\n\n        }, {\n            key: \"shadeColor\",\n            value: function shadeColor(p, color) {\n                if (Utils.isColorHex(color)) {\n                    return this.shadeHexColor(p, color);\n                } else {\n                    return this.shadeRGBColor(p, color);\n                }\n            }\n        }], [{\n            key: \"bind\",\n            value: function bind(fn, me) {\n                return function() {\n                    return fn.apply(me, arguments);\n                };\n            }\n        }, {\n            key: \"isObject\",\n            value: function isObject(item) {\n                return item && _typeof(item) === 'object' && !Array.isArray(item) && item != null;\n            }\n        }, {\n            key: \"listToArray\",\n            value: function listToArray(list) {\n                    var i,\n                        array = [];\n\n                    for (i = 0; i < list.length; i++) {\n                        array[i] = list[i];\n                    }\n\n                    return array;\n                } // to extend defaults with user options\n                // credit: http://stackoverflow.com/questions/27936772/deep-object-merging-in-es6-es7#answer-34749873\n\n        }, {\n            key: \"extend\",\n            value: function extend(target, source) {\n                var _this = this;\n\n                if (typeof Object.assign !== 'function') {\n\n                    (function() {\n                        Object.assign = function(target) {\n\n                            if (target === undefined || target === null) {\n                                throw new TypeError('Cannot convert undefined or null to object');\n                            }\n\n                            var output = Object(target);\n\n                            for (var index = 1; index < arguments.length; index++) {\n                                var _source = arguments[index];\n\n                                if (_source !== undefined && _source !== null) {\n                                    for (var nextKey in _source) {\n                                        if (_source.hasOwnProperty(nextKey)) {\n                                            output[nextKey] = _source[nextKey];\n                                        }\n                                    }\n                                }\n                            }\n\n                            return output;\n                        };\n                    })();\n                }\n\n                var output = Object.assign({}, target);\n\n                if (this.isObject(target) && this.isObject(source)) {\n                    Object.keys(source).forEach(function(key) {\n                        if (_this.isObject(source[key])) {\n                            if (!(key in target)) {\n                                Object.assign(output, _defineProperty({}, key, source[key]));\n                            } else {\n                                output[key] = _this.extend(target[key], source[key]);\n                            }\n                        } else {\n                            Object.assign(output, _defineProperty({}, key, source[key]));\n                        }\n                    });\n                }\n\n                return output;\n            }\n        }, {\n            key: \"extendArray\",\n            value: function extendArray(arrToExtend, resultArr) {\n                    var extendedArr = [];\n                    arrToExtend.map(function(item) {\n                        extendedArr.push(Utils.extend(resultArr, item));\n                    });\n                    arrToExtend = extendedArr;\n                    return arrToExtend;\n                } // If month counter exceeds 12, it starts again from 1\n\n        }, {\n            key: \"monthMod\",\n            value: function monthMod(month) {\n                return month % 12;\n            }\n        }, {\n            key: \"clone\",\n            value: function clone(source) {\n                if (Object.prototype.toString.call(source) === '[object Array]') {\n                    var cloneResult = [];\n\n                    for (var i = 0; i < source.length; i++) {\n                        cloneResult[i] = this.clone(source[i]);\n                    }\n\n                    return cloneResult;\n                } else if (Object.prototype.toString.call(source) === '[object Null]') {\n                    // fixes an issue where null values were converted to {}\n                    return null;\n                } else if (Object.prototype.toString.call(source) === '[object Date]') {\n                    return source;\n                } else if (_typeof(source) === 'object') {\n                    var _cloneResult = {};\n\n                    for (var prop in source) {\n                        if (source.hasOwnProperty(prop)) {\n                            _cloneResult[prop] = this.clone(source[prop]);\n                        }\n                    }\n\n                    return _cloneResult;\n                } else {\n                    return source;\n                }\n            }\n        }, {\n            key: \"log10\",\n            value: function log10(x) {\n                return Math.log(x) / Math.LN10;\n            }\n        }, {\n            key: \"roundToBase10\",\n            value: function roundToBase10(x) {\n                return Math.pow(10, Math.floor(Math.log10(x)));\n            }\n        }, {\n            key: \"roundToBase\",\n            value: function roundToBase(x, base) {\n                return Math.pow(base, Math.floor(Math.log(x) / Math.log(base)));\n            }\n        }, {\n            key: \"parseNumber\",\n            value: function parseNumber(val) {\n                if (val === null) return val;\n                return parseFloat(val);\n            }\n        }, {\n            key: \"randomId\",\n            value: function randomId() {\n                return (Math.random() + 1).toString(36).substring(4);\n            }\n        }, {\n            key: \"noExponents\",\n            value: function noExponents(val) {\n                var data = String(val).split(/[eE]/);\n                if (data.length === 1) return data[0];\n                var z = '',\n                    sign = val < 0 ? '-' : '',\n                    str = data[0].replace('.', ''),\n                    mag = Number(data[1]) + 1;\n\n                if (mag < 0) {\n                    z = sign + '0.';\n\n                    while (mag++) {\n                        z += '0';\n                    }\n\n                    return z + str.replace(/^-/, '');\n                }\n\n                mag -= str.length;\n\n                while (mag--) {\n                    z += '0';\n                }\n\n                return str + z;\n            }\n        }, {\n            key: \"getDimensions\",\n            value: function getDimensions(el) {\n                var computedStyle = getComputedStyle(el, null);\n                var elementHeight = el.clientHeight;\n                var elementWidth = el.clientWidth;\n                elementHeight -= parseFloat(computedStyle.paddingTop) + parseFloat(computedStyle.paddingBottom);\n                elementWidth -= parseFloat(computedStyle.paddingLeft) + parseFloat(computedStyle.paddingRight);\n                return [elementWidth, elementHeight];\n            }\n        }, {\n            key: \"getBoundingClientRect\",\n            value: function getBoundingClientRect(element) {\n                var rect = element.getBoundingClientRect();\n                return {\n                    top: rect.top,\n                    right: rect.right,\n                    bottom: rect.bottom,\n                    left: rect.left,\n                    width: element.clientWidth,\n                    height: element.clientHeight,\n                    x: rect.left,\n                    y: rect.top\n                };\n            }\n        }, {\n            key: \"getLargestStringFromArr\",\n            value: function getLargestStringFromArr(arr) {\n                    return arr.reduce(function(a, b) {\n                        if (Array.isArray(b)) {\n                            b = b.reduce(function(aa, bb) {\n                                return aa.length > bb.length ? aa : bb;\n                            });\n                        }\n\n                        return a.length > b.length ? a : b;\n                    }, 0);\n                } // http://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb#answer-12342275\n\n        }, {\n            key: \"hexToRgba\",\n            value: function hexToRgba() {\n                var hex = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '#999999';\n                var opacity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.6;\n\n                if (hex.substring(0, 1) !== '#') {\n                    hex = '#999999';\n                }\n\n                var h = hex.replace('#', '');\n                h = h.match(new RegExp('(.{' + h.length / 3 + '})', 'g'));\n\n                for (var i = 0; i < h.length; i++) {\n                    h[i] = parseInt(h[i].length === 1 ? h[i] + h[i] : h[i], 16);\n                }\n\n                if (typeof opacity !== 'undefined') h.push(opacity);\n                return 'rgba(' + h.join(',') + ')';\n            }\n        }, {\n            key: \"getOpacityFromRGBA\",\n            value: function getOpacityFromRGBA(rgba) {\n                return parseFloat(rgba.replace(/^.*,(.+)\\)/, '$1'));\n            }\n        }, {\n            key: \"rgb2hex\",\n            value: function rgb2hex(rgb) {\n                rgb = rgb.match(/^rgba?[\\s+]?\\([\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?/i);\n                return rgb && rgb.length === 4 ? '#' + ('0' + parseInt(rgb[1], 10).toString(16)).slice(-2) + ('0' + parseInt(rgb[2], 10).toString(16)).slice(-2) + ('0' + parseInt(rgb[3], 10).toString(16)).slice(-2) : '';\n            }\n        }, {\n            key: \"isColorHex\",\n            value: function isColorHex(color) {\n                return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)|(^#[0-9A-F]{8}$)/i.test(color);\n            }\n        }, {\n            key: \"getPolygonPos\",\n            value: function getPolygonPos(size, dataPointsLen) {\n                var dotsArray = [];\n                var angle = Math.PI * 2 / dataPointsLen;\n\n                for (var i = 0; i < dataPointsLen; i++) {\n                    var curPos = {};\n                    curPos.x = size * Math.sin(i * angle);\n                    curPos.y = -size * Math.cos(i * angle);\n                    dotsArray.push(curPos);\n                }\n\n                return dotsArray;\n            }\n        }, {\n            key: \"polarToCartesian\",\n            value: function polarToCartesian(centerX, centerY, radius, angleInDegrees) {\n                var angleInRadians = (angleInDegrees - 90) * Math.PI / 180.0;\n                return {\n                    x: centerX + radius * Math.cos(angleInRadians),\n                    y: centerY + radius * Math.sin(angleInRadians)\n                };\n            }\n        }, {\n            key: \"escapeString\",\n            value: function escapeString(str) {\n                var escapeWith = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'x';\n                var newStr = str.toString().slice();\n                newStr = newStr.replace(/[` ~!@#$%^&*()_|+\\-=?;:'\",.<>{}[\\]\\\\/]/gi, escapeWith);\n                return newStr;\n            }\n        }, {\n            key: \"negToZero\",\n            value: function negToZero(val) {\n                return val < 0 ? 0 : val;\n            }\n        }, {\n            key: \"moveIndexInArray\",\n            value: function moveIndexInArray(arr, old_index, new_index) {\n                if (new_index >= arr.length) {\n                    var k = new_index - arr.length + 1;\n\n                    while (k--) {\n                        arr.push(undefined);\n                    }\n                }\n\n                arr.splice(new_index, 0, arr.splice(old_index, 1)[0]);\n                return arr;\n            }\n        }, {\n            key: \"extractNumber\",\n            value: function extractNumber(s) {\n                return parseFloat(s.replace(/[^\\d.]*/g, ''));\n            }\n        }, {\n            key: \"findAncestor\",\n            value: function findAncestor(el, cls) {\n                while ((el = el.parentElement) && !el.classList.contains(cls)) {}\n\n                return el;\n            }\n        }, {\n            key: \"setELstyles\",\n            value: function setELstyles(el, styles) {\n                for (var key in styles) {\n                    if (styles.hasOwnProperty(key)) {\n                        el.style.key = styles[key];\n                    }\n                }\n            }\n        }, {\n            key: \"isNumber\",\n            value: function isNumber(value) {\n                return !isNaN(value) && parseFloat(Number(value)) === value && !isNaN(parseInt(value, 10));\n            }\n        }, {\n            key: \"isFloat\",\n            value: function isFloat(n) {\n                return Number(n) === n && n % 1 !== 0;\n            }\n        }, {\n            key: \"isSafari\",\n            value: function isSafari() {\n                return /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n            }\n        }, {\n            key: \"isFirefox\",\n            value: function isFirefox() {\n                return navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\n            }\n        }, {\n            key: \"isIE11\",\n            value: function isIE11() {\n                if (window.navigator.userAgent.indexOf('MSIE') !== -1 || window.navigator.appVersion.indexOf('Trident/') > -1) {\n                    return true;\n                }\n            }\n        }, {\n            key: \"isIE\",\n            value: function isIE() {\n                    var ua = window.navigator.userAgent;\n                    var msie = ua.indexOf('MSIE ');\n\n                    if (msie > 0) {\n                        // IE 10 or older => return version number\n                        return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\n                    }\n\n                    var trident = ua.indexOf('Trident/');\n\n                    if (trident > 0) {\n                        // IE 11 => return version number\n                        var rv = ua.indexOf('rv:');\n                        return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);\n                    }\n\n                    var edge = ua.indexOf('Edge/');\n\n                    if (edge > 0) {\n                        // Edge (IE 12+) => return version number\n                        return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);\n                    } // other browser\n\n\n                    return false;\n                }\n                /**\n                 * Sanitize dangerous characters in the string to prevent Cross-Site Scripting\n                 * @param {string}\n                 * string - String to sanitize\n                 */\n\n        }, {\n            key: \"sanitizeDom\",\n            value: function sanitizeDom(string) {\n                return string.replace(/\\&/g, '&amp;').replace(/\\</g, '&lt;').replace(/\\>/g, '&gt;').replace(/\\\"/g, '&quot;');\n            }\n        }]);\n\n        return Utils;\n    }();\n\n    /**\n     * ApexCharts Animation Class.\n     *\n     * @module Animations\n     **/\n\n    var Animations = /*#__PURE__*/ function() {\n        function Animations(ctx) {\n            _classCallCheck(this, Animations);\n\n            this.ctx = ctx;\n            this.w = ctx.w;\n            this.setEasingFunctions();\n        }\n\n        _createClass(Animations, [{\n            key: \"setEasingFunctions\",\n            value: function setEasingFunctions() {\n                var easing;\n                if (this.w.globals.easing) return;\n                var userDefinedEasing = this.w.config.chart.animations.easing;\n\n                switch (userDefinedEasing) {\n                    case 'linear':\n                        {\n                            easing = '-';\n                            break;\n                        }\n\n                    case 'easein':\n                        {\n                            easing = '<';\n                            break;\n                        }\n\n                    case 'easeout':\n                        {\n                            easing = '>';\n                            break;\n                        }\n\n                    case 'easeinout':\n                        {\n                            easing = '<>';\n                            break;\n                        }\n\n                    case 'swing':\n                        {\n                            easing = function easing(pos) {\n                                var s = 1.70158;\n                                var ret = (pos -= 1) * pos * ((s + 1) * pos + s) + 1;\n                                return ret;\n                            };\n\n                            break;\n                        }\n\n                    case 'bounce':\n                        {\n                            easing = function easing(pos) {\n                                var ret = '';\n\n                                if (pos < 1 / 2.75) {\n                                    ret = 7.5625 * pos * pos;\n                                } else if (pos < 2 / 2.75) {\n                                    ret = 7.5625 * (pos -= 1.5 / 2.75) * pos + 0.75;\n                                } else if (pos < 2.5 / 2.75) {\n                                    ret = 7.5625 * (pos -= 2.25 / 2.75) * pos + 0.9375;\n                                } else {\n                                    ret = 7.5625 * (pos -= 2.625 / 2.75) * pos + 0.984375;\n                                }\n\n                                return ret;\n                            };\n\n                            break;\n                        }\n\n                    case 'elastic':\n                        {\n                            easing = function easing(pos) {\n                                if (pos === !!pos) return pos;\n                                return Math.pow(2, -10 * pos) * Math.sin((pos - 0.075) * (2 * Math.PI) / 0.3) + 1;\n                            };\n\n                            break;\n                        }\n\n                    default:\n                        {\n                            easing = '<>';\n                        }\n                }\n\n                this.w.globals.easing = easing;\n            }\n        }, {\n            key: \"animateLine\",\n            value: function animateLine(el, from, to, speed) {\n                    el.attr(from).animate(speed).attr(to);\n                }\n                /*\n                 ** Animate radius of a circle element\n                 */\n\n        }, {\n            key: \"animateMarker\",\n            value: function animateMarker(el, from, to, speed, easing, cb) {\n                    if (!from) from = 0;\n                    el.attr({\n                        r: from,\n                        width: from,\n                        height: from\n                    }).animate(speed, easing).attr({\n                        r: to,\n                        width: to.width,\n                        height: to.height\n                    }).afterAll(function() {\n                        cb();\n                    });\n                }\n                /*\n                 ** Animate radius and position of a circle element\n                 */\n\n        }, {\n            key: \"animateCircle\",\n            value: function animateCircle(el, from, to, speed, easing) {\n                    el.attr({\n                        r: from.r,\n                        cx: from.cx,\n                        cy: from.cy\n                    }).animate(speed, easing).attr({\n                        r: to.r,\n                        cx: to.cx,\n                        cy: to.cy\n                    });\n                }\n                /*\n                 ** Animate rect properties\n                 */\n\n        }, {\n            key: \"animateRect\",\n            value: function animateRect(el, from, to, speed, fn) {\n                el.attr(from).animate(speed).attr(to).afterAll(function() {\n                    return fn();\n                });\n            }\n        }, {\n            key: \"animatePathsGradually\",\n            value: function animatePathsGradually(params) {\n                var el = params.el,\n                    realIndex = params.realIndex,\n                    j = params.j,\n                    fill = params.fill,\n                    pathFrom = params.pathFrom,\n                    pathTo = params.pathTo,\n                    speed = params.speed,\n                    delay = params.delay;\n                var me = this;\n                var w = this.w;\n                var delayFactor = 0;\n\n                if (w.config.chart.animations.animateGradually.enabled) {\n                    delayFactor = w.config.chart.animations.animateGradually.delay;\n                }\n\n                if (w.config.chart.animations.dynamicAnimation.enabled && w.globals.dataChanged && w.config.chart.type !== 'bar') {\n                    // disabled due to this bug - https://github.com/apexcharts/vue-apexcharts/issues/75\n                    delayFactor = 0;\n                }\n\n                me.morphSVG(el, realIndex, j, w.config.chart.type === 'line' && !w.globals.comboCharts ? 'stroke' : fill, pathFrom, pathTo, speed, delay * delayFactor);\n            }\n        }, {\n            key: \"showDelayedElements\",\n            value: function showDelayedElements() {\n                this.w.globals.delayedElements.forEach(function(d) {\n                    var ele = d.el;\n                    ele.classList.remove('apexcharts-element-hidden');\n                });\n            }\n        }, {\n            key: \"animationCompleted\",\n            value: function animationCompleted(el) {\n                    var w = this.w;\n                    if (w.globals.animationEnded) return;\n                    w.globals.animationEnded = true;\n                    this.showDelayedElements();\n\n                    if (typeof w.config.chart.events.animationEnd === 'function') {\n                        w.config.chart.events.animationEnd(this.ctx, {\n                            el: el,\n                            w: w\n                        });\n                    }\n                } // SVG.js animation for morphing one path to another\n\n        }, {\n            key: \"morphSVG\",\n            value: function morphSVG(el, realIndex, j, fill, pathFrom, pathTo, speed, delay) {\n                var _this = this;\n\n                var w = this.w;\n\n                if (!pathFrom) {\n                    pathFrom = el.attr('pathFrom');\n                }\n\n                if (!pathTo) {\n                    pathTo = el.attr('pathTo');\n                }\n\n                var disableAnimationForCorrupPath = function disableAnimationForCorrupPath(path) {\n                    if (w.config.chart.type === 'radar') {\n                        // radar chart drops the path to bottom and hence a corrup path looks ugly\n                        // therefore, disable animation for such a case\n                        speed = 1;\n                    }\n\n                    return \"M 0 \".concat(w.globals.gridHeight);\n                };\n\n                if (!pathFrom || pathFrom.indexOf('undefined') > -1 || pathFrom.indexOf('NaN') > -1) {\n                    pathFrom = disableAnimationForCorrupPath();\n                }\n\n                if (!pathTo || pathTo.indexOf('undefined') > -1 || pathTo.indexOf('NaN') > -1) {\n                    pathTo = disableAnimationForCorrupPath();\n                }\n\n                if (!w.globals.shouldAnimate) {\n                    speed = 1;\n                }\n\n                el.plot(pathFrom).animate(1, w.globals.easing, delay).plot(pathFrom).animate(speed, w.globals.easing, delay).plot(pathTo).afterAll(function() {\n                    // a flag to indicate that the original mount function can return true now as animation finished here\n                    if (Utils.isNumber(j)) {\n                        if (j === w.globals.series[w.globals.maxValsInArrayIndex].length - 2 && w.globals.shouldAnimate) {\n                            _this.animationCompleted(el);\n                        }\n                    } else if (fill !== 'none' && w.globals.shouldAnimate) {\n                        if (!w.globals.comboCharts && realIndex === w.globals.series.length - 1 || w.globals.comboCharts) {\n                            _this.animationCompleted(el);\n                        }\n                    }\n\n                    _this.showDelayedElements();\n                });\n            }\n        }]);\n\n        return Animations;\n    }();\n\n    /**\n     * ApexCharts Filters Class for setting hover/active states on the paths.\n     *\n     * @module Formatters\n     **/\n\n    var Filters = /*#__PURE__*/ function() {\n        function Filters(ctx) {\n            _classCallCheck(this, Filters);\n\n            this.ctx = ctx;\n            this.w = ctx.w;\n        } // create a re-usable filter which can be appended other filter effects and applied to multiple elements\n\n\n        _createClass(Filters, [{\n            key: \"getDefaultFilter\",\n            value: function getDefaultFilter(el, i) {\n                var w = this.w;\n                el.unfilter(true);\n                var filter = new window.SVG.Filter();\n                filter.size('120%', '180%', '-5%', '-40%');\n\n                if (w.config.states.normal.filter !== 'none') {\n                    this.applyFilter(el, i, w.config.states.normal.filter.type, w.config.states.normal.filter.value);\n                } else {\n                    if (w.config.chart.dropShadow.enabled) {\n                        this.dropShadow(el, w.config.chart.dropShadow, i);\n                    }\n                }\n            }\n        }, {\n            key: \"addNormalFilter\",\n            value: function addNormalFilter(el, i) {\n                    var w = this.w; // revert shadow if it was there\n                    // but, ignore marker as marker don't have dropshadow yet\n\n                    if (w.config.chart.dropShadow.enabled && !el.node.classList.contains('apexcharts-marker')) {\n                        this.dropShadow(el, w.config.chart.dropShadow, i);\n                    }\n                } // appends dropShadow to the filter object which can be chained with other filter effects\n\n        }, {\n            key: \"addLightenFilter\",\n            value: function addLightenFilter(el, i, attrs) {\n                    var _this = this;\n\n                    var w = this.w;\n                    var intensity = attrs.intensity;\n                    el.unfilter(true);\n                    var filter = new window.SVG.Filter();\n                    el.filter(function(add) {\n                        var shadowAttr = w.config.chart.dropShadow;\n\n                        if (shadowAttr.enabled) {\n                            filter = _this.addShadow(add, i, shadowAttr);\n                        } else {\n                            filter = add;\n                        }\n\n                        filter.componentTransfer({\n                            rgb: {\n                                type: 'linear',\n                                slope: 1.5,\n                                intercept: intensity\n                            }\n                        });\n                    });\n                    el.filterer.node.setAttribute('filterUnits', 'userSpaceOnUse');\n\n                    this._scaleFilterSize(el.filterer.node);\n                } // appends dropShadow to the filter object which can be chained with other filter effects\n\n        }, {\n            key: \"addDarkenFilter\",\n            value: function addDarkenFilter(el, i, attrs) {\n                var _this2 = this;\n\n                var w = this.w;\n                var intensity = attrs.intensity;\n                el.unfilter(true);\n                var filter = new window.SVG.Filter();\n                el.filter(function(add) {\n                    var shadowAttr = w.config.chart.dropShadow;\n\n                    if (shadowAttr.enabled) {\n                        filter = _this2.addShadow(add, i, shadowAttr);\n                    } else {\n                        filter = add;\n                    }\n\n                    filter.componentTransfer({\n                        rgb: {\n                            type: 'linear',\n                            slope: intensity\n                        }\n                    });\n                });\n                el.filterer.node.setAttribute('filterUnits', 'userSpaceOnUse');\n\n                this._scaleFilterSize(el.filterer.node);\n            }\n        }, {\n            key: \"applyFilter\",\n            value: function applyFilter(el, i, filter) {\n                    var intensity = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0.5;\n\n                    switch (filter) {\n                        case 'none':\n                            {\n                                this.addNormalFilter(el, i);\n                                break;\n                            }\n\n                        case 'lighten':\n                            {\n                                this.addLightenFilter(el, i, {\n                                    intensity: intensity\n                                });\n                                break;\n                            }\n\n                        case 'darken':\n                            {\n                                this.addDarkenFilter(el, i, {\n                                    intensity: intensity\n                                });\n                                break;\n                            }\n                    }\n                } // appends dropShadow to the filter object which can be chained with other filter effects\n\n        }, {\n            key: \"addShadow\",\n            value: function addShadow(add, i, attrs) {\n                    var blur = attrs.blur,\n                        top = attrs.top,\n                        left = attrs.left,\n                        color = attrs.color,\n                        opacity = attrs.opacity;\n                    var shadowBlur = add.flood(Array.isArray(color) ? color[i] : color, opacity).composite(add.sourceAlpha, 'in').offset(left, top).gaussianBlur(blur).merge(add.source);\n                    return add.blend(add.source, shadowBlur);\n                } // directly adds dropShadow to the element and returns the same element.\n                // the only way it is different from the addShadow() function is that addShadow is chainable to other filters, while this function discards all filters and add dropShadow\n\n        }, {\n            key: \"dropShadow\",\n            value: function dropShadow(el, attrs) {\n                var i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n                var top = attrs.top,\n                    left = attrs.left,\n                    blur = attrs.blur,\n                    color = attrs.color,\n                    opacity = attrs.opacity,\n                    noUserSpaceOnUse = attrs.noUserSpaceOnUse;\n                var w = this.w;\n                el.unfilter(true);\n\n                if (Utils.isIE() && w.config.chart.type === 'radialBar') {\n                    // in radialbar charts, dropshadow is clipping actual drawing in IE\n                    return el;\n                }\n\n                color = Array.isArray(color) ? color[i] : color;\n                el.filter(function(add) {\n                    var shadowBlur = null;\n\n                    if (Utils.isSafari() || Utils.isFirefox() || Utils.isIE()) {\n                        // safari/firefox/IE have some alternative way to use this filter\n                        shadowBlur = add.flood(color, opacity).composite(add.sourceAlpha, 'in').offset(left, top).gaussianBlur(blur);\n                    } else {\n                        shadowBlur = add.flood(color, opacity).composite(add.sourceAlpha, 'in').offset(left, top).gaussianBlur(blur).merge(add.source);\n                    }\n\n                    add.blend(add.source, shadowBlur);\n                });\n\n                if (!noUserSpaceOnUse) {\n                    el.filterer.node.setAttribute('filterUnits', 'userSpaceOnUse');\n                }\n\n                this._scaleFilterSize(el.filterer.node);\n\n                return el;\n            }\n        }, {\n            key: \"setSelectionFilter\",\n            value: function setSelectionFilter(el, realIndex, dataPointIndex) {\n                var w = this.w;\n\n                if (typeof w.globals.selectedDataPoints[realIndex] !== 'undefined') {\n                    if (w.globals.selectedDataPoints[realIndex].indexOf(dataPointIndex) > -1) {\n                        el.node.setAttribute('selected', true);\n                        var activeFilter = w.config.states.active.filter;\n\n                        if (activeFilter !== 'none') {\n                            this.applyFilter(el, realIndex, activeFilter.type, activeFilter.value);\n                        }\n                    }\n                }\n            }\n        }, {\n            key: \"_scaleFilterSize\",\n            value: function _scaleFilterSize(el) {\n                var setAttributes = function setAttributes(attrs) {\n                    for (var key in attrs) {\n                        if (attrs.hasOwnProperty(key)) {\n                            el.setAttribute(key, attrs[key]);\n                        }\n                    }\n                };\n\n                setAttributes({\n                    width: '200%',\n                    height: '200%',\n                    x: '-50%',\n                    y: '-50%'\n                });\n            }\n        }]);\n\n        return Filters;\n    }();\n\n    /**\n     * ApexCharts Graphics Class for all drawing operations.\n     *\n     * @module Graphics\n     **/\n\n    var Graphics = /*#__PURE__*/ function() {\n        function Graphics(ctx) {\n            _classCallCheck(this, Graphics);\n\n            this.ctx = ctx;\n            this.w = ctx.w;\n        }\n\n        _createClass(Graphics, [{\n            key: \"drawLine\",\n            value: function drawLine(x1, y1, x2, y2) {\n                var lineColor = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : '#a8a8a8';\n                var dashArray = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n                var strokeWidth = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n                var w = this.w;\n                var line = w.globals.dom.Paper.line().attr({\n                    x1: x1,\n                    y1: y1,\n                    x2: x2,\n                    y2: y2,\n                    stroke: lineColor,\n                    'stroke-dasharray': dashArray,\n                    'stroke-width': strokeWidth\n                });\n                return line;\n            }\n        }, {\n            key: \"drawRect\",\n            value: function drawRect() {\n                var x1 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n                var y1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n                var x2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n                var y2 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n                var radius = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n                var color = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : '#fefefe';\n                var opacity = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 1;\n                var strokeWidth = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : null;\n                var strokeColor = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : null;\n                var strokeDashArray = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : 0;\n                var w = this.w;\n                var rect = w.globals.dom.Paper.rect();\n                rect.attr({\n                    x: x1,\n                    y: y1,\n                    width: x2 > 0 ? x2 : 0,\n                    height: y2 > 0 ? y2 : 0,\n                    rx: radius,\n                    ry: radius,\n                    opacity: opacity,\n                    'stroke-width': strokeWidth !== null ? strokeWidth : 0,\n                    stroke: strokeColor !== null ? strokeColor : 'none',\n                    'stroke-dasharray': strokeDashArray\n                }); // fix apexcharts.js#1410\n\n                rect.node.setAttribute('fill', color);\n                return rect;\n            }\n        }, {\n            key: \"drawPolygon\",\n            value: function drawPolygon(polygonString) {\n                var stroke = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '#e1e1e1';\n                var strokeWidth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n                var fill = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'none';\n                var w = this.w;\n                var polygon = w.globals.dom.Paper.polygon(polygonString).attr({\n                    fill: fill,\n                    stroke: stroke,\n                    'stroke-width': strokeWidth\n                });\n                return polygon;\n            }\n        }, {\n            key: \"drawCircle\",\n            value: function drawCircle(radius) {\n                var attrs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n                var w = this.w;\n                if (radius < 0) radius = 0;\n                var c = w.globals.dom.Paper.circle(radius * 2);\n\n                if (attrs !== null) {\n                    c.attr(attrs);\n                }\n\n                return c;\n            }\n        }, {\n            key: \"drawPath\",\n            value: function drawPath(_ref) {\n                var _ref$d = _ref.d,\n                    d = _ref$d === void 0 ? '' : _ref$d,\n                    _ref$stroke = _ref.stroke,\n                    stroke = _ref$stroke === void 0 ? '#a8a8a8' : _ref$stroke,\n                    _ref$strokeWidth = _ref.strokeWidth,\n                    strokeWidth = _ref$strokeWidth === void 0 ? 1 : _ref$strokeWidth,\n                    fill = _ref.fill,\n                    _ref$fillOpacity = _ref.fillOpacity,\n                    fillOpacity = _ref$fillOpacity === void 0 ? 1 : _ref$fillOpacity,\n                    _ref$strokeOpacity = _ref.strokeOpacity,\n                    strokeOpacity = _ref$strokeOpacity === void 0 ? 1 : _ref$strokeOpacity,\n                    classes = _ref.classes,\n                    _ref$strokeLinecap = _ref.strokeLinecap,\n                    strokeLinecap = _ref$strokeLinecap === void 0 ? null : _ref$strokeLinecap,\n                    _ref$strokeDashArray = _ref.strokeDashArray,\n                    strokeDashArray = _ref$strokeDashArray === void 0 ? 0 : _ref$strokeDashArray;\n                var w = this.w;\n\n                if (strokeLinecap === null) {\n                    strokeLinecap = w.config.stroke.lineCap;\n                }\n\n                if (d.indexOf('undefined') > -1 || d.indexOf('NaN') > -1) {\n                    d = \"M 0 \".concat(w.globals.gridHeight);\n                }\n\n                var p = w.globals.dom.Paper.path(d).attr({\n                    fill: fill,\n                    'fill-opacity': fillOpacity,\n                    stroke: stroke,\n                    'stroke-opacity': strokeOpacity,\n                    'stroke-linecap': strokeLinecap,\n                    'stroke-width': strokeWidth,\n                    'stroke-dasharray': strokeDashArray,\n                    class: classes\n                });\n                return p;\n            }\n        }, {\n            key: \"group\",\n            value: function group() {\n                var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n                var w = this.w;\n                var g = w.globals.dom.Paper.group();\n\n                if (attrs !== null) {\n                    g.attr(attrs);\n                }\n\n                return g;\n            }\n        }, {\n            key: \"move\",\n            value: function move(x, y) {\n                var move = ['M', x, y].join(' ');\n                return move;\n            }\n        }, {\n            key: \"line\",\n            value: function line(x, y) {\n                var hORv = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n                var line = null;\n\n                if (hORv === null) {\n                    line = ['L', x, y].join(' ');\n                } else if (hORv === 'H') {\n                    line = ['H', x].join(' ');\n                } else if (hORv === 'V') {\n                    line = ['V', y].join(' ');\n                }\n\n                return line;\n            }\n        }, {\n            key: \"curve\",\n            value: function curve(x1, y1, x2, y2, x, y) {\n                var curve = ['C', x1, y1, x2, y2, x, y].join(' ');\n                return curve;\n            }\n        }, {\n            key: \"quadraticCurve\",\n            value: function quadraticCurve(x1, y1, x, y) {\n                var curve = ['Q', x1, y1, x, y].join(' ');\n                return curve;\n            }\n        }, {\n            key: \"arc\",\n            value: function arc(rx, ry, axisRotation, largeArcFlag, sweepFlag, x, y) {\n                    var relative = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : false;\n                    var coord = 'A';\n                    if (relative) coord = 'a';\n                    var arc = [coord, rx, ry, axisRotation, largeArcFlag, sweepFlag, x, y].join(' ');\n                    return arc;\n                }\n                /**\n                 * @memberof Graphics\n                 * @param {object}\n                 *  i = series's index\n                 *  realIndex = realIndex is series's actual index when it was drawn time. After several redraws, the iterating \"i\" may change in loops, but realIndex doesn't\n                 *  pathFrom = existing pathFrom to animateTo\n                 *  pathTo = new Path to which d attr will be animated from pathFrom to pathTo\n                 *  stroke = line Color\n                 *  strokeWidth = width of path Line\n                 *  fill = it can be gradient, single color, pattern or image\n                 *  animationDelay = how much to delay when starting animation (in milliseconds)\n                 *  dataChangeSpeed = for dynamic animations, when data changes\n                 *  className = class attribute to add\n                 * @return {object} svg.js path object\n                 **/\n\n        }, {\n            key: \"renderPaths\",\n            value: function renderPaths(_ref2) {\n                var j = _ref2.j,\n                    realIndex = _ref2.realIndex,\n                    pathFrom = _ref2.pathFrom,\n                    pathTo = _ref2.pathTo,\n                    stroke = _ref2.stroke,\n                    strokeWidth = _ref2.strokeWidth,\n                    strokeLinecap = _ref2.strokeLinecap,\n                    fill = _ref2.fill,\n                    animationDelay = _ref2.animationDelay,\n                    initialSpeed = _ref2.initialSpeed,\n                    dataChangeSpeed = _ref2.dataChangeSpeed,\n                    className = _ref2.className,\n                    _ref2$shouldClipToGri = _ref2.shouldClipToGrid,\n                    shouldClipToGrid = _ref2$shouldClipToGri === void 0 ? true : _ref2$shouldClipToGri,\n                    _ref2$bindEventsOnPat = _ref2.bindEventsOnPaths,\n                    bindEventsOnPaths = _ref2$bindEventsOnPat === void 0 ? true : _ref2$bindEventsOnPat,\n                    _ref2$drawShadow = _ref2.drawShadow,\n                    drawShadow = _ref2$drawShadow === void 0 ? true : _ref2$drawShadow;\n                var w = this.w;\n                var filters = new Filters(this.ctx);\n                var anim = new Animations(this.ctx);\n                var initialAnim = this.w.config.chart.animations.enabled;\n                var dynamicAnim = initialAnim && this.w.config.chart.animations.dynamicAnimation.enabled;\n                var d;\n                var shouldAnimate = !!(initialAnim && !w.globals.resized || dynamicAnim && w.globals.dataChanged && w.globals.shouldAnimate);\n\n                if (shouldAnimate) {\n                    d = pathFrom;\n                } else {\n                    d = pathTo;\n                    w.globals.animationEnded = true;\n                }\n\n                var strokeDashArrayOpt = w.config.stroke.dashArray;\n                var strokeDashArray = 0;\n\n                if (Array.isArray(strokeDashArrayOpt)) {\n                    strokeDashArray = strokeDashArrayOpt[realIndex];\n                } else {\n                    strokeDashArray = w.config.stroke.dashArray;\n                }\n\n                var el = this.drawPath({\n                    d: d,\n                    stroke: stroke,\n                    strokeWidth: strokeWidth,\n                    fill: fill,\n                    fillOpacity: 1,\n                    classes: className,\n                    strokeLinecap: strokeLinecap,\n                    strokeDashArray: strokeDashArray\n                });\n                el.attr('index', realIndex);\n\n                if (shouldClipToGrid) {\n                    el.attr({\n                        'clip-path': \"url(#gridRectMask\".concat(w.globals.cuid, \")\")\n                    });\n                } // const defaultFilter = el.filterer\n\n\n                if (w.config.states.normal.filter.type !== 'none') {\n                    filters.getDefaultFilter(el, realIndex);\n                } else {\n                    if (w.config.chart.dropShadow.enabled && drawShadow) {\n                        if (!w.config.chart.dropShadow.enabledOnSeries || w.config.chart.dropShadow.enabledOnSeries && w.config.chart.dropShadow.enabledOnSeries.indexOf(realIndex) !== -1) {\n                            var shadow = w.config.chart.dropShadow;\n                            filters.dropShadow(el, shadow, realIndex);\n                        }\n                    }\n                }\n\n                if (bindEventsOnPaths) {\n                    el.node.addEventListener('mouseenter', this.pathMouseEnter.bind(this, el));\n                    el.node.addEventListener('mouseleave', this.pathMouseLeave.bind(this, el));\n                    el.node.addEventListener('mousedown', this.pathMouseDown.bind(this, el));\n                }\n\n                el.attr({\n                    pathTo: pathTo,\n                    pathFrom: pathFrom\n                });\n                var defaultAnimateOpts = {\n                    el: el,\n                    j: j,\n                    realIndex: realIndex,\n                    pathFrom: pathFrom,\n                    pathTo: pathTo,\n                    fill: fill,\n                    strokeWidth: strokeWidth,\n                    delay: animationDelay\n                };\n\n                if (initialAnim && !w.globals.resized && !w.globals.dataChanged) {\n                    anim.animatePathsGradually(_objectSpread2(_objectSpread2({}, defaultAnimateOpts), {}, {\n                        speed: initialSpeed\n                    }));\n                } else {\n                    if (w.globals.resized || !w.globals.dataChanged) {\n                        anim.showDelayedElements();\n                    }\n                }\n\n                if (w.globals.dataChanged && dynamicAnim && shouldAnimate) {\n                    anim.animatePathsGradually(_objectSpread2(_objectSpread2({}, defaultAnimateOpts), {}, {\n                        speed: dataChangeSpeed\n                    }));\n                }\n\n                return el;\n            }\n        }, {\n            key: \"drawPattern\",\n            value: function drawPattern(style, width, height) {\n                var stroke = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '#a8a8a8';\n                var strokeWidth = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n                var w = this.w;\n                var p = w.globals.dom.Paper.pattern(width, height, function(add) {\n                    if (style === 'horizontalLines') {\n                        add.line(0, 0, height, 0).stroke({\n                            color: stroke,\n                            width: strokeWidth + 1\n                        });\n                    } else if (style === 'verticalLines') {\n                        add.line(0, 0, 0, width).stroke({\n                            color: stroke,\n                            width: strokeWidth + 1\n                        });\n                    } else if (style === 'slantedLines') {\n                        add.line(0, 0, width, height).stroke({\n                            color: stroke,\n                            width: strokeWidth\n                        });\n                    } else if (style === 'squares') {\n                        add.rect(width, height).fill('none').stroke({\n                            color: stroke,\n                            width: strokeWidth\n                        });\n                    } else if (style === 'circles') {\n                        add.circle(width).fill('none').stroke({\n                            color: stroke,\n                            width: strokeWidth\n                        });\n                    }\n                });\n                return p;\n            }\n        }, {\n            key: \"drawGradient\",\n            value: function drawGradient(style, gfrom, gto, opacityFrom, opacityTo) {\n                var size = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n                var stops = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n                var colorStops = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : null;\n                var i = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : 0;\n                var w = this.w;\n                var g;\n\n                if (gfrom.length < 9 && gfrom.indexOf('#') === 0) {\n                    // if the hex contains alpha and is of 9 digit, skip the opacity\n                    gfrom = Utils.hexToRgba(gfrom, opacityFrom);\n                }\n\n                if (gto.length < 9 && gto.indexOf('#') === 0) {\n                    gto = Utils.hexToRgba(gto, opacityTo);\n                }\n\n                var stop1 = 0;\n                var stop2 = 1;\n                var stop3 = 1;\n                var stop4 = null;\n\n                if (stops !== null) {\n                    stop1 = typeof stops[0] !== 'undefined' ? stops[0] / 100 : 0;\n                    stop2 = typeof stops[1] !== 'undefined' ? stops[1] / 100 : 1;\n                    stop3 = typeof stops[2] !== 'undefined' ? stops[2] / 100 : 1;\n                    stop4 = typeof stops[3] !== 'undefined' ? stops[3] / 100 : null;\n                }\n\n                var radial = !!(w.config.chart.type === 'donut' || w.config.chart.type === 'pie' || w.config.chart.type === 'polarArea' || w.config.chart.type === 'bubble');\n\n                if (colorStops === null || colorStops.length === 0) {\n                    g = w.globals.dom.Paper.gradient(radial ? 'radial' : 'linear', function(stop) {\n                        stop.at(stop1, gfrom, opacityFrom);\n                        stop.at(stop2, gto, opacityTo);\n                        stop.at(stop3, gto, opacityTo);\n\n                        if (stop4 !== null) {\n                            stop.at(stop4, gfrom, opacityFrom);\n                        }\n                    });\n                } else {\n                    g = w.globals.dom.Paper.gradient(radial ? 'radial' : 'linear', function(stop) {\n                        var gradientStops = Array.isArray(colorStops[i]) ? colorStops[i] : colorStops;\n                        gradientStops.forEach(function(s) {\n                            stop.at(s.offset / 100, s.color, s.opacity);\n                        });\n                    });\n                }\n\n                if (!radial) {\n                    if (style === 'vertical') {\n                        g.from(0, 0).to(0, 1);\n                    } else if (style === 'diagonal') {\n                        g.from(0, 0).to(1, 1);\n                    } else if (style === 'horizontal') {\n                        g.from(0, 1).to(1, 1);\n                    } else if (style === 'diagonal2') {\n                        g.from(1, 0).to(0, 1);\n                    }\n                } else {\n                    var offx = w.globals.gridWidth / 2;\n                    var offy = w.globals.gridHeight / 2;\n\n                    if (w.config.chart.type !== 'bubble') {\n                        g.attr({\n                            gradientUnits: 'userSpaceOnUse',\n                            cx: offx,\n                            cy: offy,\n                            r: size\n                        });\n                    } else {\n                        g.attr({\n                            cx: 0.5,\n                            cy: 0.5,\n                            r: 0.8,\n                            fx: 0.2,\n                            fy: 0.2\n                        });\n                    }\n                }\n\n                return g;\n            }\n        }, {\n            key: \"drawText\",\n            value: function drawText(_ref3) {\n                var x = _ref3.x,\n                    y = _ref3.y,\n                    text = _ref3.text,\n                    textAnchor = _ref3.textAnchor,\n                    fontSize = _ref3.fontSize,\n                    fontFamily = _ref3.fontFamily,\n                    fontWeight = _ref3.fontWeight,\n                    foreColor = _ref3.foreColor,\n                    opacity = _ref3.opacity,\n                    _ref3$cssClass = _ref3.cssClass,\n                    cssClass = _ref3$cssClass === void 0 ? '' : _ref3$cssClass,\n                    _ref3$isPlainText = _ref3.isPlainText,\n                    isPlainText = _ref3$isPlainText === void 0 ? true : _ref3$isPlainText;\n                var w = this.w;\n                if (typeof text === 'undefined') text = '';\n\n                if (!textAnchor) {\n                    textAnchor = 'start';\n                }\n\n                if (!foreColor || !foreColor.length) {\n                    foreColor = w.config.chart.foreColor;\n                }\n\n                fontFamily = fontFamily || w.config.chart.fontFamily;\n                fontWeight = fontWeight || 'regular';\n                var elText;\n\n                if (Array.isArray(text)) {\n                    elText = w.globals.dom.Paper.text(function(add) {\n                        for (var i = 0; i < text.length; i++) {\n                            i === 0 ? add.tspan(text[i]) : add.tspan(text[i]).newLine();\n                        }\n                    });\n                } else {\n                    elText = isPlainText ? w.globals.dom.Paper.plain(text) : w.globals.dom.Paper.text(function(add) {\n                        return add.tspan(text);\n                    });\n                }\n\n                elText.attr({\n                    x: x,\n                    y: y,\n                    'text-anchor': textAnchor,\n                    'dominant-baseline': 'auto',\n                    'font-size': fontSize,\n                    'font-family': fontFamily,\n                    'font-weight': fontWeight,\n                    fill: foreColor,\n                    class: 'apexcharts-text ' + cssClass\n                });\n                elText.node.style.fontFamily = fontFamily;\n                elText.node.style.opacity = opacity;\n                return elText;\n            }\n        }, {\n            key: \"drawMarker\",\n            value: function drawMarker(x, y, opts) {\n                x = x || 0;\n                var size = opts.pSize || 0;\n                var elPoint = null;\n\n                if (opts.shape === 'square' || opts.shape === 'rect') {\n                    var radius = opts.pRadius === undefined ? size / 2 : opts.pRadius;\n\n                    if (y === null || !size) {\n                        size = 0;\n                        radius = 0;\n                    }\n\n                    var nSize = size * 1.2 + radius;\n                    var p = this.drawRect(nSize, nSize, nSize, nSize, radius);\n                    p.attr({\n                        x: x - nSize / 2,\n                        y: y - nSize / 2,\n                        cx: x,\n                        cy: y,\n                        class: opts.class ? opts.class : '',\n                        fill: opts.pointFillColor,\n                        'fill-opacity': opts.pointFillOpacity ? opts.pointFillOpacity : 1,\n                        stroke: opts.pointStrokeColor,\n                        'stroke-width': opts.pointStrokeWidth ? opts.pointStrokeWidth : 0,\n                        'stroke-opacity': opts.pointStrokeOpacity ? opts.pointStrokeOpacity : 1\n                    });\n                    elPoint = p;\n                } else if (opts.shape === 'circle' || !opts.shape) {\n                    if (!Utils.isNumber(y)) {\n                        size = 0;\n                        y = 0;\n                    } // let nSize = size - opts.pRadius / 2 < 0 ? 0 : size - opts.pRadius / 2\n\n\n                    elPoint = this.drawCircle(size, {\n                        cx: x,\n                        cy: y,\n                        class: opts.class ? opts.class : '',\n                        stroke: opts.pointStrokeColor,\n                        fill: opts.pointFillColor,\n                        'fill-opacity': opts.pointFillOpacity ? opts.pointFillOpacity : 1,\n                        'stroke-width': opts.pointStrokeWidth ? opts.pointStrokeWidth : 0,\n                        'stroke-opacity': opts.pointStrokeOpacity ? opts.pointStrokeOpacity : 1\n                    });\n                }\n\n                return elPoint;\n            }\n        }, {\n            key: \"pathMouseEnter\",\n            value: function pathMouseEnter(path, e) {\n                var w = this.w;\n                var filters = new Filters(this.ctx);\n                var i = parseInt(path.node.getAttribute('index'), 10);\n                var j = parseInt(path.node.getAttribute('j'), 10);\n\n                if (typeof w.config.chart.events.dataPointMouseEnter === 'function') {\n                    w.config.chart.events.dataPointMouseEnter(e, this.ctx, {\n                        seriesIndex: i,\n                        dataPointIndex: j,\n                        w: w\n                    });\n                }\n\n                this.ctx.events.fireEvent('dataPointMouseEnter', [e, this.ctx, {\n                    seriesIndex: i,\n                    dataPointIndex: j,\n                    w: w\n                }]);\n\n                if (w.config.states.active.filter.type !== 'none') {\n                    if (path.node.getAttribute('selected') === 'true') {\n                        return;\n                    }\n                }\n\n                if (w.config.states.hover.filter.type !== 'none') {\n                    if (w.config.states.active.filter.type !== 'none' && !w.globals.isTouchDevice) {\n                        var hoverFilter = w.config.states.hover.filter;\n                        filters.applyFilter(path, i, hoverFilter.type, hoverFilter.value);\n                    }\n                }\n            }\n        }, {\n            key: \"pathMouseLeave\",\n            value: function pathMouseLeave(path, e) {\n                var w = this.w;\n                var filters = new Filters(this.ctx);\n                var i = parseInt(path.node.getAttribute('index'), 10);\n                var j = parseInt(path.node.getAttribute('j'), 10);\n\n                if (typeof w.config.chart.events.dataPointMouseLeave === 'function') {\n                    w.config.chart.events.dataPointMouseLeave(e, this.ctx, {\n                        seriesIndex: i,\n                        dataPointIndex: j,\n                        w: w\n                    });\n                }\n\n                this.ctx.events.fireEvent('dataPointMouseLeave', [e, this.ctx, {\n                    seriesIndex: i,\n                    dataPointIndex: j,\n                    w: w\n                }]);\n\n                if (w.config.states.active.filter.type !== 'none') {\n                    if (path.node.getAttribute('selected') === 'true') {\n                        return;\n                    }\n                }\n\n                if (w.config.states.hover.filter.type !== 'none') {\n                    filters.getDefaultFilter(path, i);\n                }\n            }\n        }, {\n            key: \"pathMouseDown\",\n            value: function pathMouseDown(path, e) {\n                var w = this.w;\n                var filters = new Filters(this.ctx);\n                var i = parseInt(path.node.getAttribute('index'), 10);\n                var j = parseInt(path.node.getAttribute('j'), 10);\n                var selected = 'false';\n\n                if (path.node.getAttribute('selected') === 'true') {\n                    path.node.setAttribute('selected', 'false');\n\n                    if (w.globals.selectedDataPoints[i].indexOf(j) > -1) {\n                        var index = w.globals.selectedDataPoints[i].indexOf(j);\n                        w.globals.selectedDataPoints[i].splice(index, 1);\n                    }\n                } else {\n                    if (!w.config.states.active.allowMultipleDataPointsSelection && w.globals.selectedDataPoints.length > 0) {\n                        w.globals.selectedDataPoints = [];\n                        var elPaths = w.globals.dom.Paper.select('.apexcharts-series path').members;\n                        var elCircles = w.globals.dom.Paper.select('.apexcharts-series circle, .apexcharts-series rect').members;\n\n                        var deSelect = function deSelect(els) {\n                            Array.prototype.forEach.call(els, function(el) {\n                                el.node.setAttribute('selected', 'false');\n                                filters.getDefaultFilter(el, i);\n                            });\n                        };\n\n                        deSelect(elPaths);\n                        deSelect(elCircles);\n                    }\n\n                    path.node.setAttribute('selected', 'true');\n                    selected = 'true';\n\n                    if (typeof w.globals.selectedDataPoints[i] === 'undefined') {\n                        w.globals.selectedDataPoints[i] = [];\n                    }\n\n                    w.globals.selectedDataPoints[i].push(j);\n                }\n\n                if (selected === 'true') {\n                    var activeFilter = w.config.states.active.filter;\n\n                    if (activeFilter !== 'none') {\n                        filters.applyFilter(path, i, activeFilter.type, activeFilter.value);\n                    }\n                } else {\n                    if (w.config.states.active.filter.type !== 'none') {\n                        filters.getDefaultFilter(path, i);\n                    }\n                }\n\n                if (typeof w.config.chart.events.dataPointSelection === 'function') {\n                    w.config.chart.events.dataPointSelection(e, this.ctx, {\n                        selectedDataPoints: w.globals.selectedDataPoints,\n                        seriesIndex: i,\n                        dataPointIndex: j,\n                        w: w\n                    });\n                }\n\n                if (e) {\n                    this.ctx.events.fireEvent('dataPointSelection', [e, this.ctx, {\n                        selectedDataPoints: w.globals.selectedDataPoints,\n                        seriesIndex: i,\n                        dataPointIndex: j,\n                        w: w\n                    }]);\n                }\n            }\n        }, {\n            key: \"rotateAroundCenter\",\n            value: function rotateAroundCenter(el) {\n                var coord = el.getBBox();\n                var x = coord.x + coord.width / 2;\n                var y = coord.y + coord.height / 2;\n                return {\n                    x: x,\n                    y: y\n                };\n            }\n        }, {\n            key: \"getTextRects\",\n            value: function getTextRects(text, fontSize, fontFamily, transform) {\n                    var useBBox = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n                    var w = this.w;\n                    var virtualText = this.drawText({\n                        x: -200,\n                        y: -200,\n                        text: text,\n                        textAnchor: 'start',\n                        fontSize: fontSize,\n                        fontFamily: fontFamily,\n                        foreColor: '#fff',\n                        opacity: 0\n                    });\n\n                    if (transform) {\n                        virtualText.attr('transform', transform);\n                    }\n\n                    w.globals.dom.Paper.add(virtualText);\n                    var rect = virtualText.bbox();\n\n                    if (!useBBox) {\n                        rect = virtualText.node.getBoundingClientRect();\n                    }\n\n                    virtualText.remove();\n                    return {\n                        width: rect.width,\n                        height: rect.height\n                    };\n                }\n                /**\n                 * append ... to long text\n                 * http://stackoverflow.com/questions/9241315/trimming-text-to-a-given-pixel-width-in-svg\n                 * @memberof Graphics\n                 **/\n\n        }, {\n            key: \"placeTextWithEllipsis\",\n            value: function placeTextWithEllipsis(textObj, textString, width) {\n                if (typeof textObj.getComputedTextLength !== 'function') return;\n                textObj.textContent = textString;\n\n                if (textString.length > 0) {\n                    // ellipsis is needed\n                    if (textObj.getComputedTextLength() >= width / 1.1) {\n                        for (var x = textString.length - 3; x > 0; x -= 3) {\n                            if (textObj.getSubStringLength(0, x) <= width / 1.1) {\n                                textObj.textContent = textString.substring(0, x) + '...';\n                                return;\n                            }\n                        }\n\n                        textObj.textContent = '.'; // can't place at all\n                    }\n                }\n            }\n        }], [{\n            key: \"setAttrs\",\n            value: function setAttrs(el, attrs) {\n                for (var key in attrs) {\n                    if (attrs.hasOwnProperty(key)) {\n                        el.setAttribute(key, attrs[key]);\n                    }\n                }\n            }\n        }]);\n\n        return Graphics;\n    }();\n\n    var Helpers = /*#__PURE__*/ function() {\n        function Helpers(annoCtx) {\n            _classCallCheck(this, Helpers);\n\n            this.w = annoCtx.w;\n            this.annoCtx = annoCtx;\n        }\n\n        _createClass(Helpers, [{\n            key: \"setOrientations\",\n            value: function setOrientations(anno) {\n                var annoIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n                var w = this.w;\n\n                if (anno.label.orientation === 'vertical') {\n                    var i = annoIndex !== null ? annoIndex : 0;\n                    var xAnno = w.globals.dom.baseEl.querySelector(\".apexcharts-xaxis-annotations .apexcharts-xaxis-annotation-label[rel='\".concat(i, \"']\"));\n\n                    if (xAnno !== null) {\n                        var xAnnoCoord = xAnno.getBoundingClientRect();\n                        xAnno.setAttribute('x', parseFloat(xAnno.getAttribute('x')) - xAnnoCoord.height + 4);\n\n                        if (anno.label.position === 'top') {\n                            xAnno.setAttribute('y', parseFloat(xAnno.getAttribute('y')) + xAnnoCoord.width);\n                        } else {\n                            xAnno.setAttribute('y', parseFloat(xAnno.getAttribute('y')) - xAnnoCoord.width);\n                        }\n\n                        var annoRotatingCenter = this.annoCtx.graphics.rotateAroundCenter(xAnno);\n                        var x = annoRotatingCenter.x;\n                        var y = annoRotatingCenter.y;\n                        xAnno.setAttribute('transform', \"rotate(-90 \".concat(x, \" \").concat(y, \")\"));\n                    }\n                }\n            }\n        }, {\n            key: \"addBackgroundToAnno\",\n            value: function addBackgroundToAnno(annoEl, anno) {\n                var w = this.w;\n                if (!annoEl || !anno.label.text || anno.label.text && !anno.label.text.trim()) return null;\n                var elGridRect = w.globals.dom.baseEl.querySelector('.apexcharts-grid').getBoundingClientRect();\n                var coords = annoEl.getBoundingClientRect();\n                var pleft = anno.label.style.padding.left;\n                var pright = anno.label.style.padding.right;\n                var ptop = anno.label.style.padding.top;\n                var pbottom = anno.label.style.padding.bottom;\n\n                if (anno.label.orientation === 'vertical') {\n                    ptop = anno.label.style.padding.left;\n                    pbottom = anno.label.style.padding.right;\n                    pleft = anno.label.style.padding.top;\n                    pright = anno.label.style.padding.bottom;\n                }\n\n                var x1 = coords.left - elGridRect.left - pleft;\n                var y1 = coords.top - elGridRect.top - ptop;\n                var elRect = this.annoCtx.graphics.drawRect(x1 - w.globals.barPadForNumericAxis, y1, coords.width + pleft + pright, coords.height + ptop + pbottom, anno.label.borderRadius, anno.label.style.background, 1, anno.label.borderWidth, anno.label.borderColor, 0);\n\n                if (anno.id) {\n                    elRect.node.classList.add(anno.id);\n                }\n\n                return elRect;\n            }\n        }, {\n            key: \"annotationsBackground\",\n            value: function annotationsBackground() {\n                var _this = this;\n\n                var w = this.w;\n\n                var add = function add(anno, i, type) {\n                    var annoLabel = w.globals.dom.baseEl.querySelector(\".apexcharts-\".concat(type, \"-annotations .apexcharts-\").concat(type, \"-annotation-label[rel='\").concat(i, \"']\"));\n\n                    if (annoLabel) {\n                        var parent = annoLabel.parentNode;\n\n                        var elRect = _this.addBackgroundToAnno(annoLabel, anno);\n\n                        if (elRect) {\n                            parent.insertBefore(elRect.node, annoLabel);\n                        }\n                    }\n                };\n\n                w.config.annotations.xaxis.map(function(anno, i) {\n                    add(anno, i, 'xaxis');\n                });\n                w.config.annotations.yaxis.map(function(anno, i) {\n                    add(anno, i, 'yaxis');\n                });\n                w.config.annotations.points.map(function(anno, i) {\n                    add(anno, i, 'point');\n                });\n            }\n        }, {\n            key: \"getStringX\",\n            value: function getStringX(x) {\n                var w = this.w;\n                var rX = x;\n\n                if (w.config.xaxis.convertedCatToNumeric && w.globals.categoryLabels.length) {\n                    x = w.globals.categoryLabels.indexOf(x) + 1;\n                }\n\n                var catIndex = w.globals.labels.indexOf(x);\n                var xLabel = w.globals.dom.baseEl.querySelector('.apexcharts-xaxis-texts-g text:nth-child(' + (catIndex + 1) + ')');\n\n                if (xLabel) {\n                    rX = parseFloat(xLabel.getAttribute('x'));\n                }\n\n                return rX;\n            }\n        }]);\n\n        return Helpers;\n    }();\n\n    var XAnnotations = /*#__PURE__*/ function() {\n        function XAnnotations(annoCtx) {\n            _classCallCheck(this, XAnnotations);\n\n            this.w = annoCtx.w;\n            this.annoCtx = annoCtx;\n            this.invertAxis = this.annoCtx.invertAxis;\n        }\n\n        _createClass(XAnnotations, [{\n            key: \"addXaxisAnnotation\",\n            value: function addXaxisAnnotation(anno, parent, index) {\n                var w = this.w;\n                var min = this.invertAxis ? w.globals.minY : w.globals.minX;\n                var max = this.invertAxis ? w.globals.maxY : w.globals.maxX;\n                var range = this.invertAxis ? w.globals.yRange[0] : w.globals.xRange;\n                var x1 = (anno.x - min) / (range / w.globals.gridWidth);\n\n                if (this.annoCtx.inversedReversedAxis) {\n                    x1 = (max - anno.x) / (range / w.globals.gridWidth);\n                }\n\n                var text = anno.label.text;\n\n                if ((w.config.xaxis.type === 'category' || w.config.xaxis.convertedCatToNumeric) && !this.invertAxis && !w.globals.dataFormatXNumeric) {\n                    x1 = this.annoCtx.helpers.getStringX(anno.x);\n                }\n\n                var strokeDashArray = anno.strokeDashArray;\n                if (!Utils.isNumber(x1)) return;\n\n                if (anno.x2 === null || typeof anno.x2 === 'undefined') {\n                    var line = this.annoCtx.graphics.drawLine(x1 + anno.offsetX, // x1\n                        0 + anno.offsetY, // y1\n                        x1 + anno.offsetX, // x2\n                        w.globals.gridHeight + anno.offsetY, // y2\n                        anno.borderColor, // lineColor\n                        strokeDashArray, //dashArray\n                        anno.borderWidth);\n                    parent.appendChild(line.node);\n\n                    if (anno.id) {\n                        line.node.classList.add(anno.id);\n                    }\n                } else {\n                    var x2 = (anno.x2 - min) / (range / w.globals.gridWidth);\n\n                    if (this.annoCtx.inversedReversedAxis) {\n                        x2 = (max - anno.x2) / (range / w.globals.gridWidth);\n                    }\n\n                    if ((w.config.xaxis.type === 'category' || w.config.xaxis.convertedCatToNumeric) && !this.invertAxis && !w.globals.dataFormatXNumeric) {\n                        x2 = this.annoCtx.helpers.getStringX(anno.x2);\n                    }\n\n                    if (x2 < x1) {\n                        var temp = x1;\n                        x1 = x2;\n                        x2 = temp;\n                    }\n\n                    var rect = this.annoCtx.graphics.drawRect(x1 + anno.offsetX, // x1\n                        0 + anno.offsetY, // y1\n                        x2 - x1, // x2\n                        w.globals.gridHeight + anno.offsetY, // y2\n                        0, // radius\n                        anno.fillColor, // color\n                        anno.opacity, // opacity,\n                        1, // strokeWidth\n                        anno.borderColor, // strokeColor\n                        strokeDashArray // stokeDashArray\n                    );\n                    rect.node.classList.add('apexcharts-annotation-rect');\n                    rect.attr('clip-path', \"url(#gridRectMask\".concat(w.globals.cuid, \")\"));\n                    parent.appendChild(rect.node);\n\n                    if (anno.id) {\n                        rect.node.classList.add(anno.id);\n                    }\n                }\n\n                var textY = anno.label.position === 'top' ? 4 : w.globals.gridHeight;\n                var textRects = this.annoCtx.graphics.getTextRects(text, parseFloat(anno.label.style.fontSize));\n                var elText = this.annoCtx.graphics.drawText({\n                    x: x1 + anno.label.offsetX,\n                    y: textY + anno.label.offsetY - (anno.label.orientation === 'vertical' ? anno.label.position === 'top' ? textRects.width / 2 - 12 : -textRects.width / 2 : 0),\n                    text: text,\n                    textAnchor: anno.label.textAnchor,\n                    fontSize: anno.label.style.fontSize,\n                    fontFamily: anno.label.style.fontFamily,\n                    fontWeight: anno.label.style.fontWeight,\n                    foreColor: anno.label.style.color,\n                    cssClass: \"apexcharts-xaxis-annotation-label \".concat(anno.label.style.cssClass, \" \").concat(anno.id ? anno.id : '')\n                });\n                elText.attr({\n                    rel: index\n                });\n                parent.appendChild(elText.node); // after placing the annotations on svg, set any vertically placed annotations\n\n                this.annoCtx.helpers.setOrientations(anno, index);\n            }\n        }, {\n            key: \"drawXAxisAnnotations\",\n            value: function drawXAxisAnnotations() {\n                var _this = this;\n\n                var w = this.w;\n                var elg = this.annoCtx.graphics.group({\n                    class: 'apexcharts-xaxis-annotations'\n                });\n                w.config.annotations.xaxis.map(function(anno, index) {\n                    _this.addXaxisAnnotation(anno, elg.node, index);\n                });\n                return elg;\n            }\n        }]);\n\n        return XAnnotations;\n    }();\n\n    /*\n     ** Util functions which are dependent on ApexCharts instance\n     */\n    var CoreUtils = /*#__PURE__*/ function() {\n        function CoreUtils(ctx) {\n            _classCallCheck(this, CoreUtils);\n\n            this.ctx = ctx;\n            this.w = ctx.w;\n        }\n\n        _createClass(CoreUtils, [{\n            key: \"getStackedSeriesTotals\",\n\n            /**\n             * @memberof CoreUtils\n             * returns the sum of all individual values in a multiple stacked series\n             * Eg. w.globals.series = [[32,33,43,12], [2,3,5,1]]\n             *  @return [34,36,48,13]\n             **/\n            value: function getStackedSeriesTotals() {\n                    var w = this.w;\n                    var total = [];\n                    if (w.globals.series.length === 0) return total;\n\n                    for (var i = 0; i < w.globals.series[w.globals.maxValsInArrayIndex].length; i++) {\n                        var t = 0;\n\n                        for (var j = 0; j < w.globals.series.length; j++) {\n                            if (typeof w.globals.series[j][i] !== 'undefined') {\n                                t += w.globals.series[j][i];\n                            }\n                        }\n\n                        total.push(t);\n                    }\n\n                    w.globals.stackedSeriesTotals = total;\n                    return total;\n                } // get total of the all values inside all series\n\n        }, {\n            key: \"getSeriesTotalByIndex\",\n            value: function getSeriesTotalByIndex() {\n                var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n                if (index === null) {\n                    // non-plot chart types - pie / donut / circle\n                    return this.w.config.series.reduce(function(acc, cur) {\n                        return acc + cur;\n                    }, 0);\n                } else {\n                    // axis charts - supporting multiple series\n                    return this.w.globals.series[index].reduce(function(acc, cur) {\n                        return acc + cur;\n                    }, 0);\n                }\n            }\n        }, {\n            key: \"isSeriesNull\",\n            value: function isSeriesNull() {\n                var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n                var r = [];\n\n                if (index === null) {\n                    // non-plot chart types - pie / donut / circle\n                    r = this.w.config.series.filter(function(d) {\n                        return d !== null;\n                    });\n                } else {\n                    // axis charts - supporting multiple series\n                    r = this.w.config.series[index].data.filter(function(d) {\n                        return d !== null;\n                    });\n                }\n\n                return r.length === 0;\n            }\n        }, {\n            key: \"seriesHaveSameValues\",\n            value: function seriesHaveSameValues(index) {\n                return this.w.globals.series[index].every(function(val, i, arr) {\n                    return val === arr[0];\n                });\n            }\n        }, {\n            key: \"getCategoryLabels\",\n            value: function getCategoryLabels(labels) {\n                    var w = this.w;\n                    var catLabels = labels.slice();\n\n                    if (w.config.xaxis.convertedCatToNumeric) {\n                        catLabels = labels.map(function(i, li) {\n                            return w.config.xaxis.labels.formatter(i - w.globals.minX + 1);\n                        });\n                    }\n\n                    return catLabels;\n                } // maxValsInArrayIndex is the index of series[] which has the largest number of items\n\n        }, {\n            key: \"getLargestSeries\",\n            value: function getLargestSeries() {\n                var w = this.w;\n                w.globals.maxValsInArrayIndex = w.globals.series.map(function(a) {\n                    return a.length;\n                }).indexOf(Math.max.apply(Math, w.globals.series.map(function(a) {\n                    return a.length;\n                })));\n            }\n        }, {\n            key: \"getLargestMarkerSize\",\n            value: function getLargestMarkerSize() {\n                    var w = this.w;\n                    var size = 0;\n                    w.globals.markers.size.forEach(function(m) {\n                        size = Math.max(size, m);\n                    });\n                    w.globals.markers.largestSize = size;\n                    return size;\n                }\n                /**\n                 * @memberof Core\n                 * returns the sum of all values in a series\n                 * Eg. w.globals.series = [[32,33,43,12], [2,3,5,1]]\n                 *  @return [120, 11]\n                 **/\n\n        }, {\n            key: \"getSeriesTotals\",\n            value: function getSeriesTotals() {\n                var w = this.w;\n                w.globals.seriesTotals = w.globals.series.map(function(ser, index) {\n                    var total = 0;\n\n                    if (Array.isArray(ser)) {\n                        for (var j = 0; j < ser.length; j++) {\n                            total += ser[j];\n                        }\n                    } else {\n                        // for pie/donuts/gauges\n                        total += ser;\n                    }\n\n                    return total;\n                });\n            }\n        }, {\n            key: \"getSeriesTotalsXRange\",\n            value: function getSeriesTotalsXRange(minX, maxX) {\n                    var w = this.w;\n                    var seriesTotalsXRange = w.globals.series.map(function(ser, index) {\n                        var total = 0;\n\n                        for (var j = 0; j < ser.length; j++) {\n                            if (w.globals.seriesX[index][j] > minX && w.globals.seriesX[index][j] < maxX) {\n                                total += ser[j];\n                            }\n                        }\n\n                        return total;\n                    });\n                    return seriesTotalsXRange;\n                }\n                /**\n                 * @memberof CoreUtils\n                 * returns the percentage value of all individual values which can be used in a 100% stacked series\n                 * Eg. w.globals.series = [[32, 33, 43, 12], [2, 3, 5, 1]]\n                 *  @return [[94.11, 91.66, 89.58, 92.30], [5.88, 8.33, 10.41, 7.7]]\n                 **/\n\n        }, {\n            key: \"getPercentSeries\",\n            value: function getPercentSeries() {\n                var w = this.w;\n                w.globals.seriesPercent = w.globals.series.map(function(ser, index) {\n                    var seriesPercent = [];\n\n                    if (Array.isArray(ser)) {\n                        for (var j = 0; j < ser.length; j++) {\n                            var total = w.globals.stackedSeriesTotals[j];\n                            var percent = 0;\n\n                            if (total) {\n                                percent = 100 * ser[j] / total;\n                            }\n\n                            seriesPercent.push(percent);\n                        }\n                    } else {\n                        var _total = w.globals.seriesTotals.reduce(function(acc, val) {\n                            return acc + val;\n                        }, 0);\n\n                        var _percent = 100 * ser / _total;\n\n                        seriesPercent.push(_percent);\n                    }\n\n                    return seriesPercent;\n                });\n            }\n        }, {\n            key: \"getCalculatedRatios\",\n            value: function getCalculatedRatios() {\n                var gl = this.w.globals;\n                var yRatio = [];\n                var invertedYRatio = 0;\n                var xRatio = 0;\n                var initialXRatio = 0;\n                var invertedXRatio = 0;\n                var zRatio = 0;\n                var baseLineY = [];\n                var baseLineInvertedY = 0.1;\n                var baseLineX = 0;\n                gl.yRange = [];\n\n                if (gl.isMultipleYAxis) {\n                    for (var i = 0; i < gl.minYArr.length; i++) {\n                        gl.yRange.push(Math.abs(gl.minYArr[i] - gl.maxYArr[i]));\n                        baseLineY.push(0);\n                    }\n                } else {\n                    gl.yRange.push(Math.abs(gl.minY - gl.maxY));\n                }\n\n                gl.xRange = Math.abs(gl.maxX - gl.minX);\n                gl.zRange = Math.abs(gl.maxZ - gl.minZ); // multiple y axis\n\n                for (var _i = 0; _i < gl.yRange.length; _i++) {\n                    yRatio.push(gl.yRange[_i] / gl.gridHeight);\n                }\n\n                xRatio = gl.xRange / gl.gridWidth;\n                initialXRatio = Math.abs(gl.initialMaxX - gl.initialMinX) / gl.gridWidth;\n                invertedYRatio = gl.yRange / gl.gridWidth;\n                invertedXRatio = gl.xRange / gl.gridHeight;\n                zRatio = gl.zRange / gl.gridHeight * 16;\n\n                if (!zRatio) {\n                    zRatio = 1;\n                }\n\n                if (gl.minY !== Number.MIN_VALUE && Math.abs(gl.minY) !== 0) {\n                    // Negative numbers present in series\n                    gl.hasNegs = true;\n                }\n\n                if (gl.isMultipleYAxis) {\n                    baseLineY = []; // baseline variables is the 0 of the yaxis which will be needed when there are negatives\n\n                    for (var _i2 = 0; _i2 < yRatio.length; _i2++) {\n                        baseLineY.push(-gl.minYArr[_i2] / yRatio[_i2]);\n                    }\n                } else {\n                    baseLineY.push(-gl.minY / yRatio[0]);\n\n                    if (gl.minY !== Number.MIN_VALUE && Math.abs(gl.minY) !== 0) {\n                        baseLineInvertedY = -gl.minY / invertedYRatio; // this is for bar chart\n\n                        baseLineX = gl.minX / xRatio;\n                    }\n                }\n\n                return {\n                    yRatio: yRatio,\n                    invertedYRatio: invertedYRatio,\n                    zRatio: zRatio,\n                    xRatio: xRatio,\n                    initialXRatio: initialXRatio,\n                    invertedXRatio: invertedXRatio,\n                    baseLineInvertedY: baseLineInvertedY,\n                    baseLineY: baseLineY,\n                    baseLineX: baseLineX\n                };\n            }\n        }, {\n            key: \"getLogSeries\",\n            value: function getLogSeries(series) {\n                var _this = this;\n\n                var w = this.w;\n                w.globals.seriesLog = series.map(function(s, i) {\n                    if (w.config.yaxis[i] && w.config.yaxis[i].logarithmic) {\n                        return s.map(function(d) {\n                            if (d === null) return null;\n                            return _this.getLogVal(d, i);\n                        });\n                    } else {\n                        return s;\n                    }\n                });\n                return w.globals.invalidLogScale ? series : w.globals.seriesLog;\n            }\n        }, {\n            key: \"getLogVal\",\n            value: function getLogVal(d, yIndex) {\n                var w = this.w;\n                return (Math.log(d) - Math.log(w.globals.minYArr[yIndex])) / (Math.log(w.globals.maxYArr[yIndex]) - Math.log(w.globals.minYArr[yIndex]));\n            }\n        }, {\n            key: \"getLogYRatios\",\n            value: function getLogYRatios(yRatio) {\n                    var _this2 = this;\n\n                    var w = this.w;\n                    var gl = this.w.globals;\n                    gl.yLogRatio = yRatio.slice();\n                    gl.logYRange = gl.yRange.map(function(yRange, i) {\n                        if (w.config.yaxis[i] && _this2.w.config.yaxis[i].logarithmic) {\n                            var maxY = -Number.MAX_VALUE;\n                            var minY = Number.MIN_VALUE;\n                            var range = 1;\n                            gl.seriesLog.forEach(function(s, si) {\n                                s.forEach(function(v) {\n                                    if (w.config.yaxis[si] && w.config.yaxis[si].logarithmic) {\n                                        maxY = Math.max(v, maxY);\n                                        minY = Math.min(v, minY);\n                                    }\n                                });\n                            });\n                            range = Math.pow(gl.yRange[i], Math.abs(minY - maxY) / gl.yRange[i]);\n                            gl.yLogRatio[i] = range / gl.gridHeight;\n                            return range;\n                        }\n                    });\n                    return gl.invalidLogScale ? yRatio.slice() : gl.yLogRatio;\n                } // Some config objects can be array - and we need to extend them correctly\n\n        }], [{\n            key: \"checkComboSeries\",\n            value: function checkComboSeries(series) {\n                var comboCharts = false;\n                var comboBarCount = 0;\n                var comboCount = 0; // if user specified a type in series too, turn on comboCharts flag\n\n                if (series.length && typeof series[0].type !== 'undefined') {\n                    series.forEach(function(s) {\n                        if (s.type === 'bar' || s.type === 'column' || s.type === 'candlestick' || s.type === 'boxPlot') {\n                            comboBarCount++;\n                        }\n\n                        if (typeof s.type !== 'undefined') {\n                            comboCount++;\n                        }\n                    });\n                }\n\n                if (comboCount > 1) {\n                    comboCharts = true;\n                }\n\n                return {\n                    comboBarCount: comboBarCount,\n                    comboCharts: comboCharts\n                };\n            }\n        }, {\n            key: \"extendArrayProps\",\n            value: function extendArrayProps(configInstance, options, w) {\n                if (options.yaxis) {\n                    options = configInstance.extendYAxis(options, w);\n                }\n\n                if (options.annotations) {\n                    if (options.annotations.yaxis) {\n                        options = configInstance.extendYAxisAnnotations(options);\n                    }\n\n                    if (options.annotations.xaxis) {\n                        options = configInstance.extendXAxisAnnotations(options);\n                    }\n\n                    if (options.annotations.points) {\n                        options = configInstance.extendPointAnnotations(options);\n                    }\n                }\n\n                return options;\n            }\n        }]);\n\n        return CoreUtils;\n    }();\n\n    var YAnnotations = /*#__PURE__*/ function() {\n        function YAnnotations(annoCtx) {\n            _classCallCheck(this, YAnnotations);\n\n            this.w = annoCtx.w;\n            this.annoCtx = annoCtx;\n        }\n\n        _createClass(YAnnotations, [{\n            key: \"addYaxisAnnotation\",\n            value: function addYaxisAnnotation(anno, parent, index) {\n                var w = this.w;\n                var strokeDashArray = anno.strokeDashArray;\n\n                var y1 = this._getY1Y2('y1', anno);\n\n                var y2;\n                var text = anno.label.text;\n\n                if (anno.y2 === null || typeof anno.y2 === 'undefined') {\n                    var line = this.annoCtx.graphics.drawLine(0 + anno.offsetX, // x1\n                        y1 + anno.offsetY, // y1\n                        this._getYAxisAnnotationWidth(anno), // x2\n                        y1 + anno.offsetY, // y2\n                        anno.borderColor, // lineColor\n                        strokeDashArray, // dashArray\n                        anno.borderWidth);\n                    parent.appendChild(line.node);\n\n                    if (anno.id) {\n                        line.node.classList.add(anno.id);\n                    }\n                } else {\n                    y2 = this._getY1Y2('y2', anno);\n\n                    if (y2 > y1) {\n                        var temp = y1;\n                        y1 = y2;\n                        y2 = temp;\n                    }\n\n                    var rect = this.annoCtx.graphics.drawRect(0 + anno.offsetX, // x1\n                        y2 + anno.offsetY, // y1\n                        this._getYAxisAnnotationWidth(anno), // x2\n                        y1 - y2, // y2\n                        0, // radius\n                        anno.fillColor, // color\n                        anno.opacity, // opacity,\n                        1, // strokeWidth\n                        anno.borderColor, // strokeColor\n                        strokeDashArray // stokeDashArray\n                    );\n                    rect.node.classList.add('apexcharts-annotation-rect');\n                    rect.attr('clip-path', \"url(#gridRectMask\".concat(w.globals.cuid, \")\"));\n                    parent.appendChild(rect.node);\n\n                    if (anno.id) {\n                        rect.node.classList.add(anno.id);\n                    }\n                }\n\n                var textX = anno.label.position === 'right' ? w.globals.gridWidth : 0;\n                var elText = this.annoCtx.graphics.drawText({\n                    x: textX + anno.label.offsetX,\n                    y: (y2 || y1) + anno.label.offsetY - 3,\n                    text: text,\n                    textAnchor: anno.label.textAnchor,\n                    fontSize: anno.label.style.fontSize,\n                    fontFamily: anno.label.style.fontFamily,\n                    fontWeight: anno.label.style.fontWeight,\n                    foreColor: anno.label.style.color,\n                    cssClass: \"apexcharts-yaxis-annotation-label \".concat(anno.label.style.cssClass, \" \").concat(anno.id ? anno.id : '')\n                });\n                elText.attr({\n                    rel: index\n                });\n                parent.appendChild(elText.node);\n            }\n        }, {\n            key: \"_getY1Y2\",\n            value: function _getY1Y2(type, anno) {\n                var y = type === 'y1' ? anno.y : anno.y2;\n                var yP;\n                var w = this.w;\n\n                if (this.annoCtx.invertAxis) {\n                    var catIndex = w.globals.labels.indexOf(y);\n\n                    if (w.config.xaxis.convertedCatToNumeric) {\n                        catIndex = w.globals.categoryLabels.indexOf(y);\n                    }\n\n                    var xLabel = w.globals.dom.baseEl.querySelector('.apexcharts-yaxis-texts-g text:nth-child(' + (catIndex + 1) + ')');\n\n                    if (xLabel) {\n                        yP = parseFloat(xLabel.getAttribute('y'));\n                    }\n                } else {\n                    var yPos;\n\n                    if (w.config.yaxis[anno.yAxisIndex].logarithmic) {\n                        var coreUtils = new CoreUtils(this.annoCtx.ctx);\n                        y = coreUtils.getLogVal(y, anno.yAxisIndex);\n                        yPos = y / w.globals.yLogRatio[anno.yAxisIndex];\n                    } else {\n                        yPos = (y - w.globals.minYArr[anno.yAxisIndex]) / (w.globals.yRange[anno.yAxisIndex] / w.globals.gridHeight);\n                    }\n\n                    yP = w.globals.gridHeight - yPos;\n\n                    if (w.config.yaxis[anno.yAxisIndex] && w.config.yaxis[anno.yAxisIndex].reversed) {\n                        yP = yPos;\n                    }\n                }\n\n                return yP;\n            }\n        }, {\n            key: \"_getYAxisAnnotationWidth\",\n            value: function _getYAxisAnnotationWidth(anno) {\n                // issue apexcharts.js#2009\n                var w = this.w;\n                var width = w.globals.gridWidth;\n\n                if (anno.width.indexOf('%') > -1) {\n                    width = w.globals.gridWidth * parseInt(anno.width, 10) / 100;\n                } else {\n                    width = parseInt(anno.width, 10);\n                }\n\n                return width + anno.offsetX;\n            }\n        }, {\n            key: \"drawYAxisAnnotations\",\n            value: function drawYAxisAnnotations() {\n                var _this = this;\n\n                var w = this.w;\n                var elg = this.annoCtx.graphics.group({\n                    class: 'apexcharts-yaxis-annotations'\n                });\n                w.config.annotations.yaxis.map(function(anno, index) {\n                    _this.addYaxisAnnotation(anno, elg.node, index);\n                });\n                return elg;\n            }\n        }]);\n\n        return YAnnotations;\n    }();\n\n    var PointAnnotations = /*#__PURE__*/ function() {\n        function PointAnnotations(annoCtx) {\n            _classCallCheck(this, PointAnnotations);\n\n            this.w = annoCtx.w;\n            this.annoCtx = annoCtx;\n        }\n\n        _createClass(PointAnnotations, [{\n            key: \"addPointAnnotation\",\n            value: function addPointAnnotation(anno, parent, index) {\n                var w = this.w;\n                var x = 0;\n                var y = 0;\n                var pointY = 0;\n\n                if (this.annoCtx.invertAxis) {\n                    console.warn('Point annotation is not supported in horizontal bar charts.');\n                }\n\n                var annoY = parseFloat(anno.y);\n\n                if (typeof anno.x === 'string') {\n                    var catIndex = w.globals.labels.indexOf(anno.x);\n\n                    if (w.config.xaxis.convertedCatToNumeric) {\n                        catIndex = w.globals.categoryLabels.indexOf(anno.x);\n                    }\n\n                    x = this.annoCtx.helpers.getStringX(anno.x);\n\n                    if (anno.y === null) {\n                        annoY = w.globals.series[anno.seriesIndex][catIndex];\n                    }\n                } else {\n                    x = (anno.x - w.globals.minX) / (w.globals.xRange / w.globals.gridWidth);\n                } // count series assign to the same axis\n\n\n                var duplicateSeriesName = [];\n                var countDuplicateSeriesName = 0;\n\n                for (var i = 0; i <= anno.seriesIndex; i++) {\n                    var serieName = w.config.yaxis[i].seriesName;\n                    if (serieName)\n                        for (var j = i + 1; j <= anno.seriesIndex; j++) {\n                            if (w.config.yaxis[j].seriesName === serieName && duplicateSeriesName.indexOf(serieName) === -1) {\n                                countDuplicateSeriesName++;\n                                duplicateSeriesName.push(serieName);\n                            }\n                        }\n                }\n\n                var yPos;\n\n                if (w.config.yaxis[anno.yAxisIndex].logarithmic) {\n                    var coreUtils = new CoreUtils(this.annoCtx.ctx);\n                    annoY = coreUtils.getLogVal(annoY, anno.yAxisIndex);\n                    yPos = annoY / w.globals.yLogRatio[anno.yAxisIndex];\n                } else {\n                    // calculate the right position in array for this yAxisIndex\n                    var actualSerieIndex = anno.yAxisIndex + countDuplicateSeriesName;\n                    yPos = (annoY - w.globals.minYArr[actualSerieIndex]) / (w.globals.yRange[actualSerieIndex] / w.globals.gridHeight);\n                }\n\n                y = w.globals.gridHeight - yPos - parseFloat(anno.label.style.fontSize) - anno.marker.size;\n                pointY = w.globals.gridHeight - yPos;\n\n                if (w.config.yaxis[anno.yAxisIndex] && w.config.yaxis[anno.yAxisIndex].reversed) {\n                    y = yPos + parseFloat(anno.label.style.fontSize) + anno.marker.size;\n                    pointY = yPos;\n                }\n\n                if (!Utils.isNumber(x)) return;\n                var optsPoints = {\n                    pSize: anno.marker.size,\n                    pointStrokeWidth: anno.marker.strokeWidth,\n                    pointFillColor: anno.marker.fillColor,\n                    pointStrokeColor: anno.marker.strokeColor,\n                    shape: anno.marker.shape,\n                    pRadius: anno.marker.radius,\n                    class: \"apexcharts-point-annotation-marker \".concat(anno.marker.cssClass, \" \").concat(anno.id ? anno.id : '')\n                };\n                var point = this.annoCtx.graphics.drawMarker(x + anno.marker.offsetX, pointY + anno.marker.offsetY, optsPoints);\n                parent.appendChild(point.node);\n                var text = anno.label.text ? anno.label.text : '';\n                var elText = this.annoCtx.graphics.drawText({\n                    x: x + anno.label.offsetX,\n                    y: y + anno.label.offsetY,\n                    text: text,\n                    textAnchor: anno.label.textAnchor,\n                    fontSize: anno.label.style.fontSize,\n                    fontFamily: anno.label.style.fontFamily,\n                    fontWeight: anno.label.style.fontWeight,\n                    foreColor: anno.label.style.color,\n                    cssClass: \"apexcharts-point-annotation-label \".concat(anno.label.style.cssClass, \" \").concat(anno.id ? anno.id : '')\n                });\n                elText.attr({\n                    rel: index\n                });\n                parent.appendChild(elText.node); // TODO: deprecate this as we will use custom\n\n                if (anno.customSVG.SVG) {\n                    var g = this.annoCtx.graphics.group({\n                        class: 'apexcharts-point-annotations-custom-svg ' + anno.customSVG.cssClass\n                    });\n                    g.attr({\n                        transform: \"translate(\".concat(x + anno.customSVG.offsetX, \", \").concat(y + anno.customSVG.offsetY, \")\")\n                    });\n                    g.node.innerHTML = anno.customSVG.SVG;\n                    parent.appendChild(g.node);\n                }\n\n                if (anno.image.path) {\n                    var imgWidth = anno.image.width ? anno.image.width : 20;\n                    var imgHeight = anno.image.height ? anno.image.height : 20;\n                    this.annoCtx.addImage({\n                        x: x + anno.image.offsetX - imgWidth / 2,\n                        y: y + anno.image.offsetY - imgHeight / 2,\n                        width: imgWidth,\n                        height: imgHeight,\n                        path: anno.image.path,\n                        appendTo: '.apexcharts-point-annotations'\n                    });\n                }\n            }\n        }, {\n            key: \"drawPointAnnotations\",\n            value: function drawPointAnnotations() {\n                var _this = this;\n\n                var w = this.w;\n                var elg = this.annoCtx.graphics.group({\n                    class: 'apexcharts-point-annotations'\n                });\n                w.config.annotations.points.map(function(anno, index) {\n                    _this.addPointAnnotation(anno, elg.node, index);\n                });\n                return elg;\n            }\n        }]);\n\n        return PointAnnotations;\n    }();\n\n    const name = \"en\";\n    const options = {\n        months: [\n            \"January\",\n            \"February\",\n            \"March\",\n            \"April\",\n            \"May\",\n            \"June\",\n            \"July\",\n            \"August\",\n            \"September\",\n            \"October\",\n            \"November\",\n            \"December\"\n        ],\n        shortMonths: [\n            \"Jan\",\n            \"Feb\",\n            \"Mar\",\n            \"Apr\",\n            \"May\",\n            \"Jun\",\n            \"Jul\",\n            \"Aug\",\n            \"Sep\",\n            \"Oct\",\n            \"Nov\",\n            \"Dec\"\n        ],\n        days: [\n            \"Sunday\",\n            \"Monday\",\n            \"Tuesday\",\n            \"Wednesday\",\n            \"Thursday\",\n            \"Friday\",\n            \"Saturday\"\n        ],\n        shortDays: [\n            \"Sun\",\n            \"Mon\",\n            \"Tue\",\n            \"Wed\",\n            \"Thu\",\n            \"Fri\",\n            \"Sat\"\n        ],\n        toolbar: {\n            exportToSVG: \"Download SVG\",\n            exportToPNG: \"Download PNG\",\n            exportToCSV: \"Download CSV\",\n            menu: \"Menu\",\n            selection: \"Selection\",\n            selectionZoom: \"Selection Zoom\",\n            zoomIn: \"Zoom In\",\n            zoomOut: \"Zoom Out\",\n            pan: \"Panning\",\n            reset: \"Reset Zoom\"\n        }\n    };\n    var en = {\n        name: name,\n        options: options\n    };\n\n    var Options = /*#__PURE__*/ function() {\n        function Options() {\n            _classCallCheck(this, Options);\n\n            this.yAxis = {\n                show: true,\n                showAlways: false,\n                showForNullSeries: true,\n                seriesName: undefined,\n                opposite: false,\n                reversed: false,\n                logarithmic: false,\n                tickAmount: undefined,\n                forceNiceScale: false,\n                max: undefined,\n                min: undefined,\n                floating: false,\n                decimalsInFloat: undefined,\n                labels: {\n                    show: true,\n                    minWidth: 0,\n                    maxWidth: 160,\n                    offsetX: 0,\n                    offsetY: 0,\n                    align: undefined,\n                    rotate: 0,\n                    padding: 20,\n                    style: {\n                        colors: [],\n                        fontSize: '11px',\n                        fontWeight: 400,\n                        fontFamily: undefined,\n                        cssClass: ''\n                    },\n                    formatter: undefined\n                },\n                axisBorder: {\n                    show: false,\n                    color: '#e0e0e0',\n                    width: 1,\n                    offsetX: 0,\n                    offsetY: 0\n                },\n                axisTicks: {\n                    show: false,\n                    color: '#e0e0e0',\n                    width: 6,\n                    offsetX: 0,\n                    offsetY: 0\n                },\n                title: {\n                    text: undefined,\n                    rotate: -90,\n                    offsetY: 0,\n                    offsetX: 0,\n                    style: {\n                        color: undefined,\n                        fontSize: '11px',\n                        fontWeight: 900,\n                        fontFamily: undefined,\n                        cssClass: ''\n                    }\n                },\n                tooltip: {\n                    enabled: false,\n                    offsetX: 0\n                },\n                crosshairs: {\n                    show: true,\n                    position: 'front',\n                    stroke: {\n                        color: '#b6b6b6',\n                        width: 1,\n                        dashArray: 0\n                    }\n                }\n            };\n            this.pointAnnotation = {\n                x: 0,\n                y: null,\n                yAxisIndex: 0,\n                seriesIndex: 0,\n                marker: {\n                    size: 4,\n                    fillColor: '#fff',\n                    strokeWidth: 2,\n                    strokeColor: '#333',\n                    shape: 'circle',\n                    offsetX: 0,\n                    offsetY: 0,\n                    radius: 2,\n                    cssClass: ''\n                },\n                label: {\n                    borderColor: '#c2c2c2',\n                    borderWidth: 1,\n                    borderRadius: 2,\n                    text: undefined,\n                    textAnchor: 'middle',\n                    offsetX: 0,\n                    offsetY: 0,\n                    style: {\n                        background: '#fff',\n                        color: undefined,\n                        fontSize: '11px',\n                        fontFamily: undefined,\n                        fontWeight: 400,\n                        cssClass: '',\n                        padding: {\n                            left: 5,\n                            right: 5,\n                            top: 2,\n                            bottom: 2\n                        }\n                    }\n                },\n                customSVG: {\n                    // this will be deprecated in the next major version as it is going to be replaced with a better alternative below\n                    SVG: undefined,\n                    cssClass: undefined,\n                    offsetX: 0,\n                    offsetY: 0\n                },\n                image: {\n                    path: undefined,\n                    width: 20,\n                    height: 20,\n                    offsetX: 0,\n                    offsetY: 0\n                }\n            };\n            this.yAxisAnnotation = {\n                y: 0,\n                y2: null,\n                strokeDashArray: 1,\n                fillColor: '#c2c2c2',\n                borderColor: '#c2c2c2',\n                borderWidth: 1,\n                opacity: 0.3,\n                offsetX: 0,\n                offsetY: 0,\n                width: '100%',\n                yAxisIndex: 0,\n                label: {\n                    borderColor: '#c2c2c2',\n                    borderWidth: 1,\n                    borderRadius: 2,\n                    text: undefined,\n                    textAnchor: 'end',\n                    position: 'right',\n                    offsetX: 0,\n                    offsetY: -3,\n                    style: {\n                        background: '#fff',\n                        color: undefined,\n                        fontSize: '11px',\n                        fontFamily: undefined,\n                        fontWeight: 400,\n                        cssClass: '',\n                        padding: {\n                            left: 5,\n                            right: 5,\n                            top: 2,\n                            bottom: 2\n                        }\n                    }\n                }\n            };\n            this.xAxisAnnotation = {\n                x: 0,\n                x2: null,\n                strokeDashArray: 1,\n                fillColor: '#c2c2c2',\n                borderColor: '#c2c2c2',\n                borderWidth: 1,\n                opacity: 0.3,\n                offsetX: 0,\n                offsetY: 0,\n                label: {\n                    borderColor: '#c2c2c2',\n                    borderWidth: 1,\n                    borderRadius: 2,\n                    text: undefined,\n                    textAnchor: 'middle',\n                    orientation: 'vertical',\n                    position: 'top',\n                    offsetX: 0,\n                    offsetY: 0,\n                    style: {\n                        background: '#fff',\n                        color: undefined,\n                        fontSize: '11px',\n                        fontFamily: undefined,\n                        fontWeight: 400,\n                        cssClass: '',\n                        padding: {\n                            left: 5,\n                            right: 5,\n                            top: 2,\n                            bottom: 2\n                        }\n                    }\n                }\n            };\n            this.text = {\n                x: 0,\n                y: 0,\n                text: '',\n                textAnchor: 'start',\n                foreColor: undefined,\n                fontSize: '13px',\n                fontFamily: undefined,\n                fontWeight: 400,\n                appendTo: '.apexcharts-annotations',\n                backgroundColor: 'transparent',\n                borderColor: '#c2c2c2',\n                borderRadius: 0,\n                borderWidth: 0,\n                paddingLeft: 4,\n                paddingRight: 4,\n                paddingTop: 2,\n                paddingBottom: 2\n            };\n        }\n\n        _createClass(Options, [{\n            key: \"init\",\n            value: function init() {\n                return {\n                    annotations: {\n                        position: 'front',\n                        yaxis: [this.yAxisAnnotation],\n                        xaxis: [this.xAxisAnnotation],\n                        points: [this.pointAnnotation],\n                        texts: [],\n                        images: [],\n                        shapes: []\n                    },\n                    chart: {\n                        animations: {\n                            enabled: true,\n                            easing: 'easeinout',\n                            // linear, easeout, easein, easeinout, swing, bounce, elastic\n                            speed: 800,\n                            animateGradually: {\n                                delay: 150,\n                                enabled: true\n                            },\n                            dynamicAnimation: {\n                                enabled: true,\n                                speed: 350\n                            }\n                        },\n                        background: 'transparent',\n                        locales: [en],\n                        defaultLocale: 'en',\n                        dropShadow: {\n                            enabled: false,\n                            enabledOnSeries: undefined,\n                            top: 2,\n                            left: 2,\n                            blur: 4,\n                            color: '#000',\n                            opacity: 0.35\n                        },\n                        events: {\n                            animationEnd: undefined,\n                            beforeMount: undefined,\n                            mounted: undefined,\n                            updated: undefined,\n                            click: undefined,\n                            mouseMove: undefined,\n                            mouseLeave: undefined,\n                            legendClick: undefined,\n                            markerClick: undefined,\n                            selection: undefined,\n                            dataPointSelection: undefined,\n                            dataPointMouseEnter: undefined,\n                            dataPointMouseLeave: undefined,\n                            beforeZoom: undefined,\n                            beforeResetZoom: undefined,\n                            zoomed: undefined,\n                            scrolled: undefined,\n                            brushScrolled: undefined\n                        },\n                        foreColor: '#373d3f',\n                        fontFamily: 'Helvetica, Arial, sans-serif',\n                        height: 'auto',\n                        parentHeightOffset: 15,\n                        redrawOnParentResize: true,\n                        redrawOnWindowResize: true,\n                        id: undefined,\n                        group: undefined,\n                        offsetX: 0,\n                        offsetY: 0,\n                        selection: {\n                            enabled: false,\n                            type: 'x',\n                            // selectedPoints: undefined, // default datapoints that should be selected automatically\n                            fill: {\n                                color: '#24292e',\n                                opacity: 0.1\n                            },\n                            stroke: {\n                                width: 1,\n                                color: '#24292e',\n                                opacity: 0.4,\n                                dashArray: 3\n                            },\n                            xaxis: {\n                                min: undefined,\n                                max: undefined\n                            },\n                            yaxis: {\n                                min: undefined,\n                                max: undefined\n                            }\n                        },\n                        sparkline: {\n                            enabled: false\n                        },\n                        brush: {\n                            enabled: false,\n                            autoScaleYaxis: true,\n                            target: undefined\n                        },\n                        stacked: false,\n                        stackType: 'normal',\n                        toolbar: {\n                            show: true,\n                            offsetX: 0,\n                            offsetY: 0,\n                            tools: {\n                                download: true,\n                                selection: true,\n                                zoom: true,\n                                zoomin: true,\n                                zoomout: true,\n                                pan: true,\n                                reset: true,\n                                customIcons: []\n                            },\n                            export: {\n                                csv: {\n                                    filename: undefined,\n                                    columnDelimiter: ',',\n                                    headerCategory: 'category',\n                                    headerValue: 'value',\n                                    dateFormatter: function dateFormatter(timestamp) {\n                                        return new Date(timestamp).toDateString();\n                                    }\n                                },\n                                png: {\n                                    filename: undefined\n                                },\n                                svg: {\n                                    filename: undefined\n                                }\n                            },\n                            autoSelected: 'zoom' // accepts -> zoom, pan, selection\n\n                        },\n                        type: 'line',\n                        width: '100%',\n                        zoom: {\n                            enabled: true,\n                            type: 'x',\n                            autoScaleYaxis: false,\n                            zoomedArea: {\n                                fill: {\n                                    color: '#90CAF9',\n                                    opacity: 0.4\n                                },\n                                stroke: {\n                                    color: '#0D47A1',\n                                    opacity: 0.4,\n                                    width: 1\n                                }\n                            }\n                        }\n                    },\n                    plotOptions: {\n                        area: {\n                            fillTo: 'origin'\n                        },\n                        bar: {\n                            horizontal: false,\n                            columnWidth: '70%',\n                            // should be in percent 0 - 100\n                            barHeight: '70%',\n                            // should be in percent 0 - 100\n                            distributed: false,\n                            borderRadius: 0,\n                            rangeBarOverlap: true,\n                            rangeBarGroupRows: false,\n                            colors: {\n                                ranges: [],\n                                backgroundBarColors: [],\n                                backgroundBarOpacity: 1,\n                                backgroundBarRadius: 0\n                            },\n                            dataLabels: {\n                                position: 'top',\n                                // top, center, bottom\n                                maxItems: 100,\n                                hideOverflowingLabels: true,\n                                orientation: 'horizontal' // TODO: provide stackedLabels for stacked charts which gives additions of values\n\n                            }\n                        },\n                        bubble: {\n                            minBubbleRadius: undefined,\n                            maxBubbleRadius: undefined\n                        },\n                        candlestick: {\n                            colors: {\n                                upward: '#00B746',\n                                downward: '#EF403C'\n                            },\n                            wick: {\n                                useFillColor: true\n                            }\n                        },\n                        boxPlot: {\n                            colors: {\n                                upper: '#00E396',\n                                lower: '#008FFB'\n                            }\n                        },\n                        heatmap: {\n                            radius: 2,\n                            enableShades: true,\n                            shadeIntensity: 0.5,\n                            reverseNegativeShade: false,\n                            distributed: false,\n                            useFillColorAsStroke: false,\n                            colorScale: {\n                                inverse: false,\n                                ranges: [],\n                                min: undefined,\n                                max: undefined\n                            }\n                        },\n                        treemap: {\n                            enableShades: true,\n                            shadeIntensity: 0.5,\n                            distributed: false,\n                            reverseNegativeShade: false,\n                            useFillColorAsStroke: false,\n                            colorScale: {\n                                inverse: false,\n                                ranges: [],\n                                min: undefined,\n                                max: undefined\n                            }\n                        },\n                        radialBar: {\n                            inverseOrder: false,\n                            startAngle: 0,\n                            endAngle: 360,\n                            offsetX: 0,\n                            offsetY: 0,\n                            hollow: {\n                                margin: 5,\n                                size: '50%',\n                                background: 'transparent',\n                                image: undefined,\n                                imageWidth: 150,\n                                imageHeight: 150,\n                                imageOffsetX: 0,\n                                imageOffsetY: 0,\n                                imageClipped: true,\n                                position: 'front',\n                                dropShadow: {\n                                    enabled: false,\n                                    top: 0,\n                                    left: 0,\n                                    blur: 3,\n                                    color: '#000',\n                                    opacity: 0.5\n                                }\n                            },\n                            track: {\n                                show: true,\n                                startAngle: undefined,\n                                endAngle: undefined,\n                                background: '#f2f2f2',\n                                strokeWidth: '97%',\n                                opacity: 1,\n                                margin: 5,\n                                // margin is in pixels\n                                dropShadow: {\n                                    enabled: false,\n                                    top: 0,\n                                    left: 0,\n                                    blur: 3,\n                                    color: '#000',\n                                    opacity: 0.5\n                                }\n                            },\n                            dataLabels: {\n                                show: true,\n                                name: {\n                                    show: true,\n                                    fontSize: '16px',\n                                    fontFamily: undefined,\n                                    fontWeight: 600,\n                                    color: undefined,\n                                    offsetY: 0,\n                                    formatter: function formatter(val) {\n                                        return val;\n                                    }\n                                },\n                                value: {\n                                    show: true,\n                                    fontSize: '14px',\n                                    fontFamily: undefined,\n                                    fontWeight: 400,\n                                    color: undefined,\n                                    offsetY: 16,\n                                    formatter: function formatter(val) {\n                                        return val + '%';\n                                    }\n                                },\n                                total: {\n                                    show: false,\n                                    label: 'Total',\n                                    fontSize: '16px',\n                                    fontWeight: 600,\n                                    fontFamily: undefined,\n                                    color: undefined,\n                                    formatter: function formatter(w) {\n                                        return w.globals.seriesTotals.reduce(function(a, b) {\n                                            return a + b;\n                                        }, 0) / w.globals.series.length + '%';\n                                    }\n                                }\n                            }\n                        },\n                        pie: {\n                            customScale: 1,\n                            offsetX: 0,\n                            offsetY: 0,\n                            startAngle: 0,\n                            endAngle: 360,\n                            expandOnClick: true,\n                            dataLabels: {\n                                // These are the percentage values which are displayed on slice\n                                offset: 0,\n                                // offset by which labels will move outside\n                                minAngleToShowLabel: 10\n                            },\n                            donut: {\n                                size: '65%',\n                                background: 'transparent',\n                                labels: {\n                                    // These are the inner labels appearing inside donut\n                                    show: false,\n                                    name: {\n                                        show: true,\n                                        fontSize: '16px',\n                                        fontFamily: undefined,\n                                        fontWeight: 600,\n                                        color: undefined,\n                                        offsetY: -10,\n                                        formatter: function formatter(val) {\n                                            return val;\n                                        }\n                                    },\n                                    value: {\n                                        show: true,\n                                        fontSize: '20px',\n                                        fontFamily: undefined,\n                                        fontWeight: 400,\n                                        color: undefined,\n                                        offsetY: 10,\n                                        formatter: function formatter(val) {\n                                            return val;\n                                        }\n                                    },\n                                    total: {\n                                        show: false,\n                                        showAlways: false,\n                                        label: 'Total',\n                                        fontSize: '16px',\n                                        fontWeight: 400,\n                                        fontFamily: undefined,\n                                        color: undefined,\n                                        formatter: function formatter(w) {\n                                            return w.globals.seriesTotals.reduce(function(a, b) {\n                                                return a + b;\n                                            }, 0);\n                                        }\n                                    }\n                                }\n                            }\n                        },\n                        polarArea: {\n                            rings: {\n                                strokeWidth: 1,\n                                strokeColor: '#e8e8e8'\n                            },\n                            spokes: {\n                                strokeWidth: 1,\n                                connectorColors: '#e8e8e8'\n                            }\n                        },\n                        radar: {\n                            size: undefined,\n                            offsetX: 0,\n                            offsetY: 0,\n                            polygons: {\n                                // strokeColor: '#e8e8e8', // should be deprecated in the minor version i.e 3.2\n                                strokeWidth: 1,\n                                strokeColors: '#e8e8e8',\n                                connectorColors: '#e8e8e8',\n                                fill: {\n                                    colors: undefined\n                                }\n                            }\n                        }\n                    },\n                    colors: undefined,\n                    dataLabels: {\n                        enabled: true,\n                        enabledOnSeries: undefined,\n                        formatter: function formatter(val) {\n                            return val !== null ? val : '';\n                        },\n                        textAnchor: 'middle',\n                        distributed: false,\n                        offsetX: 0,\n                        offsetY: 0,\n                        style: {\n                            fontSize: '12px',\n                            fontFamily: undefined,\n                            fontWeight: 600,\n                            colors: undefined\n                        },\n                        background: {\n                            enabled: true,\n                            foreColor: '#fff',\n                            borderRadius: 2,\n                            padding: 4,\n                            opacity: 0.9,\n                            borderWidth: 1,\n                            borderColor: '#fff',\n                            dropShadow: {\n                                enabled: false,\n                                top: 1,\n                                left: 1,\n                                blur: 1,\n                                color: '#000',\n                                opacity: 0.45\n                            }\n                        },\n                        dropShadow: {\n                            enabled: false,\n                            top: 1,\n                            left: 1,\n                            blur: 1,\n                            color: '#000',\n                            opacity: 0.45\n                        }\n                    },\n                    fill: {\n                        type: 'solid',\n                        colors: undefined,\n                        // array of colors\n                        opacity: 0.85,\n                        gradient: {\n                            shade: 'dark',\n                            type: 'horizontal',\n                            shadeIntensity: 0.5,\n                            gradientToColors: undefined,\n                            inverseColors: true,\n                            opacityFrom: 1,\n                            opacityTo: 1,\n                            stops: [0, 50, 100],\n                            colorStops: []\n                        },\n                        image: {\n                            src: [],\n                            width: undefined,\n                            // optional\n                            height: undefined // optional\n\n                        },\n                        pattern: {\n                            style: 'squares',\n                            // String | Array of Strings\n                            width: 6,\n                            height: 6,\n                            strokeWidth: 2\n                        }\n                    },\n                    forecastDataPoints: {\n                        count: 0,\n                        fillOpacity: 0.5,\n                        strokeWidth: undefined,\n                        dashArray: 4\n                    },\n                    grid: {\n                        show: true,\n                        borderColor: '#e0e0e0',\n                        strokeDashArray: 0,\n                        position: 'back',\n                        xaxis: {\n                            lines: {\n                                show: false\n                            }\n                        },\n                        yaxis: {\n                            lines: {\n                                show: true\n                            }\n                        },\n                        row: {\n                            colors: undefined,\n                            // takes as array which will be repeated on rows\n                            opacity: 0.5\n                        },\n                        column: {\n                            colors: undefined,\n                            // takes an array which will be repeated on columns\n                            opacity: 0.5\n                        },\n                        padding: {\n                            top: 0,\n                            right: 10,\n                            bottom: 0,\n                            left: 12\n                        }\n                    },\n                    labels: [],\n                    legend: {\n                        show: true,\n                        showForSingleSeries: false,\n                        showForNullSeries: true,\n                        showForZeroSeries: true,\n                        floating: false,\n                        position: 'bottom',\n                        // whether to position legends in 1 of 4\n                        // direction - top, bottom, left, right\n                        horizontalAlign: 'center',\n                        // when position top/bottom, you can specify whether to align legends left, right or center\n                        inverseOrder: false,\n                        fontSize: '12px',\n                        fontFamily: undefined,\n                        fontWeight: 400,\n                        width: undefined,\n                        height: undefined,\n                        formatter: undefined,\n                        tooltipHoverFormatter: undefined,\n                        offsetX: -20,\n                        offsetY: 4,\n                        customLegendItems: [],\n                        labels: {\n                            colors: undefined,\n                            useSeriesColors: false\n                        },\n                        markers: {\n                            width: 12,\n                            height: 12,\n                            strokeWidth: 0,\n                            fillColors: undefined,\n                            strokeColor: '#fff',\n                            radius: 12,\n                            customHTML: undefined,\n                            offsetX: 0,\n                            offsetY: 0,\n                            onClick: undefined\n                        },\n                        itemMargin: {\n                            horizontal: 5,\n                            vertical: 2\n                        },\n                        onItemClick: {\n                            toggleDataSeries: true\n                        },\n                        onItemHover: {\n                            highlightDataSeries: true\n                        }\n                    },\n                    markers: {\n                        discrete: [],\n                        size: 0,\n                        colors: undefined,\n                        //strokeColor: '#fff', // TODO: deprecate in major version 4.0\n                        strokeColors: '#fff',\n                        strokeWidth: 2,\n                        strokeOpacity: 0.9,\n                        strokeDashArray: 0,\n                        fillOpacity: 1,\n                        shape: 'circle',\n                        width: 8,\n                        // only applicable when shape is rect/square\n                        height: 8,\n                        // only applicable when shape is rect/square\n                        radius: 2,\n                        offsetX: 0,\n                        offsetY: 0,\n                        onClick: undefined,\n                        onDblClick: undefined,\n                        showNullDataPoints: true,\n                        hover: {\n                            size: undefined,\n                            sizeOffset: 3\n                        }\n                    },\n                    noData: {\n                        text: undefined,\n                        align: 'center',\n                        verticalAlign: 'middle',\n                        offsetX: 0,\n                        offsetY: 0,\n                        style: {\n                            color: undefined,\n                            fontSize: '14px',\n                            fontFamily: undefined\n                        }\n                    },\n                    responsive: [],\n                    // breakpoints should follow ascending order 400, then 700, then 1000\n                    series: undefined,\n                    states: {\n                        normal: {\n                            filter: {\n                                type: 'none',\n                                value: 0\n                            }\n                        },\n                        hover: {\n                            filter: {\n                                type: 'lighten',\n                                value: 0.1\n                            }\n                        },\n                        active: {\n                            allowMultipleDataPointsSelection: false,\n                            filter: {\n                                type: 'darken',\n                                value: 0.5\n                            }\n                        }\n                    },\n                    title: {\n                        text: undefined,\n                        align: 'left',\n                        margin: 5,\n                        offsetX: 0,\n                        offsetY: 0,\n                        floating: false,\n                        style: {\n                            fontSize: '14px',\n                            fontWeight: 900,\n                            fontFamily: undefined,\n                            color: undefined\n                        }\n                    },\n                    subtitle: {\n                        text: undefined,\n                        align: 'left',\n                        margin: 5,\n                        offsetX: 0,\n                        offsetY: 30,\n                        floating: false,\n                        style: {\n                            fontSize: '12px',\n                            fontWeight: 400,\n                            fontFamily: undefined,\n                            color: undefined\n                        }\n                    },\n                    stroke: {\n                        show: true,\n                        curve: 'smooth',\n                        // \"smooth\" / \"straight\" / \"stepline\"\n                        lineCap: 'butt',\n                        // round, butt , square\n                        width: 2,\n                        colors: undefined,\n                        // array of colors\n                        dashArray: 0 // single value or array of values\n\n                    },\n                    tooltip: {\n                        enabled: true,\n                        enabledOnSeries: undefined,\n                        shared: true,\n                        followCursor: false,\n                        // when disabled, the tooltip will show on top of the series instead of mouse position\n                        intersect: false,\n                        // when enabled, tooltip will only show when user directly hovers over point\n                        inverseOrder: false,\n                        custom: undefined,\n                        fillSeriesColor: false,\n                        theme: 'light',\n                        style: {\n                            fontSize: '12px',\n                            fontFamily: undefined\n                        },\n                        onDatasetHover: {\n                            highlightDataSeries: false\n                        },\n                        x: {\n                            // x value\n                            show: true,\n                            format: 'dd MMM',\n                            // dd/MM, dd MMM yy, dd MMM yyyy\n                            formatter: undefined // a custom user supplied formatter function\n\n                        },\n                        y: {\n                            formatter: undefined,\n                            title: {\n                                formatter: function formatter(seriesName) {\n                                    return seriesName ? seriesName + ': ' : '';\n                                }\n                            }\n                        },\n                        z: {\n                            formatter: undefined,\n                            title: 'Size: '\n                        },\n                        marker: {\n                            show: true,\n                            fillColors: undefined\n                        },\n                        items: {\n                            display: 'flex'\n                        },\n                        fixed: {\n                            enabled: false,\n                            position: 'topRight',\n                            // topRight, topLeft, bottomRight, bottomLeft\n                            offsetX: 0,\n                            offsetY: 0\n                        }\n                    },\n                    xaxis: {\n                        type: 'category',\n                        categories: [],\n                        convertedCatToNumeric: false,\n                        // internal property which should not be altered outside\n                        offsetX: 0,\n                        offsetY: 0,\n                        overwriteCategories: undefined,\n                        labels: {\n                            show: true,\n                            rotate: -45,\n                            rotateAlways: false,\n                            hideOverlappingLabels: true,\n                            trim: false,\n                            minHeight: undefined,\n                            maxHeight: 120,\n                            showDuplicates: true,\n                            style: {\n                                colors: [],\n                                fontSize: '12px',\n                                fontWeight: 400,\n                                fontFamily: undefined,\n                                cssClass: ''\n                            },\n                            offsetX: 0,\n                            offsetY: 0,\n                            format: undefined,\n                            formatter: undefined,\n                            // custom formatter function which will override format\n                            datetimeUTC: true,\n                            datetimeFormatter: {\n                                year: 'yyyy',\n                                month: \"MMM 'yy\",\n                                day: 'dd MMM',\n                                hour: 'HH:mm',\n                                minute: 'HH:mm:ss',\n                                second: 'HH:mm:ss'\n                            }\n                        },\n                        axisBorder: {\n                            show: true,\n                            color: '#e0e0e0',\n                            width: '100%',\n                            height: 1,\n                            offsetX: 0,\n                            offsetY: 0\n                        },\n                        axisTicks: {\n                            show: true,\n                            color: '#e0e0e0',\n                            height: 6,\n                            offsetX: 0,\n                            offsetY: 0\n                        },\n                        tickAmount: undefined,\n                        tickPlacement: 'on',\n                        min: undefined,\n                        max: undefined,\n                        range: undefined,\n                        floating: false,\n                        decimalsInFloat: undefined,\n                        position: 'bottom',\n                        title: {\n                            text: undefined,\n                            offsetX: 0,\n                            offsetY: 0,\n                            style: {\n                                color: undefined,\n                                fontSize: '12px',\n                                fontWeight: 900,\n                                fontFamily: undefined,\n                                cssClass: ''\n                            }\n                        },\n                        crosshairs: {\n                            show: true,\n                            width: 1,\n                            // tickWidth/barWidth or an integer\n                            position: 'back',\n                            opacity: 0.9,\n                            stroke: {\n                                color: '#b6b6b6',\n                                width: 1,\n                                dashArray: 3\n                            },\n                            fill: {\n                                type: 'solid',\n                                // solid, gradient\n                                color: '#B1B9C4',\n                                gradient: {\n                                    colorFrom: '#D8E3F0',\n                                    colorTo: '#BED1E6',\n                                    stops: [0, 100],\n                                    opacityFrom: 0.4,\n                                    opacityTo: 0.5\n                                }\n                            },\n                            dropShadow: {\n                                enabled: false,\n                                left: 0,\n                                top: 0,\n                                blur: 1,\n                                opacity: 0.4\n                            }\n                        },\n                        tooltip: {\n                            enabled: true,\n                            offsetY: 0,\n                            formatter: undefined,\n                            style: {\n                                fontSize: '12px',\n                                fontFamily: undefined\n                            }\n                        }\n                    },\n                    yaxis: this.yAxis,\n                    theme: {\n                        mode: 'light',\n                        palette: 'palette1',\n                        // If defined, it will overwrite globals.colors variable\n                        monochrome: {\n                            // monochrome allows you to select just 1 color and fill out the rest with light/dark shade (intensity can be selected)\n                            enabled: false,\n                            color: '#008FFB',\n                            shadeTo: 'light',\n                            shadeIntensity: 0.65\n                        }\n                    }\n                };\n            }\n        }]);\n\n        return Options;\n    }();\n\n    /**\n     * ApexCharts Annotations Class for drawing lines/rects on both xaxis and yaxis.\n     *\n     * @module Annotations\n     **/\n\n    var Annotations = /*#__PURE__*/ function() {\n        function Annotations(ctx) {\n            _classCallCheck(this, Annotations);\n\n            this.ctx = ctx;\n            this.w = ctx.w;\n            this.graphics = new Graphics(this.ctx);\n\n            if (this.w.globals.isBarHorizontal) {\n                this.invertAxis = true;\n            }\n\n            this.helpers = new Helpers(this);\n            this.xAxisAnnotations = new XAnnotations(this);\n            this.yAxisAnnotations = new YAnnotations(this);\n            this.pointsAnnotations = new PointAnnotations(this);\n\n            if (this.w.globals.isBarHorizontal && this.w.config.yaxis[0].reversed) {\n                this.inversedReversedAxis = true;\n            }\n\n            this.xDivision = this.w.globals.gridWidth / this.w.globals.dataPoints;\n        }\n\n        _createClass(Annotations, [{\n            key: \"drawAxesAnnotations\",\n            value: function drawAxesAnnotations() {\n                var w = this.w;\n\n                if (w.globals.axisCharts) {\n                    var yAnnotations = this.yAxisAnnotations.drawYAxisAnnotations();\n                    var xAnnotations = this.xAxisAnnotations.drawXAxisAnnotations();\n                    var pointAnnotations = this.pointsAnnotations.drawPointAnnotations();\n                    var initialAnim = w.config.chart.animations.enabled;\n                    var annoArray = [yAnnotations, xAnnotations, pointAnnotations];\n                    var annoElArray = [xAnnotations.node, yAnnotations.node, pointAnnotations.node];\n\n                    for (var i = 0; i < 3; i++) {\n                        w.globals.dom.elGraphical.add(annoArray[i]);\n\n                        if (initialAnim && !w.globals.resized && !w.globals.dataChanged) {\n                            // fixes apexcharts/apexcharts.js#685\n                            if (w.config.chart.type !== 'scatter' && w.config.chart.type !== 'bubble' && w.globals.dataPoints > 1) {\n                                annoElArray[i].classList.add('apexcharts-element-hidden');\n                            }\n                        }\n\n                        w.globals.delayedElements.push({\n                            el: annoElArray[i],\n                            index: 0\n                        });\n                    } // background sizes needs to be calculated after text is drawn, so calling them last\n\n\n                    this.helpers.annotationsBackground();\n                }\n            }\n        }, {\n            key: \"drawImageAnnos\",\n            value: function drawImageAnnos() {\n                var _this = this;\n\n                var w = this.w;\n                w.config.annotations.images.map(function(s, index) {\n                    _this.addImage(s, index);\n                });\n            }\n        }, {\n            key: \"drawTextAnnos\",\n            value: function drawTextAnnos() {\n                var _this2 = this;\n\n                var w = this.w;\n                w.config.annotations.texts.map(function(t, index) {\n                    _this2.addText(t, index);\n                });\n            }\n        }, {\n            key: \"addXaxisAnnotation\",\n            value: function addXaxisAnnotation(anno, parent, index) {\n                this.xAxisAnnotations.addXaxisAnnotation(anno, parent, index);\n            }\n        }, {\n            key: \"addYaxisAnnotation\",\n            value: function addYaxisAnnotation(anno, parent, index) {\n                this.yAxisAnnotations.addYaxisAnnotation(anno, parent, index);\n            }\n        }, {\n            key: \"addPointAnnotation\",\n            value: function addPointAnnotation(anno, parent, index) {\n                this.pointsAnnotations.addPointAnnotation(anno, parent, index);\n            }\n        }, {\n            key: \"addText\",\n            value: function addText(params, index) {\n                var x = params.x,\n                    y = params.y,\n                    text = params.text,\n                    textAnchor = params.textAnchor,\n                    foreColor = params.foreColor,\n                    fontSize = params.fontSize,\n                    fontFamily = params.fontFamily,\n                    fontWeight = params.fontWeight,\n                    cssClass = params.cssClass,\n                    backgroundColor = params.backgroundColor,\n                    borderWidth = params.borderWidth,\n                    strokeDashArray = params.strokeDashArray,\n                    borderRadius = params.borderRadius,\n                    borderColor = params.borderColor,\n                    _params$appendTo = params.appendTo,\n                    appendTo = _params$appendTo === void 0 ? '.apexcharts-annotations' : _params$appendTo,\n                    _params$paddingLeft = params.paddingLeft,\n                    paddingLeft = _params$paddingLeft === void 0 ? 4 : _params$paddingLeft,\n                    _params$paddingRight = params.paddingRight,\n                    paddingRight = _params$paddingRight === void 0 ? 4 : _params$paddingRight,\n                    _params$paddingBottom = params.paddingBottom,\n                    paddingBottom = _params$paddingBottom === void 0 ? 2 : _params$paddingBottom,\n                    _params$paddingTop = params.paddingTop,\n                    paddingTop = _params$paddingTop === void 0 ? 2 : _params$paddingTop;\n                var w = this.w;\n                var elText = this.graphics.drawText({\n                    x: x,\n                    y: y,\n                    text: text,\n                    textAnchor: textAnchor || 'start',\n                    fontSize: fontSize || '12px',\n                    fontWeight: fontWeight || 'regular',\n                    fontFamily: fontFamily || w.config.chart.fontFamily,\n                    foreColor: foreColor || w.config.chart.foreColor,\n                    cssClass: 'apexcharts-text ' + cssClass ? cssClass : ''\n                });\n                var parent = w.globals.dom.baseEl.querySelector(appendTo);\n\n                if (parent) {\n                    parent.appendChild(elText.node);\n                }\n\n                var textRect = elText.bbox();\n\n                if (text) {\n                    var elRect = this.graphics.drawRect(textRect.x - paddingLeft, textRect.y - paddingTop, textRect.width + paddingLeft + paddingRight, textRect.height + paddingBottom + paddingTop, borderRadius, backgroundColor ? backgroundColor : 'transparent', 1, borderWidth, borderColor, strokeDashArray);\n                    parent.insertBefore(elRect.node, elText.node);\n                }\n            }\n        }, {\n            key: \"addImage\",\n            value: function addImage(params, index) {\n                    var w = this.w;\n                    var path = params.path,\n                        _params$x = params.x,\n                        x = _params$x === void 0 ? 0 : _params$x,\n                        _params$y = params.y,\n                        y = _params$y === void 0 ? 0 : _params$y,\n                        _params$width = params.width,\n                        width = _params$width === void 0 ? 20 : _params$width,\n                        _params$height = params.height,\n                        height = _params$height === void 0 ? 20 : _params$height,\n                        _params$appendTo2 = params.appendTo,\n                        appendTo = _params$appendTo2 === void 0 ? '.apexcharts-annotations' : _params$appendTo2;\n                    var img = w.globals.dom.Paper.image(path);\n                    img.size(width, height).move(x, y);\n                    var parent = w.globals.dom.baseEl.querySelector(appendTo);\n\n                    if (parent) {\n                        parent.appendChild(img.node);\n                    }\n                } // The addXaxisAnnotation method requires a parent class, and user calling this method externally on the chart instance may not specify parent, hence a different method\n\n        }, {\n            key: \"addXaxisAnnotationExternal\",\n            value: function addXaxisAnnotationExternal(params, pushToMemory, context) {\n                this.addAnnotationExternal({\n                    params: params,\n                    pushToMemory: pushToMemory,\n                    context: context,\n                    type: 'xaxis',\n                    contextMethod: context.addXaxisAnnotation\n                });\n                return context;\n            }\n        }, {\n            key: \"addYaxisAnnotationExternal\",\n            value: function addYaxisAnnotationExternal(params, pushToMemory, context) {\n                this.addAnnotationExternal({\n                    params: params,\n                    pushToMemory: pushToMemory,\n                    context: context,\n                    type: 'yaxis',\n                    contextMethod: context.addYaxisAnnotation\n                });\n                return context;\n            }\n        }, {\n            key: \"addPointAnnotationExternal\",\n            value: function addPointAnnotationExternal(params, pushToMemory, context) {\n                if (typeof this.invertAxis === 'undefined') {\n                    this.invertAxis = context.w.globals.isBarHorizontal;\n                }\n\n                this.addAnnotationExternal({\n                    params: params,\n                    pushToMemory: pushToMemory,\n                    context: context,\n                    type: 'point',\n                    contextMethod: context.addPointAnnotation\n                });\n                return context;\n            }\n        }, {\n            key: \"addAnnotationExternal\",\n            value: function addAnnotationExternal(_ref) {\n                var params = _ref.params,\n                    pushToMemory = _ref.pushToMemory,\n                    context = _ref.context,\n                    type = _ref.type,\n                    contextMethod = _ref.contextMethod;\n                var me = context;\n                var w = me.w;\n                var parent = w.globals.dom.baseEl.querySelector(\".apexcharts-\".concat(type, \"-annotations\"));\n                var index = parent.childNodes.length + 1;\n                var options = new Options();\n                var axesAnno = Object.assign({}, type === 'xaxis' ? options.xAxisAnnotation : type === 'yaxis' ? options.yAxisAnnotation : options.pointAnnotation);\n                var anno = Utils.extend(axesAnno, params);\n\n                switch (type) {\n                    case 'xaxis':\n                        this.addXaxisAnnotation(anno, parent, index);\n                        break;\n\n                    case 'yaxis':\n                        this.addYaxisAnnotation(anno, parent, index);\n                        break;\n\n                    case 'point':\n                        this.addPointAnnotation(anno, parent, index);\n                        break;\n                } // add background\n\n\n                var axesAnnoLabel = w.globals.dom.baseEl.querySelector(\".apexcharts-\".concat(type, \"-annotations .apexcharts-\").concat(type, \"-annotation-label[rel='\").concat(index, \"']\"));\n                var elRect = this.helpers.addBackgroundToAnno(axesAnnoLabel, anno);\n\n                if (elRect) {\n                    parent.insertBefore(elRect.node, axesAnnoLabel);\n                }\n\n                if (pushToMemory) {\n                    w.globals.memory.methodsToExec.push({\n                        context: me,\n                        id: anno.id ? anno.id : Utils.randomId(),\n                        method: contextMethod,\n                        label: 'addAnnotation',\n                        params: params\n                    });\n                }\n\n                return context;\n            }\n        }, {\n            key: \"clearAnnotations\",\n            value: function clearAnnotations(ctx) {\n                var w = ctx.w;\n                var annos = w.globals.dom.baseEl.querySelectorAll('.apexcharts-yaxis-annotations, .apexcharts-xaxis-annotations, .apexcharts-point-annotations'); // annotations added externally should be cleared out too\n\n                w.globals.memory.methodsToExec.map(function(m, i) {\n                    if (m.label === 'addText' || m.label === 'addAnnotation') {\n                        w.globals.memory.methodsToExec.splice(i, 1);\n                    }\n                });\n                annos = Utils.listToArray(annos); // delete the DOM elements\n\n                Array.prototype.forEach.call(annos, function(a) {\n                    while (a.firstChild) {\n                        a.removeChild(a.firstChild);\n                    }\n                });\n            }\n        }, {\n            key: \"removeAnnotation\",\n            value: function removeAnnotation(ctx, id) {\n                var w = ctx.w;\n                var annos = w.globals.dom.baseEl.querySelectorAll(\".\".concat(id));\n\n                if (annos) {\n                    w.globals.memory.methodsToExec.map(function(m, i) {\n                        if (m.id === id) {\n                            w.globals.memory.methodsToExec.splice(i, 1);\n                        }\n                    });\n                    Array.prototype.forEach.call(annos, function(a) {\n                        a.parentElement.removeChild(a);\n                    });\n                }\n            }\n        }]);\n\n        return Annotations;\n    }();\n\n    /**\n     * ApexCharts Fill Class for setting fill options of the paths.\n     *\n     * @module Fill\n     **/\n\n    var Fill = /*#__PURE__*/ function() {\n        function Fill(ctx) {\n            _classCallCheck(this, Fill);\n\n            this.ctx = ctx;\n            this.w = ctx.w;\n            this.opts = null;\n            this.seriesIndex = 0;\n        }\n\n        _createClass(Fill, [{\n            key: \"clippedImgArea\",\n            value: function clippedImgArea(params) {\n                var w = this.w;\n                var cnf = w.config;\n                var svgW = parseInt(w.globals.gridWidth, 10);\n                var svgH = parseInt(w.globals.gridHeight, 10);\n                var size = svgW > svgH ? svgW : svgH;\n                var fillImg = params.image;\n                var imgWidth = 0;\n                var imgHeight = 0;\n\n                if (typeof params.width === 'undefined' && typeof params.height === 'undefined') {\n                    if (cnf.fill.image.width !== undefined && cnf.fill.image.height !== undefined) {\n                        imgWidth = cnf.fill.image.width + 1;\n                        imgHeight = cnf.fill.image.height;\n                    } else {\n                        imgWidth = size + 1;\n                        imgHeight = size;\n                    }\n                } else {\n                    imgWidth = params.width;\n                    imgHeight = params.height;\n                }\n\n                var elPattern = document.createElementNS(w.globals.SVGNS, 'pattern');\n                Graphics.setAttrs(elPattern, {\n                    id: params.patternID,\n                    patternUnits: params.patternUnits ? params.patternUnits : 'userSpaceOnUse',\n                    width: imgWidth + 'px',\n                    height: imgHeight + 'px'\n                });\n                var elImage = document.createElementNS(w.globals.SVGNS, 'image');\n                elPattern.appendChild(elImage);\n                elImage.setAttributeNS(window.SVG.xlink, 'href', fillImg);\n                Graphics.setAttrs(elImage, {\n                    x: 0,\n                    y: 0,\n                    preserveAspectRatio: 'none',\n                    width: imgWidth + 'px',\n                    height: imgHeight + 'px'\n                });\n                elImage.style.opacity = params.opacity;\n                w.globals.dom.elDefs.node.appendChild(elPattern);\n            }\n        }, {\n            key: \"getSeriesIndex\",\n            value: function getSeriesIndex(opts) {\n                var w = this.w;\n\n                if ((w.config.chart.type === 'bar' || w.config.chart.type === 'rangeBar') && w.config.plotOptions.bar.distributed || w.config.chart.type === 'heatmap' || w.config.chart.type === 'treemap') {\n                    this.seriesIndex = opts.seriesNumber;\n                } else {\n                    this.seriesIndex = opts.seriesNumber % w.globals.series.length;\n                }\n\n                return this.seriesIndex;\n            }\n        }, {\n            key: \"fillPath\",\n            value: function fillPath(opts) {\n                var w = this.w;\n                this.opts = opts;\n                var cnf = this.w.config;\n                var pathFill;\n                var patternFill, gradientFill;\n                this.seriesIndex = this.getSeriesIndex(opts);\n                var fillColors = this.getFillColors();\n                var fillColor = fillColors[this.seriesIndex]; //override fillcolor if user inputted color with data\n\n                if (w.globals.seriesColors[this.seriesIndex] !== undefined) {\n                    fillColor = w.globals.seriesColors[this.seriesIndex];\n                }\n\n                if (typeof fillColor === 'function') {\n                    fillColor = fillColor({\n                        seriesIndex: this.seriesIndex,\n                        dataPointIndex: opts.dataPointIndex,\n                        value: opts.value,\n                        w: w\n                    });\n                }\n\n                var fillType = this.getFillType(this.seriesIndex);\n                var fillOpacity = Array.isArray(cnf.fill.opacity) ? cnf.fill.opacity[this.seriesIndex] : cnf.fill.opacity;\n\n                if (opts.color) {\n                    fillColor = opts.color;\n                }\n\n                var defaultColor = fillColor;\n\n                if (fillColor.indexOf('rgb') === -1) {\n                    if (fillColor.length < 9) {\n                        // if the hex contains alpha and is of 9 digit, skip the opacity\n                        defaultColor = Utils.hexToRgba(fillColor, fillOpacity);\n                    }\n                } else {\n                    if (fillColor.indexOf('rgba') > -1) {\n                        fillOpacity = Utils.getOpacityFromRGBA(fillColor);\n                    }\n                }\n\n                if (opts.opacity) fillOpacity = opts.opacity;\n\n                if (fillType === 'pattern') {\n                    patternFill = this.handlePatternFill(patternFill, fillColor, fillOpacity, defaultColor);\n                }\n\n                if (fillType === 'gradient') {\n                    gradientFill = this.handleGradientFill(fillColor, fillOpacity, this.seriesIndex);\n                }\n\n                if (fillType === 'image') {\n                    var imgSrc = cnf.fill.image.src;\n                    var patternID = opts.patternID ? opts.patternID : '';\n                    this.clippedImgArea({\n                        opacity: fillOpacity,\n                        image: Array.isArray(imgSrc) ? opts.seriesNumber < imgSrc.length ? imgSrc[opts.seriesNumber] : imgSrc[0] : imgSrc,\n                        width: opts.width ? opts.width : undefined,\n                        height: opts.height ? opts.height : undefined,\n                        patternUnits: opts.patternUnits,\n                        patternID: \"pattern\".concat(w.globals.cuid).concat(opts.seriesNumber + 1).concat(patternID)\n                    });\n                    pathFill = \"url(#pattern\".concat(w.globals.cuid).concat(opts.seriesNumber + 1).concat(patternID, \")\");\n                } else if (fillType === 'gradient') {\n                    pathFill = gradientFill;\n                } else if (fillType === 'pattern') {\n                    pathFill = patternFill;\n                } else {\n                    pathFill = defaultColor;\n                } // override pattern/gradient if opts.solid is true\n\n\n                if (opts.solid) {\n                    pathFill = defaultColor;\n                }\n\n                return pathFill;\n            }\n        }, {\n            key: \"getFillType\",\n            value: function getFillType(seriesIndex) {\n                var w = this.w;\n\n                if (Array.isArray(w.config.fill.type)) {\n                    return w.config.fill.type[seriesIndex];\n                } else {\n                    return w.config.fill.type;\n                }\n            }\n        }, {\n            key: \"getFillColors\",\n            value: function getFillColors() {\n                var w = this.w;\n                var cnf = w.config;\n                var opts = this.opts;\n                var fillColors = [];\n\n                if (w.globals.comboCharts) {\n                    if (w.config.series[this.seriesIndex].type === 'line') {\n                        if (Array.isArray(w.globals.stroke.colors)) {\n                            fillColors = w.globals.stroke.colors;\n                        } else {\n                            fillColors.push(w.globals.stroke.colors);\n                        }\n                    } else {\n                        if (Array.isArray(w.globals.fill.colors)) {\n                            fillColors = w.globals.fill.colors;\n                        } else {\n                            fillColors.push(w.globals.fill.colors);\n                        }\n                    }\n                } else {\n                    if (cnf.chart.type === 'line') {\n                        if (Array.isArray(w.globals.stroke.colors)) {\n                            fillColors = w.globals.stroke.colors;\n                        } else {\n                            fillColors.push(w.globals.stroke.colors);\n                        }\n                    } else {\n                        if (Array.isArray(w.globals.fill.colors)) {\n                            fillColors = w.globals.fill.colors;\n                        } else {\n                            fillColors.push(w.globals.fill.colors);\n                        }\n                    }\n                } // colors passed in arguments\n\n\n                if (typeof opts.fillColors !== 'undefined') {\n                    fillColors = [];\n\n                    if (Array.isArray(opts.fillColors)) {\n                        fillColors = opts.fillColors.slice();\n                    } else {\n                        fillColors.push(opts.fillColors);\n                    }\n                }\n\n                return fillColors;\n            }\n        }, {\n            key: \"handlePatternFill\",\n            value: function handlePatternFill(patternFill, fillColor, fillOpacity, defaultColor) {\n                var cnf = this.w.config;\n                var opts = this.opts;\n                var graphics = new Graphics(this.ctx);\n                var patternStrokeWidth = cnf.fill.pattern.strokeWidth === undefined ? Array.isArray(cnf.stroke.width) ? cnf.stroke.width[this.seriesIndex] : cnf.stroke.width : Array.isArray(cnf.fill.pattern.strokeWidth) ? cnf.fill.pattern.strokeWidth[this.seriesIndex] : cnf.fill.pattern.strokeWidth;\n                var patternLineColor = fillColor;\n\n                if (Array.isArray(cnf.fill.pattern.style)) {\n                    if (typeof cnf.fill.pattern.style[opts.seriesNumber] !== 'undefined') {\n                        var pf = graphics.drawPattern(cnf.fill.pattern.style[opts.seriesNumber], cnf.fill.pattern.width, cnf.fill.pattern.height, patternLineColor, patternStrokeWidth, fillOpacity);\n                        patternFill = pf;\n                    } else {\n                        patternFill = defaultColor;\n                    }\n                } else {\n                    patternFill = graphics.drawPattern(cnf.fill.pattern.style, cnf.fill.pattern.width, cnf.fill.pattern.height, patternLineColor, patternStrokeWidth, fillOpacity);\n                }\n\n                return patternFill;\n            }\n        }, {\n            key: \"handleGradientFill\",\n            value: function handleGradientFill(fillColor, fillOpacity, i) {\n                var cnf = this.w.config;\n                var opts = this.opts;\n                var graphics = new Graphics(this.ctx);\n                var utils = new Utils();\n                var type = cnf.fill.gradient.type;\n                var gradientFrom = fillColor;\n                var gradientTo;\n                var opacityFrom = cnf.fill.gradient.opacityFrom === undefined ? fillOpacity : Array.isArray(cnf.fill.gradient.opacityFrom) ? cnf.fill.gradient.opacityFrom[i] : cnf.fill.gradient.opacityFrom;\n\n                if (gradientFrom.indexOf('rgba') > -1) {\n                    opacityFrom = Utils.getOpacityFromRGBA(gradientFrom);\n                }\n\n                var opacityTo = cnf.fill.gradient.opacityTo === undefined ? fillOpacity : Array.isArray(cnf.fill.gradient.opacityTo) ? cnf.fill.gradient.opacityTo[i] : cnf.fill.gradient.opacityTo;\n\n                if (cnf.fill.gradient.gradientToColors === undefined || cnf.fill.gradient.gradientToColors.length === 0) {\n                    if (cnf.fill.gradient.shade === 'dark') {\n                        gradientTo = utils.shadeColor(parseFloat(cnf.fill.gradient.shadeIntensity) * -1, fillColor.indexOf('rgb') > -1 ? Utils.rgb2hex(fillColor) : fillColor);\n                    } else {\n                        gradientTo = utils.shadeColor(parseFloat(cnf.fill.gradient.shadeIntensity), fillColor.indexOf('rgb') > -1 ? Utils.rgb2hex(fillColor) : fillColor);\n                    }\n                } else {\n                    if (cnf.fill.gradient.gradientToColors[opts.seriesNumber]) {\n                        var gToColor = cnf.fill.gradient.gradientToColors[opts.seriesNumber];\n                        gradientTo = gToColor;\n\n                        if (gToColor.indexOf('rgba') > -1) {\n                            opacityTo = Utils.getOpacityFromRGBA(gToColor);\n                        }\n                    } else {\n                        gradientTo = fillColor;\n                    }\n                }\n\n                if (cnf.fill.gradient.inverseColors) {\n                    var t = gradientFrom;\n                    gradientFrom = gradientTo;\n                    gradientTo = t;\n                }\n\n                if (gradientFrom.indexOf('rgb') > -1) {\n                    gradientFrom = Utils.rgb2hex(gradientFrom);\n                }\n\n                if (gradientTo.indexOf('rgb') > -1) {\n                    gradientTo = Utils.rgb2hex(gradientTo);\n                }\n\n                return graphics.drawGradient(type, gradientFrom, gradientTo, opacityFrom, opacityTo, opts.size, cnf.fill.gradient.stops, cnf.fill.gradient.colorStops, i);\n            }\n        }]);\n\n        return Fill;\n    }();\n\n    /**\n     * ApexCharts Markers Class for drawing points on y values in axes charts.\n     *\n     * @module Markers\n     **/\n\n    var Markers = /*#__PURE__*/ function() {\n        function Markers(ctx, opts) {\n            _classCallCheck(this, Markers);\n\n            this.ctx = ctx;\n            this.w = ctx.w;\n        }\n\n        _createClass(Markers, [{\n            key: \"setGlobalMarkerSize\",\n            value: function setGlobalMarkerSize() {\n                var w = this.w;\n                w.globals.markers.size = Array.isArray(w.config.markers.size) ? w.config.markers.size : [w.config.markers.size];\n\n                if (w.globals.markers.size.length > 0) {\n                    if (w.globals.markers.size.length < w.globals.series.length + 1) {\n                        for (var i = 0; i <= w.globals.series.length; i++) {\n                            if (typeof w.globals.markers.size[i] === 'undefined') {\n                                w.globals.markers.size.push(w.globals.markers.size[0]);\n                            }\n                        }\n                    }\n                } else {\n                    w.globals.markers.size = w.config.series.map(function(s) {\n                        return w.config.markers.size;\n                    });\n                }\n            }\n        }, {\n            key: \"plotChartMarkers\",\n            value: function plotChartMarkers(pointsPos, seriesIndex, j, pSize) {\n                var alwaysDrawMarker = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n                var w = this.w;\n                var i = seriesIndex;\n                var p = pointsPos;\n                var elPointsWrap = null;\n                var graphics = new Graphics(this.ctx);\n                var point;\n\n                if (w.globals.markers.size[seriesIndex] > 0 || alwaysDrawMarker) {\n                    elPointsWrap = graphics.group({\n                        class: alwaysDrawMarker ? '' : 'apexcharts-series-markers'\n                    });\n                    elPointsWrap.attr('clip-path', \"url(#gridRectMarkerMask\".concat(w.globals.cuid, \")\"));\n                }\n\n                if (Array.isArray(p.x)) {\n                    for (var q = 0; q < p.x.length; q++) {\n                        var dataPointIndex = j; // a small hack as we have 2 points for the first val to connect it\n\n                        if (j === 1 && q === 0) dataPointIndex = 0;\n                        if (j === 1 && q === 1) dataPointIndex = 1;\n                        var PointClasses = 'apexcharts-marker';\n\n                        if ((w.config.chart.type === 'line' || w.config.chart.type === 'area') && !w.globals.comboCharts && !w.config.tooltip.intersect) {\n                            PointClasses += ' no-pointer-events';\n                        }\n\n                        var shouldMarkerDraw = Array.isArray(w.config.markers.size) ? w.globals.markers.size[seriesIndex] > 0 : w.config.markers.size > 0;\n\n                        if (shouldMarkerDraw || alwaysDrawMarker) {\n                            if (Utils.isNumber(p.y[q])) {\n                                PointClasses += \" w\".concat(Utils.randomId());\n                            } else {\n                                PointClasses = 'apexcharts-nullpoint';\n                            }\n\n                            var opts = this.getMarkerConfig(PointClasses, seriesIndex, dataPointIndex);\n\n                            if (w.config.series[i].data[dataPointIndex]) {\n                                if (w.config.series[i].data[dataPointIndex].fillColor) {\n                                    opts.pointFillColor = w.config.series[i].data[dataPointIndex].fillColor;\n                                }\n\n                                if (w.config.series[i].data[dataPointIndex].strokeColor) {\n                                    opts.pointStrokeColor = w.config.series[i].data[dataPointIndex].strokeColor;\n                                }\n                            }\n\n                            if (pSize) {\n                                opts.pSize = pSize;\n                            }\n\n                            point = graphics.drawMarker(p.x[q], p.y[q], opts);\n                            point.attr('rel', dataPointIndex);\n                            point.attr('j', dataPointIndex);\n                            point.attr('index', seriesIndex);\n                            point.node.setAttribute('default-marker-size', opts.pSize);\n                            var filters = new Filters(this.ctx);\n                            filters.setSelectionFilter(point, seriesIndex, dataPointIndex);\n                            this.addEvents(point);\n\n                            if (elPointsWrap) {\n                                elPointsWrap.add(point);\n                            }\n                        } else {\n                            // dynamic array creation - multidimensional\n                            if (typeof w.globals.pointsArray[seriesIndex] === 'undefined') w.globals.pointsArray[seriesIndex] = [];\n                            w.globals.pointsArray[seriesIndex].push([p.x[q], p.y[q]]);\n                        }\n                    }\n                }\n\n                return elPointsWrap;\n            }\n        }, {\n            key: \"getMarkerConfig\",\n            value: function getMarkerConfig(cssClass, seriesIndex) {\n                var dataPointIndex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n                var w = this.w;\n                var pStyle = this.getMarkerStyle(seriesIndex);\n                var pSize = w.globals.markers.size[seriesIndex];\n                var m = w.config.markers; // discrete markers is an option where user can specify a particular marker with different shape, size and color\n\n                if (dataPointIndex !== null && m.discrete.length) {\n                    m.discrete.map(function(marker) {\n                        if (marker.seriesIndex === seriesIndex && marker.dataPointIndex === dataPointIndex) {\n                            pStyle.pointStrokeColor = marker.strokeColor;\n                            pStyle.pointFillColor = marker.fillColor;\n                            pSize = marker.size;\n                            pStyle.pointShape = marker.shape;\n                        }\n                    });\n                }\n\n                return {\n                    pSize: pSize,\n                    pRadius: m.radius,\n                    width: Array.isArray(m.width) ? m.width[seriesIndex] : m.width,\n                    height: Array.isArray(m.height) ? m.height[seriesIndex] : m.height,\n                    pointStrokeWidth: Array.isArray(m.strokeWidth) ? m.strokeWidth[seriesIndex] : m.strokeWidth,\n                    pointStrokeColor: pStyle.pointStrokeColor,\n                    pointFillColor: pStyle.pointFillColor,\n                    shape: pStyle.pointShape || (Array.isArray(m.shape) ? m.shape[seriesIndex] : m.shape),\n                    class: cssClass,\n                    pointStrokeOpacity: Array.isArray(m.strokeOpacity) ? m.strokeOpacity[seriesIndex] : m.strokeOpacity,\n                    pointStrokeDashArray: Array.isArray(m.strokeDashArray) ? m.strokeDashArray[seriesIndex] : m.strokeDashArray,\n                    pointFillOpacity: Array.isArray(m.fillOpacity) ? m.fillOpacity[seriesIndex] : m.fillOpacity,\n                    seriesIndex: seriesIndex\n                };\n            }\n        }, {\n            key: \"addEvents\",\n            value: function addEvents(circle) {\n                var w = this.w;\n                var graphics = new Graphics(this.ctx);\n                circle.node.addEventListener('mouseenter', graphics.pathMouseEnter.bind(this.ctx, circle));\n                circle.node.addEventListener('mouseleave', graphics.pathMouseLeave.bind(this.ctx, circle));\n                circle.node.addEventListener('mousedown', graphics.pathMouseDown.bind(this.ctx, circle));\n                circle.node.addEventListener('click', w.config.markers.onClick);\n                circle.node.addEventListener('dblclick', w.config.markers.onDblClick);\n                circle.node.addEventListener('touchstart', graphics.pathMouseDown.bind(this.ctx, circle), {\n                    passive: true\n                });\n            }\n        }, {\n            key: \"getMarkerStyle\",\n            value: function getMarkerStyle(seriesIndex) {\n                var w = this.w;\n                var colors = w.globals.markers.colors;\n                var strokeColors = w.config.markers.strokeColor || w.config.markers.strokeColors;\n                var pointStrokeColor = Array.isArray(strokeColors) ? strokeColors[seriesIndex] : strokeColors;\n                var pointFillColor = Array.isArray(colors) ? colors[seriesIndex] : colors;\n                return {\n                    pointStrokeColor: pointStrokeColor,\n                    pointFillColor: pointFillColor\n                };\n            }\n        }]);\n\n        return Markers;\n    }();\n\n    /**\n     * ApexCharts Scatter Class.\n     * This Class also handles bubbles chart as currently there is no major difference in drawing them,\n     * @module Scatter\n     **/\n\n    var Scatter = /*#__PURE__*/ function() {\n        function Scatter(ctx) {\n            _classCallCheck(this, Scatter);\n\n            this.ctx = ctx;\n            this.w = ctx.w;\n            this.initialAnim = this.w.config.chart.animations.enabled;\n            this.dynamicAnim = this.initialAnim && this.w.config.chart.animations.dynamicAnimation.enabled;\n        }\n\n        _createClass(Scatter, [{\n            key: \"draw\",\n            value: function draw(elSeries, j, opts) {\n                var w = this.w;\n                var graphics = new Graphics(this.ctx);\n                var realIndex = opts.realIndex;\n                var pointsPos = opts.pointsPos;\n                var zRatio = opts.zRatio;\n                var elPointsMain = opts.elParent;\n                var elPointsWrap = graphics.group({\n                    class: \"apexcharts-series-markers apexcharts-series-\".concat(w.config.chart.type)\n                });\n                elPointsWrap.attr('clip-path', \"url(#gridRectMarkerMask\".concat(w.globals.cuid, \")\"));\n\n                if (Array.isArray(pointsPos.x)) {\n                    for (var q = 0; q < pointsPos.x.length; q++) {\n                        var dataPointIndex = j + 1;\n                        var shouldDraw = true; // a small hack as we have 2 points for the first val to connect it\n\n                        if (j === 0 && q === 0) dataPointIndex = 0;\n                        if (j === 0 && q === 1) dataPointIndex = 1;\n                        var radius = 0;\n                        var finishRadius = w.globals.markers.size[realIndex];\n\n                        if (zRatio !== Infinity) {\n                            // means we have a bubble\n                            finishRadius = w.globals.seriesZ[realIndex][dataPointIndex] / zRatio;\n                            var bubble = w.config.plotOptions.bubble;\n\n                            if (bubble.minBubbleRadius && finishRadius < bubble.minBubbleRadius) {\n                                finishRadius = bubble.minBubbleRadius;\n                            }\n\n                            if (bubble.maxBubbleRadius && finishRadius > bubble.maxBubbleRadius) {\n                                finishRadius = bubble.maxBubbleRadius;\n                            }\n                        }\n\n                        if (!w.config.chart.animations.enabled) {\n                            radius = finishRadius;\n                        }\n\n                        var x = pointsPos.x[q];\n                        var y = pointsPos.y[q];\n                        radius = radius || 0;\n\n                        if (y === null || typeof w.globals.series[realIndex][dataPointIndex] === 'undefined') {\n                            shouldDraw = false;\n                        }\n\n                        if (shouldDraw) {\n                            var point = this.drawPoint(x, y, radius, finishRadius, realIndex, dataPointIndex, j);\n                            elPointsWrap.add(point);\n                        }\n\n                        elPointsMain.add(elPointsWrap);\n                    }\n                }\n            }\n        }, {\n            key: \"drawPoint\",\n            value: function drawPoint(x, y, radius, finishRadius, realIndex, dataPointIndex, j) {\n                var w = this.w;\n                var i = realIndex;\n                var anim = new Animations(this.ctx);\n                var filters = new Filters(this.ctx);\n                var fill = new Fill(this.ctx);\n                var markers = new Markers(this.ctx);\n                var graphics = new Graphics(this.ctx);\n                var markerConfig = markers.getMarkerConfig('apexcharts-marker', i);\n                var pathFillCircle = fill.fillPath({\n                    seriesNumber: realIndex,\n                    dataPointIndex: dataPointIndex,\n                    patternUnits: 'objectBoundingBox',\n                    value: w.globals.series[realIndex][j]\n                });\n                var el;\n\n                if (markerConfig.shape === 'circle') {\n                    el = graphics.drawCircle(radius);\n                } else if (markerConfig.shape === 'square' || markerConfig.shape === 'rect') {\n                    el = graphics.drawRect(0, 0, markerConfig.width - markerConfig.pointStrokeWidth / 2, markerConfig.height - markerConfig.pointStrokeWidth / 2, markerConfig.pRadius);\n                }\n\n                if (w.config.series[i].data[dataPointIndex]) {\n                    if (w.config.series[i].data[dataPointIndex].fillColor) {\n                        pathFillCircle = w.config.series[i].data[dataPointIndex].fillColor;\n                    }\n                }\n\n                el.attr({\n                    x: x - markerConfig.width / 2 - markerConfig.pointStrokeWidth / 2,\n                    y: y - markerConfig.height / 2 - markerConfig.pointStrokeWidth / 2,\n                    cx: x,\n                    cy: y,\n                    fill: pathFillCircle,\n                    'fill-opacity': markerConfig.pointFillOpacity,\n                    stroke: markerConfig.pointStrokeColor,\n                    r: finishRadius,\n                    'stroke-width': markerConfig.pointStrokeWidth,\n                    'stroke-dasharray': markerConfig.pointStrokeDashArray,\n                    'stroke-opacity': markerConfig.pointStrokeOpacity\n                });\n\n                if (w.config.chart.dropShadow.enabled) {\n                    var dropShadow = w.config.chart.dropShadow;\n                    filters.dropShadow(el, dropShadow, realIndex);\n                }\n\n                if (this.initialAnim && !w.globals.dataChanged && !w.globals.resized) {\n                    var speed = w.config.chart.animations.speed;\n                    anim.animateMarker(el, 0, markerConfig.shape === 'circle' ? finishRadius : {\n                        width: markerConfig.width,\n                        height: markerConfig.height\n                    }, speed, w.globals.easing, function() {\n                        window.setTimeout(function() {\n                            anim.animationCompleted(el);\n                        }, 100);\n                    });\n                } else {\n                    w.globals.animationEnded = true;\n                }\n\n                if (w.globals.dataChanged && markerConfig.shape === 'circle') {\n                    if (this.dynamicAnim) {\n                        var _speed = w.config.chart.animations.dynamicAnimation.speed;\n                        var prevX, prevY, prevR;\n                        var prevPathJ = null;\n                        prevPathJ = w.globals.previousPaths[realIndex] && w.globals.previousPaths[realIndex][j];\n\n                        if (typeof prevPathJ !== 'undefined' && prevPathJ !== null) {\n                            // series containing less elements will ignore these values and revert to 0\n                            prevX = prevPathJ.x;\n                            prevY = prevPathJ.y;\n                            prevR = typeof prevPathJ.r !== 'undefined' ? prevPathJ.r : finishRadius;\n                        }\n\n                        for (var cs = 0; cs < w.globals.collapsedSeries.length; cs++) {\n                            if (w.globals.collapsedSeries[cs].index === realIndex) {\n                                _speed = 1;\n                                finishRadius = 0;\n                            }\n                        }\n\n                        if (x === 0 && y === 0) finishRadius = 0;\n                        anim.animateCircle(el, {\n                            cx: prevX,\n                            cy: prevY,\n                            r: prevR\n                        }, {\n                            cx: x,\n                            cy: y,\n                            r: finishRadius\n                        }, _speed, w.globals.easing);\n                    } else {\n                        el.attr({\n                            r: finishRadius\n                        });\n                    }\n                }\n\n                el.attr({\n                    rel: dataPointIndex,\n                    j: dataPointIndex,\n                    index: realIndex,\n                    'default-marker-size': finishRadius\n                });\n                filters.setSelectionFilter(el, realIndex, dataPointIndex);\n                markers.addEvents(el);\n                el.node.classList.add('apexcharts-marker');\n                return el;\n            }\n        }, {\n            key: \"centerTextInBubble\",\n            value: function centerTextInBubble(y) {\n                var w = this.w;\n                y = y + parseInt(w.config.dataLabels.style.fontSize, 10) / 4;\n                return {\n                    y: y\n                };\n            }\n        }]);\n\n        return Scatter;\n    }();\n\n    /**\n     * ApexCharts DataLabels Class for drawing dataLabels on Axes based Charts.\n     *\n     * @module DataLabels\n     **/\n\n    var DataLabels = /*#__PURE__*/ function() {\n        function DataLabels(ctx) {\n            _classCallCheck(this, DataLabels);\n\n            this.ctx = ctx;\n            this.w = ctx.w;\n        } // When there are many datalabels to be printed, and some of them overlaps each other in the same series, this method will take care of that\n        // Also, when datalabels exceeds the drawable area and get clipped off, we need to adjust and move some pixels to make them visible again\n\n\n        _createClass(DataLabels, [{\n            key: \"dataLabelsCorrection\",\n            value: function dataLabelsCorrection(x, y, val, i, dataPointIndex, alwaysDrawDataLabel, fontSize) {\n                var w = this.w;\n                var graphics = new Graphics(this.ctx);\n                var drawnextLabel = false; //\n\n                var textRects = graphics.getTextRects(val, fontSize);\n                var width = textRects.width;\n                var height = textRects.height;\n                if (y < 0) y = 0;\n                if (y > w.globals.gridHeight + height) y = w.globals.gridHeight + height / 2; // first value in series, so push an empty array\n\n                if (typeof w.globals.dataLabelsRects[i] === 'undefined') w.globals.dataLabelsRects[i] = []; // then start pushing actual rects in that sub-array\n\n                w.globals.dataLabelsRects[i].push({\n                    x: x,\n                    y: y,\n                    width: width,\n                    height: height\n                });\n                var len = w.globals.dataLabelsRects[i].length - 2;\n                var lastDrawnIndex = typeof w.globals.lastDrawnDataLabelsIndexes[i] !== 'undefined' ? w.globals.lastDrawnDataLabelsIndexes[i][w.globals.lastDrawnDataLabelsIndexes[i].length - 1] : 0;\n\n                if (typeof w.globals.dataLabelsRects[i][len] !== 'undefined') {\n                    var lastDataLabelRect = w.globals.dataLabelsRects[i][lastDrawnIndex];\n\n                    if ( // next label forward and x not intersecting\n                        x > lastDataLabelRect.x + lastDataLabelRect.width + 2 || y > lastDataLabelRect.y + lastDataLabelRect.height + 2 || x + width < lastDataLabelRect.x // next label is going to be drawn backwards\n                    ) {\n                        // the 2 indexes don't override, so OK to draw next label\n                        drawnextLabel = true;\n                    }\n                }\n\n                if (dataPointIndex === 0 || alwaysDrawDataLabel) {\n                    drawnextLabel = true;\n                }\n\n                return {\n                    x: x,\n                    y: y,\n                    textRects: textRects,\n                    drawnextLabel: drawnextLabel\n                };\n            }\n        }, {\n            key: \"drawDataLabel\",\n            value: function drawDataLabel(pos, i, j) {\n                var _this = this;\n                var strokeWidth = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 2;\n                // this method handles line, area, bubble, scatter charts as those charts contains markers/points which have pre-defined x/y positions\n                // all other charts like radar / bars / heatmaps will define their own drawDataLabel routine\n                var w = this.w;\n                var graphics = new Graphics(this.ctx);\n                var dataLabelsConfig = w.config.dataLabels;\n                var x = 0;\n                var y = 0;\n                var dataPointIndex = j;\n                var elDataLabelsWrap = null;\n\n                if (!dataLabelsConfig.enabled || !Array.isArray(pos.x)) {\n                    return elDataLabelsWrap;\n                }\n\n                elDataLabelsWrap = graphics.group({\n                    class: 'apexcharts-data-labels'\n                });\n\n                for (var q = 0; q < pos.x.length; q++) {\n                    x = pos.x[q] + dataLabelsConfig.offsetX;\n                    y = pos.y[q] + dataLabelsConfig.offsetY + strokeWidth;\n\n                    if (!isNaN(x)) {\n                        // a small hack as we have 2 points for the first val to connect it\n                        if (j === 1 && q === 0) dataPointIndex = 0;\n                        if (j === 1 && q === 1) dataPointIndex = 1;\n                        var val = w.globals.series[i][dataPointIndex];\n                        var text = '';\n\n                        var getText = function getText(v) {\n                            return w.config.dataLabels.formatter(v, {\n                                ctx: _this.ctx,\n                                seriesIndex: i,\n                                dataPointIndex: dataPointIndex,\n                                w: w\n                            });\n                        };\n\n                        if (w.config.chart.type === 'bubble') {\n                            val = w.globals.seriesZ[i][dataPointIndex];\n                            text = getText(val);\n                            y = pos.y[q];\n                            var scatter = new Scatter(this.ctx);\n                            var centerTextInBubbleCoords = scatter.centerTextInBubble(y, i, dataPointIndex);\n                            y = centerTextInBubbleCoords.y;\n                        } else {\n                            if (typeof val !== 'undefined') {\n                                text = getText(val);\n                            }\n                        }\n\n                        this.plotDataLabelsText({\n                            x: x,\n                            y: y,\n                            text: text,\n                            i: i,\n                            j: dataPointIndex,\n                            parent: elDataLabelsWrap,\n                            offsetCorrection: true,\n                            dataLabelsConfig: w.config.dataLabels\n                        });\n                    }\n                }\n\n                return elDataLabelsWrap;\n            }\n        }, {\n            key: \"plotDataLabelsText\",\n            value: function plotDataLabelsText(opts) {\n                var w = this.w;\n                var graphics = new Graphics(this.ctx);\n                var x = opts.x,\n                    y = opts.y,\n                    i = opts.i,\n                    j = opts.j,\n                    text = opts.text,\n                    textAnchor = opts.textAnchor,\n                    fontSize = opts.fontSize,\n                    parent = opts.parent,\n                    dataLabelsConfig = opts.dataLabelsConfig,\n                    color = opts.color,\n                    alwaysDrawDataLabel = opts.alwaysDrawDataLabel,\n                    offsetCorrection = opts.offsetCorrection;\n\n                if (Array.isArray(w.config.dataLabels.enabledOnSeries)) {\n                    if (w.config.dataLabels.enabledOnSeries.indexOf(i) < 0) {\n                        return;\n                    }\n                }\n\n                var correctedLabels = {\n                    x: x,\n                    y: y,\n                    drawnextLabel: true\n                };\n\n                if (offsetCorrection) {\n                    correctedLabels = this.dataLabelsCorrection(x, y, text, i, j, alwaysDrawDataLabel, parseInt(dataLabelsConfig.style.fontSize, 10));\n                } // when zoomed, we don't need to correct labels offsets,\n                // but if normally, labels get cropped, correct them\n\n\n                if (!w.globals.zoomed) {\n                    x = correctedLabels.x;\n                    y = correctedLabels.y;\n                }\n\n                if (correctedLabels.textRects) {\n                    // fixes #2264\n                    if (x < -10 - correctedLabels.textRects.width || x > w.globals.gridWidth + correctedLabels.textRects.width + 10) {\n                        // datalabels fall outside drawing area, so draw a blank label\n                        text = '';\n                    }\n                }\n\n                var dataLabelColor = w.globals.dataLabels.style.colors[i];\n\n                if ((w.config.chart.type === 'bar' || w.config.chart.type === 'rangeBar') && w.config.plotOptions.bar.distributed || w.config.dataLabels.distributed) {\n                    dataLabelColor = w.globals.dataLabels.style.colors[j];\n                }\n\n                if (typeof dataLabelColor === 'function') {\n                    dataLabelColor = dataLabelColor({\n                        series: w.globals.series,\n                        seriesIndex: i,\n                        dataPointIndex: j,\n                        w: w\n                    });\n                }\n\n                if (color) {\n                    dataLabelColor = color;\n                }\n\n                var offX = dataLabelsConfig.offsetX;\n                var offY = dataLabelsConfig.offsetY;\n\n                if (w.config.chart.type === 'bar' || w.config.chart.type === 'rangeBar') {\n                    // for certain chart types, we handle offsets while calculating datalabels pos\n                    // why? because bars/column may have negative values and based on that\n                    // offsets becomes reversed\n                    offX = 0;\n                    offY = 0;\n                }\n\n                if (correctedLabels.drawnextLabel) {\n                    var dataLabelText = graphics.drawText({\n                        width: 100,\n                        height: parseInt(dataLabelsConfig.style.fontSize, 10),\n                        x: x + offX,\n                        y: y + offY,\n                        foreColor: dataLabelColor,\n                        textAnchor: textAnchor || dataLabelsConfig.textAnchor,\n                        text: text,\n                        fontSize: fontSize || dataLabelsConfig.style.fontSize,\n                        fontFamily: dataLabelsConfig.style.fontFamily,\n                        fontWeight: dataLabelsConfig.style.fontWeight || 'normal'\n                    });\n                    dataLabelText.attr({\n                        class: 'apexcharts-datalabel',\n                        cx: x,\n                        cy: y\n                    });\n\n                    if (dataLabelsConfig.dropShadow.enabled) {\n                        var textShadow = dataLabelsConfig.dropShadow;\n                        var filters = new Filters(this.ctx);\n                        filters.dropShadow(dataLabelText, textShadow);\n                    }\n\n                    parent.add(dataLabelText);\n\n                    if (typeof w.globals.lastDrawnDataLabelsIndexes[i] === 'undefined') {\n                        w.globals.lastDrawnDataLabelsIndexes[i] = [];\n                    }\n\n                    w.globals.lastDrawnDataLabelsIndexes[i].push(j);\n                }\n            }\n        }, {\n            key: \"addBackgroundToDataLabel\",\n            value: function addBackgroundToDataLabel(el, coords) {\n                var w = this.w;\n                var bCnf = w.config.dataLabels.background;\n                var paddingH = bCnf.padding;\n                var paddingV = bCnf.padding / 2;\n                var width = coords.width;\n                var height = coords.height;\n                var graphics = new Graphics(this.ctx);\n                var elRect = graphics.drawRect(coords.x - paddingH, coords.y - paddingV / 2, width + paddingH * 2, height + paddingV, bCnf.borderRadius, w.config.chart.background === 'transparent' ? '#fff' : w.config.chart.background, bCnf.opacity, bCnf.borderWidth, bCnf.borderColor);\n\n                if (bCnf.dropShadow.enabled) {\n                    var filters = new Filters(this.ctx);\n                    filters.dropShadow(elRect, bCnf.dropShadow);\n                }\n\n                return elRect;\n            }\n        }, {\n            key: \"dataLabelsBackground\",\n            value: function dataLabelsBackground() {\n                var w = this.w;\n                if (w.config.chart.type === 'bubble') return;\n                var elDataLabels = w.globals.dom.baseEl.querySelectorAll('.apexcharts-datalabels text');\n\n                for (var i = 0; i < elDataLabels.length; i++) {\n                    var el = elDataLabels[i];\n                    var coords = el.getBBox();\n                    var elRect = null;\n\n                    if (coords.width && coords.height) {\n                        elRect = this.addBackgroundToDataLabel(el, coords);\n                    }\n\n                    if (elRect) {\n                        el.parentNode.insertBefore(elRect.node, el);\n                        var background = el.getAttribute('fill');\n                        var shouldAnim = w.config.chart.animations.enabled && !w.globals.resized && !w.globals.dataChanged;\n\n                        if (shouldAnim) {\n                            elRect.animate().attr({\n                                fill: background\n                            });\n                        } else {\n                            elRect.attr({\n                                fill: background\n                            });\n                        }\n\n                        el.setAttribute('fill', w.config.dataLabels.background.foreColor);\n                    }\n                }\n            }\n        }, {\n            key: \"bringForward\",\n            value: function bringForward() {\n                var w = this.w;\n                var elDataLabelsNodes = w.globals.dom.baseEl.querySelectorAll('.apexcharts-datalabels');\n                var elSeries = w.globals.dom.baseEl.querySelector('.apexcharts-plot-series:last-child');\n\n                for (var i = 0; i < elDataLabelsNodes.length; i++) {\n                    if (elSeries) {\n                        elSeries.insertBefore(elDataLabelsNodes[i], elSeries.nextSibling);\n                    }\n                }\n            }\n        }]);\n\n        return DataLabels;\n    }();\n\n    var BarDataLabels = /*#__PURE__*/ function() {\n        function BarDataLabels(barCtx) {\n            _classCallCheck(this, BarDataLabels);\n\n            this.w = barCtx.w;\n            this.barCtx = barCtx;\n        }\n        /** handleBarDataLabels is used to calculate the positions for the data-labels\n         * It also sets the element's data attr for bars and calls drawCalculatedBarDataLabels()\n         * After calculating, it also calls the function to draw data labels\n         * @memberof Bar\n         * @param {object} {barProps} most of the bar properties used throughout the bar\n         * drawing function\n         * @return {object} dataLabels node-element which you can append later\n         **/\n\n\n        _createClass(BarDataLabels, [{\n            key: \"handleBarDataLabels\",\n            value: function handleBarDataLabels(opts) {\n                var x = opts.x,\n                    y = opts.y,\n                    y1 = opts.y1,\n                    y2 = opts.y2,\n                    i = opts.i,\n                    j = opts.j,\n                    realIndex = opts.realIndex,\n                    series = opts.series,\n                    barHeight = opts.barHeight,\n                    barWidth = opts.barWidth,\n                    barYPosition = opts.barYPosition,\n                    visibleSeries = opts.visibleSeries,\n                    renderedPath = opts.renderedPath;\n                var w = this.w;\n                var graphics = new Graphics(this.barCtx.ctx);\n                var strokeWidth = Array.isArray(this.barCtx.strokeWidth) ? this.barCtx.strokeWidth[realIndex] : this.barCtx.strokeWidth;\n                var bcx = x + parseFloat(barWidth * visibleSeries);\n                var bcy = y + parseFloat(barHeight * visibleSeries);\n\n                if (w.globals.isXNumeric && !w.globals.isBarHorizontal) {\n                    bcx = x + parseFloat(barWidth * (visibleSeries + 1));\n                    bcy = y + parseFloat(barHeight * (visibleSeries + 1)) - strokeWidth;\n                }\n\n                var dataLabels = null;\n                var dataLabelsX = x;\n                var dataLabelsY = y;\n                var dataLabelsPos = {};\n                var dataLabelsConfig = w.config.dataLabels;\n                var barDataLabelsConfig = this.barCtx.barOptions.dataLabels;\n\n                if (typeof barYPosition !== 'undefined' && this.barCtx.isTimelineBar) {\n                    bcy = barYPosition;\n                    dataLabelsY = barYPosition;\n                }\n\n                var offX = dataLabelsConfig.offsetX;\n                var offY = dataLabelsConfig.offsetY;\n                var textRects = {\n                    width: 0,\n                    height: 0\n                };\n\n                if (w.config.dataLabels.enabled) {\n                    var yLabel = this.barCtx.series[i][j];\n                    textRects = graphics.getTextRects(w.globals.yLabelFormatters[0](yLabel), parseFloat(dataLabelsConfig.style.fontSize));\n                }\n\n                var params = {\n                    x: x,\n                    y: y,\n                    i: i,\n                    j: j,\n                    renderedPath: renderedPath,\n                    bcx: bcx,\n                    bcy: bcy,\n                    barHeight: barHeight,\n                    barWidth: barWidth,\n                    textRects: textRects,\n                    strokeWidth: strokeWidth,\n                    dataLabelsX: dataLabelsX,\n                    dataLabelsY: dataLabelsY,\n                    barDataLabelsConfig: barDataLabelsConfig,\n                    offX: offX,\n                    offY: offY\n                };\n\n                if (this.barCtx.isHorizontal) {\n                    dataLabelsPos = this.calculateBarsDataLabelsPosition(params);\n                } else {\n                    dataLabelsPos = this.calculateColumnsDataLabelsPosition(params);\n                }\n\n                renderedPath.attr({\n                    cy: dataLabelsPos.bcy,\n                    cx: dataLabelsPos.bcx,\n                    j: j,\n                    val: series[i][j],\n                    barHeight: barHeight,\n                    barWidth: barWidth\n                });\n                dataLabels = this.drawCalculatedDataLabels({\n                    x: dataLabelsPos.dataLabelsX,\n                    y: dataLabelsPos.dataLabelsY,\n                    val: this.barCtx.isTimelineBar ? [y1, y2] : series[i][j],\n                    i: realIndex,\n                    j: j,\n                    barWidth: barWidth,\n                    barHeight: barHeight,\n                    textRects: textRects,\n                    dataLabelsConfig: dataLabelsConfig\n                });\n                return dataLabels;\n            }\n        }, {\n            key: \"calculateColumnsDataLabelsPosition\",\n            value: function calculateColumnsDataLabelsPosition(opts) {\n                var w = this.w;\n                var i = opts.i,\n                    j = opts.j,\n                    y = opts.y,\n                    bcx = opts.bcx,\n                    barWidth = opts.barWidth,\n                    barHeight = opts.barHeight,\n                    textRects = opts.textRects,\n                    dataLabelsY = opts.dataLabelsY,\n                    barDataLabelsConfig = opts.barDataLabelsConfig,\n                    strokeWidth = opts.strokeWidth,\n                    offX = opts.offX,\n                    offY = opts.offY;\n                var dataLabelsX;\n                barHeight = Math.abs(barHeight);\n                var vertical = w.config.plotOptions.bar.dataLabels.orientation === 'vertical';\n                bcx = bcx - strokeWidth / 2;\n                var dataPointsDividedWidth = w.globals.gridWidth / w.globals.dataPoints;\n\n                if (w.globals.isXNumeric) {\n                    dataLabelsX = bcx - barWidth / 2 + offX;\n                } else {\n                    dataLabelsX = bcx - dataPointsDividedWidth + barWidth / 2 + offX;\n                }\n\n                if (vertical) {\n                    var offsetDLX = 2;\n                    dataLabelsX = dataLabelsX + textRects.height / 2 - strokeWidth / 2 - offsetDLX;\n                }\n\n                var valIsNegative = this.barCtx.series[i][j] < 0;\n                var newY = y;\n\n                if (this.barCtx.isReversed) {\n                    newY = y - barHeight + (valIsNegative ? barHeight * 2 : 0);\n                    y = y - barHeight;\n                }\n\n                switch (barDataLabelsConfig.position) {\n                    case 'center':\n                        if (vertical) {\n                            if (valIsNegative) {\n                                dataLabelsY = newY + barHeight / 2 + offY;\n                            } else {\n                                dataLabelsY = newY + barHeight / 2 - offY;\n                            }\n                        } else {\n                            if (valIsNegative) {\n                                dataLabelsY = newY - barHeight / 2 + textRects.height / 2 + offY;\n                            } else {\n                                dataLabelsY = newY + barHeight / 2 + textRects.height / 2 - offY;\n                            }\n                        }\n\n                        break;\n\n                    case 'bottom':\n                        if (vertical) {\n                            if (valIsNegative) {\n                                dataLabelsY = newY + barHeight + offY;\n                            } else {\n                                dataLabelsY = newY + barHeight - offY;\n                            }\n                        } else {\n                            if (valIsNegative) {\n                                dataLabelsY = newY - barHeight + textRects.height + strokeWidth + offY;\n                            } else {\n                                dataLabelsY = newY + barHeight - textRects.height / 2 + strokeWidth - offY;\n                            }\n                        }\n\n                        break;\n\n                    case 'top':\n                        if (vertical) {\n                            if (valIsNegative) {\n                                dataLabelsY = newY + offY;\n                            } else {\n                                dataLabelsY = newY - offY;\n                            }\n                        } else {\n                            if (valIsNegative) {\n                                dataLabelsY = newY - textRects.height / 2 - offY;\n                            } else {\n                                dataLabelsY = newY + textRects.height + offY;\n                            }\n                        }\n\n                        break;\n                }\n\n                if (!w.config.chart.stacked) {\n                    if (dataLabelsY < 0) {\n                        dataLabelsY = 0 + strokeWidth;\n                    } else if (dataLabelsY + textRects.height / 3 > w.globals.gridHeight) {\n                        dataLabelsY = w.globals.gridHeight - strokeWidth;\n                    }\n                }\n\n                return {\n                    bcx: bcx,\n                    bcy: y,\n                    dataLabelsX: dataLabelsX,\n                    dataLabelsY: dataLabelsY\n                };\n            }\n        }, {\n            key: \"calculateBarsDataLabelsPosition\",\n            value: function calculateBarsDataLabelsPosition(opts) {\n                var w = this.w;\n                var x = opts.x,\n                    i = opts.i,\n                    j = opts.j,\n                    bcy = opts.bcy,\n                    barHeight = opts.barHeight,\n                    barWidth = opts.barWidth,\n                    textRects = opts.textRects,\n                    dataLabelsX = opts.dataLabelsX,\n                    strokeWidth = opts.strokeWidth,\n                    barDataLabelsConfig = opts.barDataLabelsConfig,\n                    offX = opts.offX,\n                    offY = opts.offY;\n                var dataPointsDividedHeight = w.globals.gridHeight / w.globals.dataPoints;\n                barWidth = Math.abs(barWidth);\n                var dataLabelsY = bcy - (this.barCtx.isTimelineBar ? 0 : dataPointsDividedHeight) + barHeight / 2 + textRects.height / 2 + offY - 3;\n                var valIsNegative = this.barCtx.series[i][j] < 0;\n                var newX = x;\n\n                if (this.barCtx.isReversed) {\n                    newX = x + barWidth - (valIsNegative ? barWidth * 2 : 0);\n                    x = w.globals.gridWidth - barWidth;\n                }\n\n                switch (barDataLabelsConfig.position) {\n                    case 'center':\n                        if (valIsNegative) {\n                            dataLabelsX = newX + barWidth / 2 - offX;\n                        } else {\n                            dataLabelsX = Math.max(textRects.width / 2, newX - barWidth / 2) + offX;\n                        }\n\n                        break;\n\n                    case 'bottom':\n                        if (valIsNegative) {\n                            dataLabelsX = newX + barWidth - strokeWidth - Math.round(textRects.width / 2) - offX;\n                        } else {\n                            dataLabelsX = newX - barWidth + strokeWidth + Math.round(textRects.width / 2) + offX;\n                        }\n\n                        break;\n\n                    case 'top':\n                        if (valIsNegative) {\n                            dataLabelsX = newX - strokeWidth + Math.round(textRects.width / 2) - offX;\n                        } else {\n                            dataLabelsX = newX - strokeWidth - Math.round(textRects.width / 2) + offX;\n                        }\n\n                        break;\n                }\n\n                if (!w.config.chart.stacked) {\n                    if (dataLabelsX < 0) {\n                        dataLabelsX = dataLabelsX + textRects.width + strokeWidth;\n                    } else if (dataLabelsX + textRects.width / 2 > w.globals.gridWidth) {\n                        dataLabelsX = w.globals.gridWidth - textRects.width - strokeWidth;\n                    }\n                }\n\n                return {\n                    bcx: x,\n                    bcy: bcy,\n                    dataLabelsX: dataLabelsX,\n                    dataLabelsY: dataLabelsY\n                };\n            }\n        }, {\n            key: \"drawCalculatedDataLabels\",\n            value: function drawCalculatedDataLabels(_ref) {\n                var x = _ref.x,\n                    y = _ref.y,\n                    val = _ref.val,\n                    i = _ref.i,\n                    j = _ref.j,\n                    textRects = _ref.textRects,\n                    barHeight = _ref.barHeight,\n                    barWidth = _ref.barWidth,\n                    dataLabelsConfig = _ref.dataLabelsConfig;\n                var w = this.w;\n                var rotate = 'rotate(0)';\n                if (w.config.plotOptions.bar.dataLabels.orientation === 'vertical') rotate = \"rotate(-90, \".concat(x, \", \").concat(y, \")\");\n                var dataLabels = new DataLabels(this.barCtx.ctx);\n                var graphics = new Graphics(this.barCtx.ctx);\n                var formatter = dataLabelsConfig.formatter;\n                var elDataLabelsWrap = null;\n                var isSeriesNotCollapsed = w.globals.collapsedSeriesIndices.indexOf(i) > -1;\n\n                if (dataLabelsConfig.enabled && !isSeriesNotCollapsed) {\n                    elDataLabelsWrap = graphics.group({\n                        class: 'apexcharts-data-labels',\n                        transform: rotate\n                    });\n                    var text = '';\n\n                    if (typeof val !== 'undefined') {\n                        text = formatter(val, {\n                            seriesIndex: i,\n                            dataPointIndex: j,\n                            w: w\n                        });\n                    }\n\n                    var valIsNegative = w.globals.series[i][j] < 0;\n                    var position = w.config.plotOptions.bar.dataLabels.position;\n\n                    if (w.config.plotOptions.bar.dataLabels.orientation === 'vertical') {\n                        if (position === 'top') {\n                            if (valIsNegative) dataLabelsConfig.textAnchor = 'end';\n                            else dataLabelsConfig.textAnchor = 'start';\n                        }\n\n                        if (position === 'center') {\n                            dataLabelsConfig.textAnchor = 'middle';\n                        }\n\n                        if (position === 'bottom') {\n                            if (valIsNegative) dataLabelsConfig.textAnchor = 'end';\n                            else dataLabelsConfig.textAnchor = 'start';\n                        }\n                    }\n\n                    if (this.barCtx.isTimelineBar && this.barCtx.barOptions.dataLabels.hideOverflowingLabels) {\n                        // hide the datalabel if it cannot fit into the rect\n                        var txRect = graphics.getTextRects(text, parseFloat(dataLabelsConfig.style.fontSize));\n\n                        if (barWidth < txRect.width) {\n                            text = '';\n                        }\n                    }\n\n                    if (w.config.chart.stacked && this.barCtx.barOptions.dataLabels.hideOverflowingLabels) {\n                        // if there is not enough space to draw the label in the bar/column rect, check hideOverflowingLabels property to prevent overflowing on wrong rect\n                        // Note: This issue is only seen in stacked charts\n                        if (this.barCtx.isHorizontal) {\n                            // FIXED: Don't always hide the stacked negative side label\n                            // A negative value will result in a negative bar width\n                            // Only hide the text when the width is smaller (a higher negative number) than the negative bar width.\n                            if (barWidth > 0 && textRects.width / 1.6 > barWidth || barWidth < 0 && textRects.width / 1.6 < barWidth) {\n                                text = '';\n                            }\n                        } else {\n                            if (textRects.height / 1.6 > barHeight) {\n                                text = '';\n                            }\n                        }\n                    }\n\n                    var modifiedDataLabelsConfig = _objectSpread2({}, dataLabelsConfig);\n\n                    if (this.barCtx.isHorizontal) {\n                        if (val < 0) {\n                            if (dataLabelsConfig.textAnchor === 'start') {\n                                modifiedDataLabelsConfig.textAnchor = 'end';\n                            } else if (dataLabelsConfig.textAnchor === 'end') {\n                                modifiedDataLabelsConfig.textAnchor = 'start';\n                            }\n                        }\n                    }\n\n                    dataLabels.plotDataLabelsText({\n                        x: x,\n                        y: y,\n                        text: text,\n                        i: i,\n                        j: j,\n                        parent: elDataLabelsWrap,\n                        dataLabelsConfig: modifiedDataLabelsConfig,\n                        alwaysDrawDataLabel: true,\n                        offsetCorrection: true\n                    });\n                }\n\n                return elDataLabelsWrap;\n            }\n        }]);\n\n        return BarDataLabels;\n    }();\n\n    /**\n     * ApexCharts Series Class for interaction with the Series of the chart.\n     *\n     * @module Series\n     **/\n\n    var Series = /*#__PURE__*/ function() {\n        function Series(ctx) {\n            _classCallCheck(this, Series);\n\n            this.ctx = ctx;\n            this.w = ctx.w;\n            this.legendInactiveClass = 'legend-mouseover-inactive';\n        }\n\n        _createClass(Series, [{\n            key: \"getAllSeriesEls\",\n            value: function getAllSeriesEls() {\n                return this.w.globals.dom.baseEl.getElementsByClassName(\"apexcharts-series\");\n            }\n        }, {\n            key: \"getSeriesByName\",\n            value: function getSeriesByName(seriesName) {\n                return this.w.globals.dom.baseEl.querySelector(\".apexcharts-inner .apexcharts-series[seriesName='\".concat(Utils.escapeString(seriesName), \"']\"));\n            }\n        }, {\n            key: \"isSeriesHidden\",\n            value: function isSeriesHidden(seriesName) {\n                var targetElement = this.getSeriesByName(seriesName);\n                var realIndex = parseInt(targetElement.getAttribute('data:realIndex'), 10);\n                var isHidden = targetElement.classList.contains('apexcharts-series-collapsed');\n                return {\n                    isHidden: isHidden,\n                    realIndex: realIndex\n                };\n            }\n        }, {\n            key: \"addCollapsedClassToSeries\",\n            value: function addCollapsedClassToSeries(elSeries, index) {\n                var w = this.w;\n\n                function iterateOnAllCollapsedSeries(series) {\n                    for (var cs = 0; cs < series.length; cs++) {\n                        if (series[cs].index === index) {\n                            elSeries.node.classList.add('apexcharts-series-collapsed');\n                        }\n                    }\n                }\n\n                iterateOnAllCollapsedSeries(w.globals.collapsedSeries);\n                iterateOnAllCollapsedSeries(w.globals.ancillaryCollapsedSeries);\n            }\n        }, {\n            key: \"toggleSeries\",\n            value: function toggleSeries(seriesName) {\n                var isSeriesHidden = this.isSeriesHidden(seriesName);\n                this.ctx.legend.legendHelpers.toggleDataSeries(isSeriesHidden.realIndex, isSeriesHidden.isHidden);\n                return isSeriesHidden.isHidden;\n            }\n        }, {\n            key: \"showSeries\",\n            value: function showSeries(seriesName) {\n                var isSeriesHidden = this.isSeriesHidden(seriesName);\n\n                if (isSeriesHidden.isHidden) {\n                    this.ctx.legend.legendHelpers.toggleDataSeries(isSeriesHidden.realIndex, true);\n                }\n            }\n        }, {\n            key: \"hideSeries\",\n            value: function hideSeries(seriesName) {\n                var isSeriesHidden = this.isSeriesHidden(seriesName);\n\n                if (!isSeriesHidden.isHidden) {\n                    this.ctx.legend.legendHelpers.toggleDataSeries(isSeriesHidden.realIndex, false);\n                }\n            }\n        }, {\n            key: \"resetSeries\",\n            value: function resetSeries() {\n                var shouldUpdateChart = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n                var shouldResetZoom = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n                var shouldResetCollapsed = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n                var w = this.w;\n                var series = Utils.clone(w.globals.initialSeries);\n                w.globals.previousPaths = [];\n\n                if (shouldResetCollapsed) {\n                    w.globals.collapsedSeries = [];\n                    w.globals.ancillaryCollapsedSeries = [];\n                    w.globals.collapsedSeriesIndices = [];\n                    w.globals.ancillaryCollapsedSeriesIndices = [];\n                } else {\n                    series = this.emptyCollapsedSeries(series);\n                }\n\n                w.config.series = series;\n\n                if (shouldUpdateChart) {\n                    if (shouldResetZoom) {\n                        w.globals.zoomed = false;\n                        this.ctx.updateHelpers.revertDefaultAxisMinMax();\n                    }\n\n                    this.ctx.updateHelpers._updateSeries(series, w.config.chart.animations.dynamicAnimation.enabled);\n                }\n            }\n        }, {\n            key: \"emptyCollapsedSeries\",\n            value: function emptyCollapsedSeries(series) {\n                var w = this.w;\n\n                for (var i = 0; i < series.length; i++) {\n                    if (w.globals.collapsedSeriesIndices.indexOf(i) > -1) {\n                        series[i].data = [];\n                    }\n                }\n\n                return series;\n            }\n        }, {\n            key: \"toggleSeriesOnHover\",\n            value: function toggleSeriesOnHover(e, targetElement) {\n                var w = this.w;\n                var allSeriesEls = w.globals.dom.baseEl.querySelectorAll(\".apexcharts-series, .apexcharts-datalabels\");\n\n                if (e.type === 'mousemove') {\n                    var seriesCnt = parseInt(targetElement.getAttribute('rel'), 10) - 1;\n                    var seriesEl = null;\n                    var dataLabelEl = null;\n\n                    if (w.globals.axisCharts || w.config.chart.type === 'radialBar') {\n                        if (w.globals.axisCharts) {\n                            seriesEl = w.globals.dom.baseEl.querySelector(\".apexcharts-series[data\\\\:realIndex='\".concat(seriesCnt, \"']\"));\n                            dataLabelEl = w.globals.dom.baseEl.querySelector(\".apexcharts-datalabels[data\\\\:realIndex='\".concat(seriesCnt, \"']\"));\n                        } else {\n                            seriesEl = w.globals.dom.baseEl.querySelector(\".apexcharts-series[rel='\".concat(seriesCnt + 1, \"']\"));\n                        }\n                    } else {\n                        seriesEl = w.globals.dom.baseEl.querySelector(\".apexcharts-series[rel='\".concat(seriesCnt + 1, \"'] path\"));\n                    }\n\n                    for (var se = 0; se < allSeriesEls.length; se++) {\n                        allSeriesEls[se].classList.add(this.legendInactiveClass);\n                    }\n\n                    if (seriesEl !== null) {\n                        if (!w.globals.axisCharts) {\n                            seriesEl.parentNode.classList.remove(this.legendInactiveClass);\n                        }\n\n                        seriesEl.classList.remove(this.legendInactiveClass);\n\n                        if (dataLabelEl !== null) {\n                            dataLabelEl.classList.remove(this.legendInactiveClass);\n                        }\n                    }\n                } else if (e.type === 'mouseout') {\n                    for (var _se = 0; _se < allSeriesEls.length; _se++) {\n                        allSeriesEls[_se].classList.remove(this.legendInactiveClass);\n                    }\n                }\n            }\n        }, {\n            key: \"highlightRangeInSeries\",\n            value: function highlightRangeInSeries(e, targetElement) {\n                var _this = this;\n\n                var w = this.w;\n                var allHeatMapElements = w.globals.dom.baseEl.getElementsByClassName('apexcharts-heatmap-rect');\n\n                var activeInactive = function activeInactive(action) {\n                    for (var i = 0; i < allHeatMapElements.length; i++) {\n                        allHeatMapElements[i].classList[action](_this.legendInactiveClass);\n                    }\n                };\n\n                var removeInactiveClassFromHoveredRange = function removeInactiveClassFromHoveredRange(range) {\n                    for (var i = 0; i < allHeatMapElements.length; i++) {\n                        var val = parseInt(allHeatMapElements[i].getAttribute('val'), 10);\n\n                        if (val >= range.from && val <= range.to) {\n                            allHeatMapElements[i].classList.remove(_this.legendInactiveClass);\n                        }\n                    }\n                };\n\n                if (e.type === 'mousemove') {\n                    var seriesCnt = parseInt(targetElement.getAttribute('rel'), 10) - 1;\n                    activeInactive('add');\n                    var range = w.config.plotOptions.heatmap.colorScale.ranges[seriesCnt];\n                    removeInactiveClassFromHoveredRange(range);\n                } else if (e.type === 'mouseout') {\n                    activeInactive('remove');\n                }\n            }\n        }, {\n            key: \"getActiveConfigSeriesIndex\",\n            value: function getActiveConfigSeriesIndex() {\n                var ignoreBars = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n                var order = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'asc';\n                var w = this.w;\n                var activeIndex = 0;\n\n                if (w.config.series.length > 1) {\n                    // active series flag is required to know if user has not deactivated via legend click\n                    var activeSeriesIndex = w.config.series.map(function(s, index) {\n                        var hasBars = false;\n\n                        if (ignoreBars) {\n                            hasBars = w.config.series[index].type === 'bar' || w.config.series[index].type === 'column';\n                        }\n\n                        return s.data && s.data.length > 0 && !hasBars ? index : -1;\n                    });\n\n                    for (var a = order === 'asc' ? 0 : activeSeriesIndex.length - 1; order === 'asc' ? a < activeSeriesIndex.length : a >= 0; order === 'asc' ? a++ : a--) {\n                        if (activeSeriesIndex[a] !== -1) {\n                            activeIndex = activeSeriesIndex[a];\n                            break;\n                        }\n                    }\n                }\n\n                return activeIndex;\n            }\n        }, {\n            key: \"getPreviousPaths\",\n            value: function getPreviousPaths() {\n                var w = this.w;\n                w.globals.previousPaths = [];\n\n                function pushPaths(seriesEls, i, type) {\n                    var paths = seriesEls[i].childNodes;\n                    var dArr = {\n                        type: type,\n                        paths: [],\n                        realIndex: seriesEls[i].getAttribute('data:realIndex')\n                    };\n\n                    for (var j = 0; j < paths.length; j++) {\n                        if (paths[j].hasAttribute('pathTo')) {\n                            var d = paths[j].getAttribute('pathTo');\n                            dArr.paths.push({\n                                d: d\n                            });\n                        }\n                    }\n\n                    w.globals.previousPaths.push(dArr);\n                }\n\n                var getPaths = function getPaths(chartType) {\n                    return w.globals.dom.baseEl.querySelectorAll(\".apexcharts-\".concat(chartType, \"-series .apexcharts-series\"));\n                };\n\n                var chartTypes = ['line', 'area', 'bar', 'rangebar', 'candlestick', 'radar'];\n                chartTypes.forEach(function(type) {\n                    var paths = getPaths(type);\n\n                    for (var p = 0; p < paths.length; p++) {\n                        pushPaths(paths, p, type);\n                    }\n                });\n                this.handlePrevBubbleScatterPaths('bubble');\n                this.handlePrevBubbleScatterPaths('scatter');\n                var heatTreeSeries = w.globals.dom.baseEl.querySelectorAll(\".apexcharts-\".concat(w.config.chart.type, \" .apexcharts-series\"));\n\n                if (heatTreeSeries.length > 0) {\n                    var _loop = function _loop(h) {\n                        var seriesEls = w.globals.dom.baseEl.querySelectorAll(\".apexcharts-\".concat(w.config.chart.type, \" .apexcharts-series[data\\\\:realIndex='\").concat(h, \"'] rect\"));\n                        var dArr = [];\n\n                        var _loop2 = function _loop2(i) {\n                            var getAttr = function getAttr(x) {\n                                return seriesEls[i].getAttribute(x);\n                            };\n\n                            var rect = {\n                                x: parseFloat(getAttr('x')),\n                                y: parseFloat(getAttr('y')),\n                                width: parseFloat(getAttr('width')),\n                                height: parseFloat(getAttr('height'))\n                            };\n                            dArr.push({\n                                rect: rect,\n                                color: seriesEls[i].getAttribute('color')\n                            });\n                        };\n\n                        for (var i = 0; i < seriesEls.length; i++) {\n                            _loop2(i);\n                        }\n\n                        w.globals.previousPaths.push(dArr);\n                    };\n\n                    for (var h = 0; h < heatTreeSeries.length; h++) {\n                        _loop(h);\n                    }\n                }\n\n                if (!w.globals.axisCharts) {\n                    // for non-axis charts (i.e., circular charts, pathFrom is not usable. We need whole series)\n                    w.globals.previousPaths = w.globals.series;\n                }\n            }\n        }, {\n            key: \"handlePrevBubbleScatterPaths\",\n            value: function handlePrevBubbleScatterPaths(type) {\n                var w = this.w;\n                var paths = w.globals.dom.baseEl.querySelectorAll(\".apexcharts-\".concat(type, \"-series .apexcharts-series\"));\n\n                if (paths.length > 0) {\n                    for (var s = 0; s < paths.length; s++) {\n                        var seriesEls = w.globals.dom.baseEl.querySelectorAll(\".apexcharts-\".concat(type, \"-series .apexcharts-series[data\\\\:realIndex='\").concat(s, \"'] circle\"));\n                        var dArr = [];\n\n                        for (var i = 0; i < seriesEls.length; i++) {\n                            dArr.push({\n                                x: seriesEls[i].getAttribute('cx'),\n                                y: seriesEls[i].getAttribute('cy'),\n                                r: seriesEls[i].getAttribute('r')\n                            });\n                        }\n\n                        w.globals.previousPaths.push(dArr);\n                    }\n                }\n            }\n        }, {\n            key: \"clearPreviousPaths\",\n            value: function clearPreviousPaths() {\n                var w = this.w;\n                w.globals.previousPaths = [];\n                w.globals.allSeriesCollapsed = false;\n            }\n        }, {\n            key: \"handleNoData\",\n            value: function handleNoData() {\n                    var w = this.w;\n                    var me = this;\n                    var noDataOpts = w.config.noData;\n                    var graphics = new Graphics(me.ctx);\n                    var x = w.globals.svgWidth / 2;\n                    var y = w.globals.svgHeight / 2;\n                    var textAnchor = 'middle';\n                    w.globals.noData = true;\n                    w.globals.animationEnded = true;\n\n                    if (noDataOpts.align === 'left') {\n                        x = 10;\n                        textAnchor = 'start';\n                    } else if (noDataOpts.align === 'right') {\n                        x = w.globals.svgWidth - 10;\n                        textAnchor = 'end';\n                    }\n\n                    if (noDataOpts.verticalAlign === 'top') {\n                        y = 50;\n                    } else if (noDataOpts.verticalAlign === 'bottom') {\n                        y = w.globals.svgHeight - 50;\n                    }\n\n                    x = x + noDataOpts.offsetX;\n                    y = y + parseInt(noDataOpts.style.fontSize, 10) + 2 + noDataOpts.offsetY;\n\n                    if (noDataOpts.text !== undefined && noDataOpts.text !== '') {\n                        var titleText = graphics.drawText({\n                            x: x,\n                            y: y,\n                            text: noDataOpts.text,\n                            textAnchor: textAnchor,\n                            fontSize: noDataOpts.style.fontSize,\n                            fontFamily: noDataOpts.style.fontFamily,\n                            foreColor: noDataOpts.style.color,\n                            opacity: 1,\n                            class: 'apexcharts-text-nodata'\n                        });\n                        w.globals.dom.Paper.add(titleText);\n                    }\n                } // When user clicks on legends, the collapsed series is filled with [0,0,0,...,0]\n                // This is because we don't want to alter the series' length as it is used at many places\n\n        }, {\n            key: \"setNullSeriesToZeroValues\",\n            value: function setNullSeriesToZeroValues(series) {\n                var w = this.w;\n\n                for (var sl = 0; sl < series.length; sl++) {\n                    if (series[sl].length === 0) {\n                        for (var j = 0; j < series[w.globals.maxValsInArrayIndex].length; j++) {\n                            series[sl].push(0);\n                        }\n                    }\n                }\n\n                return series;\n            }\n        }, {\n            key: \"hasAllSeriesEqualX\",\n            value: function hasAllSeriesEqualX() {\n                var equalLen = true;\n                var w = this.w;\n                var filteredSerX = this.filteredSeriesX();\n\n                for (var i = 0; i < filteredSerX.length - 1; i++) {\n                    if (filteredSerX[i][0] !== filteredSerX[i + 1][0]) {\n                        equalLen = false;\n                        break;\n                    }\n                }\n\n                w.globals.allSeriesHasEqualX = equalLen;\n                return equalLen;\n            }\n        }, {\n            key: \"filteredSeriesX\",\n            value: function filteredSeriesX() {\n                var w = this.w;\n                var filteredSeriesX = w.globals.seriesX.map(function(ser) {\n                    return ser.length > 0 ? ser : [];\n                });\n                return filteredSeriesX;\n            }\n        }]);\n\n        return Series;\n    }();\n\n    var Helpers$1 = /*#__PURE__*/ function() {\n        function Helpers(barCtx) {\n            _classCallCheck(this, Helpers);\n\n            this.w = barCtx.w;\n            this.barCtx = barCtx;\n        }\n\n        _createClass(Helpers, [{\n            key: \"initVariables\",\n            value: function initVariables(series) {\n                var w = this.w;\n                this.barCtx.series = series;\n                this.barCtx.totalItems = 0;\n                this.barCtx.seriesLen = 0;\n                this.barCtx.visibleI = -1; // visible Series\n\n                this.barCtx.visibleItems = 1; // number of visible bars after user zoomed in/out\n\n                for (var sl = 0; sl < series.length; sl++) {\n                    if (series[sl].length > 0) {\n                        this.barCtx.seriesLen = this.barCtx.seriesLen + 1;\n                        this.barCtx.totalItems += series[sl].length;\n                    }\n\n                    if (w.globals.isXNumeric) {\n                        // get max visible items\n                        for (var j = 0; j < series[sl].length; j++) {\n                            if (w.globals.seriesX[sl][j] > w.globals.minX && w.globals.seriesX[sl][j] < w.globals.maxX) {\n                                this.barCtx.visibleItems++;\n                            }\n                        }\n                    } else {\n                        this.barCtx.visibleItems = w.globals.dataPoints;\n                    }\n                }\n\n                if (this.barCtx.seriesLen === 0) {\n                    // A small adjustment when combo charts are used\n                    this.barCtx.seriesLen = 1;\n                }\n\n                this.barCtx.zeroSerieses = [];\n                this.barCtx.radiusOnSeriesNumber = series.length - 1; // which series to draw ending shape on\n\n                if (!w.globals.comboCharts) {\n                    this.checkZeroSeries({\n                        series: series\n                    });\n                }\n            }\n        }, {\n            key: \"initialPositions\",\n            value: function initialPositions() {\n                var w = this.w;\n                var x, y, yDivision, xDivision, barHeight, barWidth, zeroH, zeroW;\n                var dataPoints = w.globals.dataPoints;\n\n                if (this.barCtx.isTimelineBar) {\n                    // timeline rangebar chart\n                    dataPoints = w.globals.labels.length;\n                }\n\n                var seriesLen = this.barCtx.seriesLen;\n\n                if (w.config.plotOptions.bar.rangeBarGroupRows) {\n                    seriesLen = 1;\n                }\n\n                if (this.barCtx.isHorizontal) {\n                    // height divided into equal parts\n                    yDivision = w.globals.gridHeight / dataPoints;\n                    barHeight = yDivision / seriesLen;\n\n                    if (w.globals.isXNumeric) {\n                        yDivision = w.globals.gridHeight / this.barCtx.totalItems;\n                        barHeight = yDivision / this.barCtx.seriesLen;\n                    }\n\n                    barHeight = barHeight * parseInt(this.barCtx.barOptions.barHeight, 10) / 100;\n                    zeroW = this.barCtx.baseLineInvertedY + w.globals.padHorizontal + (this.barCtx.isReversed ? w.globals.gridWidth : 0) - (this.barCtx.isReversed ? this.barCtx.baseLineInvertedY * 2 : 0);\n                    y = (yDivision - barHeight * this.barCtx.seriesLen) / 2;\n                } else {\n                    // width divided into equal parts\n                    xDivision = w.globals.gridWidth / this.barCtx.visibleItems;\n\n                    if (w.config.xaxis.convertedCatToNumeric) {\n                        xDivision = w.globals.gridWidth / w.globals.dataPoints;\n                    }\n\n                    barWidth = xDivision / this.barCtx.seriesLen * parseInt(this.barCtx.barOptions.columnWidth, 10) / 100;\n\n                    if (w.globals.isXNumeric) {\n                        // max barwidth should be equal to minXDiff to avoid overlap\n                        var xRatio = this.barCtx.xRatio;\n\n                        if (w.config.xaxis.convertedCatToNumeric) {\n                            xRatio = this.barCtx.initialXRatio;\n                        }\n\n                        if (w.globals.minXDiff && w.globals.minXDiff !== 0.5 && w.globals.minXDiff / xRatio > 0) {\n                            xDivision = w.globals.minXDiff / xRatio;\n                        }\n\n                        barWidth = xDivision / this.barCtx.seriesLen * parseInt(this.barCtx.barOptions.columnWidth, 10) / 100;\n\n                        if (barWidth < 1) {\n                            barWidth = 1;\n                        }\n                    }\n\n                    zeroH = w.globals.gridHeight - this.barCtx.baseLineY[this.barCtx.yaxisIndex] - (this.barCtx.isReversed ? w.globals.gridHeight : 0) + (this.barCtx.isReversed ? this.barCtx.baseLineY[this.barCtx.yaxisIndex] * 2 : 0);\n                    x = w.globals.padHorizontal + (xDivision - barWidth * this.barCtx.seriesLen) / 2;\n                }\n\n                return {\n                    x: x,\n                    y: y,\n                    yDivision: yDivision,\n                    xDivision: xDivision,\n                    barHeight: barHeight,\n                    barWidth: barWidth,\n                    zeroH: zeroH,\n                    zeroW: zeroW\n                };\n            }\n        }, {\n            key: \"getPathFillColor\",\n            value: function getPathFillColor(series, i, j, realIndex) {\n                var w = this.w;\n                var fill = new Fill(this.barCtx.ctx);\n                var fillColor = null;\n                var seriesNumber = this.barCtx.barOptions.distributed ? j : i;\n\n                if (this.barCtx.barOptions.colors.ranges.length > 0) {\n                    var colorRange = this.barCtx.barOptions.colors.ranges;\n                    colorRange.map(function(range) {\n                        if (series[i][j] >= range.from && series[i][j] <= range.to) {\n                            fillColor = range.color;\n                        }\n                    });\n                }\n\n                if (w.config.series[i].data[j] && w.config.series[i].data[j].fillColor) {\n                    fillColor = w.config.series[i].data[j].fillColor;\n                }\n\n                var pathFill = fill.fillPath({\n                    seriesNumber: this.barCtx.barOptions.distributed ? seriesNumber : realIndex,\n                    dataPointIndex: j,\n                    color: fillColor,\n                    value: series[i][j]\n                });\n                return pathFill;\n            }\n        }, {\n            key: \"getStrokeWidth\",\n            value: function getStrokeWidth(i, j, realIndex) {\n                var strokeWidth = 0;\n                var w = this.w;\n\n                if (typeof this.barCtx.series[i][j] === 'undefined' || this.barCtx.series[i][j] === null) {\n                    this.barCtx.isNullValue = true;\n                } else {\n                    this.barCtx.isNullValue = false;\n                }\n\n                if (w.config.stroke.show) {\n                    if (!this.barCtx.isNullValue) {\n                        strokeWidth = Array.isArray(this.barCtx.strokeWidth) ? this.barCtx.strokeWidth[realIndex] : this.barCtx.strokeWidth;\n                    }\n                }\n\n                return strokeWidth;\n            }\n        }, {\n            key: \"barBackground\",\n            value: function barBackground(_ref) {\n                var j = _ref.j,\n                    i = _ref.i,\n                    x1 = _ref.x1,\n                    x2 = _ref.x2,\n                    y1 = _ref.y1,\n                    y2 = _ref.y2,\n                    elSeries = _ref.elSeries;\n                var w = this.w;\n                var graphics = new Graphics(this.barCtx.ctx);\n                var sr = new Series(this.barCtx.ctx);\n                var activeSeriesIndex = sr.getActiveConfigSeriesIndex();\n\n                if (this.barCtx.barOptions.colors.backgroundBarColors.length > 0 && activeSeriesIndex === i) {\n                    if (j >= this.barCtx.barOptions.colors.backgroundBarColors.length) {\n                        j -= this.barCtx.barOptions.colors.backgroundBarColors.length;\n                    }\n\n                    var bcolor = this.barCtx.barOptions.colors.backgroundBarColors[j];\n                    var rect = graphics.drawRect(typeof x1 !== 'undefined' ? x1 : 0, typeof y1 !== 'undefined' ? y1 : 0, typeof x2 !== 'undefined' ? x2 : w.globals.gridWidth, typeof y2 !== 'undefined' ? y2 : w.globals.gridHeight, this.barCtx.barOptions.colors.backgroundBarRadius, bcolor, this.barCtx.barOptions.colors.backgroundBarOpacity);\n                    elSeries.add(rect);\n                    rect.node.classList.add('apexcharts-backgroundBar');\n                }\n            }\n        }, {\n            key: \"getColumnPaths\",\n            value: function getColumnPaths(_ref2) {\n                var barWidth = _ref2.barWidth,\n                    barXPosition = _ref2.barXPosition,\n                    yRatio = _ref2.yRatio,\n                    y1 = _ref2.y1,\n                    y2 = _ref2.y2,\n                    strokeWidth = _ref2.strokeWidth,\n                    series = _ref2.series,\n                    realIndex = _ref2.realIndex,\n                    i = _ref2.i,\n                    j = _ref2.j,\n                    w = _ref2.w;\n                var graphics = new Graphics(this.barCtx.ctx);\n                strokeWidth = Array.isArray(strokeWidth) ? strokeWidth[realIndex] : strokeWidth;\n                if (!strokeWidth) strokeWidth = 0;\n                var shapeOpts = {\n                    barWidth: barWidth,\n                    strokeWidth: strokeWidth,\n                    yRatio: yRatio,\n                    barXPosition: barXPosition,\n                    y1: y1,\n                    y2: y2\n                };\n                var newPath = this.getRoundedBars(w, shapeOpts, series, i, j);\n                var x1 = barXPosition;\n                var x2 = barXPosition + barWidth;\n                var pathTo = graphics.move(x1, y1);\n                var pathFrom = graphics.move(x1, y1);\n                var sl = graphics.line(x2 - strokeWidth, y1);\n\n                if (w.globals.previousPaths.length > 0) {\n                    pathFrom = this.barCtx.getPreviousPath(realIndex, j, false);\n                }\n\n                pathTo = pathTo + graphics.line(x1, newPath.y2) + newPath.pathWithRadius + graphics.line(x2 - strokeWidth, newPath.y2) + sl + sl + 'z'; // the lines in pathFrom are repeated to equal it to the points of pathTo\n                // this is to avoid weird animation (bug in svg.js)\n\n                pathFrom = pathFrom + graphics.line(x1, y1) + sl + sl + sl + sl + sl + graphics.line(x1, y1);\n\n                if (w.config.chart.stacked) {\n                    this.barCtx.yArrj.push(newPath.y2);\n                    this.barCtx.yArrjF.push(Math.abs(y1 - newPath.y2));\n                    this.barCtx.yArrjVal.push(this.barCtx.series[i][j]);\n                }\n\n                return {\n                    pathTo: pathTo,\n                    pathFrom: pathFrom\n                };\n            }\n        }, {\n            key: \"getBarpaths\",\n            value: function getBarpaths(_ref3) {\n                    var barYPosition = _ref3.barYPosition,\n                        barHeight = _ref3.barHeight,\n                        x1 = _ref3.x1,\n                        x2 = _ref3.x2,\n                        strokeWidth = _ref3.strokeWidth,\n                        series = _ref3.series,\n                        realIndex = _ref3.realIndex,\n                        i = _ref3.i,\n                        j = _ref3.j,\n                        w = _ref3.w;\n                    var graphics = new Graphics(this.barCtx.ctx);\n                    strokeWidth = Array.isArray(strokeWidth) ? strokeWidth[realIndex] : strokeWidth;\n                    if (!strokeWidth) strokeWidth = 0;\n                    var shapeOpts = {\n                        barHeight: barHeight,\n                        strokeWidth: strokeWidth,\n                        barYPosition: barYPosition,\n                        x2: x2,\n                        x1: x1\n                    };\n                    var newPath = this.getRoundedBars(w, shapeOpts, series, i, j);\n                    var pathTo = graphics.move(x1, barYPosition);\n                    var pathFrom = graphics.move(x1, barYPosition);\n\n                    if (w.globals.previousPaths.length > 0) {\n                        pathFrom = this.barCtx.getPreviousPath(realIndex, j, false);\n                    }\n\n                    var y1 = barYPosition;\n                    var y2 = barYPosition + barHeight;\n                    var sl = graphics.line(x1, y2 - strokeWidth);\n                    pathTo = pathTo + graphics.line(newPath.x2, y1) + newPath.pathWithRadius + graphics.line(newPath.x2, y2 - strokeWidth) + sl + sl + 'z';\n                    pathFrom = pathFrom + graphics.line(x1, y1) + sl + sl + sl + sl + sl + graphics.line(x1, y1);\n\n                    if (w.config.chart.stacked) {\n                        this.barCtx.xArrj.push(newPath.x2);\n                        this.barCtx.xArrjF.push(Math.abs(x1 - newPath.x2));\n                        this.barCtx.xArrjVal.push(this.barCtx.series[i][j]);\n                    }\n\n                    return {\n                        pathTo: pathTo,\n                        pathFrom: pathFrom\n                    };\n                }\n                /** getRoundedBars draws border radius for bars/columns\n                 * @memberof Bar\n                 * @param {object} w - chart context\n                 * @param {object} opts - consists several properties like barHeight/barWidth\n                 * @param {array} series - global primary series\n                 * @param {int} i - current iterating series's index\n                 * @param {int} j - series's j of i\n                 * @return {object} pathWithRadius - ending shape path string\n                 *         newY/newX - which is calculated from existing x/y based on rounded border\n                 **/\n\n        }, {\n            key: \"getRoundedBars\",\n            value: function getRoundedBars(w, opts, series, i, j) {\n                var graphics = new Graphics(this.barCtx.ctx);\n                var radius = w.config.plotOptions.bar.borderRadius;\n\n                if (w.config.chart.stacked && series.length > 1 && i !== this.barCtx.radiusOnSeriesNumber) {\n                    radius = 0;\n                }\n\n                if (this.barCtx.isHorizontal) {\n                    var pathWithRadius = '';\n                    var x2 = opts.x2;\n\n                    if (Math.abs(opts.x1 - opts.x2) < radius) {\n                        radius = Math.abs(opts.x1 - opts.x2);\n                    }\n\n                    if (typeof series[i][j] !== 'undefined' || series[i][j] !== null) {\n                        var inverse = this.barCtx.isReversed ? series[i][j] > 0 : series[i][j] < 0;\n                        if (inverse) radius = radius * -1;\n                        x2 = x2 - radius;\n                        pathWithRadius = graphics.quadraticCurve(x2 + radius, opts.barYPosition, x2 + radius, opts.barYPosition + (!inverse ? radius : radius * -1)) + graphics.line(x2 + radius, opts.barYPosition + opts.barHeight - opts.strokeWidth - (!inverse ? radius : radius * -1)) + graphics.quadraticCurve(x2 + radius, opts.barYPosition + opts.barHeight - opts.strokeWidth, x2, opts.barYPosition + opts.barHeight - opts.strokeWidth);\n                    }\n\n                    return {\n                        pathWithRadius: pathWithRadius,\n                        x2: x2\n                    };\n                } else {\n                    var _pathWithRadius = '';\n                    var y2 = opts.y2;\n\n                    if (Math.abs(opts.y1 - opts.y2) < radius) {\n                        radius = Math.abs(opts.y1 - opts.y2);\n                    }\n\n                    if (typeof series[i][j] !== 'undefined' || series[i][j] !== null) {\n                        var _inverse = series[i][j] < 0;\n\n                        if (_inverse) radius = radius * -1;\n                        y2 = y2 + radius;\n                        _pathWithRadius = graphics.quadraticCurve(opts.barXPosition, y2 - radius, opts.barXPosition + (!_inverse ? radius : radius * -1), y2 - radius) + graphics.line(opts.barXPosition + opts.barWidth - opts.strokeWidth - (!_inverse ? radius : radius * -1), y2 - radius) + graphics.quadraticCurve(opts.barXPosition + opts.barWidth - opts.strokeWidth, y2 - radius, opts.barXPosition + opts.barWidth - opts.strokeWidth, y2);\n                    }\n\n                    return {\n                        pathWithRadius: _pathWithRadius,\n                        y2: y2\n                    };\n                }\n            }\n        }, {\n            key: \"checkZeroSeries\",\n            value: function checkZeroSeries(_ref4) {\n                var series = _ref4.series;\n                var w = this.w;\n\n                for (var zs = 0; zs < series.length; zs++) {\n                    var total = 0;\n\n                    for (var zsj = 0; zsj < series[w.globals.maxValsInArrayIndex].length; zsj++) {\n                        total += series[zs][zsj];\n                    }\n\n                    if (total === 0) {\n                        this.barCtx.zeroSerieses.push(zs);\n                    }\n                } // After getting all zeroserieses, we need to ensure whether radiusOnSeriesNumber is not in that zeroseries array\n\n\n                for (var s = series.length - 1; s >= 0; s--) {\n                    if (this.barCtx.zeroSerieses.indexOf(s) > -1 && s === this.radiusOnSeriesNumber) {\n                        this.barCtx.radiusOnSeriesNumber -= 1;\n                    }\n                }\n\n                for (var _s = series.length - 1; _s >= 0; _s--) {\n                    if (w.globals.collapsedSeriesIndices.indexOf(this.barCtx.radiusOnSeriesNumber) > -1) {\n                        this.barCtx.radiusOnSeriesNumber -= 1;\n                    }\n                }\n            }\n        }, {\n            key: \"getXForValue\",\n            value: function getXForValue(value, zeroW) {\n                var zeroPositionForNull = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n                var xForVal = zeroPositionForNull ? zeroW : null;\n\n                if (typeof value !== 'undefined' && value !== null) {\n                    xForVal = zeroW + value / this.barCtx.invertedYRatio - (this.barCtx.isReversed ? value / this.barCtx.invertedYRatio : 0) * 2;\n                }\n\n                return xForVal;\n            }\n        }, {\n            key: \"getYForValue\",\n            value: function getYForValue(value, zeroH) {\n                var zeroPositionForNull = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n                var yForVal = zeroPositionForNull ? zeroH : null;\n\n                if (typeof value !== 'undefined' && value !== null) {\n                    yForVal = zeroH - value / this.barCtx.yRatio[this.barCtx.yaxisIndex] + (this.barCtx.isReversed ? value / this.barCtx.yRatio[this.barCtx.yaxisIndex] : 0) * 2;\n                }\n\n                return yForVal;\n            }\n        }, {\n            key: \"getGoalValues\",\n            value: function getGoalValues(type, zeroW, zeroH, i, j) {\n                var _this = this;\n\n                var w = this.w;\n                var goals = [];\n\n                if (w.globals.seriesGoals[i] && w.globals.seriesGoals[i][j] && Array.isArray(w.globals.seriesGoals[i][j])) {\n                    w.globals.seriesGoals[i][j].forEach(function(goal) {\n                        var _goals$push;\n\n                        goals.push((_goals$push = {}, _defineProperty(_goals$push, type, type === 'x' ? _this.getXForValue(goal.value, zeroW, false) : _this.getYForValue(goal.value, zeroH, false)), _defineProperty(_goals$push, \"attrs\", goal), _goals$push));\n                    });\n                }\n\n                return goals;\n            }\n        }, {\n            key: \"drawGoalLine\",\n            value: function drawGoalLine(_ref5) {\n                var barXPosition = _ref5.barXPosition,\n                    barYPosition = _ref5.barYPosition,\n                    goalX = _ref5.goalX,\n                    goalY = _ref5.goalY,\n                    barWidth = _ref5.barWidth,\n                    barHeight = _ref5.barHeight;\n                var graphics = new Graphics(this.barCtx.ctx);\n                var lineGroup = graphics.group({\n                    className: 'apexcharts-bar-goals-groups'\n                });\n                var line = null;\n\n                if (this.barCtx.isHorizontal) {\n                    if (Array.isArray(goalX)) {\n                        goalX.forEach(function(goal) {\n                            line = graphics.drawLine(goal.x, barYPosition, goal.x, barYPosition + barHeight, goal.attrs.strokeColor ? goal.attrs.strokeColor : undefined, 0, goal.attrs.strokeWidth ? goal.attrs.strokeWidth : 2);\n                            lineGroup.add(line);\n                        });\n                    }\n                } else {\n                    if (Array.isArray(goalY)) {\n                        goalY.forEach(function(goal) {\n                            line = graphics.drawLine(barXPosition, goal.y, barXPosition + barWidth, goal.y, goal.attrs.strokeColor ? goal.attrs.strokeColor : undefined, 0, goal.attrs.strokeWidth ? goal.attrs.strokeWidth : 2);\n                            lineGroup.add(line);\n                        });\n                    }\n                }\n\n                return lineGroup;\n            }\n        }]);\n\n        return Helpers;\n    }();\n\n    /**\n     * ApexCharts Bar Class responsible for drawing both Columns and Bars.\n     *\n     * @module Bar\n     **/\n\n    var Bar = /*#__PURE__*/ function() {\n        function Bar(ctx, xyRatios) {\n            _classCallCheck(this, Bar);\n\n            this.ctx = ctx;\n            this.w = ctx.w;\n            var w = this.w;\n            this.barOptions = w.config.plotOptions.bar;\n            this.isHorizontal = this.barOptions.horizontal;\n            this.strokeWidth = w.config.stroke.width;\n            this.isNullValue = false;\n            this.isTimelineBar = w.config.xaxis.type === 'datetime' && w.globals.seriesRangeBarTimeline.length;\n            this.xyRatios = xyRatios;\n\n            if (this.xyRatios !== null) {\n                this.xRatio = xyRatios.xRatio;\n                this.initialXRatio = xyRatios.initialXRatio;\n                this.yRatio = xyRatios.yRatio;\n                this.invertedXRatio = xyRatios.invertedXRatio;\n                this.invertedYRatio = xyRatios.invertedYRatio;\n                this.baseLineY = xyRatios.baseLineY;\n                this.baseLineInvertedY = xyRatios.baseLineInvertedY;\n            }\n\n            this.yaxisIndex = 0;\n            this.seriesLen = 0;\n            this.barHelpers = new Helpers$1(this);\n        }\n        /** primary draw method which is called on bar object\n         * @memberof Bar\n         * @param {array} series - user supplied series values\n         * @param {int} seriesIndex - the index by which series will be drawn on the svg\n         * @return {node} element which is supplied to parent chart draw method for appending\n         **/\n\n\n        _createClass(Bar, [{\n            key: \"draw\",\n            value: function draw(series, seriesIndex) {\n                var w = this.w;\n                var graphics = new Graphics(this.ctx);\n                var coreUtils = new CoreUtils(this.ctx, w);\n                series = coreUtils.getLogSeries(series);\n                this.series = series;\n                this.yRatio = coreUtils.getLogYRatios(this.yRatio);\n                this.barHelpers.initVariables(series);\n                var ret = graphics.group({\n                    class: 'apexcharts-bar-series apexcharts-plot-series'\n                });\n\n                if (w.config.dataLabels.enabled) {\n                    if (this.totalItems > this.barOptions.dataLabels.maxItems) {\n                        console.warn('WARNING: DataLabels are enabled but there are too many to display. This may cause performance issue when rendering.');\n                    }\n                }\n\n                for (var i = 0, bc = 0; i < series.length; i++, bc++) {\n                    var x = void 0,\n                        y = void 0,\n                        xDivision = void 0,\n                        // xDivision is the GRIDWIDTH divided by number of datapoints (columns)\n                        yDivision = void 0,\n                        // yDivision is the GRIDHEIGHT divided by number of datapoints (bars)\n                        zeroH = void 0,\n                        // zeroH is the baseline where 0 meets y axis\n                        zeroW = void 0; // zeroW is the baseline where 0 meets x axis\n\n                    var yArrj = []; // hold y values of current iterating series\n\n                    var xArrj = []; // hold x values of current iterating series\n\n                    var realIndex = w.globals.comboCharts ? seriesIndex[i] : i; // el to which series will be drawn\n\n                    var elSeries = graphics.group({\n                        class: \"apexcharts-series\",\n                        rel: i + 1,\n                        seriesName: Utils.escapeString(w.globals.seriesNames[realIndex]),\n                        'data:realIndex': realIndex\n                    });\n                    this.ctx.series.addCollapsedClassToSeries(elSeries, realIndex);\n\n                    if (series[i].length > 0) {\n                        this.visibleI = this.visibleI + 1;\n                    }\n\n                    var barHeight = 0;\n                    var barWidth = 0;\n\n                    if (this.yRatio.length > 1) {\n                        this.yaxisIndex = realIndex;\n                    }\n\n                    this.isReversed = w.config.yaxis[this.yaxisIndex] && w.config.yaxis[this.yaxisIndex].reversed;\n                    var initPositions = this.barHelpers.initialPositions();\n                    y = initPositions.y;\n                    barHeight = initPositions.barHeight;\n                    yDivision = initPositions.yDivision;\n                    zeroW = initPositions.zeroW;\n                    x = initPositions.x;\n                    barWidth = initPositions.barWidth;\n                    xDivision = initPositions.xDivision;\n                    zeroH = initPositions.zeroH;\n\n                    if (!this.horizontal) {\n                        xArrj.push(x + barWidth / 2);\n                    } // eldatalabels\n\n\n                    var elDataLabelsWrap = graphics.group({\n                        class: 'apexcharts-datalabels',\n                        'data:realIndex': realIndex\n                    });\n                    var elGoalsMarkers = graphics.group({\n                        class: 'apexcharts-bar-goals-markers',\n                        style: \"pointer-events: none\"\n                    });\n\n                    for (var j = 0; j < w.globals.dataPoints; j++) {\n                        var strokeWidth = this.barHelpers.getStrokeWidth(i, j, realIndex);\n                        var paths = null;\n                        var pathsParams = {\n                            indexes: {\n                                i: i,\n                                j: j,\n                                realIndex: realIndex,\n                                bc: bc\n                            },\n                            x: x,\n                            y: y,\n                            strokeWidth: strokeWidth,\n                            elSeries: elSeries\n                        };\n\n                        if (this.isHorizontal) {\n                            paths = this.drawBarPaths(_objectSpread2(_objectSpread2({}, pathsParams), {}, {\n                                barHeight: barHeight,\n                                zeroW: zeroW,\n                                yDivision: yDivision\n                            }));\n                            barWidth = this.series[i][j] / this.invertedYRatio;\n                        } else {\n                            paths = this.drawColumnPaths(_objectSpread2(_objectSpread2({}, pathsParams), {}, {\n                                xDivision: xDivision,\n                                barWidth: barWidth,\n                                zeroH: zeroH\n                            }));\n                            barHeight = this.series[i][j] / this.yRatio[this.yaxisIndex];\n                        }\n\n                        var barGoalLine = this.barHelpers.drawGoalLine({\n                            barXPosition: paths.barXPosition,\n                            barYPosition: paths.barYPosition,\n                            goalX: paths.goalX,\n                            goalY: paths.goalY,\n                            barHeight: barHeight,\n                            barWidth: barWidth\n                        });\n\n                        if (barGoalLine) {\n                            elGoalsMarkers.add(barGoalLine);\n                        }\n\n                        y = paths.y;\n                        x = paths.x; // push current X\n\n                        if (j > 0) {\n                            xArrj.push(x + barWidth / 2);\n                        }\n\n                        yArrj.push(y);\n                        var pathFill = this.barHelpers.getPathFillColor(series, i, j, realIndex);\n                        this.renderSeries({\n                            realIndex: realIndex,\n                            pathFill: pathFill,\n                            j: j,\n                            i: i,\n                            pathFrom: paths.pathFrom,\n                            pathTo: paths.pathTo,\n                            strokeWidth: strokeWidth,\n                            elSeries: elSeries,\n                            x: x,\n                            y: y,\n                            series: series,\n                            barHeight: barHeight,\n                            barWidth: barWidth,\n                            elDataLabelsWrap: elDataLabelsWrap,\n                            elGoalsMarkers: elGoalsMarkers,\n                            visibleSeries: this.visibleI,\n                            type: 'bar'\n                        });\n                    } // push all x val arrays into main xArr\n\n\n                    w.globals.seriesXvalues[realIndex] = xArrj;\n                    w.globals.seriesYvalues[realIndex] = yArrj;\n                    ret.add(elSeries);\n                }\n\n                return ret;\n            }\n        }, {\n            key: \"renderSeries\",\n            value: function renderSeries(_ref) {\n                var realIndex = _ref.realIndex,\n                    pathFill = _ref.pathFill,\n                    lineFill = _ref.lineFill,\n                    j = _ref.j,\n                    i = _ref.i,\n                    pathFrom = _ref.pathFrom,\n                    pathTo = _ref.pathTo,\n                    strokeWidth = _ref.strokeWidth,\n                    elSeries = _ref.elSeries,\n                    x = _ref.x,\n                    y = _ref.y,\n                    y1 = _ref.y1,\n                    y2 = _ref.y2,\n                    series = _ref.series,\n                    barHeight = _ref.barHeight,\n                    barWidth = _ref.barWidth,\n                    barYPosition = _ref.barYPosition,\n                    elDataLabelsWrap = _ref.elDataLabelsWrap,\n                    elGoalsMarkers = _ref.elGoalsMarkers,\n                    visibleSeries = _ref.visibleSeries,\n                    type = _ref.type;\n                var w = this.w;\n                var graphics = new Graphics(this.ctx);\n\n                if (!lineFill) {\n                    /* fix apexcharts#341 */\n                    lineFill = this.barOptions.distributed ? w.globals.stroke.colors[j] : w.globals.stroke.colors[realIndex];\n                }\n\n                if (w.config.series[i].data[j] && w.config.series[i].data[j].strokeColor) {\n                    lineFill = w.config.series[i].data[j].strokeColor;\n                }\n\n                if (this.isNullValue) {\n                    pathFill = 'none';\n                }\n\n                var delay = j / w.config.chart.animations.animateGradually.delay * (w.config.chart.animations.speed / w.globals.dataPoints) / 2.4;\n                var renderedPath = graphics.renderPaths({\n                    i: i,\n                    j: j,\n                    realIndex: realIndex,\n                    pathFrom: pathFrom,\n                    pathTo: pathTo,\n                    stroke: lineFill,\n                    strokeWidth: strokeWidth,\n                    strokeLineCap: w.config.stroke.lineCap,\n                    fill: pathFill,\n                    animationDelay: delay,\n                    initialSpeed: w.config.chart.animations.speed,\n                    dataChangeSpeed: w.config.chart.animations.dynamicAnimation.speed,\n                    className: \"apexcharts-\".concat(type, \"-area\")\n                });\n                renderedPath.attr('clip-path', \"url(#gridRectMask\".concat(w.globals.cuid, \")\"));\n                var forecast = w.config.forecastDataPoints;\n\n                if (forecast.count > 0) {\n                    if (j >= w.globals.dataPoints - forecast.count) {\n                        renderedPath.node.setAttribute('stroke-dasharray', forecast.dashArray);\n                        renderedPath.node.setAttribute('stroke-width', forecast.strokeWidth);\n                        renderedPath.node.setAttribute('fill-opacity', forecast.fillOpacity);\n                    }\n                }\n\n                if (typeof y1 !== 'undefined' && typeof y2 !== 'undefined') {\n                    renderedPath.attr('data-range-y1', y1);\n                    renderedPath.attr('data-range-y2', y2);\n                }\n\n                var filters = new Filters(this.ctx);\n                filters.setSelectionFilter(renderedPath, realIndex, j);\n                elSeries.add(renderedPath);\n                var barDataLabels = new BarDataLabels(this);\n                var dataLabels = barDataLabels.handleBarDataLabels({\n                    x: x,\n                    y: y,\n                    y1: y1,\n                    y2: y2,\n                    i: i,\n                    j: j,\n                    series: series,\n                    realIndex: realIndex,\n                    barHeight: barHeight,\n                    barWidth: barWidth,\n                    barYPosition: barYPosition,\n                    renderedPath: renderedPath,\n                    visibleSeries: visibleSeries\n                });\n\n                if (dataLabels !== null) {\n                    elDataLabelsWrap.add(dataLabels);\n                }\n\n                elSeries.add(elDataLabelsWrap);\n\n                if (elGoalsMarkers) {\n                    elSeries.add(elGoalsMarkers);\n                }\n\n                return elSeries;\n            }\n        }, {\n            key: \"drawBarPaths\",\n            value: function drawBarPaths(_ref2) {\n                var indexes = _ref2.indexes,\n                    barHeight = _ref2.barHeight,\n                    strokeWidth = _ref2.strokeWidth,\n                    zeroW = _ref2.zeroW,\n                    x = _ref2.x,\n                    y = _ref2.y,\n                    yDivision = _ref2.yDivision,\n                    elSeries = _ref2.elSeries;\n                var w = this.w;\n                var i = indexes.i;\n                var j = indexes.j;\n\n                if (w.globals.isXNumeric) {\n                    y = (w.globals.seriesX[i][j] - w.globals.minX) / this.invertedXRatio - barHeight;\n                }\n\n                var barYPosition = y + barHeight * this.visibleI;\n                x = this.barHelpers.getXForValue(this.series[i][j], zeroW);\n                var paths = this.barHelpers.getBarpaths({\n                    barYPosition: barYPosition,\n                    barHeight: barHeight,\n                    x1: zeroW,\n                    x2: x,\n                    strokeWidth: strokeWidth,\n                    series: this.series,\n                    realIndex: indexes.realIndex,\n                    i: i,\n                    j: j,\n                    w: w\n                });\n\n                if (!w.globals.isXNumeric) {\n                    y = y + yDivision;\n                }\n\n                this.barHelpers.barBackground({\n                    j: j,\n                    i: i,\n                    y1: barYPosition - barHeight * this.visibleI,\n                    y2: barHeight * this.seriesLen,\n                    elSeries: elSeries\n                });\n                return {\n                    pathTo: paths.pathTo,\n                    pathFrom: paths.pathFrom,\n                    x: x,\n                    y: y,\n                    goalX: this.barHelpers.getGoalValues('x', zeroW, null, i, j),\n                    barYPosition: barYPosition\n                };\n            }\n        }, {\n            key: \"drawColumnPaths\",\n            value: function drawColumnPaths(_ref3) {\n                    var indexes = _ref3.indexes,\n                        x = _ref3.x,\n                        y = _ref3.y,\n                        xDivision = _ref3.xDivision,\n                        barWidth = _ref3.barWidth,\n                        zeroH = _ref3.zeroH,\n                        strokeWidth = _ref3.strokeWidth,\n                        elSeries = _ref3.elSeries;\n                    var w = this.w;\n                    var realIndex = indexes.realIndex;\n                    var i = indexes.i;\n                    var j = indexes.j;\n                    var bc = indexes.bc;\n\n                    if (w.globals.isXNumeric) {\n                        var sxI = realIndex;\n\n                        if (!w.globals.seriesX[realIndex].length) {\n                            sxI = w.globals.maxValsInArrayIndex;\n                        }\n\n                        x = (w.globals.seriesX[sxI][j] - w.globals.minX) / this.xRatio - barWidth * this.seriesLen / 2;\n                    }\n\n                    var barXPosition = x + barWidth * this.visibleI;\n                    y = this.barHelpers.getYForValue(this.series[i][j], zeroH);\n                    var paths = this.barHelpers.getColumnPaths({\n                        barXPosition: barXPosition,\n                        barWidth: barWidth,\n                        y1: zeroH,\n                        y2: y,\n                        strokeWidth: strokeWidth,\n                        series: this.series,\n                        realIndex: indexes.realIndex,\n                        i: i,\n                        j: j,\n                        w: w\n                    });\n\n                    if (!w.globals.isXNumeric) {\n                        x = x + xDivision;\n                    }\n\n                    this.barHelpers.barBackground({\n                        bc: bc,\n                        j: j,\n                        i: i,\n                        x1: barXPosition - strokeWidth / 2 - barWidth * this.visibleI,\n                        x2: barWidth * this.seriesLen + strokeWidth / 2,\n                        elSeries: elSeries\n                    });\n                    return {\n                        pathTo: paths.pathTo,\n                        pathFrom: paths.pathFrom,\n                        x: x,\n                        y: y,\n                        goalY: this.barHelpers.getGoalValues('y', null, zeroH, i, j),\n                        barXPosition: barXPosition\n                    };\n                }\n                /** getPreviousPath is a common function for bars/columns which is used to get previous paths when data changes.\n                 * @memberof Bar\n                 * @param {int} realIndex - current iterating i\n                 * @param {int} j - current iterating series's j index\n                 * @return {string} pathFrom is the string which will be appended in animations\n                 **/\n\n        }, {\n            key: \"getPreviousPath\",\n            value: function getPreviousPath(realIndex, j) {\n                var w = this.w;\n                var pathFrom;\n\n                for (var pp = 0; pp < w.globals.previousPaths.length; pp++) {\n                    var gpp = w.globals.previousPaths[pp];\n\n                    if (gpp.paths && gpp.paths.length > 0 && parseInt(gpp.realIndex, 10) === parseInt(realIndex, 10)) {\n                        if (typeof w.globals.previousPaths[pp].paths[j] !== 'undefined') {\n                            pathFrom = w.globals.previousPaths[pp].paths[j].d;\n                        }\n                    }\n                }\n\n                return pathFrom;\n            }\n        }]);\n\n        return Bar;\n    }();\n\n    /**\n     * DateTime Class to manipulate datetime values.\n     *\n     * @module DateTime\n     **/\n\n    var DateTime = /*#__PURE__*/ function() {\n        function DateTime(ctx) {\n            _classCallCheck(this, DateTime);\n\n            this.ctx = ctx;\n            this.w = ctx.w;\n            this.months31 = [1, 3, 5, 7, 8, 10, 12];\n            this.months30 = [2, 4, 6, 9, 11];\n            this.daysCntOfYear = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\n        }\n\n        _createClass(DateTime, [{\n            key: \"isValidDate\",\n            value: function isValidDate(date) {\n                return !isNaN(this.parseDate(date));\n            }\n        }, {\n            key: \"getTimeStamp\",\n            value: function getTimeStamp(dateStr) {\n                if (!Date.parse(dateStr)) {\n                    return dateStr;\n                }\n\n                var utc = this.w.config.xaxis.labels.datetimeUTC;\n                return !utc ? new Date(dateStr).getTime() : new Date(new Date(dateStr).toISOString().substr(0, 25)).getTime();\n            }\n        }, {\n            key: \"getDate\",\n            value: function getDate(timestamp) {\n                var utc = this.w.config.xaxis.labels.datetimeUTC;\n                return utc ? new Date(new Date(timestamp).toUTCString()) : new Date(timestamp);\n            }\n        }, {\n            key: \"parseDate\",\n            value: function parseDate(dateStr) {\n                    var parsed = Date.parse(dateStr);\n\n                    if (!isNaN(parsed)) {\n                        return this.getTimeStamp(dateStr);\n                    }\n\n                    var output = Date.parse(dateStr.replace(/-/g, '/').replace(/[a-z]+/gi, ' '));\n                    output = this.getTimeStamp(output);\n                    return output;\n                } // This fixes the difference of x-axis labels between chrome/safari\n                // Fixes #1726, #1544, #1485, #1255\n\n        }, {\n            key: \"parseDateWithTimezone\",\n            value: function parseDateWithTimezone(dateStr) {\n                    return Date.parse(dateStr.replace(/-/g, '/').replace(/[a-z]+/gi, ' '));\n                } // http://stackoverflow.com/questions/14638018/current-time-formatting-with-javascript#answer-14638191\n\n        }, {\n            key: \"formatDate\",\n            value: function formatDate(date, format) {\n                var locale = this.w.globals.locale;\n                var utc = this.w.config.xaxis.labels.datetimeUTC;\n                var MMMM = ['\\x00'].concat(_toConsumableArray(locale.months));\n                var MMM = ['\\x01'].concat(_toConsumableArray(locale.shortMonths));\n                var dddd = ['\\x02'].concat(_toConsumableArray(locale.days));\n                var ddd = ['\\x03'].concat(_toConsumableArray(locale.shortDays));\n\n                function ii(i, len) {\n                    var s = i + '';\n                    len = len || 2;\n\n                    while (s.length < len) {\n                        s = '0' + s;\n                    }\n\n                    return s;\n                }\n\n                var y = utc ? date.getUTCFullYear() : date.getFullYear();\n                format = format.replace(/(^|[^\\\\])yyyy+/g, '$1' + y);\n                format = format.replace(/(^|[^\\\\])yy/g, '$1' + y.toString().substr(2, 2));\n                format = format.replace(/(^|[^\\\\])y/g, '$1' + y);\n                var M = (utc ? date.getUTCMonth() : date.getMonth()) + 1;\n                format = format.replace(/(^|[^\\\\])MMMM+/g, '$1' + MMMM[0]);\n                format = format.replace(/(^|[^\\\\])MMM/g, '$1' + MMM[0]);\n                format = format.replace(/(^|[^\\\\])MM/g, '$1' + ii(M));\n                format = format.replace(/(^|[^\\\\])M/g, '$1' + M);\n                var d = utc ? date.getUTCDate() : date.getDate();\n                format = format.replace(/(^|[^\\\\])dddd+/g, '$1' + dddd[0]);\n                format = format.replace(/(^|[^\\\\])ddd/g, '$1' + ddd[0]);\n                format = format.replace(/(^|[^\\\\])dd/g, '$1' + ii(d));\n                format = format.replace(/(^|[^\\\\])d/g, '$1' + d);\n                var H = utc ? date.getUTCHours() : date.getHours();\n                format = format.replace(/(^|[^\\\\])HH+/g, '$1' + ii(H));\n                format = format.replace(/(^|[^\\\\])H/g, '$1' + H);\n                var h = H > 12 ? H - 12 : H === 0 ? 12 : H;\n                format = format.replace(/(^|[^\\\\])hh+/g, '$1' + ii(h));\n                format = format.replace(/(^|[^\\\\])h/g, '$1' + h);\n                var m = utc ? date.getUTCMinutes() : date.getMinutes();\n                format = format.replace(/(^|[^\\\\])mm+/g, '$1' + ii(m));\n                format = format.replace(/(^|[^\\\\])m/g, '$1' + m);\n                var s = utc ? date.getUTCSeconds() : date.getSeconds();\n                format = format.replace(/(^|[^\\\\])ss+/g, '$1' + ii(s));\n                format = format.replace(/(^|[^\\\\])s/g, '$1' + s);\n                var f = utc ? date.getUTCMilliseconds() : date.getMilliseconds();\n                format = format.replace(/(^|[^\\\\])fff+/g, '$1' + ii(f, 3));\n                f = Math.round(f / 10);\n                format = format.replace(/(^|[^\\\\])ff/g, '$1' + ii(f));\n                f = Math.round(f / 10);\n                format = format.replace(/(^|[^\\\\])f/g, '$1' + f);\n                var T = H < 12 ? 'AM' : 'PM';\n                format = format.replace(/(^|[^\\\\])TT+/g, '$1' + T);\n                format = format.replace(/(^|[^\\\\])T/g, '$1' + T.charAt(0));\n                var t = T.toLowerCase();\n                format = format.replace(/(^|[^\\\\])tt+/g, '$1' + t);\n                format = format.replace(/(^|[^\\\\])t/g, '$1' + t.charAt(0));\n                var tz = -date.getTimezoneOffset();\n                var K = utc || !tz ? 'Z' : tz > 0 ? '+' : '-';\n\n                if (!utc) {\n                    tz = Math.abs(tz);\n                    var tzHrs = Math.floor(tz / 60);\n                    var tzMin = tz % 60;\n                    K += ii(tzHrs) + ':' + ii(tzMin);\n                }\n\n                format = format.replace(/(^|[^\\\\])K/g, '$1' + K);\n                var day = (utc ? date.getUTCDay() : date.getDay()) + 1;\n                format = format.replace(new RegExp(dddd[0], 'g'), dddd[day]);\n                format = format.replace(new RegExp(ddd[0], 'g'), ddd[day]);\n                format = format.replace(new RegExp(MMMM[0], 'g'), MMMM[M]);\n                format = format.replace(new RegExp(MMM[0], 'g'), MMM[M]);\n                format = format.replace(/\\\\(.)/g, '$1');\n                return format;\n            }\n        }, {\n            key: \"getTimeUnitsfromTimestamp\",\n            value: function getTimeUnitsfromTimestamp(minX, maxX, utc) {\n                var w = this.w;\n\n                if (w.config.xaxis.min !== undefined) {\n                    minX = w.config.xaxis.min;\n                }\n\n                if (w.config.xaxis.max !== undefined) {\n                    maxX = w.config.xaxis.max;\n                }\n\n                var tsMin = this.getDate(minX);\n                var tsMax = this.getDate(maxX);\n                var minD = this.formatDate(tsMin, 'yyyy MM dd HH mm ss fff').split(' ');\n                var maxD = this.formatDate(tsMax, 'yyyy MM dd HH mm ss fff').split(' ');\n                return {\n                    minMillisecond: parseInt(minD[6], 10),\n                    maxMillisecond: parseInt(maxD[6], 10),\n                    minSecond: parseInt(minD[5], 10),\n                    maxSecond: parseInt(maxD[5], 10),\n                    minMinute: parseInt(minD[4], 10),\n                    maxMinute: parseInt(maxD[4], 10),\n                    minHour: parseInt(minD[3], 10),\n                    maxHour: parseInt(maxD[3], 10),\n                    minDate: parseInt(minD[2], 10),\n                    maxDate: parseInt(maxD[2], 10),\n                    minMonth: parseInt(minD[1], 10) - 1,\n                    maxMonth: parseInt(maxD[1], 10) - 1,\n                    minYear: parseInt(minD[0], 10),\n                    maxYear: parseInt(maxD[0], 10)\n                };\n            }\n        }, {\n            key: \"isLeapYear\",\n            value: function isLeapYear(year) {\n                return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n            }\n        }, {\n            key: \"calculcateLastDaysOfMonth\",\n            value: function calculcateLastDaysOfMonth(month, year, subtract) {\n                var days = this.determineDaysOfMonths(month, year); // whatever days we get, subtract the number of days asked\n\n                return days - subtract;\n            }\n        }, {\n            key: \"determineDaysOfYear\",\n            value: function determineDaysOfYear(year) {\n                var days = 365;\n\n                if (this.isLeapYear(year)) {\n                    days = 366;\n                }\n\n                return days;\n            }\n        }, {\n            key: \"determineRemainingDaysOfYear\",\n            value: function determineRemainingDaysOfYear(year, month, date) {\n                var dayOfYear = this.daysCntOfYear[month] + date;\n                if (month > 1 && this.isLeapYear()) dayOfYear++;\n                return dayOfYear;\n            }\n        }, {\n            key: \"determineDaysOfMonths\",\n            value: function determineDaysOfMonths(month, year) {\n                var days = 30;\n                month = Utils.monthMod(month);\n\n                switch (true) {\n                    case this.months30.indexOf(month) > -1:\n                        if (month === 2) {\n                            if (this.isLeapYear(year)) {\n                                days = 29;\n                            } else {\n                                days = 28;\n                            }\n                        }\n\n                        break;\n\n                    case this.months31.indexOf(month) > -1:\n                        days = 31;\n                        break;\n\n                    default:\n                        days = 31;\n                        break;\n                }\n\n                return days;\n            }\n        }]);\n\n        return DateTime;\n    }();\n\n    /**\n     * ApexCharts RangeBar Class responsible for drawing Range/Timeline Bars.\n     *\n     * @module RangeBar\n     **/\n\n    var RangeBar = /*#__PURE__*/ function(_Bar) {\n        _inherits(RangeBar, _Bar);\n\n        var _super = _createSuper(RangeBar);\n\n        function RangeBar() {\n            _classCallCheck(this, RangeBar);\n\n            return _super.apply(this, arguments);\n        }\n\n        _createClass(RangeBar, [{\n            key: \"draw\",\n            value: function draw(series, seriesIndex) {\n                var w = this.w;\n                var graphics = new Graphics(this.ctx);\n                this.rangeBarOptions = this.w.config.plotOptions.rangeBar;\n                this.series = series;\n                this.seriesRangeStart = w.globals.seriesRangeStart;\n                this.seriesRangeEnd = w.globals.seriesRangeEnd;\n                this.barHelpers.initVariables(series);\n                var ret = graphics.group({\n                    class: 'apexcharts-rangebar-series apexcharts-plot-series'\n                });\n\n                for (var i = 0; i < series.length; i++) {\n                    var x = void 0,\n                        y = void 0,\n                        xDivision = void 0,\n                        // xDivision is the GRIDWIDTH divided by number of datapoints (columns)\n                        yDivision = void 0,\n                        // yDivision is the GRIDHEIGHT divided by number of datapoints (bars)\n                        zeroH = void 0,\n                        // zeroH is the baseline where 0 meets y axis\n                        zeroW = void 0; // zeroW is the baseline where 0 meets x axis\n\n                    var realIndex = w.globals.comboCharts ? seriesIndex[i] : i; // el to which series will be drawn\n\n                    var elSeries = graphics.group({\n                        class: \"apexcharts-series\",\n                        seriesName: Utils.escapeString(w.globals.seriesNames[realIndex]),\n                        rel: i + 1,\n                        'data:realIndex': realIndex\n                    });\n\n                    if (series[i].length > 0) {\n                        this.visibleI = this.visibleI + 1;\n                    }\n\n                    var barHeight = 0;\n                    var barWidth = 0;\n\n                    if (this.yRatio.length > 1) {\n                        this.yaxisIndex = realIndex;\n                    }\n\n                    var initPositions = this.barHelpers.initialPositions();\n                    y = initPositions.y;\n                    zeroW = initPositions.zeroW;\n                    x = initPositions.x;\n                    barWidth = initPositions.barWidth;\n                    xDivision = initPositions.xDivision;\n                    zeroH = initPositions.zeroH; // eldatalabels\n\n                    var elDataLabelsWrap = graphics.group({\n                        class: 'apexcharts-datalabels',\n                        'data:realIndex': realIndex\n                    });\n                    var elGoalsMarkers = graphics.group({\n                        class: 'apexcharts-rangebar-goals-markers',\n                        style: \"pointer-events: none\"\n                    });\n\n                    for (var j = 0; j < w.globals.dataPoints; j++) {\n                        var strokeWidth = this.barHelpers.getStrokeWidth(i, j, realIndex);\n                        var y1 = this.seriesRangeStart[i][j];\n                        var y2 = this.seriesRangeEnd[i][j];\n                        var paths = null;\n                        var barYPosition = null;\n                        var params = {\n                            x: x,\n                            y: y,\n                            strokeWidth: strokeWidth,\n                            elSeries: elSeries\n                        };\n                        yDivision = initPositions.yDivision;\n                        barHeight = initPositions.barHeight;\n\n                        if (this.isHorizontal) {\n                            barYPosition = y + barHeight * this.visibleI;\n                            var seriesLen = this.seriesLen;\n\n                            if (w.config.plotOptions.bar.rangeBarGroupRows) {\n                                seriesLen = 1;\n                            }\n\n                            var srty = (yDivision - barHeight * seriesLen) / 2;\n\n                            if (typeof w.config.series[i].data[j] === 'undefined') {\n                                // no data exists for further indexes, hence we need to get out the innr loop.\n                                // As we are iterating over total datapoints, there is a possiblity the series might not have data for j index\n                                break;\n                            }\n\n                            if (this.isTimelineBar && w.config.series[i].data[j].x) {\n                                var positions = this.detectOverlappingBars({\n                                    i: i,\n                                    j: j,\n                                    barYPosition: barYPosition,\n                                    srty: srty,\n                                    barHeight: barHeight,\n                                    yDivision: yDivision,\n                                    initPositions: initPositions\n                                });\n                                barHeight = positions.barHeight;\n                                barYPosition = positions.barYPosition;\n                            }\n\n                            paths = this.drawRangeBarPaths(_objectSpread2({\n                                indexes: {\n                                    i: i,\n                                    j: j,\n                                    realIndex: realIndex\n                                },\n                                barHeight: barHeight,\n                                barYPosition: barYPosition,\n                                zeroW: zeroW,\n                                yDivision: yDivision,\n                                y1: y1,\n                                y2: y2\n                            }, params));\n                            barWidth = paths.barWidth;\n                        } else {\n                            paths = this.drawRangeColumnPaths(_objectSpread2({\n                                indexes: {\n                                    i: i,\n                                    j: j,\n                                    realIndex: realIndex\n                                },\n                                zeroH: zeroH,\n                                barWidth: barWidth,\n                                xDivision: xDivision\n                            }, params));\n                            barHeight = paths.barHeight;\n                        }\n\n                        var barGoalLine = this.barHelpers.drawGoalLine({\n                            barXPosition: paths.barXPosition,\n                            barYPosition: barYPosition,\n                            goalX: paths.goalX,\n                            goalY: paths.goalY,\n                            barHeight: barHeight,\n                            barWidth: barWidth\n                        });\n\n                        if (barGoalLine) {\n                            elGoalsMarkers.add(barGoalLine);\n                        }\n\n                        y = paths.y;\n                        x = paths.x;\n                        var pathFill = this.barHelpers.getPathFillColor(series, i, j, realIndex);\n                        var lineFill = w.globals.stroke.colors[realIndex];\n                        this.renderSeries({\n                            realIndex: realIndex,\n                            pathFill: pathFill,\n                            lineFill: lineFill,\n                            j: j,\n                            i: i,\n                            x: x,\n                            y: y,\n                            y1: y1,\n                            y2: y2,\n                            pathFrom: paths.pathFrom,\n                            pathTo: paths.pathTo,\n                            strokeWidth: strokeWidth,\n                            elSeries: elSeries,\n                            series: series,\n                            barHeight: barHeight,\n                            barYPosition: barYPosition,\n                            barWidth: barWidth,\n                            elDataLabelsWrap: elDataLabelsWrap,\n                            elGoalsMarkers: elGoalsMarkers,\n                            visibleSeries: this.visibleI,\n                            type: 'rangebar'\n                        });\n                    }\n\n                    ret.add(elSeries);\n                }\n\n                return ret;\n            }\n        }, {\n            key: \"detectOverlappingBars\",\n            value: function detectOverlappingBars(_ref) {\n                var i = _ref.i,\n                    j = _ref.j,\n                    barYPosition = _ref.barYPosition,\n                    srty = _ref.srty,\n                    barHeight = _ref.barHeight,\n                    yDivision = _ref.yDivision,\n                    initPositions = _ref.initPositions;\n                var w = this.w;\n                var overlaps = [];\n                var rangeName = w.config.series[i].data[j].rangeName;\n                var labelX = w.config.series[i].data[j].x;\n                var rowIndex = w.globals.labels.indexOf(labelX);\n                var overlappedIndex = w.globals.seriesRangeBarTimeline[i].findIndex(function(tx) {\n                    return tx.x === labelX && tx.overlaps.length > 0;\n                });\n\n                if (w.config.plotOptions.bar.rangeBarGroupRows) {\n                    barYPosition = srty + yDivision * rowIndex;\n                } else {\n                    barYPosition = srty + barHeight * this.visibleI + yDivision * rowIndex;\n                }\n\n                if (overlappedIndex > -1 && !w.config.plotOptions.bar.rangeBarOverlap) {\n                    overlaps = w.globals.seriesRangeBarTimeline[i][overlappedIndex].overlaps;\n\n                    if (overlaps.indexOf(rangeName) > -1) {\n                        barHeight = initPositions.barHeight / overlaps.length;\n                        barYPosition = barHeight * this.visibleI + yDivision * (100 - parseInt(this.barOptions.barHeight, 10)) / 100 / 2 + barHeight * (this.visibleI + overlaps.indexOf(rangeName)) + yDivision * rowIndex;\n                    }\n                }\n\n                return {\n                    barYPosition: barYPosition,\n                    barHeight: barHeight\n                };\n            }\n        }, {\n            key: \"drawRangeColumnPaths\",\n            value: function drawRangeColumnPaths(_ref2) {\n                var indexes = _ref2.indexes,\n                    x = _ref2.x,\n                    strokeWidth = _ref2.strokeWidth,\n                    xDivision = _ref2.xDivision,\n                    barWidth = _ref2.barWidth,\n                    zeroH = _ref2.zeroH;\n                var w = this.w;\n                var i = indexes.i;\n                var j = indexes.j;\n                var yRatio = this.yRatio[this.yaxisIndex];\n                var realIndex = indexes.realIndex;\n                var range = this.getRangeValue(realIndex, j);\n                var y1 = Math.min(range.start, range.end);\n                var y2 = Math.max(range.start, range.end);\n\n                if (w.globals.isXNumeric) {\n                    x = (w.globals.seriesX[i][j] - w.globals.minX) / this.xRatio - barWidth / 2;\n                }\n\n                var barXPosition = x + barWidth * this.visibleI;\n\n                if (typeof this.series[i][j] === 'undefined' || this.series[i][j] === null) {\n                    y1 = zeroH;\n                } else {\n                    y1 = zeroH - y1 / yRatio;\n                    y2 = zeroH - y2 / yRatio;\n                }\n\n                var barHeight = Math.abs(y2 - y1);\n                var paths = this.barHelpers.getColumnPaths({\n                    barXPosition: barXPosition,\n                    barWidth: barWidth,\n                    y1: y1,\n                    y2: y2,\n                    strokeWidth: this.strokeWidth,\n                    series: this.seriesRangeEnd,\n                    realIndex: indexes.realIndex,\n                    i: realIndex,\n                    j: j,\n                    w: w\n                });\n\n                if (!w.globals.isXNumeric) {\n                    x = x + xDivision;\n                }\n\n                return {\n                    pathTo: paths.pathTo,\n                    pathFrom: paths.pathFrom,\n                    barHeight: barHeight,\n                    x: x,\n                    y: y2,\n                    goalY: this.barHelpers.getGoalValues('y', null, zeroH, i, j),\n                    barXPosition: barXPosition\n                };\n            }\n        }, {\n            key: \"drawRangeBarPaths\",\n            value: function drawRangeBarPaths(_ref3) {\n                var indexes = _ref3.indexes,\n                    y = _ref3.y,\n                    y1 = _ref3.y1,\n                    y2 = _ref3.y2,\n                    yDivision = _ref3.yDivision,\n                    barHeight = _ref3.barHeight,\n                    barYPosition = _ref3.barYPosition,\n                    zeroW = _ref3.zeroW;\n                var w = this.w;\n                var x1 = zeroW + y1 / this.invertedYRatio;\n                var x2 = zeroW + y2 / this.invertedYRatio;\n                var barWidth = Math.abs(x2 - x1);\n                var paths = this.barHelpers.getBarpaths({\n                    barYPosition: barYPosition,\n                    barHeight: barHeight,\n                    x1: x1,\n                    x2: x2,\n                    strokeWidth: this.strokeWidth,\n                    series: this.seriesRangeEnd,\n                    i: indexes.realIndex,\n                    realIndex: indexes.realIndex,\n                    j: indexes.j,\n                    w: w\n                });\n\n                if (!w.globals.isXNumeric) {\n                    y = y + yDivision;\n                }\n\n                return {\n                    pathTo: paths.pathTo,\n                    pathFrom: paths.pathFrom,\n                    barWidth: barWidth,\n                    x: x2,\n                    goalX: this.barHelpers.getGoalValues('x', zeroW, null, indexes.realIndex, indexes.j),\n                    y: y\n                };\n            }\n        }, {\n            key: \"getRangeValue\",\n            value: function getRangeValue(i, j) {\n                var w = this.w;\n                return {\n                    start: w.globals.seriesRangeStart[i][j],\n                    end: w.globals.seriesRangeEnd[i][j]\n                };\n            }\n        }, {\n            key: \"getTooltipValues\",\n            value: function getTooltipValues(_ref4) {\n                var ctx = _ref4.ctx,\n                    seriesIndex = _ref4.seriesIndex,\n                    dataPointIndex = _ref4.dataPointIndex,\n                    y1 = _ref4.y1,\n                    y2 = _ref4.y2,\n                    w = _ref4.w;\n                var start = w.globals.seriesRangeStart[seriesIndex][dataPointIndex];\n                var end = w.globals.seriesRangeEnd[seriesIndex][dataPointIndex];\n                var ylabel = w.globals.labels[dataPointIndex];\n                var seriesName = w.config.series[seriesIndex].name ? w.config.series[seriesIndex].name : '';\n                var yLbFormatter = w.config.tooltip.y.formatter;\n                var yLbTitleFormatter = w.config.tooltip.y.title.formatter;\n                var opts = {\n                    w: w,\n                    seriesIndex: seriesIndex,\n                    dataPointIndex: dataPointIndex,\n                    start: start,\n                    end: end\n                };\n\n                if (typeof yLbTitleFormatter === 'function') {\n                    seriesName = yLbTitleFormatter(seriesName, opts);\n                }\n\n                if (Number.isFinite(y1) && Number.isFinite(y2)) {\n                    start = y1;\n                    end = y2;\n\n                    if (w.config.series[seriesIndex].data[dataPointIndex].x) {\n                        ylabel = w.config.series[seriesIndex].data[dataPointIndex].x + ':';\n                    }\n\n                    if (typeof yLbFormatter === 'function') {\n                        ylabel = yLbFormatter(ylabel, opts);\n                    }\n                }\n\n                var startVal = '';\n                var endVal = '';\n                var color = w.globals.colors[seriesIndex];\n\n                if (w.config.tooltip.x.formatter === undefined) {\n                    if (w.config.xaxis.type === 'datetime') {\n                        var datetimeObj = new DateTime(ctx);\n                        startVal = datetimeObj.formatDate(datetimeObj.getDate(start), w.config.tooltip.x.format);\n                        endVal = datetimeObj.formatDate(datetimeObj.getDate(end), w.config.tooltip.x.format);\n                    } else {\n                        startVal = start;\n                        endVal = end;\n                    }\n                } else {\n                    startVal = w.config.tooltip.x.formatter(start);\n                    endVal = w.config.tooltip.x.formatter(end);\n                }\n\n                return {\n                    start: start,\n                    end: end,\n                    startVal: startVal,\n                    endVal: endVal,\n                    ylabel: ylabel,\n                    color: color,\n                    seriesName: seriesName\n                };\n            }\n        }, {\n            key: \"buildCustomTooltipHTML\",\n            value: function buildCustomTooltipHTML(_ref5) {\n                var color = _ref5.color,\n                    seriesName = _ref5.seriesName,\n                    ylabel = _ref5.ylabel,\n                    start = _ref5.start,\n                    end = _ref5.end;\n                return '<div class=\"apexcharts-tooltip-rangebar\">' + '<div> <span class=\"series-name\" style=\"color: ' + color + '\">' + (seriesName ? seriesName : '') + '</span></div>' + '<div> <span class=\"category\">' + ylabel + ' </span> <span class=\"value start-value\">' + start + '</span> <span class=\"separator\">-</span> <span class=\"value end-value\">' + end + '</span></div>' + '</div>';\n            }\n        }]);\n\n        return RangeBar;\n    }(Bar);\n\n    /**\n     * ApexCharts Default Class for setting default options for all chart types.\n     *\n     * @module Defaults\n     **/\n\n    var Defaults = /*#__PURE__*/ function() {\n        function Defaults(opts) {\n            _classCallCheck(this, Defaults);\n\n            this.opts = opts;\n        }\n\n        _createClass(Defaults, [{\n            key: \"line\",\n            value: function line() {\n                return {\n                    chart: {\n                        animations: {\n                            easing: 'swing'\n                        }\n                    },\n                    dataLabels: {\n                        enabled: false\n                    },\n                    stroke: {\n                        width: 5,\n                        curve: 'straight'\n                    },\n                    markers: {\n                        size: 0,\n                        hover: {\n                            sizeOffset: 6\n                        }\n                    },\n                    xaxis: {\n                        crosshairs: {\n                            width: 1\n                        }\n                    }\n                };\n            }\n        }, {\n            key: \"sparkline\",\n            value: function sparkline(defaults) {\n                this.opts.yaxis[0].show = false;\n                this.opts.yaxis[0].title.text = '';\n                this.opts.yaxis[0].axisBorder.show = false;\n                this.opts.yaxis[0].axisTicks.show = false;\n                this.opts.yaxis[0].floating = true;\n                var ret = {\n                    grid: {\n                        show: false,\n                        padding: {\n                            left: 0,\n                            right: 0,\n                            top: 0,\n                            bottom: 0\n                        }\n                    },\n                    legend: {\n                        show: false\n                    },\n                    xaxis: {\n                        labels: {\n                            show: false\n                        },\n                        tooltip: {\n                            enabled: false\n                        },\n                        axisBorder: {\n                            show: false\n                        },\n                        axisTicks: {\n                            show: false\n                        }\n                    },\n                    chart: {\n                        toolbar: {\n                            show: false\n                        },\n                        zoom: {\n                            enabled: false\n                        }\n                    },\n                    dataLabels: {\n                        enabled: false\n                    }\n                };\n                return Utils.extend(defaults, ret);\n            }\n        }, {\n            key: \"bar\",\n            value: function bar() {\n                return {\n                    chart: {\n                        stacked: false,\n                        animations: {\n                            easing: 'swing'\n                        }\n                    },\n                    plotOptions: {\n                        bar: {\n                            dataLabels: {\n                                position: 'center'\n                            }\n                        }\n                    },\n                    dataLabels: {\n                        style: {\n                            colors: ['#fff']\n                        },\n                        background: {\n                            enabled: false\n                        }\n                    },\n                    stroke: {\n                        width: 0,\n                        lineCap: 'round'\n                    },\n                    fill: {\n                        opacity: 0.85\n                    },\n                    legend: {\n                        markers: {\n                            shape: 'square',\n                            radius: 2,\n                            size: 8\n                        }\n                    },\n                    tooltip: {\n                        shared: false,\n                        intersect: true\n                    },\n                    xaxis: {\n                        tooltip: {\n                            enabled: false\n                        },\n                        tickPlacement: 'between',\n                        crosshairs: {\n                            width: 'barWidth',\n                            position: 'back',\n                            fill: {\n                                type: 'gradient'\n                            },\n                            dropShadow: {\n                                enabled: false\n                            },\n                            stroke: {\n                                width: 0\n                            }\n                        }\n                    }\n                };\n            }\n        }, {\n            key: \"candlestick\",\n            value: function candlestick() {\n                var _this = this;\n\n                return {\n                    stroke: {\n                        width: 1,\n                        colors: ['#333']\n                    },\n                    fill: {\n                        opacity: 1\n                    },\n                    dataLabels: {\n                        enabled: false\n                    },\n                    tooltip: {\n                        shared: true,\n                        custom: function custom(_ref) {\n                            var seriesIndex = _ref.seriesIndex,\n                                dataPointIndex = _ref.dataPointIndex,\n                                w = _ref.w;\n                            return _this._getBoxTooltip(w, seriesIndex, dataPointIndex, ['Open', 'High', '', 'Low', 'Close'], 'candlestick');\n                        }\n                    },\n                    states: {\n                        active: {\n                            filter: {\n                                type: 'none'\n                            }\n                        }\n                    },\n                    xaxis: {\n                        crosshairs: {\n                            width: 1\n                        }\n                    }\n                };\n            }\n        }, {\n            key: \"boxPlot\",\n            value: function boxPlot() {\n                var _this2 = this;\n\n                return {\n                    chart: {\n                        animations: {\n                            dynamicAnimation: {\n                                enabled: false\n                            }\n                        }\n                    },\n                    stroke: {\n                        width: 1,\n                        colors: ['#24292e']\n                    },\n                    dataLabels: {\n                        enabled: false\n                    },\n                    tooltip: {\n                        shared: true,\n                        custom: function custom(_ref2) {\n                            var seriesIndex = _ref2.seriesIndex,\n                                dataPointIndex = _ref2.dataPointIndex,\n                                w = _ref2.w;\n                            return _this2._getBoxTooltip(w, seriesIndex, dataPointIndex, ['Minimum', 'Q1', 'Median', 'Q3', 'Maximum'], 'boxPlot');\n                        }\n                    },\n                    markers: {\n                        size: 5,\n                        strokeWidth: 1,\n                        strokeColors: '#111'\n                    },\n                    xaxis: {\n                        crosshairs: {\n                            width: 1\n                        }\n                    }\n                };\n            }\n        }, {\n            key: \"rangeBar\",\n            value: function rangeBar() {\n                var handleTimelineTooltip = function handleTimelineTooltip(opts) {\n                    var rangeCtx = new RangeBar(opts.ctx, null);\n\n                    var _rangeCtx$getTooltipV = rangeCtx.getTooltipValues(opts),\n                        color = _rangeCtx$getTooltipV.color,\n                        seriesName = _rangeCtx$getTooltipV.seriesName,\n                        ylabel = _rangeCtx$getTooltipV.ylabel,\n                        startVal = _rangeCtx$getTooltipV.startVal,\n                        endVal = _rangeCtx$getTooltipV.endVal;\n\n                    return rangeCtx.buildCustomTooltipHTML({\n                        color: color,\n                        seriesName: seriesName,\n                        ylabel: ylabel,\n                        start: startVal,\n                        end: endVal\n                    });\n                };\n\n                var handleRangeColumnTooltip = function handleRangeColumnTooltip(opts) {\n                    var rangeCtx = new RangeBar(opts.ctx, null);\n\n                    var _rangeCtx$getTooltipV2 = rangeCtx.getTooltipValues(opts),\n                        color = _rangeCtx$getTooltipV2.color,\n                        seriesName = _rangeCtx$getTooltipV2.seriesName,\n                        ylabel = _rangeCtx$getTooltipV2.ylabel,\n                        start = _rangeCtx$getTooltipV2.start,\n                        end = _rangeCtx$getTooltipV2.end;\n\n                    return rangeCtx.buildCustomTooltipHTML({\n                        color: color,\n                        seriesName: seriesName,\n                        ylabel: ylabel,\n                        start: start,\n                        end: end\n                    });\n                };\n\n                return {\n                    stroke: {\n                        width: 0,\n                        lineCap: 'square'\n                    },\n                    plotOptions: {\n                        bar: {\n                            borderRadius: 0,\n                            dataLabels: {\n                                position: 'center'\n                            }\n                        }\n                    },\n                    dataLabels: {\n                        enabled: false,\n                        formatter: function formatter(val, _ref3) {\n                            var ctx = _ref3.ctx,\n                                seriesIndex = _ref3.seriesIndex,\n                                dataPointIndex = _ref3.dataPointIndex,\n                                w = _ref3.w;\n                            var start = w.globals.seriesRangeStart[seriesIndex][dataPointIndex];\n                            var end = w.globals.seriesRangeEnd[seriesIndex][dataPointIndex];\n                            return end - start;\n                        },\n                        background: {\n                            enabled: false\n                        },\n                        style: {\n                            colors: ['#fff']\n                        }\n                    },\n                    tooltip: {\n                        shared: false,\n                        followCursor: true,\n                        custom: function custom(opts) {\n                            if (opts.w.config.plotOptions && opts.w.config.plotOptions.bar && opts.w.config.plotOptions.bar.horizontal) {\n                                return handleTimelineTooltip(opts);\n                            } else {\n                                return handleRangeColumnTooltip(opts);\n                            }\n                        }\n                    },\n                    xaxis: {\n                        tickPlacement: 'between',\n                        tooltip: {\n                            enabled: false\n                        },\n                        crosshairs: {\n                            stroke: {\n                                width: 0\n                            }\n                        }\n                    }\n                };\n            }\n        }, {\n            key: \"area\",\n            value: function area() {\n                return {\n                    stroke: {\n                        width: 4\n                    },\n                    fill: {\n                        type: 'gradient',\n                        gradient: {\n                            inverseColors: false,\n                            shade: 'light',\n                            type: 'vertical',\n                            opacityFrom: 0.65,\n                            opacityTo: 0.5,\n                            stops: [0, 100, 100]\n                        }\n                    },\n                    markers: {\n                        size: 0,\n                        hover: {\n                            sizeOffset: 6\n                        }\n                    },\n                    tooltip: {\n                        followCursor: false\n                    }\n                };\n            }\n        }, {\n            key: \"brush\",\n            value: function brush(defaults) {\n                var ret = {\n                    chart: {\n                        toolbar: {\n                            autoSelected: 'selection',\n                            show: false\n                        },\n                        zoom: {\n                            enabled: false\n                        }\n                    },\n                    dataLabels: {\n                        enabled: false\n                    },\n                    stroke: {\n                        width: 1\n                    },\n                    tooltip: {\n                        enabled: false\n                    },\n                    xaxis: {\n                        tooltip: {\n                            enabled: false\n                        }\n                    }\n                };\n                return Utils.extend(defaults, ret);\n            }\n        }, {\n            key: \"stacked100\",\n            value: function stacked100(opts) {\n                    opts.dataLabels = opts.dataLabels || {};\n                    opts.dataLabels.formatter = opts.dataLabels.formatter || undefined;\n                    var existingDataLabelFormatter = opts.dataLabels.formatter;\n                    opts.yaxis.forEach(function(yaxe, index) {\n                        opts.yaxis[index].min = 0;\n                        opts.yaxis[index].max = 100;\n                    });\n                    var isBar = opts.chart.type === 'bar';\n\n                    if (isBar) {\n                        opts.dataLabels.formatter = existingDataLabelFormatter || function(val) {\n                            if (typeof val === 'number') {\n                                return val ? val.toFixed(0) + '%' : val;\n                            }\n\n                            return val;\n                        };\n                    }\n\n                    return opts;\n                } // This function removes the left and right spacing in chart for line/area/scatter if xaxis type = category for those charts by converting xaxis = numeric. Numeric/Datetime xaxis prevents the unnecessary spacing in the left/right of the chart area\n\n        }, {\n            key: \"convertCatToNumeric\",\n            value: function convertCatToNumeric(opts) {\n                opts.xaxis.convertedCatToNumeric = true;\n                return opts;\n            }\n        }, {\n            key: \"convertCatToNumericXaxis\",\n            value: function convertCatToNumericXaxis(opts, ctx, cats) {\n                opts.xaxis.type = 'numeric';\n                opts.xaxis.labels = opts.xaxis.labels || {};\n\n                opts.xaxis.labels.formatter = opts.xaxis.labels.formatter || function(val) {\n                    return Utils.isNumber(val) ? Math.floor(val) : val;\n                };\n\n                var defaultFormatter = opts.xaxis.labels.formatter;\n                var labels = opts.xaxis.categories && opts.xaxis.categories.length ? opts.xaxis.categories : opts.labels;\n\n                if (cats && cats.length) {\n                    labels = cats.map(function(c) {\n                        return Array.isArray(c) ? c : String(c);\n                    });\n                }\n\n                if (labels && labels.length) {\n                    opts.xaxis.labels.formatter = function(val) {\n                        return Utils.isNumber(val) ? defaultFormatter(labels[Math.floor(val) - 1]) : defaultFormatter(val);\n                    };\n                }\n\n                opts.xaxis.categories = [];\n                opts.labels = [];\n                opts.xaxis.tickAmount = opts.xaxis.tickAmount || 'dataPoints';\n                return opts;\n            }\n        }, {\n            key: \"bubble\",\n            value: function bubble() {\n                return {\n                    dataLabels: {\n                        style: {\n                            colors: ['#fff']\n                        }\n                    },\n                    tooltip: {\n                        shared: false,\n                        intersect: true\n                    },\n                    xaxis: {\n                        crosshairs: {\n                            width: 0\n                        }\n                    },\n                    fill: {\n                        type: 'solid',\n                        gradient: {\n                            shade: 'light',\n                            inverse: true,\n                            shadeIntensity: 0.55,\n                            opacityFrom: 0.4,\n                            opacityTo: 0.8\n                        }\n                    }\n                };\n            }\n        }, {\n            key: \"scatter\",\n            value: function scatter() {\n                return {\n                    dataLabels: {\n                        enabled: false\n                    },\n                    tooltip: {\n                        shared: false,\n                        intersect: true\n                    },\n                    markers: {\n                        size: 6,\n                        strokeWidth: 1,\n                        hover: {\n                            sizeOffset: 2\n                        }\n                    }\n                };\n            }\n        }, {\n            key: \"heatmap\",\n            value: function heatmap() {\n                return {\n                    chart: {\n                        stacked: false\n                    },\n                    fill: {\n                        opacity: 1\n                    },\n                    dataLabels: {\n                        style: {\n                            colors: ['#fff']\n                        }\n                    },\n                    stroke: {\n                        colors: ['#fff']\n                    },\n                    tooltip: {\n                        followCursor: true,\n                        marker: {\n                            show: false\n                        },\n                        x: {\n                            show: false\n                        }\n                    },\n                    legend: {\n                        position: 'top',\n                        markers: {\n                            shape: 'square',\n                            size: 10,\n                            offsetY: 2\n                        }\n                    },\n                    grid: {\n                        padding: {\n                            right: 20\n                        }\n                    }\n                };\n            }\n        }, {\n            key: \"treemap\",\n            value: function treemap() {\n                return {\n                    chart: {\n                        zoom: {\n                            enabled: false\n                        }\n                    },\n                    dataLabels: {\n                        style: {\n                            fontSize: 14,\n                            fontWeight: 600,\n                            colors: ['#fff']\n                        }\n                    },\n                    stroke: {\n                        show: true,\n                        width: 2,\n                        colors: ['#fff']\n                    },\n                    legend: {\n                        show: false\n                    },\n                    fill: {\n                        gradient: {\n                            stops: [0, 100]\n                        }\n                    },\n                    tooltip: {\n                        followCursor: true,\n                        x: {\n                            show: false\n                        }\n                    },\n                    grid: {\n                        padding: {\n                            left: 0,\n                            right: 0\n                        }\n                    },\n                    xaxis: {\n                        crosshairs: {\n                            show: false\n                        },\n                        tooltip: {\n                            enabled: false\n                        }\n                    }\n                };\n            }\n        }, {\n            key: \"pie\",\n            value: function pie() {\n                return {\n                    chart: {\n                        toolbar: {\n                            show: false\n                        }\n                    },\n                    plotOptions: {\n                        pie: {\n                            donut: {\n                                labels: {\n                                    show: false\n                                }\n                            }\n                        }\n                    },\n                    dataLabels: {\n                        formatter: function formatter(val) {\n                            return val.toFixed(1) + '%';\n                        },\n                        style: {\n                            colors: ['#fff']\n                        },\n                        background: {\n                            enabled: false\n                        },\n                        dropShadow: {\n                            enabled: true\n                        }\n                    },\n                    stroke: {\n                        colors: ['#fff']\n                    },\n                    fill: {\n                        opacity: 1,\n                        gradient: {\n                            shade: 'light',\n                            stops: [0, 100]\n                        }\n                    },\n                    tooltip: {\n                        theme: 'dark',\n                        fillSeriesColor: true\n                    },\n                    legend: {\n                        position: 'right'\n                    }\n                };\n            }\n        }, {\n            key: \"donut\",\n            value: function donut() {\n                return {\n                    chart: {\n                        toolbar: {\n                            show: false\n                        }\n                    },\n                    dataLabels: {\n                        formatter: function formatter(val) {\n                            return val.toFixed(1) + '%';\n                        },\n                        style: {\n                            colors: ['#fff']\n                        },\n                        background: {\n                            enabled: false\n                        },\n                        dropShadow: {\n                            enabled: true\n                        }\n                    },\n                    stroke: {\n                        colors: ['#fff']\n                    },\n                    fill: {\n                        opacity: 1,\n                        gradient: {\n                            shade: 'light',\n                            shadeIntensity: 0.35,\n                            stops: [80, 100],\n                            opacityFrom: 1,\n                            opacityTo: 1\n                        }\n                    },\n                    tooltip: {\n                        theme: 'dark',\n                        fillSeriesColor: true\n                    },\n                    legend: {\n                        position: 'right'\n                    }\n                };\n            }\n        }, {\n            key: \"polarArea\",\n            value: function polarArea() {\n                this.opts.yaxis[0].tickAmount = this.opts.yaxis[0].tickAmount ? this.opts.yaxis[0].tickAmount : 6;\n                return {\n                    chart: {\n                        toolbar: {\n                            show: false\n                        }\n                    },\n                    dataLabels: {\n                        formatter: function formatter(val) {\n                            return val.toFixed(1) + '%';\n                        },\n                        enabled: false\n                    },\n                    stroke: {\n                        show: true,\n                        width: 2\n                    },\n                    fill: {\n                        opacity: 0.7\n                    },\n                    tooltip: {\n                        theme: 'dark',\n                        fillSeriesColor: true\n                    },\n                    legend: {\n                        position: 'right'\n                    }\n                };\n            }\n        }, {\n            key: \"radar\",\n            value: function radar() {\n                this.opts.yaxis[0].labels.offsetY = this.opts.yaxis[0].labels.offsetY ? this.opts.yaxis[0].labels.offsetY : 6;\n                return {\n                    dataLabels: {\n                        enabled: false,\n                        style: {\n                            fontSize: '11px'\n                        }\n                    },\n                    stroke: {\n                        width: 2\n                    },\n                    markers: {\n                        size: 3,\n                        strokeWidth: 1,\n                        strokeOpacity: 1\n                    },\n                    fill: {\n                        opacity: 0.2\n                    },\n                    tooltip: {\n                        shared: false,\n                        intersect: true,\n                        followCursor: true\n                    },\n                    grid: {\n                        show: false\n                    },\n                    xaxis: {\n                        labels: {\n                            formatter: function formatter(val) {\n                                return val;\n                            },\n                            style: {\n                                colors: ['#a8a8a8'],\n                                fontSize: '11px'\n                            }\n                        },\n                        tooltip: {\n                            enabled: false\n                        },\n                        crosshairs: {\n                            show: false\n                        }\n                    }\n                };\n            }\n        }, {\n            key: \"radialBar\",\n            value: function radialBar() {\n                return {\n                    chart: {\n                        animations: {\n                            dynamicAnimation: {\n                                enabled: true,\n                                speed: 800\n                            }\n                        },\n                        toolbar: {\n                            show: false\n                        }\n                    },\n                    fill: {\n                        gradient: {\n                            shade: 'dark',\n                            shadeIntensity: 0.4,\n                            inverseColors: false,\n                            type: 'diagonal2',\n                            opacityFrom: 1,\n                            opacityTo: 1,\n                            stops: [70, 98, 100]\n                        }\n                    },\n                    legend: {\n                        show: false,\n                        position: 'right'\n                    },\n                    tooltip: {\n                        enabled: false,\n                        fillSeriesColor: true\n                    }\n                };\n            }\n        }, {\n            key: \"_getBoxTooltip\",\n            value: function _getBoxTooltip(w, seriesIndex, dataPointIndex, labels, chartType) {\n                var o = w.globals.seriesCandleO[seriesIndex][dataPointIndex];\n                var h = w.globals.seriesCandleH[seriesIndex][dataPointIndex];\n                var m = w.globals.seriesCandleM[seriesIndex][dataPointIndex];\n                var l = w.globals.seriesCandleL[seriesIndex][dataPointIndex];\n                var c = w.globals.seriesCandleC[seriesIndex][dataPointIndex];\n\n                if (w.config.series[seriesIndex].type && w.config.series[seriesIndex].type !== chartType) {\n                    return \"<div class=\\\"apexcharts-custom-tooltip\\\">\\n          \".concat(w.config.series[seriesIndex].name ? w.config.series[seriesIndex].name : 'series-' + (seriesIndex + 1), \": <strong>\").concat(w.globals.series[seriesIndex][dataPointIndex], \"</strong>\\n        </div>\");\n                } else {\n                    return \"<div class=\\\"apexcharts-tooltip-box apexcharts-tooltip-\".concat(w.config.chart.type, \"\\\">\") + \"<div>\".concat(labels[0], \": <span class=\\\"value\\\">\") + o + '</span></div>' + \"<div>\".concat(labels[1], \": <span class=\\\"value\\\">\") + h + '</span></div>' + (m ? \"<div>\".concat(labels[2], \": <span class=\\\"value\\\">\") + m + '</span></div>' : '') + \"<div>\".concat(labels[3], \": <span class=\\\"value\\\">\") + l + '</span></div>' + \"<div>\".concat(labels[4], \": <span class=\\\"value\\\">\") + c + '</span></div>' + '</div>';\n                }\n            }\n        }]);\n\n        return Defaults;\n    }();\n\n    /**\n     * ApexCharts Config Class for extending user options with pre-defined ApexCharts config.\n     *\n     * @module Config\n     **/\n\n    var Config = /*#__PURE__*/ function() {\n        function Config(opts) {\n            _classCallCheck(this, Config);\n\n            this.opts = opts;\n        }\n\n        _createClass(Config, [{\n            key: \"init\",\n            value: function init(_ref) {\n                var responsiveOverride = _ref.responsiveOverride;\n                var opts = this.opts;\n                var options = new Options();\n                var defaults = new Defaults(opts);\n                this.chartType = opts.chart.type;\n\n                if (this.chartType === 'histogram') {\n                    // technically, a histogram can be drawn by a column chart with no spaces in between\n                    opts.chart.type = 'bar';\n                    opts = Utils.extend({\n                        plotOptions: {\n                            bar: {\n                                columnWidth: '99.99%'\n                            }\n                        }\n                    }, opts);\n                }\n\n                opts = this.extendYAxis(opts);\n                opts = this.extendAnnotations(opts);\n                var config = options.init();\n                var newDefaults = {};\n\n                if (opts && _typeof(opts) === 'object') {\n                    var chartDefaults = {};\n                    var chartTypes = ['line', 'area', 'bar', 'candlestick', 'boxPlot', 'rangeBar', 'histogram', 'bubble', 'scatter', 'heatmap', 'treemap', 'pie', 'polarArea', 'donut', 'radar', 'radialBar'];\n\n                    if (chartTypes.indexOf(opts.chart.type) !== -1) {\n                        chartDefaults = defaults[opts.chart.type]();\n                    } else {\n                        chartDefaults = defaults.line();\n                    }\n\n                    if (opts.chart.brush && opts.chart.brush.enabled) {\n                        chartDefaults = defaults.brush(chartDefaults);\n                    }\n\n                    if (opts.chart.stacked && opts.chart.stackType === '100%') {\n                        opts = defaults.stacked100(opts);\n                    } // If user has specified a dark theme, make the tooltip dark too\n\n\n                    this.checkForDarkTheme(window.Apex); // check global window Apex options\n\n                    this.checkForDarkTheme(opts); // check locally passed options\n\n                    opts.xaxis = opts.xaxis || window.Apex.xaxis || {}; // an important boolean needs to be set here\n                    // otherwise all the charts will have this flag set to true window.Apex.xaxis is set globally\n\n                    if (!responsiveOverride) {\n                        opts.xaxis.convertedCatToNumeric = false;\n                    }\n\n                    opts = this.checkForCatToNumericXAxis(this.chartType, chartDefaults, opts);\n\n                    if (opts.chart.sparkline && opts.chart.sparkline.enabled || window.Apex.chart && window.Apex.chart.sparkline && window.Apex.chart.sparkline.enabled) {\n                        chartDefaults = defaults.sparkline(chartDefaults);\n                    }\n\n                    newDefaults = Utils.extend(config, chartDefaults);\n                } // config should cascade in this fashion\n                // default-config < global-apex-variable-config < user-defined-config\n                // get GLOBALLY defined options and merge with the default config\n\n\n                var mergedWithDefaultConfig = Utils.extend(newDefaults, window.Apex); // get the merged config and extend with user defined config\n\n                config = Utils.extend(mergedWithDefaultConfig, opts); // some features are not supported. those mismatches should be handled\n\n                config = this.handleUserInputErrors(config);\n                return config;\n            }\n        }, {\n            key: \"checkForCatToNumericXAxis\",\n            value: function checkForCatToNumericXAxis(chartType, chartDefaults, opts) {\n                var defaults = new Defaults(opts);\n                var isBarHorizontal = chartType === 'bar' && opts.plotOptions && opts.plotOptions.bar && opts.plotOptions.bar.horizontal;\n                var unsupportedZoom = chartType === 'pie' || chartType === 'polarArea' || chartType === 'donut' || chartType === 'radar' || chartType === 'radialBar' || chartType === 'heatmap';\n                var notNumericXAxis = opts.xaxis.type !== 'datetime' && opts.xaxis.type !== 'numeric';\n                var tickPlacement = opts.xaxis.tickPlacement ? opts.xaxis.tickPlacement : chartDefaults.xaxis && chartDefaults.xaxis.tickPlacement;\n\n                if (!isBarHorizontal && !unsupportedZoom && notNumericXAxis && tickPlacement !== 'between') {\n                    opts = defaults.convertCatToNumeric(opts);\n                }\n\n                return opts;\n            }\n        }, {\n            key: \"extendYAxis\",\n            value: function extendYAxis(opts, w) {\n                    var options = new Options();\n\n                    if (typeof opts.yaxis === 'undefined' || !opts.yaxis || Array.isArray(opts.yaxis) && opts.yaxis.length === 0) {\n                        opts.yaxis = {};\n                    } // extend global yaxis config (only if object is provided / not an array)\n\n\n                    if (opts.yaxis.constructor !== Array && window.Apex.yaxis && window.Apex.yaxis.constructor !== Array) {\n                        opts.yaxis = Utils.extend(opts.yaxis, window.Apex.yaxis);\n                    } // as we can't extend nested object's array with extend, we need to do it first\n                    // user can provide either an array or object in yaxis config\n\n\n                    if (opts.yaxis.constructor !== Array) {\n                        // convert the yaxis to array if user supplied object\n                        opts.yaxis = [Utils.extend(options.yAxis, opts.yaxis)];\n                    } else {\n                        opts.yaxis = Utils.extendArray(opts.yaxis, options.yAxis);\n                    }\n\n                    var isLogY = false;\n                    opts.yaxis.forEach(function(y) {\n                        if (y.logarithmic) {\n                            isLogY = true;\n                        }\n                    });\n                    var series = opts.series;\n\n                    if (w && !series) {\n                        series = w.config.series;\n                    } // A logarithmic chart works correctly when each series has a corresponding y-axis\n                    // If this is not the case, we manually create yaxis for multi-series log chart\n\n\n                    if (isLogY && series.length !== opts.yaxis.length && series.length) {\n                        opts.yaxis = series.map(function(s, i) {\n                            if (!s.name) {\n                                series[i].name = \"series-\".concat(i + 1);\n                            }\n\n                            if (opts.yaxis[i]) {\n                                opts.yaxis[i].seriesName = series[i].name;\n                                return opts.yaxis[i];\n                            } else {\n                                var newYaxis = Utils.extend(options.yAxis, opts.yaxis[0]);\n                                newYaxis.show = false;\n                                return newYaxis;\n                            }\n                        });\n                    }\n\n                    if (isLogY && series.length > 1 && series.length !== opts.yaxis.length) {\n                        console.warn('A multi-series logarithmic chart should have equal number of series and y-axes. Please make sure to equalize both.');\n                    }\n\n                    return opts;\n                } // annotations also accepts array, so we need to extend them manually\n\n        }, {\n            key: \"extendAnnotations\",\n            value: function extendAnnotations(opts) {\n                if (typeof opts.annotations === 'undefined') {\n                    opts.annotations = {};\n                    opts.annotations.yaxis = [];\n                    opts.annotations.xaxis = [];\n                    opts.annotations.points = [];\n                }\n\n                opts = this.extendYAxisAnnotations(opts);\n                opts = this.extendXAxisAnnotations(opts);\n                opts = this.extendPointAnnotations(opts);\n                return opts;\n            }\n        }, {\n            key: \"extendYAxisAnnotations\",\n            value: function extendYAxisAnnotations(opts) {\n                var options = new Options();\n                opts.annotations.yaxis = Utils.extendArray(typeof opts.annotations.yaxis !== 'undefined' ? opts.annotations.yaxis : [], options.yAxisAnnotation);\n                return opts;\n            }\n        }, {\n            key: \"extendXAxisAnnotations\",\n            value: function extendXAxisAnnotations(opts) {\n                var options = new Options();\n                opts.annotations.xaxis = Utils.extendArray(typeof opts.annotations.xaxis !== 'undefined' ? opts.annotations.xaxis : [], options.xAxisAnnotation);\n                return opts;\n            }\n        }, {\n            key: \"extendPointAnnotations\",\n            value: function extendPointAnnotations(opts) {\n                var options = new Options();\n                opts.annotations.points = Utils.extendArray(typeof opts.annotations.points !== 'undefined' ? opts.annotations.points : [], options.pointAnnotation);\n                return opts;\n            }\n        }, {\n            key: \"checkForDarkTheme\",\n            value: function checkForDarkTheme(opts) {\n                if (opts.theme && opts.theme.mode === 'dark') {\n                    if (!opts.tooltip) {\n                        opts.tooltip = {};\n                    }\n\n                    if (opts.tooltip.theme !== 'light') {\n                        opts.tooltip.theme = 'dark';\n                    }\n\n                    if (!opts.chart.foreColor) {\n                        opts.chart.foreColor = '#f6f7f8';\n                    }\n\n                    if (!opts.chart.background) {\n                        opts.chart.background = '#424242';\n                    }\n\n                    if (!opts.theme.palette) {\n                        opts.theme.palette = 'palette4';\n                    }\n                }\n            }\n        }, {\n            key: \"handleUserInputErrors\",\n            value: function handleUserInputErrors(opts) {\n                var config = opts; // conflicting tooltip option. intersect makes sure to focus on 1 point at a time. Shared cannot be used along with it\n\n                if (config.tooltip.shared && config.tooltip.intersect) {\n                    throw new Error('tooltip.shared cannot be enabled when tooltip.intersect is true. Turn off any other option by setting it to false.');\n                }\n\n                if (config.chart.type === 'bar' && config.plotOptions.bar.horizontal) {\n                    // No multiple yaxis for bars\n                    if (config.yaxis.length > 1) {\n                        throw new Error('Multiple Y Axis for bars are not supported. Switch to column chart by setting plotOptions.bar.horizontal=false');\n                    } // if yaxis is reversed in horizontal bar chart, you should draw the y-axis on right side\n\n\n                    if (config.yaxis[0].reversed) {\n                        config.yaxis[0].opposite = true;\n                    }\n\n                    config.xaxis.tooltip.enabled = false; // no xaxis tooltip for horizontal bar\n\n                    config.yaxis[0].tooltip.enabled = false; // no xaxis tooltip for horizontal bar\n\n                    config.chart.zoom.enabled = false; // no zooming for horz bars\n                }\n\n                if (config.chart.type === 'bar' || config.chart.type === 'rangeBar') {\n                    if (config.tooltip.shared) {\n                        if (config.xaxis.crosshairs.width === 'barWidth' && config.series.length > 1) {\n                            config.xaxis.crosshairs.width = 'tickWidth';\n                        }\n                    }\n                }\n\n                if (config.chart.type === 'candlestick' || config.chart.type === 'boxPlot') {\n                    if (config.yaxis[0].reversed) {\n                        console.warn(\"Reversed y-axis in \".concat(config.chart.type, \" chart is not supported.\"));\n                        config.yaxis[0].reversed = false;\n                    }\n                }\n\n                if (config.chart.group && config.yaxis[0].labels.minWidth === 0) {\n                    console.warn('It looks like you have multiple charts in synchronization. You must provide yaxis.labels.minWidth which must be EQUAL for all grouped charts to prevent incorrect behaviour.');\n                } // if user supplied array for stroke width, it will only be applicable to line/area charts, for any other charts, revert back to Number\n\n\n                if (Array.isArray(config.stroke.width)) {\n                    if (config.chart.type !== 'line' && config.chart.type !== 'area') {\n                        console.warn('stroke.width option accepts array only for line and area charts. Reverted back to Number');\n                        config.stroke.width = config.stroke.width[0];\n                    }\n                }\n\n                return config;\n            }\n        }]);\n\n        return Config;\n    }();\n\n    var Globals = /*#__PURE__*/ function() {\n        function Globals() {\n            _classCallCheck(this, Globals);\n        }\n\n        _createClass(Globals, [{\n            key: \"initGlobalVars\",\n            value: function initGlobalVars(gl) {\n                gl.series = []; // the MAIN series array (y values)\n\n                gl.seriesCandleO = [];\n                gl.seriesCandleH = [];\n                gl.seriesCandleM = [];\n                gl.seriesCandleL = [];\n                gl.seriesCandleC = [];\n                gl.seriesRangeStart = [];\n                gl.seriesRangeEnd = [];\n                gl.seriesRangeBarTimeline = [];\n                gl.seriesPercent = [];\n                gl.seriesGoals = [];\n                gl.seriesX = [];\n                gl.seriesZ = [];\n                gl.seriesNames = [];\n                gl.seriesTotals = [];\n                gl.seriesLog = [];\n                gl.seriesColors = [];\n                gl.stackedSeriesTotals = [];\n                gl.seriesXvalues = []; // we will need this in tooltip (it's x position)\n                // when we will have unequal x values, we will need\n                // some way to get x value depending on mouse pointer\n\n                gl.seriesYvalues = []; // we will need this when deciding which series\n                // user hovered on\n\n                gl.labels = [];\n                gl.categoryLabels = [];\n                gl.timescaleLabels = [];\n                gl.noLabelsProvided = false;\n                gl.resizeTimer = null;\n                gl.selectionResizeTimer = null;\n                gl.delayedElements = [];\n                gl.pointsArray = [];\n                gl.dataLabelsRects = [];\n                gl.isXNumeric = false;\n                gl.xaxisLabelsCount = 0;\n                gl.skipLastTimelinelabel = false;\n                gl.skipFirstTimelinelabel = false;\n                gl.isDataXYZ = false;\n                gl.isMultiLineX = false;\n                gl.isMultipleYAxis = false;\n                gl.maxY = -Number.MAX_VALUE;\n                gl.minY = Number.MIN_VALUE;\n                gl.minYArr = [];\n                gl.maxYArr = [];\n                gl.maxX = -Number.MAX_VALUE;\n                gl.minX = Number.MAX_VALUE;\n                gl.initialMaxX = -Number.MAX_VALUE;\n                gl.initialMinX = Number.MAX_VALUE;\n                gl.maxDate = 0;\n                gl.minDate = Number.MAX_VALUE;\n                gl.minZ = Number.MAX_VALUE;\n                gl.maxZ = -Number.MAX_VALUE;\n                gl.minXDiff = Number.MAX_VALUE;\n                gl.yAxisScale = [];\n                gl.xAxisScale = null;\n                gl.xAxisTicksPositions = [];\n                gl.yLabelsCoords = [];\n                gl.yTitleCoords = [];\n                gl.barPadForNumericAxis = 0;\n                gl.padHorizontal = 0;\n                gl.xRange = 0;\n                gl.yRange = [];\n                gl.zRange = 0;\n                gl.dataPoints = 0;\n                gl.xTickAmount = 0;\n            }\n        }, {\n            key: \"globalVars\",\n            value: function globalVars(config) {\n                return {\n                    chartID: null,\n                    // chart ID - apexcharts-cuid\n                    cuid: null,\n                    // chart ID - random numbers excluding \"apexcharts\" part\n                    events: {\n                        beforeMount: [],\n                        mounted: [],\n                        updated: [],\n                        clicked: [],\n                        selection: [],\n                        dataPointSelection: [],\n                        zoomed: [],\n                        scrolled: []\n                    },\n                    colors: [],\n                    clientX: null,\n                    clientY: null,\n                    fill: {\n                        colors: []\n                    },\n                    stroke: {\n                        colors: []\n                    },\n                    dataLabels: {\n                        style: {\n                            colors: []\n                        }\n                    },\n                    radarPolygons: {\n                        fill: {\n                            colors: []\n                        }\n                    },\n                    markers: {\n                        colors: [],\n                        size: config.markers.size,\n                        largestSize: 0\n                    },\n                    animationEnded: false,\n                    isTouchDevice: 'ontouchstart' in window || navigator.msMaxTouchPoints,\n                    isDirty: false,\n                    // chart has been updated after the initial render. This is different than dataChanged property. isDirty means user manually called some method to update\n                    isExecCalled: false,\n                    // whether user updated the chart through the exec method\n                    initialConfig: null,\n                    // we will store the first config user has set to go back when user finishes interactions like zooming and come out of it\n                    initialSeries: [],\n                    lastXAxis: [],\n                    lastYAxis: [],\n                    columnSeries: null,\n                    labels: [],\n                    // store the text to draw on x axis\n                    // Don't mutate the labels, many things including tooltips depends on it!\n                    timescaleLabels: [],\n                    // store the timescaleLabels Labels in another variable\n                    noLabelsProvided: false,\n                    // if user didn't provide any categories/labels or x values, fallback to 1,2,3,4...\n                    allSeriesCollapsed: false,\n                    collapsedSeries: [],\n                    // when user collapses a series, it goes into this array\n                    collapsedSeriesIndices: [],\n                    // this stores the index of the collapsedSeries instead of whole object for quick access\n                    ancillaryCollapsedSeries: [],\n                    // when user collapses an \"alwaysVisible\" series, it goes into this array\n                    ancillaryCollapsedSeriesIndices: [],\n                    // this stores the index of the ancillaryCollapsedSeries whose y-axis is always visible\n                    risingSeries: [],\n                    // when user re-opens a collapsed series, it goes here\n                    dataFormatXNumeric: false,\n                    // boolean value to indicate user has passed numeric x values\n                    capturedSeriesIndex: -1,\n                    capturedDataPointIndex: -1,\n                    selectedDataPoints: [],\n                    goldenPadding: 35,\n                    // this value is used at a lot of places for spacing purpose\n                    invalidLogScale: false,\n                    // if a user enabled log scale but the data provided is not valid to generate a log scale, turn on this flag\n                    ignoreYAxisIndexes: [],\n                    // when series are being collapsed in multiple y axes, ignore certain index\n                    yAxisSameScaleIndices: [],\n                    maxValsInArrayIndex: 0,\n                    radialSize: 0,\n                    selection: undefined,\n                    zoomEnabled: config.chart.toolbar.autoSelected === 'zoom' && config.chart.toolbar.tools.zoom && config.chart.zoom.enabled,\n                    panEnabled: config.chart.toolbar.autoSelected === 'pan' && config.chart.toolbar.tools.pan,\n                    selectionEnabled: config.chart.toolbar.autoSelected === 'selection' && config.chart.toolbar.tools.selection,\n                    yaxis: null,\n                    mousedown: false,\n                    lastClientPosition: {},\n                    // don't reset this variable this the chart is destroyed. It is used to detect right or left mousemove in panning\n                    visibleXRange: undefined,\n                    yValueDecimal: 0,\n                    // are there floating numbers in the series. If yes, this represent the len of the decimals\n                    total: 0,\n                    SVGNS: 'http://www.w3.org/2000/svg',\n                    // svg namespace\n                    svgWidth: 0,\n                    // the whole svg width\n                    svgHeight: 0,\n                    // the whole svg height\n                    noData: false,\n                    // whether there is any data to display or not\n                    locale: {},\n                    // the current locale values will be preserved here for global access\n                    dom: {},\n                    // for storing all dom nodes in this particular property\n                    memory: {\n                        methodsToExec: []\n                    },\n                    shouldAnimate: true,\n                    skipLastTimelinelabel: false,\n                    // when last label is cropped, skip drawing it\n                    skipFirstTimelinelabel: false,\n                    // when first label is cropped, skip drawing it\n                    delayedElements: [],\n                    // element which appear after animation has finished\n                    axisCharts: true,\n                    // chart type = line or area or bar\n                    // (refer them also as plot charts in the code)\n                    isDataXYZ: false,\n                    // bool: data was provided in a {[x,y,z]} pattern\n                    resized: false,\n                    // bool: user has resized\n                    resizeTimer: null,\n                    // timeout function to make a small delay before\n                    // drawing when user resized\n                    comboCharts: false,\n                    // bool: whether it's a combination of line/column\n                    dataChanged: false,\n                    // bool: has data changed dynamically\n                    previousPaths: [],\n                    // array: when data is changed, it will animate from\n                    // previous paths\n                    allSeriesHasEqualX: true,\n                    pointsArray: [],\n                    // store the points positions here to draw later on hover\n                    // format is - [[x,y],[x,y]... [x,y]]\n                    dataLabelsRects: [],\n                    // store the positions of datalabels to prevent collision\n                    lastDrawnDataLabelsIndexes: [],\n                    hasNullValues: false,\n                    // bool: whether series contains null values\n                    easing: null,\n                    // function: animation effect to apply\n                    zoomed: false,\n                    // whether user has zoomed or not\n                    gridWidth: 0,\n                    // drawable width of actual graphs (series paths)\n                    gridHeight: 0,\n                    // drawable height of actual graphs (series paths)\n                    rotateXLabels: false,\n                    defaultLabels: false,\n                    xLabelFormatter: undefined,\n                    // formatter for x axis labels\n                    yLabelFormatters: [],\n                    xaxisTooltipFormatter: undefined,\n                    // formatter for x axis tooltip\n                    ttKeyFormatter: undefined,\n                    ttVal: undefined,\n                    ttZFormatter: undefined,\n                    LINE_HEIGHT_RATIO: 1.618,\n                    xAxisLabelsHeight: 0,\n                    xAxisLabelsWidth: 0,\n                    yAxisLabelsWidth: 0,\n                    scaleX: 1,\n                    scaleY: 1,\n                    translateX: 0,\n                    translateY: 0,\n                    translateYAxisX: [],\n                    yAxisWidths: [],\n                    translateXAxisY: 0,\n                    translateXAxisX: 0,\n                    tooltip: null\n                };\n            }\n        }, {\n            key: \"init\",\n            value: function init(config) {\n                var globals = this.globalVars(config);\n                this.initGlobalVars(globals);\n                globals.initialConfig = Utils.extend({}, config);\n                globals.initialSeries = Utils.clone(config.series);\n                globals.lastXAxis = Utils.clone(globals.initialConfig.xaxis);\n                globals.lastYAxis = Utils.clone(globals.initialConfig.yaxis);\n                return globals;\n            }\n        }]);\n\n        return Globals;\n    }();\n\n    /**\n     * ApexCharts Base Class for extending user options with pre-defined ApexCharts config.\n     *\n     * @module Base\n     **/\n\n    var Base = /*#__PURE__*/ function() {\n        function Base(opts) {\n            _classCallCheck(this, Base);\n\n            this.opts = opts;\n        }\n\n        _createClass(Base, [{\n            key: \"init\",\n            value: function init() {\n                var config = new Config(this.opts).init({\n                    responsiveOverride: false\n                });\n                var globals = new Globals().init(config);\n                var w = {\n                    config: config,\n                    globals: globals\n                };\n                return w;\n            }\n        }]);\n\n        return Base;\n    }();\n\n    var Data = /*#__PURE__*/ function() {\n        function Data(ctx) {\n            _classCallCheck(this, Data);\n\n            this.ctx = ctx;\n            this.w = ctx.w;\n            this.twoDSeries = [];\n            this.threeDSeries = [];\n            this.twoDSeriesX = [];\n            this.seriesGoals = [];\n            this.coreUtils = new CoreUtils(this.ctx);\n        }\n\n        _createClass(Data, [{\n            key: \"isMultiFormat\",\n            value: function isMultiFormat() {\n                    return this.isFormatXY() || this.isFormat2DArray();\n                } // given format is [{x, y}, {x, y}]\n\n        }, {\n            key: \"isFormatXY\",\n            value: function isFormatXY() {\n                    var series = this.w.config.series.slice();\n                    var sr = new Series(this.ctx);\n                    this.activeSeriesIndex = sr.getActiveConfigSeriesIndex();\n\n                    if (typeof series[this.activeSeriesIndex].data !== 'undefined' && series[this.activeSeriesIndex].data.length > 0 && series[this.activeSeriesIndex].data[0] !== null && typeof series[this.activeSeriesIndex].data[0].x !== 'undefined' && series[this.activeSeriesIndex].data[0] !== null) {\n                        return true;\n                    }\n                } // given format is [[x, y], [x, y]]\n\n        }, {\n            key: \"isFormat2DArray\",\n            value: function isFormat2DArray() {\n                var series = this.w.config.series.slice();\n                var sr = new Series(this.ctx);\n                this.activeSeriesIndex = sr.getActiveConfigSeriesIndex();\n\n                if (typeof series[this.activeSeriesIndex].data !== 'undefined' && series[this.activeSeriesIndex].data.length > 0 && typeof series[this.activeSeriesIndex].data[0] !== 'undefined' && series[this.activeSeriesIndex].data[0] !== null && series[this.activeSeriesIndex].data[0].constructor === Array) {\n                    return true;\n                }\n            }\n        }, {\n            key: \"handleFormat2DArray\",\n            value: function handleFormat2DArray(ser, i) {\n                var cnf = this.w.config;\n                var gl = this.w.globals;\n                var isBoxPlot = cnf.chart.type === 'boxPlot' || cnf.series[i].type === 'boxPlot';\n\n                for (var j = 0; j < ser[i].data.length; j++) {\n                    if (typeof ser[i].data[j][1] !== 'undefined') {\n                        if (Array.isArray(ser[i].data[j][1]) && ser[i].data[j][1].length === 4 && !isBoxPlot) {\n                            // candlestick nested ohlc format\n                            this.twoDSeries.push(Utils.parseNumber(ser[i].data[j][1][3]));\n                        } else if (ser[i].data[j].length >= 5) {\n                            // candlestick non-nested ohlc format\n                            this.twoDSeries.push(Utils.parseNumber(ser[i].data[j][4]));\n                        } else {\n                            this.twoDSeries.push(Utils.parseNumber(ser[i].data[j][1]));\n                        }\n\n                        gl.dataFormatXNumeric = true;\n                    }\n\n                    if (cnf.xaxis.type === 'datetime') {\n                        // if timestamps are provided and xaxis type is datetime,\n                        var ts = new Date(ser[i].data[j][0]);\n                        ts = new Date(ts).getTime();\n                        this.twoDSeriesX.push(ts);\n                    } else {\n                        this.twoDSeriesX.push(ser[i].data[j][0]);\n                    }\n                }\n\n                for (var _j = 0; _j < ser[i].data.length; _j++) {\n                    if (typeof ser[i].data[_j][2] !== 'undefined') {\n                        this.threeDSeries.push(ser[i].data[_j][2]);\n                        gl.isDataXYZ = true;\n                    }\n                }\n            }\n        }, {\n            key: \"handleFormatXY\",\n            value: function handleFormatXY(ser, i) {\n                var cnf = this.w.config;\n                var gl = this.w.globals;\n                var dt = new DateTime(this.ctx);\n                var activeI = i;\n\n                if (gl.collapsedSeriesIndices.indexOf(i) > -1) {\n                    // fix #368\n                    activeI = this.activeSeriesIndex;\n                } // get series\n\n\n                for (var j = 0; j < ser[i].data.length; j++) {\n                    if (typeof ser[i].data[j].y !== 'undefined') {\n                        if (Array.isArray(ser[i].data[j].y)) {\n                            this.twoDSeries.push(Utils.parseNumber(ser[i].data[j].y[ser[i].data[j].y.length - 1]));\n                        } else {\n                            this.twoDSeries.push(Utils.parseNumber(ser[i].data[j].y));\n                        }\n                    }\n\n                    if (typeof ser[i].data[j].goals !== 'undefined' && Array.isArray(ser[i].data[j].goals)) {\n                        if (typeof this.seriesGoals[i] === 'undefined') {\n                            this.seriesGoals[i] = [];\n                        }\n\n                        this.seriesGoals[i].push(ser[i].data[j].goals);\n                    } else {\n                        if (typeof this.seriesGoals[i] === 'undefined') {\n                            this.seriesGoals[i] = [];\n                        }\n\n                        this.seriesGoals[i].push(null);\n                    }\n                } // get seriesX\n\n\n                for (var _j2 = 0; _j2 < ser[activeI].data.length; _j2++) {\n                    var isXString = typeof ser[activeI].data[_j2].x === 'string';\n                    var isXArr = Array.isArray(ser[activeI].data[_j2].x);\n                    var isXDate = !isXArr && !!dt.isValidDate(ser[activeI].data[_j2].x.toString());\n\n                    if (isXString || isXDate) {\n                        // user supplied '01/01/2017' or a date string (a JS date object is not supported)\n                        if (isXString || cnf.xaxis.convertedCatToNumeric) {\n                            var isRangeColumn = gl.isBarHorizontal && gl.isRangeData;\n\n                            if (cnf.xaxis.type === 'datetime' && !isRangeColumn) {\n                                this.twoDSeriesX.push(dt.parseDate(ser[activeI].data[_j2].x));\n                            } else {\n                                // a category and not a numeric x value\n                                this.fallbackToCategory = true;\n                                this.twoDSeriesX.push(ser[activeI].data[_j2].x);\n                            }\n                        } else {\n                            if (cnf.xaxis.type === 'datetime') {\n                                this.twoDSeriesX.push(dt.parseDate(ser[activeI].data[_j2].x.toString()));\n                            } else {\n                                gl.dataFormatXNumeric = true;\n                                gl.isXNumeric = true;\n                                this.twoDSeriesX.push(parseFloat(ser[activeI].data[_j2].x));\n                            }\n                        }\n                    } else if (isXArr) {\n                        // a multiline label described in array format\n                        this.fallbackToCategory = true;\n                        this.twoDSeriesX.push(ser[activeI].data[_j2].x);\n                    } else {\n                        // a numeric value in x property\n                        gl.isXNumeric = true;\n                        gl.dataFormatXNumeric = true;\n                        this.twoDSeriesX.push(ser[activeI].data[_j2].x);\n                    }\n                }\n\n                if (ser[i].data[0] && typeof ser[i].data[0].z !== 'undefined') {\n                    for (var t = 0; t < ser[i].data.length; t++) {\n                        this.threeDSeries.push(ser[i].data[t].z);\n                    }\n\n                    gl.isDataXYZ = true;\n                }\n            }\n        }, {\n            key: \"handleRangeData\",\n            value: function handleRangeData(ser, i) {\n                var cnf = this.w.config;\n                var gl = this.w.globals;\n                var range = {};\n\n                if (this.isFormat2DArray()) {\n                    range = this.handleRangeDataFormat('array', ser, i);\n                } else if (this.isFormatXY()) {\n                    range = this.handleRangeDataFormat('xy', ser, i);\n                }\n\n                gl.seriesRangeStart.push(range.start);\n                gl.seriesRangeEnd.push(range.end);\n\n                if (cnf.xaxis.type === 'datetime') {\n                    gl.seriesRangeBarTimeline.push(range.rangeUniques);\n                } // check for overlaps to avoid clashes in a timeline chart\n\n\n                gl.seriesRangeBarTimeline.forEach(function(sr, si) {\n                    if (sr) {\n                        sr.forEach(function(sarr, sarri) {\n                            sarr.y.forEach(function(arr, arri) {\n                                for (var sri = 0; sri < sarr.y.length; sri++) {\n                                    if (arri !== sri) {\n                                        var range1y1 = arr.y1;\n                                        var range1y2 = arr.y2;\n                                        var range2y1 = sarr.y[sri].y1;\n                                        var range2y2 = sarr.y[sri].y2;\n\n                                        if (range1y1 <= range2y2 && range2y1 <= range1y2) {\n                                            if (sarr.overlaps.indexOf(arr.rangeName) < 0) {\n                                                sarr.overlaps.push(arr.rangeName);\n                                            }\n\n                                            if (sarr.overlaps.indexOf(sarr.y[sri].rangeName) < 0) {\n                                                sarr.overlaps.push(sarr.y[sri].rangeName);\n                                            }\n                                        }\n                                    }\n                                }\n                            });\n                        });\n                    }\n                });\n                return range;\n            }\n        }, {\n            key: \"handleCandleStickBoxData\",\n            value: function handleCandleStickBoxData(ser, i) {\n                var gl = this.w.globals;\n                var ohlc = {};\n\n                if (this.isFormat2DArray()) {\n                    ohlc = this.handleCandleStickBoxDataFormat('array', ser, i);\n                } else if (this.isFormatXY()) {\n                    ohlc = this.handleCandleStickBoxDataFormat('xy', ser, i);\n                }\n\n                gl.seriesCandleO[i] = ohlc.o;\n                gl.seriesCandleH[i] = ohlc.h;\n                gl.seriesCandleM[i] = ohlc.m;\n                gl.seriesCandleL[i] = ohlc.l;\n                gl.seriesCandleC[i] = ohlc.c;\n                return ohlc;\n            }\n        }, {\n            key: \"handleRangeDataFormat\",\n            value: function handleRangeDataFormat(format, ser, i) {\n                var rangeStart = [];\n                var rangeEnd = [];\n                var uniqueKeys = ser[i].data.filter(function(thing, index, self) {\n                    return index === self.findIndex(function(t) {\n                        return t.x === thing.x;\n                    });\n                }).map(function(r, index) {\n                    return {\n                        x: r.x,\n                        overlaps: [],\n                        y: []\n                    };\n                });\n                var err = 'Please provide [Start, End] values in valid format. Read more https://apexcharts.com/docs/series/#rangecharts';\n                var serObj = new Series(this.ctx);\n                var activeIndex = serObj.getActiveConfigSeriesIndex();\n\n                if (format === 'array') {\n                    if (ser[activeIndex].data[0][1].length !== 2) {\n                        throw new Error(err);\n                    }\n\n                    for (var j = 0; j < ser[i].data.length; j++) {\n                        rangeStart.push(ser[i].data[j][1][0]);\n                        rangeEnd.push(ser[i].data[j][1][1]);\n                    }\n                } else if (format === 'xy') {\n                    if (ser[activeIndex].data[0].y.length !== 2) {\n                        throw new Error(err);\n                    }\n\n                    var _loop = function _loop(_j3) {\n                        var id = Utils.randomId();\n                        var x = ser[i].data[_j3].x;\n                        var y = {\n                            y1: ser[i].data[_j3].y[0],\n                            y2: ser[i].data[_j3].y[1],\n                            rangeName: id\n                        }; // mutating config object by adding a new property\n                        // TODO: As this is specifically for timeline rangebar charts, update the docs mentioning the series only supports xy format\n\n                        ser[i].data[_j3].rangeName = id;\n                        var uI = uniqueKeys.findIndex(function(t) {\n                            return t.x === x;\n                        });\n                        uniqueKeys[uI].y.push(y);\n                        rangeStart.push(y.y1);\n                        rangeEnd.push(y.y2);\n                    };\n\n                    for (var _j3 = 0; _j3 < ser[i].data.length; _j3++) {\n                        _loop(_j3);\n                    }\n                }\n\n                return {\n                    start: rangeStart,\n                    end: rangeEnd,\n                    rangeUniques: uniqueKeys\n                };\n            }\n        }, {\n            key: \"handleCandleStickBoxDataFormat\",\n            value: function handleCandleStickBoxDataFormat(format, ser, i) {\n                var w = this.w;\n                var isBoxPlot = w.config.chart.type === 'boxPlot' || w.config.series[i].type === 'boxPlot';\n                var serO = [];\n                var serH = [];\n                var serM = [];\n                var serL = [];\n                var serC = [];\n\n                if (format === 'array') {\n                    if (isBoxPlot && ser[i].data[0].length === 6 || !isBoxPlot && ser[i].data[0].length === 5) {\n                        for (var j = 0; j < ser[i].data.length; j++) {\n                            serO.push(ser[i].data[j][1]);\n                            serH.push(ser[i].data[j][2]);\n\n                            if (isBoxPlot) {\n                                serM.push(ser[i].data[j][3]);\n                                serL.push(ser[i].data[j][4]);\n                                serC.push(ser[i].data[j][5]);\n                            } else {\n                                serL.push(ser[i].data[j][3]);\n                                serC.push(ser[i].data[j][4]);\n                            }\n                        }\n                    } else {\n                        for (var _j4 = 0; _j4 < ser[i].data.length; _j4++) {\n                            if (Array.isArray(ser[i].data[_j4][1])) {\n                                serO.push(ser[i].data[_j4][1][0]);\n                                serH.push(ser[i].data[_j4][1][1]);\n\n                                if (isBoxPlot) {\n                                    serM.push(ser[i].data[_j4][1][2]);\n                                    serL.push(ser[i].data[_j4][1][3]);\n                                    serC.push(ser[i].data[_j4][1][4]);\n                                } else {\n                                    serL.push(ser[i].data[_j4][1][2]);\n                                    serC.push(ser[i].data[_j4][1][3]);\n                                }\n                            }\n                        }\n                    }\n                } else if (format === 'xy') {\n                    for (var _j5 = 0; _j5 < ser[i].data.length; _j5++) {\n                        if (Array.isArray(ser[i].data[_j5].y)) {\n                            serO.push(ser[i].data[_j5].y[0]);\n                            serH.push(ser[i].data[_j5].y[1]);\n\n                            if (isBoxPlot) {\n                                serM.push(ser[i].data[_j5].y[2]);\n                                serL.push(ser[i].data[_j5].y[3]);\n                                serC.push(ser[i].data[_j5].y[4]);\n                            } else {\n                                serL.push(ser[i].data[_j5].y[2]);\n                                serC.push(ser[i].data[_j5].y[3]);\n                            }\n                        }\n                    }\n                }\n\n                return {\n                    o: serO,\n                    h: serH,\n                    m: serM,\n                    l: serL,\n                    c: serC\n                };\n            }\n        }, {\n            key: \"parseDataAxisCharts\",\n            value: function parseDataAxisCharts(ser) {\n                var _this = this;\n\n                var ctx = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.ctx;\n                var cnf = this.w.config;\n                var gl = this.w.globals;\n                var dt = new DateTime(ctx);\n                var xlabels = cnf.labels.length > 0 ? cnf.labels.slice() : cnf.xaxis.categories.slice();\n                gl.isTimelineBar = cnf.chart.type === 'rangeBar' && cnf.xaxis.type === 'datetime';\n\n                var handleDates = function handleDates() {\n                    for (var j = 0; j < xlabels.length; j++) {\n                        if (typeof xlabels[j] === 'string') {\n                            // user provided date strings\n                            var isDate = dt.isValidDate(xlabels[j]);\n\n                            if (isDate) {\n                                _this.twoDSeriesX.push(dt.parseDate(xlabels[j]));\n                            } else {\n                                throw new Error('You have provided invalid Date format. Please provide a valid JavaScript Date');\n                            }\n                        } else {\n                            // user provided timestamps\n                            _this.twoDSeriesX.push(xlabels[j]);\n                        }\n                    }\n                };\n\n                for (var i = 0; i < ser.length; i++) {\n                    this.twoDSeries = [];\n                    this.twoDSeriesX = [];\n                    this.threeDSeries = [];\n\n                    if (typeof ser[i].data === 'undefined') {\n                        console.error(\"It is a possibility that you may have not included 'data' property in series.\");\n                        return;\n                    }\n\n                    if (cnf.chart.type === 'rangeBar' || cnf.chart.type === 'rangeArea' || ser[i].type === 'rangeBar' || ser[i].type === 'rangeArea') {\n                        gl.isRangeData = true;\n                        this.handleRangeData(ser, i);\n                    }\n\n                    if (this.isMultiFormat()) {\n                        if (this.isFormat2DArray()) {\n                            this.handleFormat2DArray(ser, i);\n                        } else if (this.isFormatXY()) {\n                            this.handleFormatXY(ser, i);\n                        }\n\n                        if (cnf.chart.type === 'candlestick' || ser[i].type === 'candlestick' || cnf.chart.type === 'boxPlot' || ser[i].type === 'boxPlot') {\n                            this.handleCandleStickBoxData(ser, i);\n                        }\n\n                        gl.series.push(this.twoDSeries);\n                        gl.labels.push(this.twoDSeriesX);\n                        gl.seriesX.push(this.twoDSeriesX);\n                        gl.seriesGoals = this.seriesGoals;\n\n                        if (i === this.activeSeriesIndex && !this.fallbackToCategory) {\n                            gl.isXNumeric = true;\n                        }\n                    } else {\n                        if (cnf.xaxis.type === 'datetime') {\n                            // user didn't supplied [{x,y}] or [[x,y]], but single array in data.\n                            // Also labels/categories were supplied differently\n                            gl.isXNumeric = true;\n                            handleDates();\n                            gl.seriesX.push(this.twoDSeriesX);\n                        } else if (cnf.xaxis.type === 'numeric') {\n                            gl.isXNumeric = true;\n\n                            if (xlabels.length > 0) {\n                                this.twoDSeriesX = xlabels;\n                                gl.seriesX.push(this.twoDSeriesX);\n                            }\n                        }\n\n                        gl.labels.push(this.twoDSeriesX);\n                        var singleArray = ser[i].data.map(function(d) {\n                            return Utils.parseNumber(d);\n                        });\n                        gl.series.push(singleArray);\n                    }\n\n                    gl.seriesZ.push(this.threeDSeries);\n\n                    if (ser[i].name !== undefined) {\n                        gl.seriesNames.push(ser[i].name);\n                    } else {\n                        gl.seriesNames.push('series-' + parseInt(i + 1, 10));\n                    } // overrided default color if user inputs color with series data\n\n\n                    if (ser[i].color !== undefined) {\n                        gl.seriesColors.push(ser[i].color);\n                    } else {\n                        gl.seriesColors.push(undefined);\n                    }\n                }\n\n                return this.w;\n            }\n        }, {\n            key: \"parseDataNonAxisCharts\",\n            value: function parseDataNonAxisCharts(ser) {\n                    var gl = this.w.globals;\n                    var cnf = this.w.config;\n                    gl.series = ser.slice();\n                    gl.seriesNames = cnf.labels.slice();\n\n                    for (var i = 0; i < gl.series.length; i++) {\n                        if (gl.seriesNames[i] === undefined) {\n                            gl.seriesNames.push('series-' + (i + 1));\n                        }\n                    }\n\n                    return this.w;\n                }\n                /** User possibly set string categories in xaxis.categories or labels prop\n                 * Or didn't set xaxis labels at all - in which case we manually do it.\n                 * If user passed series data as [[3, 2], [4, 5]] or [{ x: 3, y: 55 }],\n                 * this shouldn't be called\n                 * @param {array} ser - the series which user passed to the config\n                 */\n\n        }, {\n            key: \"handleExternalLabelsData\",\n            value: function handleExternalLabelsData(ser) {\n                var cnf = this.w.config;\n                var gl = this.w.globals;\n\n                if (cnf.xaxis.categories.length > 0) {\n                    // user provided labels in xaxis.category prop\n                    gl.labels = cnf.xaxis.categories;\n                } else if (cnf.labels.length > 0) {\n                    // user provided labels in labels props\n                    gl.labels = cnf.labels.slice();\n                } else if (this.fallbackToCategory) {\n                    // user provided labels in x prop in [{ x: 3, y: 55 }] data, and those labels are already stored in gl.labels[0], so just re-arrange the gl.labels array\n                    gl.labels = gl.labels[0];\n\n                    if (gl.seriesRangeBarTimeline.length) {\n                        gl.seriesRangeBarTimeline.map(function(srt) {\n                            srt.forEach(function(sr) {\n                                if (gl.labels.indexOf(sr.x) < 0 && sr.x) {\n                                    gl.labels.push(sr.x);\n                                }\n                            });\n                        });\n                        gl.labels = gl.labels.filter(function(elem, pos, arr) {\n                            return arr.indexOf(elem) === pos;\n                        });\n                    }\n\n                    if (cnf.xaxis.convertedCatToNumeric) {\n                        var defaults = new Defaults(cnf);\n                        defaults.convertCatToNumericXaxis(cnf, this.ctx, gl.seriesX[0]);\n\n                        this._generateExternalLabels(ser);\n                    }\n                } else {\n                    this._generateExternalLabels(ser);\n                }\n            }\n        }, {\n            key: \"_generateExternalLabels\",\n            value: function _generateExternalLabels(ser) {\n                    var gl = this.w.globals;\n                    var cnf = this.w.config; // user didn't provided any labels, fallback to 1-2-3-4-5\n\n                    var labelArr = [];\n\n                    if (gl.axisCharts) {\n                        if (gl.series.length > 0) {\n                            for (var i = 0; i < gl.series[gl.maxValsInArrayIndex].length; i++) {\n                                labelArr.push(i + 1);\n                            }\n                        }\n\n                        gl.seriesX = []; // create gl.seriesX as it will be used in calculations of x positions\n\n                        for (var _i = 0; _i < ser.length; _i++) {\n                            gl.seriesX.push(labelArr);\n                        } // turn on the isXNumeric flag to allow minX and maxX to function properly\n\n\n                        gl.isXNumeric = true;\n                    } // no series to pull labels from, put a 0-10 series\n                    // possibly, user collapsed all series. Hence we can't work with above calc\n\n\n                    if (labelArr.length === 0) {\n                        labelArr = gl.axisCharts ? [] : gl.series.map(function(gls, glsi) {\n                            return glsi + 1;\n                        });\n\n                        for (var _i2 = 0; _i2 < ser.length; _i2++) {\n                            gl.seriesX.push(labelArr);\n                        }\n                    } // Finally, pass the labelArr in gl.labels which will be printed on x-axis\n\n\n                    gl.labels = labelArr;\n\n                    if (cnf.xaxis.convertedCatToNumeric) {\n                        gl.categoryLabels = labelArr.map(function(l) {\n                            return cnf.xaxis.labels.formatter(l);\n                        });\n                    } // Turn on this global flag to indicate no labels were provided by user\n\n\n                    gl.noLabelsProvided = true;\n                } // Segregate user provided data into appropriate vars\n\n        }, {\n            key: \"parseData\",\n            value: function parseData(ser) {\n                var w = this.w;\n                var cnf = w.config;\n                var gl = w.globals;\n                this.excludeCollapsedSeriesInYAxis(); // If we detected string in X prop of series, we fallback to category x-axis\n\n                this.fallbackToCategory = false;\n                this.ctx.core.resetGlobals();\n                this.ctx.core.isMultipleY();\n\n                if (gl.axisCharts) {\n                    // axisCharts includes line / area / column / scatter\n                    this.parseDataAxisCharts(ser);\n                } else {\n                    // non-axis charts are pie / donut\n                    this.parseDataNonAxisCharts(ser);\n                }\n\n                this.coreUtils.getLargestSeries(); // set Null values to 0 in all series when user hides/shows some series\n\n                if (cnf.chart.type === 'bar' && cnf.chart.stacked) {\n                    var series = new Series(this.ctx);\n                    gl.series = series.setNullSeriesToZeroValues(gl.series);\n                }\n\n                this.coreUtils.getSeriesTotals();\n\n                if (gl.axisCharts) {\n                    this.coreUtils.getStackedSeriesTotals();\n                }\n\n                this.coreUtils.getPercentSeries();\n\n                if (!gl.dataFormatXNumeric && (!gl.isXNumeric || cnf.xaxis.type === 'numeric' && cnf.labels.length === 0 && cnf.xaxis.categories.length === 0)) {\n                    // x-axis labels couldn't be detected; hence try searching every option in config\n                    this.handleExternalLabelsData(ser);\n                } // check for multiline xaxis\n\n\n                var catLabels = this.coreUtils.getCategoryLabels(gl.labels);\n\n                for (var l = 0; l < catLabels.length; l++) {\n                    if (Array.isArray(catLabels[l])) {\n                        gl.isMultiLineX = true;\n                        break;\n                    }\n                }\n            }\n        }, {\n            key: \"excludeCollapsedSeriesInYAxis\",\n            value: function excludeCollapsedSeriesInYAxis() {\n                var _this2 = this;\n\n                var w = this.w;\n                w.globals.ignoreYAxisIndexes = w.globals.collapsedSeries.map(function(collapsed, i) {\n                    // fix issue #1215\n                    // if stacked, not returning collapsed.index to preserve yaxis\n                    if (_this2.w.globals.isMultipleYAxis && !w.config.chart.stacked) {\n                        return collapsed.index;\n                    }\n                });\n            }\n        }]);\n\n        return Data;\n    }();\n\n    /**\n     * ApexCharts Formatter Class for setting value formatters for axes as well as tooltips.\n     *\n     * @module Formatters\n     **/\n\n    var Formatters = /*#__PURE__*/ function() {\n        function Formatters(ctx) {\n            _classCallCheck(this, Formatters);\n\n            this.ctx = ctx;\n            this.w = ctx.w;\n            this.tooltipKeyFormat = 'dd MMM';\n        }\n\n        _createClass(Formatters, [{\n            key: \"xLabelFormat\",\n            value: function xLabelFormat(fn, val, timestamp, opts) {\n                var w = this.w;\n\n                if (w.config.xaxis.type === 'datetime') {\n                    if (w.config.xaxis.labels.formatter === undefined) {\n                        // if user has not specified a custom formatter, use the default tooltip.x.format\n                        if (w.config.tooltip.x.formatter === undefined) {\n                            var datetimeObj = new DateTime(this.ctx);\n                            return datetimeObj.formatDate(datetimeObj.getDate(val), w.config.tooltip.x.format);\n                        }\n                    }\n                }\n\n                return fn(val, timestamp, opts);\n            }\n        }, {\n            key: \"defaultGeneralFormatter\",\n            value: function defaultGeneralFormatter(val) {\n                if (Array.isArray(val)) {\n                    return val.map(function(v) {\n                        return v;\n                    });\n                } else {\n                    return val;\n                }\n            }\n        }, {\n            key: \"defaultYFormatter\",\n            value: function defaultYFormatter(v, yaxe, i) {\n                var w = this.w;\n\n                if (Utils.isNumber(v)) {\n                    if (w.globals.yValueDecimal !== 0) {\n                        v = v.toFixed(yaxe.decimalsInFloat !== undefined ? yaxe.decimalsInFloat : w.globals.yValueDecimal);\n                    } else if (w.globals.maxYArr[i] - w.globals.minYArr[i] < 5) {\n                        v = v.toFixed(1);\n                    } else {\n                        v = v.toFixed(0);\n                    }\n                }\n\n                return v;\n            }\n        }, {\n            key: \"setLabelFormatters\",\n            value: function setLabelFormatters() {\n                var _this = this;\n\n                var w = this.w;\n\n                w.globals.xaxisTooltipFormatter = function(val) {\n                    return _this.defaultGeneralFormatter(val);\n                };\n\n                w.globals.ttKeyFormatter = function(val) {\n                    return _this.defaultGeneralFormatter(val);\n                };\n\n                w.globals.ttZFormatter = function(val) {\n                    return val;\n                };\n\n                w.globals.legendFormatter = function(val) {\n                    return _this.defaultGeneralFormatter(val);\n                }; // formatter function will always overwrite format property\n\n\n                if (w.config.xaxis.labels.formatter !== undefined) {\n                    w.globals.xLabelFormatter = w.config.xaxis.labels.formatter;\n                } else {\n                    w.globals.xLabelFormatter = function(val) {\n                        if (Utils.isNumber(val)) {\n                            if (!w.config.xaxis.convertedCatToNumeric && w.config.xaxis.type === 'numeric') {\n                                if (Utils.isNumber(w.config.xaxis.decimalsInFloat)) {\n                                    return val.toFixed(w.config.xaxis.decimalsInFloat);\n                                } else {\n                                    var diff = w.globals.maxX - w.globals.minX;\n\n                                    if (diff > 0 && diff < 100) {\n                                        return val.toFixed(1);\n                                    }\n\n                                    return val.toFixed(0);\n                                }\n                            }\n\n                            if (w.globals.isBarHorizontal) {\n                                var range = w.globals.maxY - w.globals.minYArr;\n\n                                if (range < 4) {\n                                    return val.toFixed(1);\n                                }\n                            }\n\n                            return val.toFixed(0);\n                        }\n\n                        return val;\n                    };\n                }\n\n                if (typeof w.config.tooltip.x.formatter === 'function') {\n                    w.globals.ttKeyFormatter = w.config.tooltip.x.formatter;\n                } else {\n                    w.globals.ttKeyFormatter = w.globals.xLabelFormatter;\n                }\n\n                if (typeof w.config.xaxis.tooltip.formatter === 'function') {\n                    w.globals.xaxisTooltipFormatter = w.config.xaxis.tooltip.formatter;\n                }\n\n                if (Array.isArray(w.config.tooltip.y)) {\n                    w.globals.ttVal = w.config.tooltip.y;\n                } else {\n                    if (w.config.tooltip.y.formatter !== undefined) {\n                        w.globals.ttVal = w.config.tooltip.y;\n                    }\n                }\n\n                if (w.config.tooltip.z.formatter !== undefined) {\n                    w.globals.ttZFormatter = w.config.tooltip.z.formatter;\n                } // legend formatter - if user wants to append any global values of series to legend text\n\n\n                if (w.config.legend.formatter !== undefined) {\n                    w.globals.legendFormatter = w.config.legend.formatter;\n                } // formatter function will always overwrite format property\n\n\n                w.config.yaxis.forEach(function(yaxe, i) {\n                    if (yaxe.labels.formatter !== undefined) {\n                        w.globals.yLabelFormatters[i] = yaxe.labels.formatter;\n                    } else {\n                        w.globals.yLabelFormatters[i] = function(val) {\n                            if (!w.globals.xyCharts) return val;\n\n                            if (Array.isArray(val)) {\n                                return val.map(function(v) {\n                                    return _this.defaultYFormatter(v, yaxe, i);\n                                });\n                            } else {\n                                return _this.defaultYFormatter(val, yaxe, i);\n                            }\n                        };\n                    }\n                });\n                return w.globals;\n            }\n        }, {\n            key: \"heatmapLabelFormatters\",\n            value: function heatmapLabelFormatters() {\n                var w = this.w;\n\n                if (w.config.chart.type === 'heatmap') {\n                    w.globals.yAxisScale[0].result = w.globals.seriesNames.slice(); //  get the longest string from the labels array and also apply label formatter to it\n\n                    var longest = w.globals.seriesNames.reduce(function(a, b) {\n                        return a.length > b.length ? a : b;\n                    }, 0);\n                    w.globals.yAxisScale[0].niceMax = longest;\n                    w.globals.yAxisScale[0].niceMin = longest;\n                }\n            }\n        }]);\n\n        return Formatters;\n    }();\n\n    var AxesUtils = /*#__PURE__*/ function() {\n        function AxesUtils(ctx) {\n            _classCallCheck(this, AxesUtils);\n\n            this.ctx = ctx;\n            this.w = ctx.w;\n        } // Based on the formatter function, get the label text and position\n\n\n        _createClass(AxesUtils, [{\n            key: \"getLabel\",\n            value: function getLabel(labels, timescaleLabels, x, i) {\n                var drawnLabels = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n                var fontSize = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : '12px';\n                var w = this.w;\n                var rawLabel = typeof labels[i] === 'undefined' ? '' : labels[i];\n                var label = rawLabel;\n                var xlbFormatter = w.globals.xLabelFormatter;\n                var customFormatter = w.config.xaxis.labels.formatter;\n                var isBold = false;\n                var xFormat = new Formatters(this.ctx);\n                var timestamp = rawLabel;\n                label = xFormat.xLabelFormat(xlbFormatter, rawLabel, timestamp, {\n                    i: i,\n                    dateFormatter: new DateTime(this.ctx).formatDate,\n                    w: w\n                });\n\n                if (customFormatter !== undefined) {\n                    label = customFormatter(rawLabel, labels[i], {\n                        i: i,\n                        dateFormatter: new DateTime(this.ctx).formatDate,\n                        w: w\n                    });\n                }\n\n                var determineHighestUnit = function determineHighestUnit(unit) {\n                    var highestUnit = null;\n                    timescaleLabels.forEach(function(t) {\n                        if (t.unit === 'month') {\n                            highestUnit = 'year';\n                        } else if (t.unit === 'day') {\n                            highestUnit = 'month';\n                        } else if (t.unit === 'hour') {\n                            highestUnit = 'day';\n                        } else if (t.unit === 'minute') {\n                            highestUnit = 'hour';\n                        }\n                    });\n                    return highestUnit === unit;\n                };\n\n                if (timescaleLabels.length > 0) {\n                    isBold = determineHighestUnit(timescaleLabels[i].unit);\n                    x = timescaleLabels[i].position;\n                    label = timescaleLabels[i].value;\n                } else {\n                    if (w.config.xaxis.type === 'datetime' && customFormatter === undefined) {\n                        label = '';\n                    }\n                }\n\n                if (typeof label === 'undefined') label = '';\n                label = Array.isArray(label) ? label : label.toString();\n                var graphics = new Graphics(this.ctx);\n                var textRect = {};\n\n                if (w.globals.rotateXLabels) {\n                    textRect = graphics.getTextRects(label, parseInt(fontSize, 10), null, \"rotate(\".concat(w.config.xaxis.labels.rotate, \" 0 0)\"), false);\n                } else {\n                    textRect = graphics.getTextRects(label, parseInt(fontSize, 10));\n                }\n\n                var allowDuplicatesInTimeScale = !w.config.xaxis.labels.showDuplicates && this.ctx.timeScale;\n\n                if (!Array.isArray(label) && (label.indexOf('NaN') === 0 || label.toLowerCase().indexOf('invalid') === 0 || label.toLowerCase().indexOf('infinity') >= 0 || drawnLabels.indexOf(label) >= 0 && allowDuplicatesInTimeScale)) {\n                    label = '';\n                }\n\n                return {\n                    x: x,\n                    text: label,\n                    textRect: textRect,\n                    isBold: isBold\n                };\n            }\n        }, {\n            key: \"checkLabelBasedOnTickamount\",\n            value: function checkLabelBasedOnTickamount(i, label, labelsLen) {\n                var w = this.w;\n                var ticks = w.config.xaxis.tickAmount;\n                if (ticks === 'dataPoints') ticks = Math.round(w.globals.gridWidth / 120);\n                if (ticks > labelsLen) return label;\n                var tickMultiple = Math.round(labelsLen / (ticks + 1));\n\n                if (i % tickMultiple === 0) {\n                    return label;\n                } else {\n                    label.text = '';\n                }\n\n                return label;\n            }\n        }, {\n            key: \"checkForOverflowingLabels\",\n            value: function checkForOverflowingLabels(i, label, labelsLen, drawnLabels, drawnLabelsRects) {\n                var w = this.w;\n\n                if (i === 0) {\n                    // check if first label is being truncated\n                    if (w.globals.skipFirstTimelinelabel) {\n                        label.text = '';\n                    }\n                }\n\n                if (i === labelsLen - 1) {\n                    // check if last label is being truncated\n                    if (w.globals.skipLastTimelinelabel) {\n                        label.text = '';\n                    }\n                }\n\n                if (w.config.xaxis.labels.hideOverlappingLabels && drawnLabels.length > 0) {\n                    var prev = drawnLabelsRects[drawnLabelsRects.length - 1];\n\n                    if (label.x < prev.textRect.width / (w.globals.rotateXLabels ? Math.abs(w.config.xaxis.labels.rotate) / 12 : 1.01) + prev.x) {\n                        label.text = '';\n                    }\n                }\n\n                return label;\n            }\n        }, {\n            key: \"checkForReversedLabels\",\n            value: function checkForReversedLabels(i, labels) {\n                var w = this.w;\n\n                if (w.config.yaxis[i] && w.config.yaxis[i].reversed) {\n                    labels.reverse();\n                }\n\n                return labels;\n            }\n        }, {\n            key: \"isYAxisHidden\",\n            value: function isYAxisHidden(index) {\n                    var w = this.w;\n                    var coreUtils = new CoreUtils(this.ctx);\n                    return !w.config.yaxis[index].show || !w.config.yaxis[index].showForNullSeries && coreUtils.isSeriesNull(index) && w.globals.collapsedSeriesIndices.indexOf(index) === -1;\n                } // get the label color for y-axis\n                // realIndex is the actual series index, while i is the tick Index\n\n        }, {\n            key: \"getYAxisForeColor\",\n            value: function getYAxisForeColor(yColors, realIndex) {\n                var w = this.w;\n\n                if (Array.isArray(yColors) && w.globals.yAxisScale[realIndex]) {\n                    this.ctx.theme.pushExtraColors(yColors, w.globals.yAxisScale[realIndex].result.length, false);\n                }\n\n                return yColors;\n            }\n        }, {\n            key: \"drawYAxisTicks\",\n            value: function drawYAxisTicks(x, tickAmount, axisBorder, axisTicks, realIndex, labelsDivider, elYaxis) {\n                var w = this.w;\n                var graphics = new Graphics(this.ctx); // initial label position = 0;\n\n                var t = w.globals.translateY;\n\n                if (axisTicks.show && tickAmount > 0) {\n                    if (w.config.yaxis[realIndex].opposite === true) x = x + axisTicks.width;\n\n                    for (var i = tickAmount; i >= 0; i--) {\n                        var tY = t + tickAmount / 10 + w.config.yaxis[realIndex].labels.offsetY - 1;\n\n                        if (w.globals.isBarHorizontal) {\n                            tY = labelsDivider * i;\n                        }\n\n                        if (w.config.chart.type === 'heatmap') {\n                            tY = tY + labelsDivider / 2;\n                        }\n\n                        var elTick = graphics.drawLine(x + axisBorder.offsetX - axisTicks.width + axisTicks.offsetX, tY + axisTicks.offsetY, x + axisBorder.offsetX + axisTicks.offsetX, tY + axisTicks.offsetY, axisTicks.color);\n                        elYaxis.add(elTick);\n                        t = t + labelsDivider;\n                    }\n                }\n            }\n        }]);\n\n        return AxesUtils;\n    }();\n\n    var Exports = /*#__PURE__*/ function() {\n        function Exports(ctx) {\n            _classCallCheck(this, Exports);\n\n            this.ctx = ctx;\n            this.w = ctx.w;\n        }\n\n        _createClass(Exports, [{\n            key: \"scaleSvgNode\",\n            value: function scaleSvgNode(svg, scale) {\n                // get current both width and height of the svg\n                var svgWidth = parseFloat(svg.getAttributeNS(null, 'width'));\n                var svgHeight = parseFloat(svg.getAttributeNS(null, 'height')); // set new width and height based on the scale\n\n                svg.setAttributeNS(null, 'width', svgWidth * scale);\n                svg.setAttributeNS(null, 'height', svgHeight * scale);\n                svg.setAttributeNS(null, 'viewBox', '0 0 ' + svgWidth + ' ' + svgHeight);\n            }\n        }, {\n            key: \"fixSvgStringForIe11\",\n            value: function fixSvgStringForIe11(svgData) {\n                // IE11 generates broken SVG that we have to fix by using regex\n                if (!Utils.isIE11()) {\n                    // not IE11 - noop\n                    return svgData;\n                } // replace second occurrence of \"xmlns\" attribute with \"xmlns:xlink\" with correct url + add xmlns:svgjs\n\n\n                var nXmlnsSeen = 0;\n                var result = svgData.replace(/xmlns=\"http:\\/\\/www.w3.org\\/2000\\/svg\"/g, function(match) {\n                    nXmlnsSeen++;\n                    return nXmlnsSeen === 2 ? 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:svgjs=\"http://svgjs.com/svgjs\"' : match;\n                }); // remove the invalid empty namespace declarations\n\n                result = result.replace(/xmlns:NS\\d+=\"\"/g, ''); // remove these broken namespaces from attributes\n\n                result = result.replace(/NS\\d+:(\\w+:\\w+=\")/g, '$1');\n                return result;\n            }\n        }, {\n            key: \"getSvgString\",\n            value: function getSvgString(scale) {\n                var svgString = this.w.globals.dom.Paper.svg(); // in case the scale is different than 1, the svg needs to be rescaled\n\n                if (scale !== 1) {\n                    // clone the svg node so it remains intact in the UI\n                    var svgNode = this.w.globals.dom.Paper.node.cloneNode(true); // scale the image\n\n                    this.scaleSvgNode(svgNode, scale); // get the string representation of the svgNode\n\n                    svgString = new XMLSerializer().serializeToString(svgNode);\n                }\n\n                return this.fixSvgStringForIe11(svgString);\n            }\n        }, {\n            key: \"cleanup\",\n            value: function cleanup() {\n                var w = this.w; // hide some elements to avoid printing them on exported svg\n\n                var xcrosshairs = w.globals.dom.baseEl.getElementsByClassName('apexcharts-xcrosshairs');\n                var ycrosshairs = w.globals.dom.baseEl.getElementsByClassName('apexcharts-ycrosshairs');\n                var zoomSelectionRects = w.globals.dom.baseEl.querySelectorAll('.apexcharts-zoom-rect, .apexcharts-selection-rect');\n                Array.prototype.forEach.call(zoomSelectionRects, function(z) {\n                    z.setAttribute('width', 0);\n                });\n\n                if (xcrosshairs && xcrosshairs[0]) {\n                    xcrosshairs[0].setAttribute('x', -500);\n                    xcrosshairs[0].setAttribute('x1', -500);\n                    xcrosshairs[0].setAttribute('x2', -500);\n                }\n\n                if (ycrosshairs && ycrosshairs[0]) {\n                    ycrosshairs[0].setAttribute('y', -100);\n                    ycrosshairs[0].setAttribute('y1', -100);\n                    ycrosshairs[0].setAttribute('y2', -100);\n                }\n            }\n        }, {\n            key: \"svgUrl\",\n            value: function svgUrl() {\n                this.cleanup();\n                var svgData = this.getSvgString();\n                var svgBlob = new Blob([svgData], {\n                    type: 'image/svg+xml;charset=utf-8'\n                });\n                return URL.createObjectURL(svgBlob);\n            }\n        }, {\n            key: \"dataURI\",\n            value: function dataURI(options) {\n                var _this = this;\n\n                return new Promise(function(resolve) {\n                    var w = _this.w;\n                    var scale = options ? options.scale || options.width / w.globals.svgWidth : 1;\n\n                    _this.cleanup();\n\n                    var canvas = document.createElement('canvas');\n                    canvas.width = w.globals.svgWidth * scale;\n                    canvas.height = parseInt(w.globals.dom.elWrap.style.height, 10) * scale; // because of resizeNonAxisCharts\n\n                    var canvasBg = w.config.chart.background === 'transparent' ? '#fff' : w.config.chart.background;\n                    var ctx = canvas.getContext('2d');\n                    ctx.fillStyle = canvasBg;\n                    ctx.fillRect(0, 0, canvas.width * scale, canvas.height * scale);\n\n                    var svgData = _this.getSvgString(scale);\n\n                    if (window.canvg && Utils.isIE11()) {\n                        // use canvg as a polyfill to workaround ie11 considering a canvas with loaded svg 'unsafe'\n                        // without ignoreClear we lose our background color; without ignoreDimensions some grid lines become invisible\n                        var v = window.canvg.Canvg.fromString(ctx, svgData, {\n                            ignoreClear: true,\n                            ignoreDimensions: true\n                        }); // render the svg to canvas\n\n                        v.start();\n                        var blob = canvas.msToBlob(); // dispose - missing this will cause a memory leak\n\n                        v.stop();\n                        resolve({\n                            blob: blob\n                        });\n                    } else {\n                        var svgUrl = 'data:image/svg+xml,' + encodeURIComponent(svgData);\n                        var img = new Image();\n                        img.crossOrigin = 'anonymous';\n\n                        img.onload = function() {\n                            ctx.drawImage(img, 0, 0);\n\n                            if (canvas.msToBlob) {\n                                // IE and Edge can't navigate to data urls, so we return the blob instead\n                                var _blob = canvas.msToBlob();\n\n                                resolve({\n                                    blob: _blob\n                                });\n                            } else {\n                                var imgURI = canvas.toDataURL('image/png');\n                                resolve({\n                                    imgURI: imgURI\n                                });\n                            }\n                        };\n\n                        img.src = svgUrl;\n                    }\n                });\n            }\n        }, {\n            key: \"exportToSVG\",\n            value: function exportToSVG() {\n                this.triggerDownload(this.svgUrl(), this.w.config.chart.toolbar.export.svg.filename, '.svg');\n            }\n        }, {\n            key: \"exportToPng\",\n            value: function exportToPng() {\n                var _this2 = this;\n\n                this.dataURI().then(function(_ref) {\n                    var imgURI = _ref.imgURI,\n                        blob = _ref.blob;\n\n                    if (blob) {\n                        navigator.msSaveOrOpenBlob(blob, _this2.w.globals.chartID + '.png');\n                    } else {\n                        _this2.triggerDownload(imgURI, _this2.w.config.chart.toolbar.export.png.filename, '.png');\n                    }\n                });\n            }\n        }, {\n            key: \"exportToCSV\",\n            value: function exportToCSV(_ref2) {\n                var _this3 = this;\n\n                var series = _ref2.series,\n                    columnDelimiter = _ref2.columnDelimiter,\n                    _ref2$lineDelimiter = _ref2.lineDelimiter,\n                    lineDelimiter = _ref2$lineDelimiter === void 0 ? '\\n' : _ref2$lineDelimiter;\n                var w = this.w;\n                var columns = [];\n                var rows = [];\n                var result = \"data:text/csv;charset=utf-8,\\uFEFF\";\n\n                var isTimeStamp = function isTimeStamp(num) {\n                    return w.config.xaxis.type === 'datetime' && String(num).length >= 10;\n                };\n\n                var dataFormat = new Data(this.ctx);\n                var axesUtils = new AxesUtils(this.ctx);\n\n                var getCat = function getCat(i) {\n                    var cat = ''; // pie / donut/ radial\n\n                    if (!w.globals.axisCharts) {\n                        cat = w.config.labels[i];\n                    } else {\n                        // xy charts\n                        // non datetime\n                        if (w.config.xaxis.type === 'category' || w.config.xaxis.convertedCatToNumeric) {\n                            if (w.globals.isBarHorizontal) {\n                                var lbFormatter = w.globals.yLabelFormatters[0];\n                                var sr = new Series(_this3.ctx);\n                                var activeSeries = sr.getActiveConfigSeriesIndex();\n                                cat = lbFormatter(w.globals.labels[i], {\n                                    seriesIndex: activeSeries,\n                                    dataPointIndex: i,\n                                    w: w\n                                });\n                            } else {\n                                cat = axesUtils.getLabel(w.globals.labels, w.globals.timescaleLabels, 0, i).text;\n                            }\n                        } // datetime, but labels specified in categories or labels\n\n\n                        if (w.config.xaxis.type === 'datetime') {\n                            if (w.config.xaxis.categories.length) {\n                                cat = w.config.xaxis.categories[i];\n                            } else if (w.config.labels.length) {\n                                cat = w.config.labels[i];\n                            }\n                        }\n                    }\n\n                    if (Array.isArray(cat)) {\n                        cat = cat.join(' ');\n                    }\n\n                    return Utils.isNumber(cat) ? cat : cat.split(columnDelimiter).join('');\n                };\n\n                var handleAxisRowsColumns = function handleAxisRowsColumns(s, sI) {\n                    if (columns.length && sI === 0) {\n                        rows.push(columns.join(columnDelimiter));\n                    }\n\n                    if (s.data && s.data.length) {\n                        for (var i = 0; i < s.data.length; i++) {\n                            columns = [];\n                            var cat = getCat(i);\n\n                            if (!cat) {\n                                if (dataFormat.isFormatXY()) {\n                                    cat = series[sI].data[i].x;\n                                } else if (dataFormat.isFormat2DArray()) {\n                                    cat = series[sI].data[i] ? series[sI].data[i][0] : '';\n                                }\n                            }\n\n                            if (sI === 0) {\n                                columns.push(isTimeStamp(cat) ? w.config.chart.toolbar.export.csv.dateFormatter(cat) : Utils.isNumber(cat) ? cat : cat.split(columnDelimiter).join(''));\n\n                                for (var ci = 0; ci < w.globals.series.length; ci++) {\n                                    columns.push(w.globals.series[ci][i]);\n                                }\n                            }\n\n                            if (w.config.chart.type === 'candlestick' || s.type && s.type === 'candlestick') {\n                                columns.pop();\n                                columns.push(w.globals.seriesCandleO[sI][i]);\n                                columns.push(w.globals.seriesCandleH[sI][i]);\n                                columns.push(w.globals.seriesCandleL[sI][i]);\n                                columns.push(w.globals.seriesCandleC[sI][i]);\n                            }\n\n                            if (w.config.chart.type === 'boxPlot' || s.type && s.type === 'boxPlot') {\n                                columns.pop();\n                                columns.push(w.globals.seriesCandleO[sI][i]);\n                                columns.push(w.globals.seriesCandleH[sI][i]);\n                                columns.push(w.globals.seriesCandleM[sI][i]);\n                                columns.push(w.globals.seriesCandleL[sI][i]);\n                                columns.push(w.globals.seriesCandleC[sI][i]);\n                            }\n\n                            if (w.config.chart.type === 'rangeBar') {\n                                columns.pop();\n                                columns.push(w.globals.seriesRangeStart[sI][i]);\n                                columns.push(w.globals.seriesRangeEnd[sI][i]);\n                            }\n\n                            if (columns.length) {\n                                rows.push(columns.join(columnDelimiter));\n                            }\n                        }\n                    }\n                };\n\n                columns.push(w.config.chart.toolbar.export.csv.headerCategory);\n                series.map(function(s, sI) {\n                    var sname = s.name ? s.name : \"series-\".concat(sI);\n\n                    if (w.globals.axisCharts) {\n                        columns.push(sname.split(columnDelimiter).join('') ? sname.split(columnDelimiter).join('') : \"series-\".concat(sI));\n                    }\n                });\n\n                if (!w.globals.axisCharts) {\n                    columns.push(w.config.chart.toolbar.export.csv.headerValue);\n                    rows.push(columns.join(columnDelimiter));\n                }\n\n                series.map(function(s, sI) {\n                    if (w.globals.axisCharts) {\n                        handleAxisRowsColumns(s, sI);\n                    } else {\n                        columns = [];\n                        columns.push(w.globals.labels[sI].split(columnDelimiter).join(''));\n                        columns.push(w.globals.series[sI]);\n                        rows.push(columns.join(columnDelimiter));\n                    }\n                });\n                result += rows.join(lineDelimiter);\n                this.triggerDownload(encodeURI(result), w.config.chart.toolbar.export.csv.filename, '.csv');\n            }\n        }, {\n            key: \"triggerDownload\",\n            value: function triggerDownload(href, filename, ext) {\n                var downloadLink = document.createElement('a');\n                downloadLink.href = href;\n                downloadLink.download = (filename ? filename : this.w.globals.chartID) + ext;\n                document.body.appendChild(downloadLink);\n                downloadLink.click();\n                document.body.removeChild(downloadLink);\n            }\n        }]);\n\n        return Exports;\n    }();\n\n    /**\n     * ApexCharts XAxis Class for drawing X-Axis.\n     *\n     * @module XAxis\n     **/\n\n    var XAxis = /*#__PURE__*/ function() {\n        function XAxis(ctx) {\n            _classCallCheck(this, XAxis);\n\n            this.ctx = ctx;\n            this.w = ctx.w;\n            var w = this.w;\n            this.axesUtils = new AxesUtils(ctx);\n            this.xaxisLabels = w.globals.labels.slice();\n\n            if (w.globals.timescaleLabels.length > 0 && !w.globals.isBarHorizontal) {\n                //  timeline labels are there and chart is not rangeabr timeline\n                this.xaxisLabels = w.globals.timescaleLabels.slice();\n            }\n\n            if (w.config.xaxis.overwriteCategories) {\n                this.xaxisLabels = w.config.xaxis.overwriteCategories;\n            }\n\n            this.drawnLabels = [];\n            this.drawnLabelsRects = [];\n\n            if (w.config.xaxis.position === 'top') {\n                this.offY = 0;\n            } else {\n                this.offY = w.globals.gridHeight + 1;\n            }\n\n            this.offY = this.offY + w.config.xaxis.axisBorder.offsetY;\n            this.isCategoryBarHorizontal = w.config.chart.type === 'bar' && w.config.plotOptions.bar.horizontal;\n            this.xaxisFontSize = w.config.xaxis.labels.style.fontSize;\n            this.xaxisFontFamily = w.config.xaxis.labels.style.fontFamily;\n            this.xaxisForeColors = w.config.xaxis.labels.style.colors;\n            this.xaxisBorderWidth = w.config.xaxis.axisBorder.width;\n\n            if (this.isCategoryBarHorizontal) {\n                this.xaxisBorderWidth = w.config.yaxis[0].axisBorder.width.toString();\n            }\n\n            if (this.xaxisBorderWidth.indexOf('%') > -1) {\n                this.xaxisBorderWidth = w.globals.gridWidth * parseInt(this.xaxisBorderWidth, 10) / 100;\n            } else {\n                this.xaxisBorderWidth = parseInt(this.xaxisBorderWidth, 10);\n            }\n\n            this.xaxisBorderHeight = w.config.xaxis.axisBorder.height; // For bars, we will only consider single y xais,\n            // as we are not providing multiple yaxis for bar charts\n\n            this.yaxis = w.config.yaxis[0];\n        }\n\n        _createClass(XAxis, [{\n            key: \"drawXaxis\",\n            value: function drawXaxis() {\n                    var _this = this;\n\n                    var w = this.w;\n                    var graphics = new Graphics(this.ctx);\n                    var elXaxis = graphics.group({\n                        class: 'apexcharts-xaxis',\n                        transform: \"translate(\".concat(w.config.xaxis.offsetX, \", \").concat(w.config.xaxis.offsetY, \")\")\n                    });\n                    var elXaxisTexts = graphics.group({\n                        class: 'apexcharts-xaxis-texts-g',\n                        transform: \"translate(\".concat(w.globals.translateXAxisX, \", \").concat(w.globals.translateXAxisY, \")\")\n                    });\n                    elXaxis.add(elXaxisTexts);\n                    var colWidth; // initial x Position (keep adding column width in the loop)\n\n                    var xPos = w.globals.padHorizontal;\n                    var labels = [];\n\n                    for (var i = 0; i < this.xaxisLabels.length; i++) {\n                        labels.push(this.xaxisLabels[i]);\n                    }\n\n                    var labelsLen = labels.length;\n\n                    if (w.globals.isXNumeric) {\n                        var len = labelsLen > 1 ? labelsLen - 1 : labelsLen;\n                        colWidth = w.globals.gridWidth / len;\n                        xPos = xPos + colWidth / 2 + w.config.xaxis.labels.offsetX;\n                    } else {\n                        colWidth = w.globals.gridWidth / labels.length;\n                        xPos = xPos + colWidth + w.config.xaxis.labels.offsetX;\n                    }\n\n                    var _loop = function _loop(_i) {\n                        var x = xPos - colWidth / 2 + w.config.xaxis.labels.offsetX;\n\n                        if (_i === 0 && labelsLen === 1 && colWidth / 2 === xPos && w.globals.dataPoints === 1) {\n                            // single datapoint\n                            x = w.globals.gridWidth / 2;\n                        }\n\n                        var label = _this.axesUtils.getLabel(labels, w.globals.timescaleLabels, x, _i, _this.drawnLabels, _this.xaxisFontSize);\n\n                        var offsetYCorrection = 28;\n\n                        if (w.globals.rotateXLabels) {\n                            offsetYCorrection = 22;\n                        }\n\n                        var isCategoryTickAmounts = typeof w.config.xaxis.tickAmount !== 'undefined' && w.config.xaxis.tickAmount !== 'dataPoints' && w.config.xaxis.type !== 'datetime';\n\n                        if (isCategoryTickAmounts) {\n                            label = _this.axesUtils.checkLabelBasedOnTickamount(_i, label, labelsLen);\n                        } else {\n                            label = _this.axesUtils.checkForOverflowingLabels(_i, label, labelsLen, _this.drawnLabels, _this.drawnLabelsRects);\n                        }\n\n                        var getCatForeColor = function getCatForeColor() {\n                            return w.config.xaxis.convertedCatToNumeric ? _this.xaxisForeColors[w.globals.minX + _i - 1] : _this.xaxisForeColors[_i];\n                        };\n\n                        if (label.text) {\n                            w.globals.xaxisLabelsCount++;\n                        }\n\n                        if (w.config.xaxis.labels.show) {\n                            var elText = graphics.drawText({\n                                x: label.x,\n                                y: _this.offY + w.config.xaxis.labels.offsetY + offsetYCorrection - (w.config.xaxis.position === 'top' ? w.globals.xAxisHeight + w.config.xaxis.axisTicks.height - 2 : 0),\n                                text: label.text,\n                                textAnchor: 'middle',\n                                fontWeight: label.isBold ? 600 : w.config.xaxis.labels.style.fontWeight,\n                                fontSize: _this.xaxisFontSize,\n                                fontFamily: _this.xaxisFontFamily,\n                                foreColor: Array.isArray(_this.xaxisForeColors) ? getCatForeColor() : _this.xaxisForeColors,\n                                isPlainText: false,\n                                cssClass: 'apexcharts-xaxis-label ' + w.config.xaxis.labels.style.cssClass\n                            });\n                            elXaxisTexts.add(elText);\n                            var elTooltipTitle = document.createElementNS(w.globals.SVGNS, 'title');\n                            elTooltipTitle.textContent = Array.isArray(label.text) ? label.text.join(' ') : label.text;\n                            elText.node.appendChild(elTooltipTitle);\n\n                            if (label.text !== '') {\n                                _this.drawnLabels.push(label.text);\n\n                                _this.drawnLabelsRects.push(label);\n                            }\n                        }\n\n                        xPos = xPos + colWidth;\n                    };\n\n                    for (var _i = 0; _i <= labelsLen - 1; _i++) {\n                        _loop(_i);\n                    }\n\n                    if (w.config.xaxis.title.text !== undefined) {\n                        var elXaxisTitle = graphics.group({\n                            class: 'apexcharts-xaxis-title'\n                        });\n                        var elXAxisTitleText = graphics.drawText({\n                            x: w.globals.gridWidth / 2 + w.config.xaxis.title.offsetX,\n                            y: this.offY + parseFloat(this.xaxisFontSize) + w.globals.xAxisLabelsHeight + w.config.xaxis.title.offsetY,\n                            text: w.config.xaxis.title.text,\n                            textAnchor: 'middle',\n                            fontSize: w.config.xaxis.title.style.fontSize,\n                            fontFamily: w.config.xaxis.title.style.fontFamily,\n                            fontWeight: w.config.xaxis.title.style.fontWeight,\n                            foreColor: w.config.xaxis.title.style.color,\n                            cssClass: 'apexcharts-xaxis-title-text ' + w.config.xaxis.title.style.cssClass\n                        });\n                        elXaxisTitle.add(elXAxisTitleText);\n                        elXaxis.add(elXaxisTitle);\n                    }\n\n                    if (w.config.xaxis.axisBorder.show) {\n                        var offX = w.globals.barPadForNumericAxis;\n                        var elHorzLine = graphics.drawLine(w.globals.padHorizontal + w.config.xaxis.axisBorder.offsetX - offX, this.offY, this.xaxisBorderWidth + offX, this.offY, w.config.xaxis.axisBorder.color, 0, this.xaxisBorderHeight);\n                        elXaxis.add(elHorzLine);\n                    }\n\n                    return elXaxis;\n                } // this actually becomes the vertical axis (for bar charts)\n\n        }, {\n            key: \"drawXaxisInversed\",\n            value: function drawXaxisInversed(realIndex) {\n                var _this2 = this;\n\n                var w = this.w;\n                var graphics = new Graphics(this.ctx);\n                var translateYAxisX = w.config.yaxis[0].opposite ? w.globals.translateYAxisX[realIndex] : 0;\n                var elYaxis = graphics.group({\n                    class: 'apexcharts-yaxis apexcharts-xaxis-inversed',\n                    rel: realIndex\n                });\n                var elYaxisTexts = graphics.group({\n                    class: 'apexcharts-yaxis-texts-g apexcharts-xaxis-inversed-texts-g',\n                    transform: 'translate(' + translateYAxisX + ', 0)'\n                });\n                elYaxis.add(elYaxisTexts);\n                var colHeight; // initial x Position (keep adding column width in the loop)\n\n                var yPos;\n                var labels = [];\n\n                if (w.config.yaxis[realIndex].show) {\n                    for (var i = 0; i < this.xaxisLabels.length; i++) {\n                        labels.push(this.xaxisLabels[i]);\n                    }\n                }\n\n                colHeight = w.globals.gridHeight / labels.length;\n                yPos = -(colHeight / 2.2);\n                var lbFormatter = w.globals.yLabelFormatters[0];\n                var ylabels = w.config.yaxis[0].labels;\n\n                if (ylabels.show) {\n                    var _loop2 = function _loop2(_i2) {\n                        var label = typeof labels[_i2] === 'undefined' ? '' : labels[_i2];\n                        label = lbFormatter(label, {\n                            seriesIndex: realIndex,\n                            dataPointIndex: _i2,\n                            w: w\n                        });\n\n                        var yColors = _this2.axesUtils.getYAxisForeColor(ylabels.style.colors, realIndex);\n\n                        var getForeColor = function getForeColor() {\n                            return Array.isArray(yColors) ? yColors[_i2] : yColors;\n                        };\n\n                        var multiY = 0;\n\n                        if (Array.isArray(label)) {\n                            multiY = label.length / 2 * parseInt(ylabels.style.fontSize, 10);\n                        }\n\n                        var elLabel = graphics.drawText({\n                            x: ylabels.offsetX - 15,\n                            y: yPos + colHeight + ylabels.offsetY - multiY,\n                            text: label,\n                            textAnchor: _this2.yaxis.opposite ? 'start' : 'end',\n                            foreColor: getForeColor(),\n                            fontSize: ylabels.style.fontSize,\n                            fontFamily: ylabels.style.fontFamily,\n                            fontWeight: ylabels.style.fontWeight,\n                            isPlainText: false,\n                            cssClass: 'apexcharts-yaxis-label ' + ylabels.style.cssClass\n                        });\n                        elYaxisTexts.add(elLabel);\n                        var elTooltipTitle = document.createElementNS(w.globals.SVGNS, 'title');\n                        elTooltipTitle.textContent = Array.isArray(label) ? label.join(' ') : label;\n                        elLabel.node.appendChild(elTooltipTitle);\n\n                        if (w.config.yaxis[realIndex].labels.rotate !== 0) {\n                            var labelRotatingCenter = graphics.rotateAroundCenter(elLabel.node);\n                            elLabel.node.setAttribute('transform', \"rotate(\".concat(w.config.yaxis[realIndex].labels.rotate, \" 0 \").concat(labelRotatingCenter.y, \")\"));\n                        }\n\n                        yPos = yPos + colHeight;\n                    };\n\n                    for (var _i2 = 0; _i2 <= labels.length - 1; _i2++) {\n                        _loop2(_i2);\n                    }\n                }\n\n                if (w.config.yaxis[0].title.text !== undefined) {\n                    var elXaxisTitle = graphics.group({\n                        class: 'apexcharts-yaxis-title apexcharts-xaxis-title-inversed',\n                        transform: 'translate(' + translateYAxisX + ', 0)'\n                    });\n                    var elXAxisTitleText = graphics.drawText({\n                        x: 0,\n                        y: w.globals.gridHeight / 2,\n                        text: w.config.yaxis[0].title.text,\n                        textAnchor: 'middle',\n                        foreColor: w.config.yaxis[0].title.style.color,\n                        fontSize: w.config.yaxis[0].title.style.fontSize,\n                        fontWeight: w.config.yaxis[0].title.style.fontWeight,\n                        fontFamily: w.config.yaxis[0].title.style.fontFamily,\n                        cssClass: 'apexcharts-yaxis-title-text ' + w.config.yaxis[0].title.style.cssClass\n                    });\n                    elXaxisTitle.add(elXAxisTitleText);\n                    elYaxis.add(elXaxisTitle);\n                }\n\n                var offX = 0;\n\n                if (this.isCategoryBarHorizontal && w.config.yaxis[0].opposite) {\n                    offX = w.globals.gridWidth;\n                }\n\n                var axisBorder = w.config.xaxis.axisBorder;\n\n                if (axisBorder.show) {\n                    var elVerticalLine = graphics.drawLine(w.globals.padHorizontal + axisBorder.offsetX + offX, 1 + axisBorder.offsetY, w.globals.padHorizontal + axisBorder.offsetX + offX, w.globals.gridHeight + axisBorder.offsetY, axisBorder.color, 0);\n                    elYaxis.add(elVerticalLine);\n                }\n\n                if (w.config.yaxis[0].axisTicks.show) {\n                    this.axesUtils.drawYAxisTicks(offX, labels.length, w.config.yaxis[0].axisBorder, w.config.yaxis[0].axisTicks, 0, colHeight, elYaxis);\n                }\n\n                return elYaxis;\n            }\n        }, {\n            key: \"drawXaxisTicks\",\n            value: function drawXaxisTicks(x1, appendToElement) {\n                var w = this.w;\n                var x2 = x1;\n                if (x1 < 0 || x1 - 2 > w.globals.gridWidth) return;\n                var y1 = this.offY + w.config.xaxis.axisTicks.offsetY;\n                var y2 = y1 + w.config.xaxis.axisTicks.height;\n\n                if (w.config.xaxis.position === 'top') {\n                    y2 = y1 - w.config.xaxis.axisTicks.height;\n                }\n\n                if (w.config.xaxis.axisTicks.show) {\n                    var graphics = new Graphics(this.ctx);\n                    var line = graphics.drawLine(x1 + w.config.xaxis.axisTicks.offsetX, y1 + w.config.xaxis.offsetY, x2 + w.config.xaxis.axisTicks.offsetX, y2 + w.config.xaxis.offsetY, w.config.xaxis.axisTicks.color); // we are not returning anything, but appending directly to the element passed in param\n\n                    appendToElement.add(line);\n                    line.node.classList.add('apexcharts-xaxis-tick');\n                }\n            }\n        }, {\n            key: \"getXAxisTicksPositions\",\n            value: function getXAxisTicksPositions() {\n                    var w = this.w;\n                    var xAxisTicksPositions = [];\n                    var xCount = this.xaxisLabels.length;\n                    var x1 = w.globals.padHorizontal;\n\n                    if (w.globals.timescaleLabels.length > 0) {\n                        for (var i = 0; i < xCount; i++) {\n                            x1 = this.xaxisLabels[i].position;\n                            xAxisTicksPositions.push(x1);\n                        }\n                    } else {\n                        var xCountForCategoryCharts = xCount;\n\n                        for (var _i3 = 0; _i3 < xCountForCategoryCharts; _i3++) {\n                            var x1Count = xCountForCategoryCharts;\n\n                            if (w.globals.isXNumeric && w.config.chart.type !== 'bar') {\n                                x1Count -= 1;\n                            }\n\n                            x1 = x1 + w.globals.gridWidth / x1Count;\n                            xAxisTicksPositions.push(x1);\n                        }\n                    }\n\n                    return xAxisTicksPositions;\n                } // to rotate x-axis labels or to put ... for longer text in xaxis\n\n        }, {\n            key: \"xAxisLabelCorrections\",\n            value: function xAxisLabelCorrections() {\n                    var w = this.w;\n                    var graphics = new Graphics(this.ctx);\n                    var xAxis = w.globals.dom.baseEl.querySelector('.apexcharts-xaxis-texts-g');\n                    var xAxisTexts = w.globals.dom.baseEl.querySelectorAll('.apexcharts-xaxis-texts-g text');\n                    var yAxisTextsInversed = w.globals.dom.baseEl.querySelectorAll('.apexcharts-yaxis-inversed text');\n                    var xAxisTextsInversed = w.globals.dom.baseEl.querySelectorAll('.apexcharts-xaxis-inversed-texts-g text tspan');\n\n                    if (w.globals.rotateXLabels || w.config.xaxis.labels.rotateAlways) {\n                        for (var xat = 0; xat < xAxisTexts.length; xat++) {\n                            var textRotatingCenter = graphics.rotateAroundCenter(xAxisTexts[xat]);\n                            textRotatingCenter.y = textRotatingCenter.y - 1; // + tickWidth/4;\n\n                            textRotatingCenter.x = textRotatingCenter.x + 1;\n                            xAxisTexts[xat].setAttribute('transform', \"rotate(\".concat(w.config.xaxis.labels.rotate, \" \").concat(textRotatingCenter.x, \" \").concat(textRotatingCenter.y, \")\"));\n                            xAxisTexts[xat].setAttribute('text-anchor', \"end\");\n                            var offsetHeight = 10;\n                            xAxis.setAttribute('transform', \"translate(0, \".concat(-offsetHeight, \")\"));\n                            var tSpan = xAxisTexts[xat].childNodes;\n\n                            if (w.config.xaxis.labels.trim) {\n                                Array.prototype.forEach.call(tSpan, function(ts) {\n                                    graphics.placeTextWithEllipsis(ts, ts.textContent, w.globals.xAxisLabelsHeight - (w.config.legend.position === 'bottom' ? 20 : 10));\n                                });\n                            }\n                        }\n                    } else {\n                        (function() {\n                            var width = w.globals.gridWidth / (w.globals.labels.length + 1);\n\n                            for (var _xat = 0; _xat < xAxisTexts.length; _xat++) {\n                                var _tSpan = xAxisTexts[_xat].childNodes;\n\n                                if (w.config.xaxis.labels.trim && w.config.xaxis.type !== 'datetime') {\n                                    Array.prototype.forEach.call(_tSpan, function(ts) {\n                                        graphics.placeTextWithEllipsis(ts, ts.textContent, width);\n                                    });\n                                }\n                            }\n                        })();\n                    }\n\n                    if (yAxisTextsInversed.length > 0) {\n                        // truncate rotated y axis in bar chart (x axis)\n                        var firstLabelPosX = yAxisTextsInversed[yAxisTextsInversed.length - 1].getBBox();\n                        var lastLabelPosX = yAxisTextsInversed[0].getBBox();\n\n                        if (firstLabelPosX.x < -20) {\n                            yAxisTextsInversed[yAxisTextsInversed.length - 1].parentNode.removeChild(yAxisTextsInversed[yAxisTextsInversed.length - 1]);\n                        }\n\n                        if (lastLabelPosX.x + lastLabelPosX.width > w.globals.gridWidth && !w.globals.isBarHorizontal) {\n                            yAxisTextsInversed[0].parentNode.removeChild(yAxisTextsInversed[0]);\n                        } // truncate rotated x axis in bar chart (y axis)\n\n\n                        for (var _xat2 = 0; _xat2 < xAxisTextsInversed.length; _xat2++) {\n                            graphics.placeTextWithEllipsis(xAxisTextsInversed[_xat2], xAxisTextsInversed[_xat2].textContent, w.config.yaxis[0].labels.maxWidth - parseFloat(w.config.yaxis[0].title.style.fontSize) * 2 - 20);\n                        }\n                    }\n                } // renderXAxisBands() {\n                //   let w = this.w;\n                //   let plotBand = document.createElementNS(w.globals.SVGNS, 'rect')\n                //   w.globals.dom.elGraphical.add(plotBand)\n                // }\n\n        }]);\n\n        return XAxis;\n    }();\n\n    /**\n     * ApexCharts Grid Class for drawing Cartesian Grid.\n     *\n     * @module Grid\n     **/\n\n    var Grid = /*#__PURE__*/ function() {\n        function Grid(ctx) {\n            _classCallCheck(this, Grid);\n\n            this.ctx = ctx;\n            this.w = ctx.w;\n            var w = this.w;\n            this.xaxisLabels = w.globals.labels.slice();\n            this.axesUtils = new AxesUtils(ctx);\n            this.isTimelineBar = w.config.xaxis.type === 'datetime' && w.globals.seriesRangeBarTimeline.length;\n\n            if (w.globals.timescaleLabels.length > 0) {\n                //  timescaleLabels labels are there\n                this.xaxisLabels = w.globals.timescaleLabels.slice();\n            }\n        } // when using sparklines or when showing no grid, we need to have a grid area which is reused at many places for other calculations as well\n\n\n        _createClass(Grid, [{\n            key: \"drawGridArea\",\n            value: function drawGridArea() {\n                var elGrid = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n                var w = this.w;\n                var graphics = new Graphics(this.ctx);\n\n                if (elGrid === null) {\n                    elGrid = graphics.group({\n                        class: 'apexcharts-grid'\n                    });\n                }\n\n                var elVerticalLine = graphics.drawLine(w.globals.padHorizontal, 1, w.globals.padHorizontal, w.globals.gridHeight, 'transparent');\n                var elHorzLine = graphics.drawLine(w.globals.padHorizontal, w.globals.gridHeight, w.globals.gridWidth, w.globals.gridHeight, 'transparent');\n                elGrid.add(elHorzLine);\n                elGrid.add(elVerticalLine);\n                return elGrid;\n            }\n        }, {\n            key: \"drawGrid\",\n            value: function drawGrid() {\n                    var gl = this.w.globals;\n                    var elgrid = null;\n\n                    if (gl.axisCharts) {\n                        // grid is drawn after xaxis and yaxis are drawn\n                        elgrid = this.renderGrid();\n                        this.drawGridArea(elgrid.el);\n                    }\n\n                    return elgrid;\n                } // This mask will clip off overflowing graphics from the drawable area\n\n        }, {\n            key: \"createGridMask\",\n            value: function createGridMask() {\n                var w = this.w;\n                var gl = w.globals;\n                var graphics = new Graphics(this.ctx);\n                var strokeSize = Array.isArray(w.config.stroke.width) ? 0 : w.config.stroke.width;\n\n                if (Array.isArray(w.config.stroke.width)) {\n                    var strokeMaxSize = 0;\n                    w.config.stroke.width.forEach(function(m) {\n                        strokeMaxSize = Math.max(strokeMaxSize, m);\n                    });\n                    strokeSize = strokeMaxSize;\n                }\n\n                gl.dom.elGridRectMask = document.createElementNS(gl.SVGNS, 'clipPath');\n                gl.dom.elGridRectMask.setAttribute('id', \"gridRectMask\".concat(gl.cuid));\n                gl.dom.elGridRectMarkerMask = document.createElementNS(gl.SVGNS, 'clipPath');\n                gl.dom.elGridRectMarkerMask.setAttribute('id', \"gridRectMarkerMask\".concat(gl.cuid));\n                gl.dom.elForecastMask = document.createElementNS(gl.SVGNS, 'clipPath');\n                gl.dom.elForecastMask.setAttribute('id', \"forecastMask\".concat(gl.cuid));\n                gl.dom.elNonForecastMask = document.createElementNS(gl.SVGNS, 'clipPath');\n                gl.dom.elNonForecastMask.setAttribute('id', \"nonForecastMask\".concat(gl.cuid)); // let barHalfWidth = 0\n\n                var type = w.config.chart.type;\n                var hasBar = type === 'bar' || type === 'rangeBar' || type === 'candlestick' || type === 'boxPlot' || w.globals.comboBarCount > 0;\n                var barWidthLeft = 0;\n                var barWidthRight = 0;\n\n                if (hasBar && w.globals.isXNumeric && !w.globals.isBarHorizontal) {\n                    barWidthLeft = w.config.grid.padding.left;\n                    barWidthRight = w.config.grid.padding.right;\n\n                    if (gl.barPadForNumericAxis > barWidthLeft) {\n                        barWidthLeft = gl.barPadForNumericAxis;\n                        barWidthRight = gl.barPadForNumericAxis;\n                    }\n                }\n\n                gl.dom.elGridRect = graphics.drawRect(-strokeSize / 2 - barWidthLeft - 2, -strokeSize / 2, gl.gridWidth + strokeSize + barWidthRight + barWidthLeft + 4, gl.gridHeight + strokeSize, 0, '#fff');\n                var coreUtils = new CoreUtils(this);\n                coreUtils.getLargestMarkerSize();\n                var markerSize = w.globals.markers.largestSize + 1;\n                gl.dom.elGridRectMarker = graphics.drawRect(-markerSize * 2, -markerSize * 2, gl.gridWidth + markerSize * 4, gl.gridHeight + markerSize * 4, 0, '#fff');\n                gl.dom.elGridRectMask.appendChild(gl.dom.elGridRect.node);\n                gl.dom.elGridRectMarkerMask.appendChild(gl.dom.elGridRectMarker.node);\n                var defs = gl.dom.baseEl.querySelector('defs');\n                defs.appendChild(gl.dom.elGridRectMask);\n                defs.appendChild(gl.dom.elForecastMask);\n                defs.appendChild(gl.dom.elNonForecastMask);\n                defs.appendChild(gl.dom.elGridRectMarkerMask);\n            }\n        }, {\n            key: \"_drawGridLines\",\n            value: function _drawGridLines(_ref) {\n                var i = _ref.i,\n                    x1 = _ref.x1,\n                    y1 = _ref.y1,\n                    x2 = _ref.x2,\n                    y2 = _ref.y2,\n                    xCount = _ref.xCount,\n                    parent = _ref.parent;\n                var w = this.w;\n\n                var shouldDraw = function shouldDraw() {\n                    if (i === 0 && w.globals.skipFirstTimelinelabel) {\n                        return false;\n                    }\n\n                    if (i === xCount - 1 && w.globals.skipLastTimelinelabel && !w.config.xaxis.labels.formatter) {\n                        return false;\n                    }\n\n                    if (w.config.chart.type === 'radar') {\n                        return false;\n                    }\n\n                    return true;\n                };\n\n                if (shouldDraw()) {\n                    if (w.config.grid.xaxis.lines.show) {\n                        this._drawGridLine({\n                            x1: x1,\n                            y1: y1,\n                            x2: x2,\n                            y2: y2,\n                            parent: parent\n                        });\n                    }\n\n                    var xAxis = new XAxis(this.ctx);\n                    xAxis.drawXaxisTicks(x1, this.elg);\n                }\n            }\n        }, {\n            key: \"_drawGridLine\",\n            value: function _drawGridLine(_ref2) {\n                var x1 = _ref2.x1,\n                    y1 = _ref2.y1,\n                    x2 = _ref2.x2,\n                    y2 = _ref2.y2,\n                    parent = _ref2.parent;\n                var w = this.w;\n                var isHorzLine = parent.node.classList.contains('apexcharts-gridlines-horizontal');\n                var strokeDashArray = w.config.grid.strokeDashArray;\n                var offX = w.globals.barPadForNumericAxis;\n                var graphics = new Graphics(this);\n                var line = graphics.drawLine(x1 - (isHorzLine ? offX : 0), y1, x2 + (isHorzLine ? offX : 0), y2, w.config.grid.borderColor, strokeDashArray);\n                line.node.classList.add('apexcharts-gridline');\n                parent.add(line);\n            }\n        }, {\n            key: \"_drawGridBandRect\",\n            value: function _drawGridBandRect(_ref3) {\n                var c = _ref3.c,\n                    x1 = _ref3.x1,\n                    y1 = _ref3.y1,\n                    x2 = _ref3.x2,\n                    y2 = _ref3.y2,\n                    type = _ref3.type;\n                var w = this.w;\n                var graphics = new Graphics(this.ctx);\n                var offX = w.globals.barPadForNumericAxis;\n                if (type === 'column' && w.config.xaxis.type === 'datetime') return;\n                var color = w.config.grid[type].colors[c];\n                var rect = graphics.drawRect(x1 - (type === 'row' ? offX : 0), y1, x2 + (type === 'row' ? offX * 2 : 0), y2, 0, color, w.config.grid[type].opacity);\n                this.elg.add(rect);\n                rect.attr('clip-path', \"url(#gridRectMask\".concat(w.globals.cuid, \")\"));\n                rect.node.classList.add(\"apexcharts-grid-\".concat(type));\n            }\n        }, {\n            key: \"_drawXYLines\",\n            value: function _drawXYLines(_ref4) {\n                var _this = this;\n\n                var xCount = _ref4.xCount,\n                    tickAmount = _ref4.tickAmount;\n                var w = this.w;\n\n                var datetimeLines = function datetimeLines(_ref5) {\n                    var xC = _ref5.xC,\n                        x1 = _ref5.x1,\n                        y1 = _ref5.y1,\n                        x2 = _ref5.x2,\n                        y2 = _ref5.y2;\n\n                    for (var i = 0; i < xC; i++) {\n                        x1 = _this.xaxisLabels[i].position;\n                        x2 = _this.xaxisLabels[i].position;\n\n                        _this._drawGridLines({\n                            i: i,\n                            x1: x1,\n                            y1: y1,\n                            x2: x2,\n                            y2: y2,\n                            xCount: xCount,\n                            parent: _this.elgridLinesV\n                        });\n                    }\n                };\n\n                var categoryLines = function categoryLines(_ref6) {\n                    var xC = _ref6.xC,\n                        x1 = _ref6.x1,\n                        y1 = _ref6.y1,\n                        x2 = _ref6.x2,\n                        y2 = _ref6.y2;\n\n                    if (typeof w.config.xaxis.tickAmount !== 'undefined' && w.config.xaxis.tickAmount !== 'dataPoints') {\n                        // user has specified tickamount in a category x-axis chart\n                        var visibleLabels = w.globals.dom.baseEl.querySelectorAll('.apexcharts-text.apexcharts-xaxis-label tspan:not(:empty)');\n                        visibleLabels.forEach(function(d, i) {\n                            var textRect = d.getBBox();\n\n                            _this._drawGridLines({\n                                i: i,\n                                x1: textRect.x + textRect.width / 2,\n                                y1: y1,\n                                x2: textRect.x + textRect.width / 2,\n                                y2: y2,\n                                xCount: xCount,\n                                parent: _this.elgridLinesV\n                            });\n                        });\n                    } else {\n                        for (var i = 0; i < xC + (w.globals.isXNumeric ? 0 : 1); i++) {\n                            if (i === 0 && xC === 1 && w.globals.dataPoints === 1) {\n                                // single datapoint\n                                x1 = w.globals.gridWidth / 2;\n                                x2 = x1;\n                            }\n\n                            _this._drawGridLines({\n                                i: i,\n                                x1: x1,\n                                y1: y1,\n                                x2: x2,\n                                y2: y2,\n                                xCount: xCount,\n                                parent: _this.elgridLinesV\n                            });\n\n                            x1 = x1 + w.globals.gridWidth / (w.globals.isXNumeric ? xC - 1 : xC);\n                            x2 = x1;\n                        }\n                    }\n                }; // draw vertical lines\n\n\n                if (w.config.grid.xaxis.lines.show || w.config.xaxis.axisTicks.show) {\n                    var x1 = w.globals.padHorizontal;\n                    var y1 = 0;\n                    var x2;\n                    var y2 = w.globals.gridHeight;\n\n                    if (w.globals.timescaleLabels.length) {\n                        datetimeLines({\n                            xC: xCount,\n                            x1: x1,\n                            y1: y1,\n                            x2: x2,\n                            y2: y2\n                        });\n                    } else {\n                        if (w.globals.isXNumeric) {\n                            xCount = w.globals.xAxisScale.result.length;\n                        }\n\n                        if (w.config.xaxis.convertedCatToNumeric) {\n                            // in case of a convertedCatToNumeric, some labels might be skipped due to hideOverLapping labels, hence use this var to get the visible ticks\n                            xCount = w.globals.xaxisLabelsCount;\n                        }\n\n                        categoryLines({\n                            xC: xCount,\n                            x1: x1,\n                            y1: y1,\n                            x2: x2,\n                            y2: y2\n                        });\n                    }\n                } // draw horizontal lines\n\n\n                if (w.config.grid.yaxis.lines.show) {\n                    var _x = 0;\n                    var _y = 0;\n                    var _y2 = 0;\n                    var _x2 = w.globals.gridWidth;\n                    var tA = tickAmount + 1;\n\n                    if (this.isTimelineBar) {\n                        tA = w.globals.labels.length;\n                    }\n\n                    for (var i = 0; i < tA + (this.isTimelineBar ? 1 : 0); i++) {\n                        this._drawGridLine({\n                            x1: _x,\n                            y1: _y,\n                            x2: _x2,\n                            y2: _y2,\n                            parent: this.elgridLinesH\n                        });\n\n                        _y = _y + w.globals.gridHeight / (this.isTimelineBar ? tA : tickAmount);\n                        _y2 = _y;\n                    }\n                }\n            }\n        }, {\n            key: \"_drawInvertedXYLines\",\n            value: function _drawInvertedXYLines(_ref7) {\n                    var xCount = _ref7.xCount;\n                    var w = this.w; // draw vertical lines\n\n                    if (w.config.grid.xaxis.lines.show || w.config.xaxis.axisTicks.show) {\n                        var x1 = w.globals.padHorizontal;\n                        var y1 = 0;\n                        var x2;\n                        var y2 = w.globals.gridHeight;\n\n                        for (var i = 0; i < xCount + 1; i++) {\n                            if (w.config.grid.xaxis.lines.show) {\n                                this._drawGridLine({\n                                    x1: x1,\n                                    y1: y1,\n                                    x2: x2,\n                                    y2: y2,\n                                    parent: this.elgridLinesV\n                                });\n                            }\n\n                            var xAxis = new XAxis(this.ctx);\n                            xAxis.drawXaxisTicks(x1, this.elg);\n                            x1 = x1 + w.globals.gridWidth / xCount + 0.3;\n                            x2 = x1;\n                        }\n                    } // draw horizontal lines\n\n\n                    if (w.config.grid.yaxis.lines.show) {\n                        var _x3 = 0;\n                        var _y3 = 0;\n                        var _y4 = 0;\n                        var _x4 = w.globals.gridWidth;\n\n                        for (var _i = 0; _i < w.globals.dataPoints + 1; _i++) {\n                            this._drawGridLine({\n                                x1: _x3,\n                                y1: _y3,\n                                x2: _x4,\n                                y2: _y4,\n                                parent: this.elgridLinesH\n                            });\n\n                            _y3 = _y3 + w.globals.gridHeight / w.globals.dataPoints;\n                            _y4 = _y3;\n                        }\n                    }\n                } // actual grid rendering\n\n        }, {\n            key: \"renderGrid\",\n            value: function renderGrid() {\n                var w = this.w;\n                var graphics = new Graphics(this.ctx);\n                this.elg = graphics.group({\n                    class: 'apexcharts-grid'\n                });\n                this.elgridLinesH = graphics.group({\n                    class: 'apexcharts-gridlines-horizontal'\n                });\n                this.elgridLinesV = graphics.group({\n                    class: 'apexcharts-gridlines-vertical'\n                });\n                this.elg.add(this.elgridLinesH);\n                this.elg.add(this.elgridLinesV);\n\n                if (!w.config.grid.show) {\n                    this.elgridLinesV.hide();\n                    this.elgridLinesH.hide();\n                }\n\n                var yTickAmount = w.globals.yAxisScale.length ? w.globals.yAxisScale[0].result.length - 1 : 5;\n\n                for (var i = 0; i < w.globals.series.length; i++) {\n                    if (typeof w.globals.yAxisScale[i] !== 'undefined') {\n                        yTickAmount = w.globals.yAxisScale[i].result.length - 1;\n                    }\n\n                    if (yTickAmount > 2) break;\n                }\n\n                var xCount;\n\n                if (!w.globals.isBarHorizontal || this.isTimelineBar) {\n                    xCount = this.xaxisLabels.length;\n\n                    if (this.isTimelineBar) {\n                        yTickAmount = w.globals.labels.length;\n\n                        if (w.config.xaxis.tickAmount && w.config.xaxis.labels.formatter) {\n                            xCount = w.config.xaxis.tickAmount;\n                        }\n                    }\n\n                    this._drawXYLines({\n                        xCount: xCount,\n                        tickAmount: yTickAmount\n                    });\n                } else {\n                    xCount = yTickAmount; // for horizontal bar chart, get the xaxis tickamount\n\n                    yTickAmount = w.globals.xTickAmount;\n\n                    this._drawInvertedXYLines({\n                        xCount: xCount,\n                        tickAmount: yTickAmount\n                    });\n                }\n\n                this.drawGridBands(xCount, yTickAmount);\n                return {\n                    el: this.elg,\n                    xAxisTickWidth: w.globals.gridWidth / xCount\n                };\n            }\n        }, {\n            key: \"drawGridBands\",\n            value: function drawGridBands(xCount, tickAmount) {\n                var w = this.w; // rows background bands\n\n                if (w.config.grid.row.colors !== undefined && w.config.grid.row.colors.length > 0) {\n                    var x1 = 0;\n                    var y1 = 0;\n                    var y2 = w.globals.gridHeight / tickAmount;\n                    var x2 = w.globals.gridWidth;\n\n                    for (var i = 0, c = 0; i < tickAmount; i++, c++) {\n                        if (c >= w.config.grid.row.colors.length) {\n                            c = 0;\n                        }\n\n                        this._drawGridBandRect({\n                            c: c,\n                            x1: x1,\n                            y1: y1,\n                            x2: x2,\n                            y2: y2,\n                            type: 'row'\n                        });\n\n                        y1 = y1 + w.globals.gridHeight / tickAmount;\n                    }\n                } // columns background bands\n\n\n                if (w.config.grid.column.colors !== undefined && w.config.grid.column.colors.length > 0) {\n                    var xc = !w.globals.isBarHorizontal && (w.config.xaxis.type === 'category' || w.config.xaxis.convertedCatToNumeric) ? xCount - 1 : xCount;\n                    var _x5 = w.globals.padHorizontal;\n                    var _y5 = 0;\n\n                    var _x6 = w.globals.padHorizontal + w.globals.gridWidth / xc;\n\n                    var _y6 = w.globals.gridHeight;\n\n                    for (var _i2 = 0, _c = 0; _i2 < xCount; _i2++, _c++) {\n                        if (_c >= w.config.grid.column.colors.length) {\n                            _c = 0;\n                        }\n\n                        this._drawGridBandRect({\n                            c: _c,\n                            x1: _x5,\n                            y1: _y5,\n                            x2: _x6,\n                            y2: _y6,\n                            type: 'column'\n                        });\n\n                        _x5 = _x5 + w.globals.gridWidth / xc;\n                    }\n                }\n            }\n        }]);\n\n        return Grid;\n    }();\n\n    var Range = /*#__PURE__*/ function() {\n        function Range(ctx) {\n            _classCallCheck(this, Range);\n\n            this.ctx = ctx;\n            this.w = ctx.w;\n        } // http://stackoverflow.com/questions/326679/choosing-an-attractive-linear-scale-for-a-graphs-y-axiss\n        // This routine creates the Y axis values for a graph.\n\n\n        _createClass(Range, [{\n            key: \"niceScale\",\n            value: function niceScale(yMin, yMax) {\n                var ticks = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 10;\n                var index = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n                var NO_MIN_MAX_PROVIDED = arguments.length > 4 ? arguments[4] : undefined;\n                var w = this.w; // Determine Range\n\n                var range = Math.abs(yMax - yMin);\n                ticks = this._adjustTicksForSmallRange(ticks, index, range);\n\n                if (ticks === 'dataPoints') {\n                    ticks = w.globals.dataPoints - 1;\n                }\n\n                if (yMin === Number.MIN_VALUE && yMax === 0 || !Utils.isNumber(yMin) && !Utils.isNumber(yMax) || yMin === Number.MIN_VALUE && yMax === -Number.MAX_VALUE) {\n                    // when all values are 0\n                    yMin = 0;\n                    yMax = ticks;\n                    var linearScale = this.linearScale(yMin, yMax, ticks);\n                    return linearScale;\n                }\n\n                if (yMin > yMax) {\n                    // if somehow due to some wrong config, user sent max less than min,\n                    // adjust the min/max again\n                    console.warn('axis.min cannot be greater than axis.max');\n                    yMax = yMin + 0.1;\n                } else if (yMin === yMax) {\n                    // If yMin and yMax are identical, then\n                    // adjust the yMin and yMax values to actually\n                    // make a graph. Also avoids division by zero errors.\n                    yMin = yMin === 0 ? 0 : yMin - 0.5; // some small value\n\n                    yMax = yMax === 0 ? 2 : yMax + 0.5; // some small value\n                } // Calculate Min amd Max graphical labels and graph\n                // increments.  The number of ticks defaults to\n                // 10 which is the SUGGESTED value.  Any tick value\n                // entered is used as a suggested value which is\n                // adjusted to be a 'pretty' value.\n                //\n                // Output will be an array of the Y axis values that\n                // encompass the Y values.\n\n\n                var result = [];\n\n                if (range < 1 && NO_MIN_MAX_PROVIDED && (w.config.chart.type === 'candlestick' || w.config.series[index].type === 'candlestick' || w.config.chart.type === 'boxPlot' || w.config.series[index].type === 'boxPlot' || w.globals.isRangeData)) {\n                    /* fix https://github.com/apexcharts/apexcharts.js/issues/430 */\n                    yMax = yMax * 1.01;\n                }\n\n                var tiks = ticks + 1; // Adjust ticks if needed\n\n                if (tiks < 2) {\n                    tiks = 2;\n                } else if (tiks > 2) {\n                    tiks -= 2;\n                } // Get raw step value\n\n\n                var tempStep = range / tiks; // Calculate pretty step value\n\n                var mag = Math.floor(Utils.log10(tempStep));\n                var magPow = Math.pow(10, mag);\n                var magMsd = Math.round(tempStep / magPow);\n\n                if (magMsd < 1) {\n                    magMsd = 1;\n                }\n\n                var stepSize = magMsd * magPow; // build Y label array.\n                // Lower and upper bounds calculations\n\n                var lb = stepSize * Math.floor(yMin / stepSize);\n                var ub = stepSize * Math.ceil(yMax / stepSize); // Build array\n\n                var val = lb;\n\n                if (NO_MIN_MAX_PROVIDED && range > 2) {\n                    while (1) {\n                        result.push(val);\n                        val += stepSize;\n\n                        if (val > ub) {\n                            break;\n                        }\n                    }\n\n                    return {\n                        result: result,\n                        niceMin: result[0],\n                        niceMax: result[result.length - 1]\n                    };\n                } else {\n                    result = [];\n                    var v = yMin;\n                    result.push(v);\n                    var valuesDivider = Math.abs(yMax - yMin) / ticks;\n\n                    for (var i = 0; i <= ticks; i++) {\n                        v = v + valuesDivider;\n                        result.push(v);\n                    }\n\n                    if (result[result.length - 2] >= yMax) {\n                        result.pop();\n                    }\n\n                    return {\n                        result: result,\n                        niceMin: result[0],\n                        niceMax: result[result.length - 1]\n                    };\n                }\n            }\n        }, {\n            key: \"linearScale\",\n            value: function linearScale(yMin, yMax) {\n                var ticks = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 10;\n                var index = arguments.length > 3 ? arguments[3] : undefined;\n                var range = Math.abs(yMax - yMin);\n                ticks = this._adjustTicksForSmallRange(ticks, index, range);\n\n                if (ticks === 'dataPoints') {\n                    ticks = this.w.globals.dataPoints - 1;\n                }\n\n                var step = range / ticks;\n\n                if (ticks === Number.MAX_VALUE) {\n                    ticks = 10;\n                    step = 1;\n                }\n\n                var result = [];\n                var v = yMin;\n\n                while (ticks >= 0) {\n                    result.push(v);\n                    v = v + step;\n                    ticks -= 1;\n                }\n\n                return {\n                    result: result,\n                    niceMin: result[0],\n                    niceMax: result[result.length - 1]\n                };\n            }\n        }, {\n            key: \"logarithmicScale\",\n            value: function logarithmicScale(yMax) {\n                var logs = [];\n                var ticks = Math.ceil(Math.log10(yMax)) + 1; // Get powers of 10 up to our max, and then one more\n\n                for (var i = 0; i < ticks; i++) {\n                    logs.push(Math.pow(10, i));\n                }\n\n                return {\n                    result: logs,\n                    niceMin: logs[0],\n                    niceMax: logs[logs.length - 1]\n                };\n            }\n        }, {\n            key: \"_adjustTicksForSmallRange\",\n            value: function _adjustTicksForSmallRange(ticks, index, range) {\n                var newTicks = ticks;\n\n                if (typeof index !== 'undefined' && this.w.config.yaxis[index].labels.formatter && this.w.config.yaxis[index].tickAmount === undefined) {\n                    var formattedVal = this.w.config.yaxis[index].labels.formatter(1);\n\n                    if (Utils.isNumber(Number(formattedVal)) && !Utils.isFloat(formattedVal)) {\n                        newTicks = Math.ceil(range);\n                    }\n                }\n\n                return newTicks < ticks ? newTicks : ticks;\n            }\n        }, {\n            key: \"setYScaleForIndex\",\n            value: function setYScaleForIndex(index, minY, maxY) {\n                var gl = this.w.globals;\n                var cnf = this.w.config;\n                var y = gl.isBarHorizontal ? cnf.xaxis : cnf.yaxis[index];\n\n                if (typeof gl.yAxisScale[index] === 'undefined') {\n                    gl.yAxisScale[index] = [];\n                }\n\n                var diff = Math.abs(maxY - minY);\n\n                if (y.logarithmic && diff <= 5) {\n                    gl.invalidLogScale = true;\n                }\n\n                if (y.logarithmic && diff > 5) {\n                    gl.allSeriesCollapsed = false;\n                    gl.yAxisScale[index] = this.logarithmicScale(maxY);\n                } else {\n                    if (maxY === -Number.MAX_VALUE || !Utils.isNumber(maxY)) {\n                        // no data in the chart. Either all series collapsed or user passed a blank array\n                        gl.yAxisScale[index] = this.linearScale(0, 5, 5);\n                    } else {\n                        // there is some data. Turn off the allSeriesCollapsed flag\n                        gl.allSeriesCollapsed = false;\n\n                        if ((y.min !== undefined || y.max !== undefined) && !y.forceNiceScale) {\n                            // fix https://github.com/apexcharts/apexcharts.js/issues/492\n                            gl.yAxisScale[index] = this.linearScale(minY, maxY, y.tickAmount, index);\n                        } else {\n                            var noMinMaxProvided = cnf.yaxis[index].max === undefined && cnf.yaxis[index].min === undefined || cnf.yaxis[index].forceNiceScale;\n                            gl.yAxisScale[index] = this.niceScale(minY, maxY, y.tickAmount ? y.tickAmount : diff < 5 && diff > 1 ? diff + 1 : 5, index, // fix https://github.com/apexcharts/apexcharts.js/issues/397\n                                noMinMaxProvided);\n                        }\n                    }\n                }\n            }\n        }, {\n            key: \"setXScale\",\n            value: function setXScale(minX, maxX) {\n                var w = this.w;\n                var gl = w.globals;\n                var x = w.config.xaxis;\n                var diff = Math.abs(maxX - minX);\n\n                if (maxX === -Number.MAX_VALUE || !Utils.isNumber(maxX)) {\n                    // no data in the chart. Either all series collapsed or user passed a blank array\n                    gl.xAxisScale = this.linearScale(0, 5, 5);\n                } else {\n                    gl.xAxisScale = this.linearScale(minX, maxX, x.tickAmount ? x.tickAmount : diff < 5 && diff > 1 ? diff + 1 : 5, 0);\n                }\n\n                return gl.xAxisScale;\n            }\n        }, {\n            key: \"setMultipleYScales\",\n            value: function setMultipleYScales() {\n                var _this = this;\n\n                var gl = this.w.globals;\n                var cnf = this.w.config;\n                var minYArr = gl.minYArr.concat([]);\n                var maxYArr = gl.maxYArr.concat([]);\n                var scalesIndices = []; // here, we loop through the yaxis array and find the item which has \"seriesName\" property\n\n                cnf.yaxis.forEach(function(yaxe, i) {\n                    var index = i;\n                    cnf.series.forEach(function(s, si) {\n                        // if seriesName matches and that series is not collapsed, we use that scale\n                        // fix issue #1215\n                        // proceed even if si is in gl.collapsedSeriesIndices\n                        if (s.name === yaxe.seriesName) {\n                            index = si;\n\n                            if (i !== si) {\n                                scalesIndices.push({\n                                    index: si,\n                                    similarIndex: i,\n                                    alreadyExists: true\n                                });\n                            } else {\n                                scalesIndices.push({\n                                    index: si\n                                });\n                            }\n                        }\n                    });\n                    var minY = minYArr[index];\n                    var maxY = maxYArr[index];\n\n                    _this.setYScaleForIndex(i, minY, maxY);\n                });\n                this.sameScaleInMultipleAxes(minYArr, maxYArr, scalesIndices);\n            }\n        }, {\n            key: \"sameScaleInMultipleAxes\",\n            value: function sameScaleInMultipleAxes(minYArr, maxYArr, scalesIndices) {\n                    var _this2 = this;\n\n                    var cnf = this.w.config;\n                    var gl = this.w.globals; // we got the scalesIndices array in the above code, but we need to filter out the items which doesn't have same scales\n\n                    var similarIndices = [];\n                    scalesIndices.forEach(function(scale) {\n                        if (scale.alreadyExists) {\n                            if (typeof similarIndices[scale.index] === 'undefined') {\n                                similarIndices[scale.index] = [];\n                            }\n\n                            similarIndices[scale.index].push(scale.index);\n                            similarIndices[scale.index].push(scale.similarIndex);\n                        }\n                    });\n\n                    function intersect(a, b) {\n                        return a.filter(function(value) {\n                            return b.indexOf(value) !== -1;\n                        });\n                    }\n\n                    gl.yAxisSameScaleIndices = similarIndices;\n                    similarIndices.forEach(function(si, i) {\n                        similarIndices.forEach(function(sj, j) {\n                            if (i !== j) {\n                                if (intersect(si, sj).length > 0) {\n                                    similarIndices[i] = similarIndices[i].concat(similarIndices[j]);\n                                }\n                            }\n                        });\n                    }); // then, we remove duplicates from the similarScale array\n\n                    var uniqueSimilarIndices = similarIndices.map(function(item) {\n                        return item.filter(function(i, pos) {\n                            return item.indexOf(i) === pos;\n                        });\n                    }); // sort further to remove whole duplicate arrays later\n\n                    var sortedIndices = uniqueSimilarIndices.map(function(s) {\n                        return s.sort();\n                    }); // remove undefined items\n\n                    similarIndices = similarIndices.filter(function(s) {\n                        return !!s;\n                    });\n                    var indices = sortedIndices.slice();\n                    var stringIndices = indices.map(function(ind) {\n                        return JSON.stringify(ind);\n                    });\n                    indices = indices.filter(function(ind, p) {\n                        return stringIndices.indexOf(JSON.stringify(ind)) === p;\n                    });\n                    var sameScaleMinYArr = [];\n                    var sameScaleMaxYArr = [];\n                    minYArr.forEach(function(minYValue, yi) {\n                        indices.forEach(function(scale, i) {\n                            // we compare only the yIndex which exists in the indices array\n                            if (scale.indexOf(yi) > -1) {\n                                if (typeof sameScaleMinYArr[i] === 'undefined') {\n                                    sameScaleMinYArr[i] = [];\n                                    sameScaleMaxYArr[i] = [];\n                                }\n\n                                sameScaleMinYArr[i].push({\n                                    key: yi,\n                                    value: minYValue\n                                });\n                                sameScaleMaxYArr[i].push({\n                                    key: yi,\n                                    value: maxYArr[yi]\n                                });\n                            }\n                        });\n                    });\n                    var sameScaleMin = Array.apply(null, Array(indices.length)).map(Number.prototype.valueOf, Number.MIN_VALUE);\n                    var sameScaleMax = Array.apply(null, Array(indices.length)).map(Number.prototype.valueOf, -Number.MAX_VALUE);\n                    sameScaleMinYArr.forEach(function(s, i) {\n                        s.forEach(function(sc, j) {\n                            sameScaleMin[i] = Math.min(sc.value, sameScaleMin[i]);\n                        });\n                    });\n                    sameScaleMaxYArr.forEach(function(s, i) {\n                        s.forEach(function(sc, j) {\n                            sameScaleMax[i] = Math.max(sc.value, sameScaleMax[i]);\n                        });\n                    });\n                    minYArr.forEach(function(min, i) {\n                        sameScaleMaxYArr.forEach(function(s, si) {\n                            var minY = sameScaleMin[si];\n                            var maxY = sameScaleMax[si];\n\n                            if (cnf.chart.stacked) {\n                                // for stacked charts, we need to add the values\n                                maxY = 0;\n                                s.forEach(function(ind, k) {\n                                    // fix incorrectly adjust y scale issue #1215\n                                    if (ind.value !== -Number.MAX_VALUE) {\n                                        maxY += ind.value;\n                                    }\n\n                                    if (minY !== Number.MIN_VALUE) {\n                                        minY += sameScaleMinYArr[si][k].value;\n                                    }\n                                });\n                            }\n\n                            s.forEach(function(ind, k) {\n                                if (s[k].key === i) {\n                                    if (cnf.yaxis[i].min !== undefined) {\n                                        if (typeof cnf.yaxis[i].min === 'function') {\n                                            minY = cnf.yaxis[i].min(gl.minY);\n                                        } else {\n                                            minY = cnf.yaxis[i].min;\n                                        }\n                                    }\n\n                                    if (cnf.yaxis[i].max !== undefined) {\n                                        if (typeof cnf.yaxis[i].max === 'function') {\n                                            maxY = cnf.yaxis[i].max(gl.maxY);\n                                        } else {\n                                            maxY = cnf.yaxis[i].max;\n                                        }\n                                    }\n\n                                    _this2.setYScaleForIndex(i, minY, maxY);\n                                }\n                            });\n                        });\n                    });\n                } // experimental feature which scales the y-axis to a min/max based on x-axis range\n\n        }, {\n            key: \"autoScaleY\",\n            value: function autoScaleY(ctx, yaxis, e) {\n                if (!ctx) {\n                    ctx = this;\n                }\n\n                var w = ctx.w;\n\n                if (w.globals.isMultipleYAxis || w.globals.collapsedSeries.length) {\n                    // The autoScale option for multiple y-axis is turned off as it leads to buggy behavior.\n                    // Also, when a series is collapsed, it results in incorrect behavior. Hence turned it off for that too - fixes apexcharts.js#795\n                    console.warn('autoScaleYaxis is not supported in a multi-yaxis chart.');\n                    return yaxis;\n                }\n\n                var seriesX = w.globals.seriesX[0];\n                var isStacked = w.config.chart.stacked;\n                yaxis.forEach(function(yaxe, yi) {\n                    var firstXIndex = 0;\n\n                    for (var xi = 0; xi < seriesX.length; xi++) {\n                        if (seriesX[xi] >= e.xaxis.min) {\n                            firstXIndex = xi;\n                            break;\n                        }\n                    }\n\n                    var initialMin = w.globals.minYArr[yi];\n                    var initialMax = w.globals.maxYArr[yi];\n                    var min, max;\n                    var stackedSer = w.globals.stackedSeriesTotals;\n                    w.globals.series.forEach(function(serie, sI) {\n                        var firstValue = serie[firstXIndex];\n\n                        if (isStacked) {\n                            firstValue = stackedSer[firstXIndex];\n                            min = max = firstValue;\n                            stackedSer.forEach(function(y, yI) {\n                                if (seriesX[yI] <= e.xaxis.max && seriesX[yI] >= e.xaxis.min) {\n                                    if (y > max && y !== null) max = y;\n                                    if (serie[yI] < min && serie[yI] !== null) min = serie[yI];\n                                }\n                            });\n                        } else {\n                            min = max = firstValue;\n                            serie.forEach(function(y, yI) {\n                                if (seriesX[yI] <= e.xaxis.max && seriesX[yI] >= e.xaxis.min) {\n                                    var valMin = y;\n                                    var valMax = y;\n                                    w.globals.series.forEach(function(wS, wSI) {\n                                        if (y !== null) {\n                                            valMin = Math.min(wS[yI], valMin);\n                                            valMax = Math.max(wS[yI], valMax);\n                                        }\n                                    });\n                                    if (valMax > max && valMax !== null) max = valMax;\n                                    if (valMin < min && valMin !== null) min = valMin;\n                                }\n                            });\n                        }\n\n                        if (min === undefined && max === undefined) {\n                            min = initialMin;\n                            max = initialMax;\n                        }\n\n                        min *= min < 0 ? 1.1 : 0.9;\n                        max *= max < 0 ? 0.9 : 1.1;\n\n                        if (max < 0 && max < initialMax) {\n                            max = initialMax;\n                        }\n\n                        if (min < 0 && min > initialMin) {\n                            min = initialMin;\n                        }\n\n                        if (yaxis.length > 1) {\n                            yaxis[sI].min = yaxe.min === undefined ? min : yaxe.min;\n                            yaxis[sI].max = yaxe.max === undefined ? max : yaxe.max;\n                        } else {\n                            yaxis[0].min = yaxe.min === undefined ? min : yaxe.min;\n                            yaxis[0].max = yaxe.max === undefined ? max : yaxe.max;\n                        }\n                    });\n                });\n                return yaxis;\n            }\n        }]);\n\n        return Range;\n    }();\n\n    /**\n     * Range is used to generates values between min and max.\n     *\n     * @module Range\n     **/\n\n    var Range$1 = /*#__PURE__*/ function() {\n        function Range$1(ctx) {\n            _classCallCheck(this, Range$1);\n\n            this.ctx = ctx;\n            this.w = ctx.w;\n            this.scales = new Range(ctx);\n        }\n\n        _createClass(Range$1, [{\n            key: \"init\",\n            value: function init() {\n                this.setYRange();\n                this.setXRange();\n                this.setZRange();\n            }\n        }, {\n            key: \"getMinYMaxY\",\n            value: function getMinYMaxY(startingIndex) {\n                var lowestY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Number.MAX_VALUE;\n                var highestY = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -Number.MAX_VALUE;\n                var len = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n                var cnf = this.w.config;\n                var gl = this.w.globals;\n                var maxY = -Number.MAX_VALUE;\n                var minY = Number.MIN_VALUE;\n\n                if (len === null) {\n                    len = startingIndex + 1;\n                }\n\n                var series = gl.series;\n                var seriesMin = series;\n                var seriesMax = series;\n\n                if (cnf.chart.type === 'candlestick') {\n                    seriesMin = gl.seriesCandleL;\n                    seriesMax = gl.seriesCandleH;\n                } else if (cnf.chart.type === 'boxPlot') {\n                    seriesMin = gl.seriesCandleO;\n                    seriesMax = gl.seriesCandleC;\n                } else if (gl.isRangeData) {\n                    seriesMin = gl.seriesRangeStart;\n                    seriesMax = gl.seriesRangeEnd;\n                }\n\n                for (var i = startingIndex; i < len; i++) {\n                    gl.dataPoints = Math.max(gl.dataPoints, series[i].length);\n\n                    for (var j = 0; j < gl.series[i].length; j++) {\n                        var val = series[i][j];\n\n                        if (val !== null && Utils.isNumber(val)) {\n                            if (typeof seriesMax[i][j] !== 'undefined') {\n                                maxY = Math.max(maxY, seriesMax[i][j]);\n                            }\n\n                            if (typeof seriesMin[i][j] !== 'undefined') {\n                                lowestY = Math.min(lowestY, seriesMin[i][j]);\n                                highestY = Math.max(highestY, seriesMin[i][j]);\n                            }\n\n                            if (this.w.config.chart.type === 'candlestick' || this.w.config.chart.type === 'boxPlot') {\n                                if (typeof gl.seriesCandleC[i][j] !== 'undefined') {\n                                    maxY = Math.max(maxY, gl.seriesCandleO[i][j]);\n                                    maxY = Math.max(maxY, gl.seriesCandleH[i][j]);\n                                    maxY = Math.max(maxY, gl.seriesCandleL[i][j]);\n                                    maxY = Math.max(maxY, gl.seriesCandleC[i][j]);\n\n                                    if (this.w.config.chart.type === 'boxPlot') {\n                                        maxY = Math.max(maxY, gl.seriesCandleM[i][j]);\n                                    }\n                                } // there is a combo chart and the specified series in not either candlestick or boxplot, find the max there\n\n\n                                if (cnf.series[i].type && (cnf.series[i].type !== 'candlestick' || cnf.series[i].type !== 'boxPlot')) {\n                                    maxY = Math.max(maxY, gl.series[i][j]);\n                                    lowestY = Math.min(lowestY, gl.series[i][j]);\n                                }\n\n                                highestY = maxY;\n                            }\n\n                            if (gl.seriesGoals[i] && gl.seriesGoals[i][j] && Array.isArray(gl.seriesGoals[i][j])) {\n                                gl.seriesGoals[i][j].forEach(function(g) {\n                                    if (minY !== Number.MIN_VALUE) {\n                                        minY = Math.min(minY, g.value);\n                                        lowestY = minY;\n                                    }\n\n                                    maxY = Math.max(maxY, g.value);\n                                    highestY = maxY;\n                                });\n                            }\n\n                            if (Utils.isFloat(val)) {\n                                val = Utils.noExponents(val);\n                                gl.yValueDecimal = Math.max(gl.yValueDecimal, val.toString().split('.')[1].length);\n                            }\n\n                            if (minY > seriesMin[i][j] && seriesMin[i][j] < 0) {\n                                minY = seriesMin[i][j];\n                            }\n                        } else {\n                            gl.hasNullValues = true;\n                        }\n                    }\n                }\n\n                if (cnf.chart.type === 'rangeBar' && gl.seriesRangeStart.length && gl.isBarHorizontal && cnf.xaxis.type === 'datetime') {\n                    minY = lowestY;\n                }\n\n                if (cnf.chart.type === 'bar') {\n                    if (minY < 0 && maxY < 0) {\n                        // all negative values in a bar chart, hence make the max to 0\n                        maxY = 0;\n                    }\n\n                    if (minY === Number.MIN_VALUE) {\n                        minY = 0;\n                    }\n                }\n\n                return {\n                    minY: minY,\n                    maxY: maxY,\n                    lowestY: lowestY,\n                    highestY: highestY\n                };\n            }\n        }, {\n            key: \"setYRange\",\n            value: function setYRange() {\n                var gl = this.w.globals;\n                var cnf = this.w.config;\n                gl.maxY = -Number.MAX_VALUE;\n                gl.minY = Number.MIN_VALUE;\n                var lowestYInAllSeries = Number.MAX_VALUE;\n\n                if (gl.isMultipleYAxis) {\n                    // we need to get minY and maxY for multiple y axis\n                    for (var i = 0; i < gl.series.length; i++) {\n                        var minYMaxYArr = this.getMinYMaxY(i, lowestYInAllSeries, null, i + 1);\n                        gl.minYArr.push(minYMaxYArr.minY);\n                        gl.maxYArr.push(minYMaxYArr.maxY);\n                        lowestYInAllSeries = minYMaxYArr.lowestY;\n                    }\n                } // and then, get the minY and maxY from all series\n\n\n                var minYMaxY = this.getMinYMaxY(0, lowestYInAllSeries, null, gl.series.length);\n                gl.minY = minYMaxY.minY;\n                gl.maxY = minYMaxY.maxY;\n                lowestYInAllSeries = minYMaxY.lowestY;\n\n                if (cnf.chart.stacked) {\n                    this._setStackedMinMax();\n                } // if the numbers are too big, reduce the range\n                // for eg, if number is between 100000-110000, putting 0 as the lowest value is not so good idea. So change the gl.minY for line/area/candlesticks/boxPlot\n\n\n                if (cnf.chart.type === 'line' || cnf.chart.type === 'area' || cnf.chart.type === 'candlestick' || cnf.chart.type === 'boxPlot' || cnf.chart.type === 'rangeBar' && !gl.isBarHorizontal) {\n                    if (gl.minY === Number.MIN_VALUE && lowestYInAllSeries !== -Number.MAX_VALUE && lowestYInAllSeries !== gl.maxY // single value possibility\n                    ) {\n                        var diff = gl.maxY - lowestYInAllSeries;\n\n                        if (lowestYInAllSeries >= 0 && lowestYInAllSeries <= 10 || cnf.yaxis[0].min !== undefined || cnf.yaxis[0].max !== undefined) {\n                            // if minY is already 0/low value, we don't want to go negatives here - so this check is essential.\n                            diff = 0;\n                        }\n\n                        gl.minY = lowestYInAllSeries - diff * 5 / 100;\n                        /* fix https://github.com/apexcharts/apexcharts.js/issues/614 */\n\n                        /* fix https://github.com/apexcharts/apexcharts.js/issues/968 */\n\n                        if (lowestYInAllSeries > 0 && gl.minY < 0) {\n                            gl.minY = 0;\n                        }\n                        /* fix https://github.com/apexcharts/apexcharts.js/issues/426 */\n\n\n                        gl.maxY = gl.maxY + diff * 5 / 100;\n                    }\n                }\n\n                cnf.yaxis.forEach(function(yaxe, index) {\n                    // override all min/max values by user defined values (y axis)\n                    if (yaxe.max !== undefined) {\n                        if (typeof yaxe.max === 'number') {\n                            gl.maxYArr[index] = yaxe.max;\n                        } else if (typeof yaxe.max === 'function') {\n                            // fixes apexcharts.js/issues/2098\n                            gl.maxYArr[index] = yaxe.max(gl.isMultipleYAxis ? gl.maxYArr[index] : gl.maxY);\n                        } // gl.maxY is for single y-axis chart, it will be ignored in multi-yaxis\n\n\n                        gl.maxY = gl.maxYArr[index];\n                    }\n\n                    if (yaxe.min !== undefined) {\n                        if (typeof yaxe.min === 'number') {\n                            gl.minYArr[index] = yaxe.min;\n                        } else if (typeof yaxe.min === 'function') {\n                            // fixes apexcharts.js/issues/2098\n                            gl.minYArr[index] = yaxe.min(gl.isMultipleYAxis ? gl.minYArr[index] === Number.MIN_VALUE ? 0 : gl.minYArr[index] : gl.minY);\n                        } // gl.minY is for single y-axis chart, it will be ignored in multi-yaxis\n\n\n                        gl.minY = gl.minYArr[index];\n                    }\n                }); // for horizontal bar charts, we need to check xaxis min/max as user may have specified there\n\n                if (gl.isBarHorizontal) {\n                    var minmax = ['min', 'max'];\n                    minmax.forEach(function(m) {\n                        if (cnf.xaxis[m] !== undefined && typeof cnf.xaxis[m] === 'number') {\n                            m === 'min' ? gl.minY = cnf.xaxis[m] : gl.maxY = cnf.xaxis[m];\n                        }\n                    });\n                } // for multi y-axis we need different scales for each\n\n\n                if (gl.isMultipleYAxis) {\n                    this.scales.setMultipleYScales();\n                    gl.minY = lowestYInAllSeries;\n                    gl.yAxisScale.forEach(function(scale, i) {\n                        gl.minYArr[i] = scale.niceMin;\n                        gl.maxYArr[i] = scale.niceMax;\n                    });\n                } else {\n                    this.scales.setYScaleForIndex(0, gl.minY, gl.maxY);\n                    gl.minY = gl.yAxisScale[0].niceMin;\n                    gl.maxY = gl.yAxisScale[0].niceMax;\n                    gl.minYArr[0] = gl.yAxisScale[0].niceMin;\n                    gl.maxYArr[0] = gl.yAxisScale[0].niceMax;\n                }\n\n                return {\n                    minY: gl.minY,\n                    maxY: gl.maxY,\n                    minYArr: gl.minYArr,\n                    maxYArr: gl.maxYArr,\n                    yAxisScale: gl.yAxisScale\n                };\n            }\n        }, {\n            key: \"setXRange\",\n            value: function setXRange() {\n                var gl = this.w.globals;\n                var cnf = this.w.config;\n                var isXNumeric = cnf.xaxis.type === 'numeric' || cnf.xaxis.type === 'datetime' || cnf.xaxis.type === 'category' && !gl.noLabelsProvided || gl.noLabelsProvided || gl.isXNumeric;\n\n                var getInitialMinXMaxX = function getInitialMinXMaxX() {\n                    for (var i = 0; i < gl.series.length; i++) {\n                        if (gl.labels[i]) {\n                            for (var j = 0; j < gl.labels[i].length; j++) {\n                                if (gl.labels[i][j] !== null && Utils.isNumber(gl.labels[i][j])) {\n                                    gl.maxX = Math.max(gl.maxX, gl.labels[i][j]);\n                                    gl.initialMaxX = Math.max(gl.maxX, gl.labels[i][j]);\n                                    gl.minX = Math.min(gl.minX, gl.labels[i][j]);\n                                    gl.initialMinX = Math.min(gl.minX, gl.labels[i][j]);\n                                }\n                            }\n                        }\n                    }\n                }; // minX maxX starts here\n\n\n                if (gl.isXNumeric) {\n                    getInitialMinXMaxX();\n                }\n\n                if (gl.noLabelsProvided) {\n                    if (cnf.xaxis.categories.length === 0) {\n                        gl.maxX = gl.labels[gl.labels.length - 1];\n                        gl.initialMaxX = gl.labels[gl.labels.length - 1];\n                        gl.minX = 1;\n                        gl.initialMinX = 1;\n                    }\n                }\n\n                if (gl.isXNumeric || gl.noLabelsProvided || gl.dataFormatXNumeric) {\n                    var ticks;\n\n                    if (cnf.xaxis.tickAmount === undefined) {\n                        ticks = Math.round(gl.svgWidth / 150); // no labels provided and total number of dataPoints is less than 30\n\n                        if (cnf.xaxis.type === 'numeric' && gl.dataPoints < 30) {\n                            ticks = gl.dataPoints - 1;\n                        } // this check is for when ticks exceeds total datapoints and that would result in duplicate labels\n\n\n                        if (ticks > gl.dataPoints && gl.dataPoints !== 0) {\n                            ticks = gl.dataPoints - 1;\n                        }\n                    } else if (cnf.xaxis.tickAmount === 'dataPoints') {\n                        if (gl.series.length > 1) {\n                            ticks = gl.series[gl.maxValsInArrayIndex].length - 1;\n                        }\n\n                        if (gl.isXNumeric) {\n                            ticks = gl.maxX - gl.minX - 1;\n                        }\n                    } else {\n                        ticks = cnf.xaxis.tickAmount;\n                    }\n\n                    gl.xTickAmount = ticks; // override all min/max values by user defined values (x axis)\n\n                    if (cnf.xaxis.max !== undefined && typeof cnf.xaxis.max === 'number') {\n                        gl.maxX = cnf.xaxis.max;\n                    }\n\n                    if (cnf.xaxis.min !== undefined && typeof cnf.xaxis.min === 'number') {\n                        gl.minX = cnf.xaxis.min;\n                    } // if range is provided, adjust the new minX\n\n\n                    if (cnf.xaxis.range !== undefined) {\n                        gl.minX = gl.maxX - cnf.xaxis.range;\n                    }\n\n                    if (gl.minX !== Number.MAX_VALUE && gl.maxX !== -Number.MAX_VALUE) {\n                        if (cnf.xaxis.convertedCatToNumeric && !gl.dataFormatXNumeric) {\n                            var catScale = [];\n\n                            for (var i = gl.minX - 1; i < gl.maxX; i++) {\n                                catScale.push(i + 1);\n                            }\n\n                            gl.xAxisScale = {\n                                result: catScale,\n                                niceMin: catScale[0],\n                                niceMax: catScale[catScale.length - 1]\n                            };\n                        } else {\n                            gl.xAxisScale = this.scales.setXScale(gl.minX, gl.maxX);\n                        }\n                    } else {\n                        gl.xAxisScale = this.scales.linearScale(1, ticks, ticks);\n\n                        if (gl.noLabelsProvided && gl.labels.length > 0) {\n                            gl.xAxisScale = this.scales.linearScale(1, gl.labels.length, ticks - 1); // this is the only place seriesX is again mutated\n\n                            gl.seriesX = gl.labels.slice();\n                        }\n                    } // we will still store these labels as the count for this will be different (to draw grid and labels placement)\n\n\n                    if (isXNumeric) {\n                        gl.labels = gl.xAxisScale.result.slice();\n                    }\n                }\n\n                if (gl.isBarHorizontal && gl.labels.length) {\n                    gl.xTickAmount = gl.labels.length;\n                } // single dataPoint\n\n\n                this._handleSingleDataPoint(); // minimum x difference to calculate bar width in numeric bars\n\n\n                this._getMinXDiff();\n\n                return {\n                    minX: gl.minX,\n                    maxX: gl.maxX\n                };\n            }\n        }, {\n            key: \"setZRange\",\n            value: function setZRange() {\n                // minZ, maxZ starts here\n                var gl = this.w.globals;\n                if (!gl.isDataXYZ) return;\n\n                for (var i = 0; i < gl.series.length; i++) {\n                    if (typeof gl.seriesZ[i] !== 'undefined') {\n                        for (var j = 0; j < gl.seriesZ[i].length; j++) {\n                            if (gl.seriesZ[i][j] !== null && Utils.isNumber(gl.seriesZ[i][j])) {\n                                gl.maxZ = Math.max(gl.maxZ, gl.seriesZ[i][j]);\n                                gl.minZ = Math.min(gl.minZ, gl.seriesZ[i][j]);\n                            }\n                        }\n                    }\n                }\n            }\n        }, {\n            key: \"_handleSingleDataPoint\",\n            value: function _handleSingleDataPoint() {\n                var gl = this.w.globals;\n                var cnf = this.w.config;\n\n                if (gl.minX === gl.maxX) {\n                    var datetimeObj = new DateTime(this.ctx);\n\n                    if (cnf.xaxis.type === 'datetime') {\n                        var newMinX = datetimeObj.getDate(gl.minX);\n                        newMinX.setUTCDate(newMinX.getDate() - 2);\n                        gl.minX = new Date(newMinX).getTime();\n                        var newMaxX = datetimeObj.getDate(gl.maxX);\n                        newMaxX.setUTCDate(newMaxX.getDate() + 2);\n                        gl.maxX = new Date(newMaxX).getTime();\n                    } else if (cnf.xaxis.type === 'numeric' || cnf.xaxis.type === 'category' && !gl.noLabelsProvided) {\n                        gl.minX = gl.minX - 2;\n                        gl.initialMinX = gl.minX;\n                        gl.maxX = gl.maxX + 2;\n                        gl.initialMaxX = gl.maxX;\n                    }\n                }\n            }\n        }, {\n            key: \"_getMinXDiff\",\n            value: function _getMinXDiff() {\n                var gl = this.w.globals;\n\n                if (gl.isXNumeric) {\n                    // get the least x diff if numeric x axis is present\n                    gl.seriesX.forEach(function(sX, i) {\n                        if (sX.length === 1) {\n                            // a small hack to prevent overlapping multiple bars when there is just 1 datapoint in bar series.\n                            // fix #811\n                            sX.push(gl.seriesX[gl.maxValsInArrayIndex][gl.seriesX[gl.maxValsInArrayIndex].length - 1]);\n                        } // fix #983 (clone the array to avoid side effects)\n\n\n                        var seriesX = sX.slice();\n                        seriesX.sort(function(a, b) {\n                            return a - b;\n                        });\n                        seriesX.forEach(function(s, j) {\n                            if (j > 0) {\n                                var xDiff = s - seriesX[j - 1];\n\n                                if (xDiff > 0) {\n                                    gl.minXDiff = Math.min(xDiff, gl.minXDiff);\n                                }\n                            }\n                        });\n\n                        if (gl.dataPoints === 1 && gl.minXDiff === Number.MAX_VALUE) {\n                            // fixes apexcharts.js #1221\n                            gl.minXDiff = 0.5;\n                        }\n                    });\n                }\n            }\n        }, {\n            key: \"_setStackedMinMax\",\n            value: function _setStackedMinMax() {\n                var gl = this.w.globals; // for stacked charts, we calculate each series's parallel values. i.e, series[0][j] + series[1][j] .... [series[i.length][j]] and get the max out of it\n\n                var stackedPoss = [];\n                var stackedNegs = [];\n\n                if (gl.series.length) {\n                    for (var j = 0; j < gl.series[gl.maxValsInArrayIndex].length; j++) {\n                        var poss = 0;\n                        var negs = 0;\n\n                        for (var i = 0; i < gl.series.length; i++) {\n                            if (gl.series[i][j] !== null && Utils.isNumber(gl.series[i][j])) {\n                                // 0.0001 fixes #185 when values are very small\n                                gl.series[i][j] > 0 ? poss = poss + parseFloat(gl.series[i][j]) + 0.0001 : negs = negs + parseFloat(gl.series[i][j]);\n                            }\n\n                            if (i === gl.series.length - 1) {\n                                // push all the totals to the array for future use\n                                stackedPoss.push(poss);\n                                stackedNegs.push(negs);\n                            }\n                        }\n                    }\n                } // get the max/min out of the added parallel values\n\n\n                for (var z = 0; z < stackedPoss.length; z++) {\n                    gl.maxY = Math.max(gl.maxY, stackedPoss[z]);\n                    gl.minY = Math.min(gl.minY, stackedNegs[z]);\n                }\n            }\n        }]);\n\n        return Range$1;\n    }();\n\n    /**\n     * ApexCharts YAxis Class for drawing Y-Axis.\n     *\n     * @module YAxis\n     **/\n\n    var YAxis = /*#__PURE__*/ function() {\n        function YAxis(ctx) {\n            _classCallCheck(this, YAxis);\n\n            this.ctx = ctx;\n            this.w = ctx.w;\n            var w = this.w;\n            this.xaxisFontSize = w.config.xaxis.labels.style.fontSize;\n            this.axisFontFamily = w.config.xaxis.labels.style.fontFamily;\n            this.xaxisForeColors = w.config.xaxis.labels.style.colors;\n            this.isCategoryBarHorizontal = w.config.chart.type === 'bar' && w.config.plotOptions.bar.horizontal;\n            this.xAxisoffX = 0;\n\n            if (w.config.xaxis.position === 'bottom') {\n                this.xAxisoffX = w.globals.gridHeight;\n            }\n\n            this.drawnLabels = [];\n            this.axesUtils = new AxesUtils(ctx);\n        }\n\n        _createClass(YAxis, [{\n            key: \"drawYaxis\",\n            value: function drawYaxis(realIndex) {\n                    var _this = this;\n\n                    var w = this.w;\n                    var graphics = new Graphics(this.ctx);\n                    var yaxisStyle = w.config.yaxis[realIndex].labels.style;\n                    var yaxisFontSize = yaxisStyle.fontSize;\n                    var yaxisFontFamily = yaxisStyle.fontFamily;\n                    var yaxisFontWeight = yaxisStyle.fontWeight;\n                    var elYaxis = graphics.group({\n                        class: 'apexcharts-yaxis',\n                        rel: realIndex,\n                        transform: 'translate(' + w.globals.translateYAxisX[realIndex] + ', 0)'\n                    });\n\n                    if (this.axesUtils.isYAxisHidden(realIndex)) {\n                        return elYaxis;\n                    }\n\n                    var elYaxisTexts = graphics.group({\n                        class: 'apexcharts-yaxis-texts-g'\n                    });\n                    elYaxis.add(elYaxisTexts);\n                    var tickAmount = w.globals.yAxisScale[realIndex].result.length - 1; // labelsDivider is simply svg height/number of ticks\n\n                    var labelsDivider = w.globals.gridHeight / tickAmount; // initial label position = 0;\n\n                    var l = w.globals.translateY;\n                    var lbFormatter = w.globals.yLabelFormatters[realIndex];\n                    var labels = w.globals.yAxisScale[realIndex].result.slice();\n                    labels = this.axesUtils.checkForReversedLabels(realIndex, labels);\n                    var firstLabel = '';\n\n                    if (w.config.yaxis[realIndex].labels.show) {\n                        var _loop = function _loop(i) {\n                            var val = labels[i];\n                            val = lbFormatter(val, i, w);\n                            var xPad = w.config.yaxis[realIndex].labels.padding;\n\n                            if (w.config.yaxis[realIndex].opposite && w.config.yaxis.length !== 0) {\n                                xPad = xPad * -1;\n                            }\n\n                            var yColors = _this.axesUtils.getYAxisForeColor(yaxisStyle.colors, realIndex);\n\n                            var getForeColor = function getForeColor() {\n                                return Array.isArray(yColors) ? yColors[i] : yColors;\n                            };\n\n                            var label = graphics.drawText({\n                                x: xPad,\n                                y: l + tickAmount / 10 + w.config.yaxis[realIndex].labels.offsetY + 1,\n                                text: val,\n                                textAnchor: w.config.yaxis[realIndex].opposite ? 'start' : 'end',\n                                fontSize: yaxisFontSize,\n                                fontFamily: yaxisFontFamily,\n                                fontWeight: yaxisFontWeight,\n                                foreColor: getForeColor(),\n                                isPlainText: false,\n                                cssClass: 'apexcharts-yaxis-label ' + yaxisStyle.cssClass\n                            });\n\n                            if (i === tickAmount) {\n                                firstLabel = label;\n                            }\n\n                            elYaxisTexts.add(label);\n                            var elTooltipTitle = document.createElementNS(w.globals.SVGNS, 'title');\n                            elTooltipTitle.textContent = Array.isArray(val) ? val.join(' ') : val;\n                            label.node.appendChild(elTooltipTitle);\n\n                            if (w.config.yaxis[realIndex].labels.rotate !== 0) {\n                                var firstabelRotatingCenter = graphics.rotateAroundCenter(firstLabel.node);\n                                var labelRotatingCenter = graphics.rotateAroundCenter(label.node);\n                                label.node.setAttribute('transform', \"rotate(\".concat(w.config.yaxis[realIndex].labels.rotate, \" \").concat(firstabelRotatingCenter.x, \" \").concat(labelRotatingCenter.y, \")\"));\n                            }\n\n                            l = l + labelsDivider;\n                        };\n\n                        for (var i = tickAmount; i >= 0; i--) {\n                            _loop(i);\n                        }\n                    }\n\n                    if (w.config.yaxis[realIndex].title.text !== undefined) {\n                        var elYaxisTitle = graphics.group({\n                            class: 'apexcharts-yaxis-title'\n                        });\n                        var _x = 0;\n\n                        if (w.config.yaxis[realIndex].opposite) {\n                            _x = w.globals.translateYAxisX[realIndex];\n                        }\n\n                        var elYAxisTitleText = graphics.drawText({\n                            x: _x,\n                            y: w.globals.gridHeight / 2 + w.globals.translateY + w.config.yaxis[realIndex].title.offsetY,\n                            text: w.config.yaxis[realIndex].title.text,\n                            textAnchor: 'end',\n                            foreColor: w.config.yaxis[realIndex].title.style.color,\n                            fontSize: w.config.yaxis[realIndex].title.style.fontSize,\n                            fontWeight: w.config.yaxis[realIndex].title.style.fontWeight,\n                            fontFamily: w.config.yaxis[realIndex].title.style.fontFamily,\n                            cssClass: 'apexcharts-yaxis-title-text ' + w.config.yaxis[realIndex].title.style.cssClass\n                        });\n                        elYaxisTitle.add(elYAxisTitleText);\n                        elYaxis.add(elYaxisTitle);\n                    }\n\n                    var axisBorder = w.config.yaxis[realIndex].axisBorder;\n                    var x = 31 + axisBorder.offsetX;\n\n                    if (w.config.yaxis[realIndex].opposite) {\n                        x = -31 - axisBorder.offsetX;\n                    }\n\n                    if (axisBorder.show) {\n                        var elVerticalLine = graphics.drawLine(x, w.globals.translateY + axisBorder.offsetY - 2, x, w.globals.gridHeight + w.globals.translateY + axisBorder.offsetY + 2, axisBorder.color, 0, axisBorder.width);\n                        elYaxis.add(elVerticalLine);\n                    }\n\n                    if (w.config.yaxis[realIndex].axisTicks.show) {\n                        this.axesUtils.drawYAxisTicks(x, tickAmount, axisBorder, w.config.yaxis[realIndex].axisTicks, realIndex, labelsDivider, elYaxis);\n                    }\n\n                    return elYaxis;\n                } // This actually becomes horizontal axis (for bar charts)\n\n        }, {\n            key: \"drawYaxisInversed\",\n            value: function drawYaxisInversed(realIndex) {\n                var w = this.w;\n                var graphics = new Graphics(this.ctx);\n                var elXaxis = graphics.group({\n                    class: 'apexcharts-xaxis apexcharts-yaxis-inversed'\n                });\n                var elXaxisTexts = graphics.group({\n                    class: 'apexcharts-xaxis-texts-g',\n                    transform: \"translate(\".concat(w.globals.translateXAxisX, \", \").concat(w.globals.translateXAxisY, \")\")\n                });\n                elXaxis.add(elXaxisTexts);\n                var tickAmount = w.globals.yAxisScale[realIndex].result.length - 1; // labelsDivider is simply svg width/number of ticks\n\n                var labelsDivider = w.globals.gridWidth / tickAmount + 0.1; // initial label position;\n\n                var l = labelsDivider + w.config.xaxis.labels.offsetX;\n                var lbFormatter = w.globals.xLabelFormatter;\n                var labels = w.globals.yAxisScale[realIndex].result.slice();\n                var timescaleLabels = w.globals.timescaleLabels;\n\n                if (timescaleLabels.length > 0) {\n                    this.xaxisLabels = timescaleLabels.slice();\n                    labels = timescaleLabels.slice();\n                    tickAmount = labels.length;\n                }\n\n                labels = this.axesUtils.checkForReversedLabels(realIndex, labels);\n                var tl = timescaleLabels.length;\n\n                if (w.config.xaxis.labels.show) {\n                    for (var i = tl ? 0 : tickAmount; tl ? i < tl : i >= 0; tl ? i++ : i--) {\n                        var val = labels[i];\n                        val = lbFormatter(val, i, w);\n                        var x = w.globals.gridWidth + w.globals.padHorizontal - (l - labelsDivider + w.config.xaxis.labels.offsetX);\n\n                        if (timescaleLabels.length) {\n                            var label = this.axesUtils.getLabel(labels, timescaleLabels, x, i, this.drawnLabels, this.xaxisFontSize);\n                            x = label.x;\n                            val = label.text;\n                            this.drawnLabels.push(label.text);\n\n                            if (i === 0 && w.globals.skipFirstTimelinelabel) {\n                                val = '';\n                            }\n\n                            if (i === labels.length - 1 && w.globals.skipLastTimelinelabel) {\n                                val = '';\n                            }\n                        }\n\n                        var elTick = graphics.drawText({\n                            x: x,\n                            y: this.xAxisoffX + w.config.xaxis.labels.offsetY + 30 - (w.config.xaxis.position === 'top' ? w.globals.xAxisHeight + w.config.xaxis.axisTicks.height - 2 : 0),\n                            text: val,\n                            textAnchor: 'middle',\n                            foreColor: Array.isArray(this.xaxisForeColors) ? this.xaxisForeColors[realIndex] : this.xaxisForeColors,\n                            fontSize: this.xaxisFontSize,\n                            fontFamily: this.xaxisFontFamily,\n                            fontWeight: w.config.xaxis.labels.style.fontWeight,\n                            isPlainText: false,\n                            cssClass: 'apexcharts-xaxis-label ' + w.config.xaxis.labels.style.cssClass\n                        });\n                        elXaxisTexts.add(elTick);\n                        elTick.tspan(val);\n                        var elTooltipTitle = document.createElementNS(w.globals.SVGNS, 'title');\n                        elTooltipTitle.textContent = val;\n                        elTick.node.appendChild(elTooltipTitle);\n                        l = l + labelsDivider;\n                    }\n                }\n\n                this.inversedYAxisTitleText(elXaxis);\n                this.inversedYAxisBorder(elXaxis);\n                return elXaxis;\n            }\n        }, {\n            key: \"inversedYAxisBorder\",\n            value: function inversedYAxisBorder(parent) {\n                var w = this.w;\n                var graphics = new Graphics(this.ctx);\n                var axisBorder = w.config.xaxis.axisBorder;\n\n                if (axisBorder.show) {\n                    var lineCorrection = 0;\n\n                    if (w.config.chart.type === 'bar' && w.globals.isXNumeric) {\n                        lineCorrection = lineCorrection - 15;\n                    }\n\n                    var elHorzLine = graphics.drawLine(w.globals.padHorizontal + lineCorrection + axisBorder.offsetX, this.xAxisoffX, w.globals.gridWidth, this.xAxisoffX, axisBorder.color, 0, axisBorder.height);\n                    parent.add(elHorzLine);\n                }\n            }\n        }, {\n            key: \"inversedYAxisTitleText\",\n            value: function inversedYAxisTitleText(parent) {\n                var w = this.w;\n                var graphics = new Graphics(this.ctx);\n\n                if (w.config.xaxis.title.text !== undefined) {\n                    var elYaxisTitle = graphics.group({\n                        class: 'apexcharts-xaxis-title apexcharts-yaxis-title-inversed'\n                    });\n                    var elYAxisTitleText = graphics.drawText({\n                        x: w.globals.gridWidth / 2 + w.config.xaxis.title.offsetX,\n                        y: this.xAxisoffX + parseFloat(this.xaxisFontSize) + parseFloat(w.config.xaxis.title.style.fontSize) + w.config.xaxis.title.offsetY + 20,\n                        text: w.config.xaxis.title.text,\n                        textAnchor: 'middle',\n                        fontSize: w.config.xaxis.title.style.fontSize,\n                        fontFamily: w.config.xaxis.title.style.fontFamily,\n                        fontWeight: w.config.xaxis.title.style.fontWeight,\n                        foreColor: w.config.xaxis.title.style.color,\n                        cssClass: 'apexcharts-xaxis-title-text ' + w.config.xaxis.title.style.cssClass\n                    });\n                    elYaxisTitle.add(elYAxisTitleText);\n                    parent.add(elYaxisTitle);\n                }\n            }\n        }, {\n            key: \"yAxisTitleRotate\",\n            value: function yAxisTitleRotate(realIndex, yAxisOpposite) {\n                var w = this.w;\n                var graphics = new Graphics(this.ctx);\n                var yAxisLabelsCoord = {\n                    width: 0,\n                    height: 0\n                };\n                var yAxisTitleCoord = {\n                    width: 0,\n                    height: 0\n                };\n                var elYAxisLabelsWrap = w.globals.dom.baseEl.querySelector(\" .apexcharts-yaxis[rel='\".concat(realIndex, \"'] .apexcharts-yaxis-texts-g\"));\n\n                if (elYAxisLabelsWrap !== null) {\n                    yAxisLabelsCoord = elYAxisLabelsWrap.getBoundingClientRect();\n                }\n\n                var yAxisTitle = w.globals.dom.baseEl.querySelector(\".apexcharts-yaxis[rel='\".concat(realIndex, \"'] .apexcharts-yaxis-title text\"));\n\n                if (yAxisTitle !== null) {\n                    yAxisTitleCoord = yAxisTitle.getBoundingClientRect();\n                }\n\n                if (yAxisTitle !== null) {\n                    var x = this.xPaddingForYAxisTitle(realIndex, yAxisLabelsCoord, yAxisTitleCoord, yAxisOpposite);\n                    yAxisTitle.setAttribute('x', x.xPos - (yAxisOpposite ? 10 : 0));\n                }\n\n                if (yAxisTitle !== null) {\n                    var titleRotatingCenter = graphics.rotateAroundCenter(yAxisTitle);\n                    yAxisTitle.setAttribute('transform', \"rotate(\".concat(yAxisOpposite ? w.config.yaxis[realIndex].title.rotate * -1 : w.config.yaxis[realIndex].title.rotate, \" \").concat(titleRotatingCenter.x, \" \").concat(titleRotatingCenter.y, \")\"));\n                }\n            }\n        }, {\n            key: \"xPaddingForYAxisTitle\",\n            value: function xPaddingForYAxisTitle(realIndex, yAxisLabelsCoord, yAxisTitleCoord, yAxisOpposite) {\n                    var w = this.w;\n                    var oppositeAxisCount = 0;\n                    var x = 0;\n                    var padd = 10;\n\n                    if (w.config.yaxis[realIndex].title.text === undefined || realIndex < 0) {\n                        return {\n                            xPos: x,\n                            padd: 0\n                        };\n                    }\n\n                    if (yAxisOpposite) {\n                        x = yAxisLabelsCoord.width + w.config.yaxis[realIndex].title.offsetX + yAxisTitleCoord.width / 2 + padd / 2;\n                        oppositeAxisCount += 1;\n\n                        if (oppositeAxisCount === 0) {\n                            x = x - padd / 2;\n                        }\n                    } else {\n                        x = yAxisLabelsCoord.width * -1 + w.config.yaxis[realIndex].title.offsetX + padd / 2 + yAxisTitleCoord.width / 2;\n\n                        if (w.globals.isBarHorizontal) {\n                            padd = 25;\n                            x = yAxisLabelsCoord.width * -1 - w.config.yaxis[realIndex].title.offsetX - padd;\n                        }\n                    }\n\n                    return {\n                        xPos: x,\n                        padd: padd\n                    };\n                } // sets the x position of the y-axis by counting the labels width, title width and any offset\n\n        }, {\n            key: \"setYAxisXPosition\",\n            value: function setYAxisXPosition(yaxisLabelCoords, yTitleCoords) {\n                var w = this.w;\n                var xLeft = 0;\n                var xRight = 0;\n                var leftOffsetX = 18;\n                var rightOffsetX = 1;\n\n                if (w.config.yaxis.length > 1) {\n                    this.multipleYs = true;\n                }\n\n                w.config.yaxis.map(function(yaxe, index) {\n                    var shouldNotDrawAxis = w.globals.ignoreYAxisIndexes.indexOf(index) > -1 || !yaxe.show || yaxe.floating || yaxisLabelCoords[index].width === 0;\n                    var axisWidth = yaxisLabelCoords[index].width + yTitleCoords[index].width;\n\n                    if (!yaxe.opposite) {\n                        xLeft = w.globals.translateX - leftOffsetX;\n\n                        if (!shouldNotDrawAxis) {\n                            leftOffsetX = leftOffsetX + axisWidth + 20;\n                        }\n\n                        w.globals.translateYAxisX[index] = xLeft + yaxe.labels.offsetX;\n                    } else {\n                        if (w.globals.isBarHorizontal) {\n                            xRight = w.globals.gridWidth + w.globals.translateX - 1;\n                            w.globals.translateYAxisX[index] = xRight - yaxe.labels.offsetX;\n                        } else {\n                            xRight = w.globals.gridWidth + w.globals.translateX + rightOffsetX;\n\n                            if (!shouldNotDrawAxis) {\n                                rightOffsetX = rightOffsetX + axisWidth + 20;\n                            }\n\n                            w.globals.translateYAxisX[index] = xRight - yaxe.labels.offsetX + 20;\n                        }\n                    }\n                });\n            }\n        }, {\n            key: \"setYAxisTextAlignments\",\n            value: function setYAxisTextAlignments() {\n                var w = this.w;\n                var yaxis = w.globals.dom.baseEl.getElementsByClassName(\"apexcharts-yaxis\");\n                yaxis = Utils.listToArray(yaxis);\n                yaxis.forEach(function(y, index) {\n                    var yaxe = w.config.yaxis[index]; // proceed only if user has specified alignment\n\n                    if (yaxe && yaxe.labels.align !== undefined) {\n                        var yAxisInner = w.globals.dom.baseEl.querySelector(\".apexcharts-yaxis[rel='\".concat(index, \"'] .apexcharts-yaxis-texts-g\"));\n                        var yAxisTexts = w.globals.dom.baseEl.querySelectorAll(\".apexcharts-yaxis[rel='\".concat(index, \"'] .apexcharts-yaxis-label\"));\n                        yAxisTexts = Utils.listToArray(yAxisTexts);\n                        var rect = yAxisInner.getBoundingClientRect();\n\n                        if (yaxe.labels.align === 'left') {\n                            yAxisTexts.forEach(function(label, lI) {\n                                label.setAttribute('text-anchor', 'start');\n                            });\n\n                            if (!yaxe.opposite) {\n                                yAxisInner.setAttribute('transform', \"translate(-\".concat(rect.width, \", 0)\"));\n                            }\n                        } else if (yaxe.labels.align === 'center') {\n                            yAxisTexts.forEach(function(label, lI) {\n                                label.setAttribute('text-anchor', 'middle');\n                            });\n                            yAxisInner.setAttribute('transform', \"translate(\".concat(rect.width / 2 * (!yaxe.opposite ? -1 : 1), \", 0)\"));\n                        } else if (yaxe.labels.align === 'right') {\n                            yAxisTexts.forEach(function(label, lI) {\n                                label.setAttribute('text-anchor', 'end');\n                            });\n\n                            if (yaxe.opposite) {\n                                yAxisInner.setAttribute('transform', \"translate(\".concat(rect.width, \", 0)\"));\n                            }\n                        }\n                    }\n                });\n            }\n        }]);\n\n        return YAxis;\n    }();\n\n    var Events = /*#__PURE__*/ function() {\n        function Events(ctx) {\n            _classCallCheck(this, Events);\n\n            this.ctx = ctx;\n            this.w = ctx.w;\n            this.documentEvent = Utils.bind(this.documentEvent, this);\n        }\n\n        _createClass(Events, [{\n            key: \"addEventListener\",\n            value: function addEventListener(name, handler) {\n                var w = this.w;\n\n                if (w.globals.events.hasOwnProperty(name)) {\n                    w.globals.events[name].push(handler);\n                } else {\n                    w.globals.events[name] = [handler];\n                }\n            }\n        }, {\n            key: \"removeEventListener\",\n            value: function removeEventListener(name, handler) {\n                var w = this.w;\n\n                if (!w.globals.events.hasOwnProperty(name)) {\n                    return;\n                }\n\n                var index = w.globals.events[name].indexOf(handler);\n\n                if (index !== -1) {\n                    w.globals.events[name].splice(index, 1);\n                }\n            }\n        }, {\n            key: \"fireEvent\",\n            value: function fireEvent(name, args) {\n                var w = this.w;\n\n                if (!w.globals.events.hasOwnProperty(name)) {\n                    return;\n                }\n\n                if (!args || !args.length) {\n                    args = [];\n                }\n\n                var evs = w.globals.events[name];\n                var l = evs.length;\n\n                for (var i = 0; i < l; i++) {\n                    evs[i].apply(null, args);\n                }\n            }\n        }, {\n            key: \"setupEventHandlers\",\n            value: function setupEventHandlers() {\n                var _this = this;\n\n                var w = this.w;\n                var me = this.ctx;\n                var clickableArea = w.globals.dom.baseEl.querySelector(w.globals.chartClass);\n                this.ctx.eventList.forEach(function(event) {\n                    clickableArea.addEventListener(event, function(e) {\n                        var opts = Object.assign({}, w, {\n                            seriesIndex: w.globals.capturedSeriesIndex,\n                            dataPointIndex: w.globals.capturedDataPointIndex\n                        });\n\n                        if (e.type === 'mousemove' || e.type === 'touchmove') {\n                            if (typeof w.config.chart.events.mouseMove === 'function') {\n                                w.config.chart.events.mouseMove(e, me, opts);\n                            }\n                        } else if (e.type === 'mouseleave' || e.type === 'touchleave') {\n                            if (typeof w.config.chart.events.mouseLeave === 'function') {\n                                w.config.chart.events.mouseLeave(e, me, opts);\n                            }\n                        } else if (e.type === 'mouseup' && e.which === 1 || e.type === 'touchend') {\n                            if (typeof w.config.chart.events.click === 'function') {\n                                w.config.chart.events.click(e, me, opts);\n                            }\n\n                            me.ctx.events.fireEvent('click', [e, me, opts]);\n                        }\n                    }, {\n                        capture: false,\n                        passive: true\n                    });\n                });\n                this.ctx.eventList.forEach(function(event) {\n                    w.globals.dom.baseEl.addEventListener(event, _this.documentEvent, {\n                        passive: true\n                    });\n                });\n                this.ctx.core.setupBrushHandler();\n            }\n        }, {\n            key: \"documentEvent\",\n            value: function documentEvent(e) {\n                var w = this.w;\n                var target = e.target.className;\n\n                if (e.type === 'click') {\n                    var elMenu = w.globals.dom.baseEl.querySelector('.apexcharts-menu');\n\n                    if (elMenu && elMenu.classList.contains('apexcharts-menu-open') && target !== 'apexcharts-menu-icon') {\n                        elMenu.classList.remove('apexcharts-menu-open');\n                    }\n                }\n\n                w.globals.clientX = e.type === 'touchmove' ? e.touches[0].clientX : e.clientX;\n                w.globals.clientY = e.type === 'touchmove' ? e.touches[0].clientY : e.clientY;\n            }\n        }]);\n\n        return Events;\n    }();\n\n    var Localization = /*#__PURE__*/ function() {\n        function Localization(ctx) {\n            _classCallCheck(this, Localization);\n\n            this.ctx = ctx;\n            this.w = ctx.w;\n        }\n\n        _createClass(Localization, [{\n            key: \"setCurrentLocaleValues\",\n            value: function setCurrentLocaleValues(localeName) {\n                var locales = this.w.config.chart.locales; // check if user has specified locales in global Apex variable\n                // if yes - then extend those with local chart's locale\n\n                if (window.Apex.chart && window.Apex.chart.locales && window.Apex.chart.locales.length > 0) {\n                    locales = this.w.config.chart.locales.concat(window.Apex.chart.locales);\n                } // find the locale from the array of locales which user has set (either by chart.defaultLocale or by calling setLocale() method.)\n\n\n                var selectedLocale = locales.filter(function(c) {\n                    return c.name === localeName;\n                })[0];\n\n                if (selectedLocale) {\n                    // create a complete locale object by extending defaults so you don't get undefined errors.\n                    var ret = Utils.extend(en, selectedLocale); // store these locale options in global var for ease access\n\n                    this.w.globals.locale = ret.options;\n                } else {\n                    throw new Error('Wrong locale name provided. Please make sure you set the correct locale name in options');\n                }\n            }\n        }]);\n\n        return Localization;\n    }();\n\n    var Axes = /*#__PURE__*/ function() {\n        function Axes(ctx) {\n            _classCallCheck(this, Axes);\n\n            this.ctx = ctx;\n            this.w = ctx.w;\n        }\n\n        _createClass(Axes, [{\n            key: \"drawAxis\",\n            value: function drawAxis(type, xyRatios) {\n                var gl = this.w.globals;\n                var cnf = this.w.config;\n                var xAxis = new XAxis(this.ctx);\n                var yAxis = new YAxis(this.ctx);\n\n                if (gl.axisCharts && type !== 'radar') {\n                    var elXaxis, elYaxis;\n\n                    if (gl.isBarHorizontal) {\n                        elYaxis = yAxis.drawYaxisInversed(0);\n                        elXaxis = xAxis.drawXaxisInversed(0);\n                        gl.dom.elGraphical.add(elXaxis);\n                        gl.dom.elGraphical.add(elYaxis);\n                    } else {\n                        elXaxis = xAxis.drawXaxis();\n                        gl.dom.elGraphical.add(elXaxis);\n                        cnf.yaxis.map(function(yaxe, index) {\n                            if (gl.ignoreYAxisIndexes.indexOf(index) === -1) {\n                                elYaxis = yAxis.drawYaxis(index);\n                                gl.dom.Paper.add(elYaxis);\n                            }\n                        });\n                    }\n                }\n            }\n        }]);\n\n        return Axes;\n    }();\n\n    var Crosshairs = /*#__PURE__*/ function() {\n        function Crosshairs(ctx) {\n            _classCallCheck(this, Crosshairs);\n\n            this.ctx = ctx;\n            this.w = ctx.w;\n        }\n\n        _createClass(Crosshairs, [{\n            key: \"drawXCrosshairs\",\n            value: function drawXCrosshairs() {\n                var w = this.w;\n                var graphics = new Graphics(this.ctx);\n                var filters = new Filters(this.ctx);\n                var crosshairGradient = w.config.xaxis.crosshairs.fill.gradient;\n                var crosshairShadow = w.config.xaxis.crosshairs.dropShadow;\n                var fillType = w.config.xaxis.crosshairs.fill.type;\n                var gradientFrom = crosshairGradient.colorFrom;\n                var gradientTo = crosshairGradient.colorTo;\n                var opacityFrom = crosshairGradient.opacityFrom;\n                var opacityTo = crosshairGradient.opacityTo;\n                var stops = crosshairGradient.stops;\n                var shadow = 'none';\n                var dropShadow = crosshairShadow.enabled;\n                var shadowLeft = crosshairShadow.left;\n                var shadowTop = crosshairShadow.top;\n                var shadowBlur = crosshairShadow.blur;\n                var shadowColor = crosshairShadow.color;\n                var shadowOpacity = crosshairShadow.opacity;\n                var xcrosshairsFill = w.config.xaxis.crosshairs.fill.color;\n\n                if (w.config.xaxis.crosshairs.show) {\n                    if (fillType === 'gradient') {\n                        xcrosshairsFill = graphics.drawGradient('vertical', gradientFrom, gradientTo, opacityFrom, opacityTo, null, stops, null);\n                    }\n\n                    var xcrosshairs = graphics.drawRect();\n\n                    if (w.config.xaxis.crosshairs.width === 1) {\n                        // to prevent drawing 2 lines, convert rect to line\n                        xcrosshairs = graphics.drawLine();\n                    }\n\n                    var gridHeight = w.globals.gridHeight;\n\n                    if (!Utils.isNumber(gridHeight) || gridHeight < 0) {\n                        gridHeight = 0;\n                    }\n\n                    var crosshairsWidth = w.config.xaxis.crosshairs.width;\n\n                    if (!Utils.isNumber(crosshairsWidth) || crosshairsWidth < 0) {\n                        crosshairsWidth = 0;\n                    }\n\n                    xcrosshairs.attr({\n                        class: 'apexcharts-xcrosshairs',\n                        x: 0,\n                        y: 0,\n                        y2: gridHeight,\n                        width: crosshairsWidth,\n                        height: gridHeight,\n                        fill: xcrosshairsFill,\n                        filter: shadow,\n                        'fill-opacity': w.config.xaxis.crosshairs.opacity,\n                        stroke: w.config.xaxis.crosshairs.stroke.color,\n                        'stroke-width': w.config.xaxis.crosshairs.stroke.width,\n                        'stroke-dasharray': w.config.xaxis.crosshairs.stroke.dashArray\n                    });\n\n                    if (dropShadow) {\n                        xcrosshairs = filters.dropShadow(xcrosshairs, {\n                            left: shadowLeft,\n                            top: shadowTop,\n                            blur: shadowBlur,\n                            color: shadowColor,\n                            opacity: shadowOpacity\n                        });\n                    }\n\n                    w.globals.dom.elGraphical.add(xcrosshairs);\n                }\n            }\n        }, {\n            key: \"drawYCrosshairs\",\n            value: function drawYCrosshairs() {\n                var w = this.w;\n                var graphics = new Graphics(this.ctx);\n                var crosshair = w.config.yaxis[0].crosshairs;\n                var offX = w.globals.barPadForNumericAxis;\n\n                if (w.config.yaxis[0].crosshairs.show) {\n                    var ycrosshairs = graphics.drawLine(-offX, 0, w.globals.gridWidth + offX, 0, crosshair.stroke.color, crosshair.stroke.dashArray, crosshair.stroke.width);\n                    ycrosshairs.attr({\n                        class: 'apexcharts-ycrosshairs'\n                    });\n                    w.globals.dom.elGraphical.add(ycrosshairs);\n                } // draw an invisible crosshair to help in positioning the yaxis tooltip\n\n\n                var ycrosshairsHidden = graphics.drawLine(-offX, 0, w.globals.gridWidth + offX, 0, crosshair.stroke.color, 0, 0);\n                ycrosshairsHidden.attr({\n                    class: 'apexcharts-ycrosshairs-hidden'\n                });\n                w.globals.dom.elGraphical.add(ycrosshairsHidden);\n            }\n        }]);\n\n        return Crosshairs;\n    }();\n\n    /**\n     * ApexCharts Responsive Class to override options for different screen sizes.\n     *\n     * @module Responsive\n     **/\n\n    var Responsive = /*#__PURE__*/ function() {\n        function Responsive(ctx) {\n            _classCallCheck(this, Responsive);\n\n            this.ctx = ctx;\n            this.w = ctx.w;\n        } // the opts parameter if not null has to be set overriding everything\n        // as the opts is set by user externally\n\n\n        _createClass(Responsive, [{\n            key: \"checkResponsiveConfig\",\n            value: function checkResponsiveConfig(opts) {\n                var _this = this;\n\n                var w = this.w;\n                var cnf = w.config; // check if responsive config exists\n\n                if (cnf.responsive.length === 0) return;\n                var res = cnf.responsive.slice();\n                res.sort(function(a, b) {\n                    return a.breakpoint > b.breakpoint ? 1 : b.breakpoint > a.breakpoint ? -1 : 0;\n                }).reverse();\n                var config = new Config({});\n\n                var iterateResponsiveOptions = function iterateResponsiveOptions() {\n                    var newOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n                    var largestBreakpoint = res[0].breakpoint;\n                    var width = window.innerWidth > 0 ? window.innerWidth : screen.width;\n\n                    if (width > largestBreakpoint) {\n                        var options = CoreUtils.extendArrayProps(config, w.globals.initialConfig, w);\n                        newOptions = Utils.extend(options, newOptions);\n                        newOptions = Utils.extend(w.config, newOptions);\n\n                        _this.overrideResponsiveOptions(newOptions);\n                    } else {\n                        for (var i = 0; i < res.length; i++) {\n                            if (width < res[i].breakpoint) {\n                                newOptions = CoreUtils.extendArrayProps(config, res[i].options, w);\n                                newOptions = Utils.extend(w.config, newOptions);\n\n                                _this.overrideResponsiveOptions(newOptions);\n                            }\n                        }\n                    }\n                };\n\n                if (opts) {\n                    var options = CoreUtils.extendArrayProps(config, opts, w);\n                    options = Utils.extend(w.config, options);\n                    options = Utils.extend(options, opts);\n                    iterateResponsiveOptions(options);\n                } else {\n                    iterateResponsiveOptions({});\n                }\n            }\n        }, {\n            key: \"overrideResponsiveOptions\",\n            value: function overrideResponsiveOptions(newOptions) {\n                var newConfig = new Config(newOptions).init({\n                    responsiveOverride: true\n                });\n                this.w.config = newConfig;\n            }\n        }]);\n\n        return Responsive;\n    }();\n\n    /**\n     * ApexCharts Theme Class for setting the colors and palettes.\n     *\n     * @module Theme\n     **/\n\n    var Theme = /*#__PURE__*/ function() {\n        function Theme(ctx) {\n            _classCallCheck(this, Theme);\n\n            this.ctx = ctx;\n            this.colors = [];\n            this.w = ctx.w;\n            var w = this.w;\n            this.isColorFn = false;\n            this.isHeatmapDistributed = w.config.chart.type === 'treemap' && w.config.plotOptions.treemap.distributed || w.config.chart.type === 'heatmap' && w.config.plotOptions.heatmap.distributed;\n            this.isBarDistributed = w.config.plotOptions.bar.distributed && (w.config.chart.type === 'bar' || w.config.chart.type === 'rangeBar');\n        }\n\n        _createClass(Theme, [{\n            key: \"init\",\n            value: function init() {\n                this.setDefaultColors();\n            }\n        }, {\n            key: \"setDefaultColors\",\n            value: function setDefaultColors() {\n                    var _this = this;\n\n                    var w = this.w;\n                    var utils = new Utils();\n                    w.globals.dom.elWrap.classList.add(\"apexcharts-theme-\".concat(w.config.theme.mode));\n\n                    if (w.config.colors === undefined) {\n                        w.globals.colors = this.predefined();\n                    } else {\n                        w.globals.colors = w.config.colors; // if user provided a function in colors, we need to eval here\n\n                        if (Array.isArray(w.config.colors) && w.config.colors.length > 0 && typeof w.config.colors[0] === 'function') {\n                            w.globals.colors = w.config.series.map(function(s, i) {\n                                var c = w.config.colors[i];\n                                if (!c) c = w.config.colors[0];\n\n                                if (typeof c === 'function') {\n                                    _this.isColorFn = true;\n                                    return c({\n                                        value: w.globals.axisCharts ? w.globals.series[i][0] ? w.globals.series[i][0] : 0 : w.globals.series[i],\n                                        seriesIndex: i,\n                                        dataPointIndex: i,\n                                        w: w\n                                    });\n                                }\n\n                                return c;\n                            });\n                        }\n                    } // user defined colors in series array\n\n\n                    w.globals.seriesColors.map(function(c, i) {\n                        if (c) {\n                            w.globals.colors[i] = c;\n                        }\n                    });\n\n                    if (w.config.theme.monochrome.enabled) {\n                        var monoArr = [];\n                        var glsCnt = w.globals.series.length;\n\n                        if (this.isBarDistributed || this.isHeatmapDistributed) {\n                            glsCnt = w.globals.series[0].length * w.globals.series.length;\n                        }\n\n                        var mainColor = w.config.theme.monochrome.color;\n                        var part = 1 / (glsCnt / w.config.theme.monochrome.shadeIntensity);\n                        var shade = w.config.theme.monochrome.shadeTo;\n                        var percent = 0;\n\n                        for (var gsl = 0; gsl < glsCnt; gsl++) {\n                            var newColor = void 0;\n\n                            if (shade === 'dark') {\n                                newColor = utils.shadeColor(percent * -1, mainColor);\n                                percent = percent + part;\n                            } else {\n                                newColor = utils.shadeColor(percent, mainColor);\n                                percent = percent + part;\n                            }\n\n                            monoArr.push(newColor);\n                        }\n\n                        w.globals.colors = monoArr.slice();\n                    }\n\n                    var defaultColors = w.globals.colors.slice(); // if user specified fewer colors than no. of series, push the same colors again\n\n                    this.pushExtraColors(w.globals.colors);\n                    var colorTypes = ['fill', 'stroke'];\n                    colorTypes.forEach(function(c) {\n                        if (w.config[c].colors === undefined) {\n                            w.globals[c].colors = _this.isColorFn ? w.config.colors : defaultColors;\n                        } else {\n                            w.globals[c].colors = w.config[c].colors.slice();\n                        }\n\n                        _this.pushExtraColors(w.globals[c].colors);\n                    });\n\n                    if (w.config.dataLabels.style.colors === undefined) {\n                        w.globals.dataLabels.style.colors = defaultColors;\n                    } else {\n                        w.globals.dataLabels.style.colors = w.config.dataLabels.style.colors.slice();\n                    }\n\n                    this.pushExtraColors(w.globals.dataLabels.style.colors, 50);\n\n                    if (w.config.plotOptions.radar.polygons.fill.colors === undefined) {\n                        w.globals.radarPolygons.fill.colors = [w.config.theme.mode === 'dark' ? '#424242' : 'none'];\n                    } else {\n                        w.globals.radarPolygons.fill.colors = w.config.plotOptions.radar.polygons.fill.colors.slice();\n                    }\n\n                    this.pushExtraColors(w.globals.radarPolygons.fill.colors, 20); // The point colors\n\n                    if (w.config.markers.colors === undefined) {\n                        w.globals.markers.colors = defaultColors;\n                    } else {\n                        w.globals.markers.colors = w.config.markers.colors.slice();\n                    }\n\n                    this.pushExtraColors(w.globals.markers.colors);\n                } // When the number of colors provided is less than the number of series, this method\n                // will push same colors to the list\n                // params:\n                // distributed is only valid for distributed column/bar charts\n\n        }, {\n            key: \"pushExtraColors\",\n            value: function pushExtraColors(colorSeries, length) {\n                var distributed = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n                var w = this.w;\n                var len = length || w.globals.series.length;\n\n                if (distributed === null) {\n                    distributed = this.isBarDistributed || this.isHeatmapDistributed || w.config.chart.type === 'heatmap' && w.config.plotOptions.heatmap.colorScale.inverse;\n                }\n\n                if (distributed && w.globals.series.length) {\n                    len = w.globals.series[w.globals.maxValsInArrayIndex].length * w.globals.series.length;\n                }\n\n                if (colorSeries.length < len) {\n                    var diff = len - colorSeries.length;\n\n                    for (var i = 0; i < diff; i++) {\n                        colorSeries.push(colorSeries[i]);\n                    }\n                }\n            }\n        }, {\n            key: \"updateThemeOptions\",\n            value: function updateThemeOptions(options) {\n                options.chart = options.chart || {};\n                options.tooltip = options.tooltip || {};\n                var mode = options.theme.mode || 'light';\n                var palette = options.theme.palette ? options.theme.palette : mode === 'dark' ? 'palette4' : 'palette1';\n                var foreColor = options.chart.foreColor ? options.chart.foreColor : mode === 'dark' ? '#f6f7f8' : '#373d3f';\n                options.tooltip.theme = mode;\n                options.chart.foreColor = foreColor;\n                options.theme.palette = palette;\n                return options;\n            }\n        }, {\n            key: \"predefined\",\n            value: function predefined() {\n                var palette = this.w.config.theme.palette; // D6E3F8, FCEFEF, DCE0D9, A5978B, EDDDD4, D6E3F8, FEF5EF\n\n                switch (palette) {\n                    case 'palette1':\n                        this.colors = ['#008FFB', '#00E396', '#FEB019', '#FF4560', '#775DD0'];\n                        break;\n\n                    case 'palette2':\n                        this.colors = ['#3f51b5', '#03a9f4', '#4caf50', '#f9ce1d', '#FF9800'];\n                        break;\n\n                    case 'palette3':\n                        this.colors = ['#33b2df', '#546E7A', '#d4526e', '#13d8aa', '#A5978B'];\n                        break;\n\n                    case 'palette4':\n                        this.colors = ['#4ecdc4', '#c7f464', '#81D4FA', '#fd6a6a', '#546E7A'];\n                        break;\n\n                    case 'palette5':\n                        this.colors = ['#2b908f', '#f9a3a4', '#90ee7e', '#fa4443', '#69d2e7'];\n                        break;\n\n                    case 'palette6':\n                        this.colors = ['#449DD1', '#F86624', '#EA3546', '#662E9B', '#C5D86D'];\n                        break;\n\n                    case 'palette7':\n                        this.colors = ['#D7263D', '#1B998B', '#2E294E', '#F46036', '#E2C044'];\n                        break;\n\n                    case 'palette8':\n                        this.colors = ['#662E9B', '#F86624', '#F9C80E', '#EA3546', '#43BCCD'];\n                        break;\n\n                    case 'palette9':\n                        this.colors = ['#5C4742', '#A5978B', '#8D5B4C', '#5A2A27', '#C4BBAF'];\n                        break;\n\n                    case 'palette10':\n                        this.colors = ['#A300D6', '#7D02EB', '#5653FE', '#2983FF', '#00B1F2'];\n                        break;\n\n                    default:\n                        this.colors = ['#008FFB', '#00E396', '#FEB019', '#FF4560', '#775DD0'];\n                        break;\n                }\n\n                return this.colors;\n            }\n        }]);\n\n        return Theme;\n    }();\n\n    var TitleSubtitle = /*#__PURE__*/ function() {\n        function TitleSubtitle(ctx) {\n            _classCallCheck(this, TitleSubtitle);\n\n            this.ctx = ctx;\n            this.w = ctx.w;\n        }\n\n        _createClass(TitleSubtitle, [{\n            key: \"draw\",\n            value: function draw() {\n                this.drawTitleSubtitle('title');\n                this.drawTitleSubtitle('subtitle');\n            }\n        }, {\n            key: \"drawTitleSubtitle\",\n            value: function drawTitleSubtitle(type) {\n                var w = this.w;\n                var tsConfig = type === 'title' ? w.config.title : w.config.subtitle;\n                var x = w.globals.svgWidth / 2;\n                var y = tsConfig.offsetY;\n                var textAnchor = 'middle';\n\n                if (tsConfig.align === 'left') {\n                    x = 10;\n                    textAnchor = 'start';\n                } else if (tsConfig.align === 'right') {\n                    x = w.globals.svgWidth - 10;\n                    textAnchor = 'end';\n                }\n\n                x = x + tsConfig.offsetX;\n                y = y + parseInt(tsConfig.style.fontSize, 10) + tsConfig.margin / 2;\n\n                if (tsConfig.text !== undefined) {\n                    var graphics = new Graphics(this.ctx);\n                    var titleText = graphics.drawText({\n                        x: x,\n                        y: y,\n                        text: tsConfig.text,\n                        textAnchor: textAnchor,\n                        fontSize: tsConfig.style.fontSize,\n                        fontFamily: tsConfig.style.fontFamily,\n                        fontWeight: tsConfig.style.fontWeight,\n                        foreColor: tsConfig.style.color,\n                        opacity: 1\n                    });\n                    titleText.node.setAttribute('class', \"apexcharts-\".concat(type, \"-text\"));\n                    w.globals.dom.Paper.add(titleText);\n                }\n            }\n        }]);\n\n        return TitleSubtitle;\n    }();\n\n    var Helpers$2 = /*#__PURE__*/ function() {\n        function Helpers(dCtx) {\n            _classCallCheck(this, Helpers);\n\n            this.w = dCtx.w;\n            this.dCtx = dCtx;\n        }\n        /**\n         * Get Chart Title/Subtitle Dimensions\n         * @memberof Dimensions\n         * @return {{width, height}}\n         **/\n\n\n        _createClass(Helpers, [{\n            key: \"getTitleSubtitleCoords\",\n            value: function getTitleSubtitleCoords(type) {\n                var w = this.w;\n                var width = 0;\n                var height = 0;\n                var floating = type === 'title' ? w.config.title.floating : w.config.subtitle.floating;\n                var el = w.globals.dom.baseEl.querySelector(\".apexcharts-\".concat(type, \"-text\"));\n\n                if (el !== null && !floating) {\n                    var coord = el.getBoundingClientRect();\n                    width = coord.width;\n                    height = w.globals.axisCharts ? coord.height + 5 : coord.height;\n                }\n\n                return {\n                    width: width,\n                    height: height\n                };\n            }\n        }, {\n            key: \"getLegendsRect\",\n            value: function getLegendsRect() {\n                var w = this.w;\n                var elLegendWrap = w.globals.dom.baseEl.querySelector('.apexcharts-legend');\n\n                if (!w.config.legend.height && (w.config.legend.position === 'top' || w.config.legend.position === 'bottom')) {\n                    // avoid legend to take up all the space\n                    elLegendWrap.style.maxHeight = w.globals.svgHeight / 2 + 'px';\n                }\n\n                var lgRect = Object.assign({}, Utils.getBoundingClientRect(elLegendWrap));\n\n                if (elLegendWrap !== null && !w.config.legend.floating && w.config.legend.show) {\n                    this.dCtx.lgRect = {\n                        x: lgRect.x,\n                        y: lgRect.y,\n                        height: lgRect.height,\n                        width: lgRect.height === 0 ? 0 : lgRect.width\n                    };\n                } else {\n                    this.dCtx.lgRect = {\n                        x: 0,\n                        y: 0,\n                        height: 0,\n                        width: 0\n                    };\n                } // if legend takes up all of the chart space, we need to restrict it.\n\n\n                if (w.config.legend.position === 'left' || w.config.legend.position === 'right') {\n                    if (this.dCtx.lgRect.width * 1.5 > w.globals.svgWidth) {\n                        this.dCtx.lgRect.width = w.globals.svgWidth / 1.5;\n                    }\n                }\n\n                return this.dCtx.lgRect;\n            }\n        }, {\n            key: \"getLargestStringFromMultiArr\",\n            value: function getLargestStringFromMultiArr(val, arr) {\n                var w = this.w;\n                var valArr = val;\n\n                if (w.globals.isMultiLineX) {\n                    // if the xaxis labels has multiline texts (array)\n                    var maxArrs = arr.map(function(xl, idx) {\n                        return Array.isArray(xl) ? xl.length : 1;\n                    });\n                    var maxArrLen = Math.max.apply(Math, _toConsumableArray(maxArrs));\n                    var maxArrIndex = maxArrs.indexOf(maxArrLen);\n                    valArr = arr[maxArrIndex];\n                }\n\n                return valArr;\n            }\n        }]);\n\n        return Helpers;\n    }();\n\n    var DimXAxis = /*#__PURE__*/ function() {\n        function DimXAxis(dCtx) {\n            _classCallCheck(this, DimXAxis);\n\n            this.w = dCtx.w;\n            this.dCtx = dCtx;\n        }\n        /**\n         * Get X Axis Dimensions\n         * @memberof Dimensions\n         * @return {{width, height}}\n         **/\n\n\n        _createClass(DimXAxis, [{\n            key: \"getxAxisLabelsCoords\",\n            value: function getxAxisLabelsCoords() {\n                    var w = this.w;\n                    var xaxisLabels = w.globals.labels.slice();\n\n                    if (w.config.xaxis.convertedCatToNumeric && xaxisLabels.length === 0) {\n                        xaxisLabels = w.globals.categoryLabels;\n                    }\n\n                    var rect;\n\n                    if (w.globals.timescaleLabels.length > 0) {\n                        var coords = this.getxAxisTimeScaleLabelsCoords();\n                        rect = {\n                            width: coords.width,\n                            height: coords.height\n                        };\n                        w.globals.rotateXLabels = false;\n                    } else {\n                        this.dCtx.lgWidthForSideLegends = (w.config.legend.position === 'left' || w.config.legend.position === 'right') && !w.config.legend.floating ? this.dCtx.lgRect.width : 0; // get the longest string from the labels array and also apply label formatter\n\n                        var xlbFormatter = w.globals.xLabelFormatter; // prevent changing xaxisLabels to avoid issues in multi-yaxes - fix #522\n\n                        var val = Utils.getLargestStringFromArr(xaxisLabels);\n                        var valArr = this.dCtx.dimHelpers.getLargestStringFromMultiArr(val, xaxisLabels); // the labels gets changed for bar charts\n\n                        if (w.globals.isBarHorizontal) {\n                            val = w.globals.yAxisScale[0].result.reduce(function(a, b) {\n                                return a.length > b.length ? a : b;\n                            }, 0);\n                            valArr = val;\n                        }\n\n                        var xFormat = new Formatters(this.dCtx.ctx);\n                        var timestamp = val;\n                        val = xFormat.xLabelFormat(xlbFormatter, val, timestamp, {\n                            i: undefined,\n                            dateFormatter: new DateTime(this.dCtx.ctx).formatDate,\n                            w: w\n                        });\n                        valArr = xFormat.xLabelFormat(xlbFormatter, valArr, timestamp, {\n                            i: undefined,\n                            dateFormatter: new DateTime(this.dCtx.ctx).formatDate,\n                            w: w\n                        });\n\n                        if (w.config.xaxis.convertedCatToNumeric && typeof val === 'undefined' || String(val).trim() === '') {\n                            val = '1';\n                            valArr = val;\n                        }\n\n                        var graphics = new Graphics(this.dCtx.ctx);\n                        var xLabelrect = graphics.getTextRects(val, w.config.xaxis.labels.style.fontSize);\n                        var xArrLabelrect = xLabelrect;\n\n                        if (val !== valArr) {\n                            xArrLabelrect = graphics.getTextRects(valArr, w.config.xaxis.labels.style.fontSize);\n                        }\n\n                        rect = {\n                            width: xLabelrect.width >= xArrLabelrect.width ? xLabelrect.width : xArrLabelrect.width,\n                            height: xLabelrect.height >= xArrLabelrect.height ? xLabelrect.height : xArrLabelrect.height\n                        };\n\n                        if (rect.width * xaxisLabels.length > w.globals.svgWidth - this.dCtx.lgWidthForSideLegends - this.dCtx.yAxisWidth - this.dCtx.gridPad.left - this.dCtx.gridPad.right && w.config.xaxis.labels.rotate !== 0 || w.config.xaxis.labels.rotateAlways) {\n                            if (!w.globals.isBarHorizontal) {\n                                w.globals.rotateXLabels = true;\n\n                                var getRotatedTextRects = function getRotatedTextRects(text) {\n                                    return graphics.getTextRects(text, w.config.xaxis.labels.style.fontSize, w.config.xaxis.labels.style.fontFamily, \"rotate(\".concat(w.config.xaxis.labels.rotate, \" 0 0)\"), false);\n                                };\n\n                                xLabelrect = getRotatedTextRects(val);\n\n                                if (val !== valArr) {\n                                    xArrLabelrect = getRotatedTextRects(valArr);\n                                }\n\n                                rect.height = (xLabelrect.height > xArrLabelrect.height ? xLabelrect.height : xArrLabelrect.height) / 1.5;\n                                rect.width = xLabelrect.width > xArrLabelrect.width ? xLabelrect.width : xArrLabelrect.width;\n                            }\n                        } else {\n                            w.globals.rotateXLabels = false;\n                        }\n                    }\n\n                    if (!w.config.xaxis.labels.show) {\n                        rect = {\n                            width: 0,\n                            height: 0\n                        };\n                    }\n\n                    return {\n                        width: rect.width,\n                        height: rect.height\n                    };\n                }\n                /**\n                 * Get X Axis Title Dimensions\n                 * @memberof Dimensions\n                 * @return {{width, height}}\n                 **/\n\n        }, {\n            key: \"getxAxisTitleCoords\",\n            value: function getxAxisTitleCoords() {\n                var w = this.w;\n                var width = 0;\n                var height = 0;\n\n                if (w.config.xaxis.title.text !== undefined) {\n                    var graphics = new Graphics(this.dCtx.ctx);\n                    var rect = graphics.getTextRects(w.config.xaxis.title.text, w.config.xaxis.title.style.fontSize);\n                    width = rect.width;\n                    height = rect.height;\n                }\n\n                return {\n                    width: width,\n                    height: height\n                };\n            }\n        }, {\n            key: \"getxAxisTimeScaleLabelsCoords\",\n            value: function getxAxisTimeScaleLabelsCoords() {\n                    var w = this.w;\n                    var rect;\n                    this.dCtx.timescaleLabels = w.globals.timescaleLabels.slice();\n                    var labels = this.dCtx.timescaleLabels.map(function(label) {\n                        return label.value;\n                    }); //  get the longest string from the labels array and also apply label formatter to it\n\n                    var val = labels.reduce(function(a, b) {\n                        // if undefined, maybe user didn't pass the datetime(x) values\n                        if (typeof a === 'undefined') {\n                            console.error('You have possibly supplied invalid Date format. Please supply a valid JavaScript Date');\n                            return 0;\n                        } else {\n                            return a.length > b.length ? a : b;\n                        }\n                    }, 0);\n                    var graphics = new Graphics(this.dCtx.ctx);\n                    rect = graphics.getTextRects(val, w.config.xaxis.labels.style.fontSize);\n                    var totalWidthRotated = rect.width * 1.05 * labels.length;\n\n                    if (totalWidthRotated > w.globals.gridWidth && w.config.xaxis.labels.rotate !== 0) {\n                        w.globals.overlappingXLabels = true;\n                    }\n\n                    return rect;\n                } // In certain cases, the last labels gets cropped in xaxis.\n                // Hence, we add some additional padding based on the label length to avoid the last label being cropped or we don't draw it at all\n\n        }, {\n            key: \"additionalPaddingXLabels\",\n            value: function additionalPaddingXLabels(xaxisLabelCoords) {\n                var _this = this;\n\n                var w = this.w;\n                var gl = w.globals;\n                var cnf = w.config;\n                var xtype = cnf.xaxis.type;\n                var lbWidth = xaxisLabelCoords.width;\n                gl.skipLastTimelinelabel = false;\n                gl.skipFirstTimelinelabel = false;\n                var isBarOpposite = w.config.yaxis[0].opposite && w.globals.isBarHorizontal;\n\n                var isCollapsed = function isCollapsed(i) {\n                    return gl.collapsedSeriesIndices.indexOf(i) !== -1;\n                };\n\n                var rightPad = function rightPad(yaxe) {\n                    if (_this.dCtx.timescaleLabels && _this.dCtx.timescaleLabels.length) {\n                        // for timeline labels, we take the last label and check if it exceeds gridWidth\n                        var firstimescaleLabel = _this.dCtx.timescaleLabels[0];\n                        var lastTimescaleLabel = _this.dCtx.timescaleLabels[_this.dCtx.timescaleLabels.length - 1];\n                        var lastLabelPosition = lastTimescaleLabel.position + lbWidth / 1.75 - _this.dCtx.yAxisWidthRight;\n                        var firstLabelPosition = firstimescaleLabel.position - lbWidth / 1.75 + _this.dCtx.yAxisWidthLeft;\n                        var lgRightRectWidth = w.config.legend.position === 'right' && _this.dCtx.lgRect.width > 0 ? _this.dCtx.lgRect.width : 0;\n\n                        if (lastLabelPosition > gl.svgWidth - gl.translateX - lgRightRectWidth) {\n                            gl.skipLastTimelinelabel = true;\n                        }\n\n                        if (firstLabelPosition < -((!yaxe.show || yaxe.floating) && (cnf.chart.type === 'bar' || cnf.chart.type === 'candlestick' || cnf.chart.type === 'rangeBar' || cnf.chart.type === 'boxPlot') ? lbWidth / 1.75 : 10)) {\n                            gl.skipFirstTimelinelabel = true;\n                        }\n                    } else if (xtype === 'datetime') {\n                        // If user has enabled DateTime, but uses own's formatter\n                        if (_this.dCtx.gridPad.right < lbWidth && !gl.rotateXLabels) {\n                            gl.skipLastTimelinelabel = true;\n                        }\n                    } else if (xtype !== 'datetime') {\n                        if (_this.dCtx.gridPad.right < lbWidth / 2 - _this.dCtx.yAxisWidthRight && !gl.rotateXLabels && (w.config.xaxis.tickPlacement !== 'between' || w.globals.isBarHorizontal)) {\n                            _this.dCtx.xPadRight = lbWidth / 2 + 1;\n                        }\n                    }\n                };\n\n                var padYAxe = function padYAxe(yaxe, i) {\n                    if (isCollapsed(i)) return; // the code below causes issue apexcharts.js#1989\n                    // after testing with other use-cases, this has no actual value, hence commented\n                    // if (xtype !== 'datetime') {\n                    //   if (\n                    //     this.dCtx.gridPad.left < lbWidth / 2 - this.dCtx.yAxisWidthLeft &&\n                    //     !gl.rotateXLabels &&\n                    //     !cnf.xaxis.labels.trim\n                    //   ) {\n                    //     this.dCtx.xPadLeft = lbWidth / 2 + 1\n                    //   }\n                    // }\n\n                    rightPad(yaxe);\n                };\n\n                cnf.yaxis.forEach(function(yaxe, i) {\n                    if (isBarOpposite) {\n                        if (_this.dCtx.gridPad.left < lbWidth) {\n                            _this.dCtx.xPadLeft = lbWidth / 2 + 1;\n                        }\n\n                        _this.dCtx.xPadRight = lbWidth / 2 + 1;\n                    } else {\n                        padYAxe(yaxe, i);\n                    }\n                });\n            }\n        }]);\n\n        return DimXAxis;\n    }();\n\n    var DimYAxis = /*#__PURE__*/ function() {\n        function DimYAxis(dCtx) {\n            _classCallCheck(this, DimYAxis);\n\n            this.w = dCtx.w;\n            this.dCtx = dCtx;\n        }\n        /**\n         * Get Y Axis Dimensions\n         * @memberof Dimensions\n         * @return {{width, height}}\n         **/\n\n\n        _createClass(DimYAxis, [{\n            key: \"getyAxisLabelsCoords\",\n            value: function getyAxisLabelsCoords() {\n                    var _this = this;\n\n                    var w = this.w;\n                    var width = 0;\n                    var height = 0;\n                    var ret = [];\n                    var labelPad = 10;\n                    var axesUtils = new AxesUtils(this.dCtx.ctx);\n                    w.config.yaxis.map(function(yaxe, index) {\n                        var yS = w.globals.yAxisScale[index];\n                        var yAxisMinWidth = 0;\n                        if (!axesUtils.isYAxisHidden(index) && yaxe.labels.show && yaxe.labels.minWidth !== undefined) yAxisMinWidth = yaxe.labels.minWidth;\n\n                        if (!axesUtils.isYAxisHidden(index) && yaxe.labels.show && yS.result.length) {\n                            var lbFormatter = w.globals.yLabelFormatters[index];\n                            var minV = yS.niceMin === Number.MIN_VALUE ? 0 : yS.niceMin;\n                            var longestStr = String(minV).length > String(yS.niceMax).length ? minV : yS.niceMax; // the second parameter -1 is the index of tick which user can use in the formatter\n\n                            var val = lbFormatter(longestStr, {\n                                seriesIndex: index,\n                                dataPointIndex: -1,\n                                w: w\n                            });\n                            var valArr = val; // if user has specified a custom formatter, and the result is null or empty, we need to discard the formatter and take the value as it is.\n\n                            if (typeof val === 'undefined' || val.length === 0) {\n                                val = longestStr;\n                            }\n\n                            if (w.globals.isBarHorizontal) {\n                                labelPad = 0;\n                                var barYaxisLabels = w.globals.labels.slice(); //  get the longest string from the labels array and also apply label formatter to it\n\n                                val = Utils.getLargestStringFromArr(barYaxisLabels);\n                                val = lbFormatter(val, {\n                                    seriesIndex: index,\n                                    dataPointIndex: -1,\n                                    w: w\n                                });\n                                valArr = _this.dCtx.dimHelpers.getLargestStringFromMultiArr(val, barYaxisLabels);\n                            }\n\n                            var graphics = new Graphics(_this.dCtx.ctx);\n                            var rotateStr = 'rotate('.concat(yaxe.labels.rotate, ' 0 0)');\n                            var rect = graphics.getTextRects(val, yaxe.labels.style.fontSize, yaxe.labels.style.fontFamily, rotateStr, false);\n                            var arrLabelrect = rect;\n\n                            if (val !== valArr) {\n                                arrLabelrect = graphics.getTextRects(valArr, yaxe.labels.style.fontSize, yaxe.labels.style.fontFamily, rotateStr, false);\n                            }\n\n                            ret.push({\n                                width: (yAxisMinWidth > arrLabelrect.width || yAxisMinWidth > rect.width ? yAxisMinWidth : arrLabelrect.width > rect.width ? arrLabelrect.width : rect.width) + labelPad,\n                                height: arrLabelrect.height > rect.height ? arrLabelrect.height : rect.height\n                            });\n                        } else {\n                            ret.push({\n                                width: width,\n                                height: height\n                            });\n                        }\n                    });\n                    return ret;\n                }\n                /**\n                 * Get Y Axis Dimensions\n                 * @memberof Dimensions\n                 * @return {{width, height}}\n                 **/\n\n        }, {\n            key: \"getyAxisTitleCoords\",\n            value: function getyAxisTitleCoords() {\n                var _this2 = this;\n\n                var w = this.w;\n                var ret = [];\n                w.config.yaxis.map(function(yaxe, index) {\n                    if (yaxe.show && yaxe.title.text !== undefined) {\n                        var graphics = new Graphics(_this2.dCtx.ctx);\n                        var rotateStr = 'rotate('.concat(yaxe.title.rotate, ' 0 0)');\n                        var rect = graphics.getTextRects(yaxe.title.text, yaxe.title.style.fontSize, yaxe.title.style.fontFamily, rotateStr, false);\n                        ret.push({\n                            width: rect.width,\n                            height: rect.height\n                        });\n                    } else {\n                        ret.push({\n                            width: 0,\n                            height: 0\n                        });\n                    }\n                });\n                return ret;\n            }\n        }, {\n            key: \"getTotalYAxisWidth\",\n            value: function getTotalYAxisWidth() {\n                var w = this.w;\n                var yAxisWidth = 0;\n                var yAxisWidthLeft = 0;\n                var yAxisWidthRight = 0;\n                var padding = w.globals.yAxisScale.length > 1 ? 10 : 0;\n                var axesUtils = new AxesUtils(this.dCtx.ctx);\n\n                var isHiddenYAxis = function isHiddenYAxis(index) {\n                    return w.globals.ignoreYAxisIndexes.indexOf(index) > -1;\n                };\n\n                var padForLabelTitle = function padForLabelTitle(coord, index) {\n                    var floating = w.config.yaxis[index].floating;\n                    var width = 0;\n\n                    if (coord.width > 0 && !floating) {\n                        width = coord.width + padding;\n\n                        if (isHiddenYAxis(index)) {\n                            width = width - coord.width - padding;\n                        }\n                    } else {\n                        width = floating || axesUtils.isYAxisHidden(index) ? 0 : 5;\n                    }\n\n                    w.config.yaxis[index].opposite ? yAxisWidthRight = yAxisWidthRight + width : yAxisWidthLeft = yAxisWidthLeft + width;\n                    yAxisWidth = yAxisWidth + width;\n                };\n\n                w.globals.yLabelsCoords.map(function(yLabelCoord, index) {\n                    padForLabelTitle(yLabelCoord, index);\n                });\n                w.globals.yTitleCoords.map(function(yTitleCoord, index) {\n                    padForLabelTitle(yTitleCoord, index);\n                });\n\n                if (w.globals.isBarHorizontal && !w.config.yaxis[0].floating) {\n                    yAxisWidth = w.globals.yLabelsCoords[0].width + w.globals.yTitleCoords[0].width + 15;\n                }\n\n                this.dCtx.yAxisWidthLeft = yAxisWidthLeft;\n                this.dCtx.yAxisWidthRight = yAxisWidthRight;\n                return yAxisWidth;\n            }\n        }]);\n\n        return DimYAxis;\n    }();\n\n    var DimGrid = /*#__PURE__*/ function() {\n        function DimGrid(dCtx) {\n            _classCallCheck(this, DimGrid);\n\n            this.w = dCtx.w;\n            this.dCtx = dCtx;\n        }\n\n        _createClass(DimGrid, [{\n            key: \"gridPadForColumnsInNumericAxis\",\n            value: function gridPadForColumnsInNumericAxis(gridWidth) {\n                var w = this.w;\n\n                if (w.globals.noData || w.globals.allSeriesCollapsed) {\n                    return 0;\n                }\n\n                var hasBar = function hasBar(type) {\n                    return type === 'bar' || type === 'rangeBar' || type === 'candlestick' || type === 'boxPlot';\n                };\n\n                var type = w.config.chart.type;\n                var barWidth = 0;\n                var seriesLen = hasBar(type) ? w.config.series.length : 1;\n\n                if (w.globals.comboBarCount > 0) {\n                    seriesLen = w.globals.comboBarCount;\n                }\n\n                w.globals.collapsedSeries.forEach(function(c) {\n                    if (hasBar(c.type)) {\n                        seriesLen = seriesLen - 1;\n                    }\n                });\n\n                if (w.config.chart.stacked) {\n                    seriesLen = 1;\n                }\n\n                var barsPresent = hasBar(type) || w.globals.comboBarCount > 0;\n\n                if (barsPresent && w.globals.isXNumeric && !w.globals.isBarHorizontal && seriesLen > 0) {\n                    var xRatio = 0;\n                    var xRange = Math.abs(w.globals.initialMaxX - w.globals.initialMinX);\n\n                    if (xRange <= 3) {\n                        xRange = w.globals.dataPoints;\n                    }\n\n                    xRatio = xRange / gridWidth;\n                    var xDivision; // max barwidth should be equal to minXDiff to avoid overlap\n\n                    if (w.globals.minXDiff && w.globals.minXDiff / xRatio > 0) {\n                        xDivision = w.globals.minXDiff / xRatio;\n                    }\n\n                    if (xDivision > gridWidth / 2) {\n                        xDivision = xDivision / 2;\n                    }\n\n                    barWidth = xDivision / seriesLen * parseInt(w.config.plotOptions.bar.columnWidth, 10) / 100;\n\n                    if (barWidth < 1) {\n                        barWidth = 1;\n                    }\n\n                    barWidth = barWidth / (seriesLen > 1 ? 1 : 1.5) + 5;\n                    w.globals.barPadForNumericAxis = barWidth;\n                }\n\n                return barWidth;\n            }\n        }, {\n            key: \"gridPadFortitleSubtitle\",\n            value: function gridPadFortitleSubtitle() {\n                var _this = this;\n\n                var w = this.w;\n                var gl = w.globals;\n                var gridShrinkOffset = this.dCtx.isSparkline || !w.globals.axisCharts ? 0 : 10;\n                var titleSubtitle = ['title', 'subtitle'];\n                titleSubtitle.forEach(function(t) {\n                    if (w.config[t].text !== undefined) {\n                        gridShrinkOffset += w.config[t].margin;\n                    } else {\n                        gridShrinkOffset += _this.dCtx.isSparkline || !w.globals.axisCharts ? 0 : 5;\n                    }\n                });\n\n                if (w.config.legend.show && w.config.legend.position === 'bottom' && !w.config.legend.floating && !w.globals.axisCharts) {\n                    gridShrinkOffset += 10;\n                }\n\n                var titleCoords = this.dCtx.dimHelpers.getTitleSubtitleCoords('title');\n                var subtitleCoords = this.dCtx.dimHelpers.getTitleSubtitleCoords('subtitle');\n                gl.gridHeight = gl.gridHeight - titleCoords.height - subtitleCoords.height - gridShrinkOffset;\n                gl.translateY = gl.translateY + titleCoords.height + subtitleCoords.height + gridShrinkOffset;\n            }\n        }, {\n            key: \"setGridXPosForDualYAxis\",\n            value: function setGridXPosForDualYAxis(yTitleCoords, yaxisLabelCoords) {\n                var w = this.w;\n                var axesUtils = new AxesUtils(this.dCtx.ctx);\n                w.config.yaxis.map(function(yaxe, index) {\n                    if (w.globals.ignoreYAxisIndexes.indexOf(index) === -1 && !yaxe.floating && !axesUtils.isYAxisHidden(index)) {\n                        if (yaxe.opposite) {\n                            w.globals.translateX = w.globals.translateX - (yaxisLabelCoords[index].width + yTitleCoords[index].width) - parseInt(w.config.yaxis[index].labels.style.fontSize, 10) / 1.2 - 12;\n                        } // fixes apexcharts.js#1599\n\n\n                        if (w.globals.translateX < 2) {\n                            w.globals.translateX = 2;\n                        }\n                    }\n                });\n            }\n        }]);\n\n        return DimGrid;\n    }();\n\n    /**\n     * ApexCharts Dimensions Class for calculating rects of all elements that are drawn and will be drawn.\n     *\n     * @module Dimensions\n     **/\n\n    var Dimensions = /*#__PURE__*/ function() {\n        function Dimensions(ctx) {\n            _classCallCheck(this, Dimensions);\n\n            this.ctx = ctx;\n            this.w = ctx.w;\n            this.lgRect = {};\n            this.yAxisWidth = 0;\n            this.yAxisWidthLeft = 0;\n            this.yAxisWidthRight = 0;\n            this.xAxisHeight = 0;\n            this.isSparkline = this.w.config.chart.sparkline.enabled;\n            this.dimHelpers = new Helpers$2(this);\n            this.dimYAxis = new DimYAxis(this);\n            this.dimXAxis = new DimXAxis(this);\n            this.dimGrid = new DimGrid(this);\n            this.lgWidthForSideLegends = 0;\n            this.gridPad = this.w.config.grid.padding;\n            this.xPadRight = 0;\n            this.xPadLeft = 0;\n        }\n        /**\n         * @memberof Dimensions\n         * @param {object} w - chart context\n         **/\n\n\n        _createClass(Dimensions, [{\n            key: \"plotCoords\",\n            value: function plotCoords() {\n                var w = this.w;\n                var gl = w.globals;\n                this.lgRect = this.dimHelpers.getLegendsRect();\n\n                if (gl.axisCharts) {\n                    // for line / area / scatter / column\n                    this.setDimensionsForAxisCharts();\n                } else {\n                    // for pie / donuts / circle\n                    this.setDimensionsForNonAxisCharts();\n                }\n\n                this.dimGrid.gridPadFortitleSubtitle(); // after calculating everything, apply padding set by user\n\n                gl.gridHeight = gl.gridHeight - this.gridPad.top - this.gridPad.bottom;\n                gl.gridWidth = gl.gridWidth - this.gridPad.left - this.gridPad.right - this.xPadRight - this.xPadLeft;\n                var barWidth = this.dimGrid.gridPadForColumnsInNumericAxis(gl.gridWidth);\n                gl.gridWidth = gl.gridWidth - barWidth * 2;\n                gl.translateX = gl.translateX + this.gridPad.left + this.xPadLeft + (barWidth > 0 ? barWidth + 4 : 0);\n                gl.translateY = gl.translateY + this.gridPad.top;\n            }\n        }, {\n            key: \"setDimensionsForAxisCharts\",\n            value: function setDimensionsForAxisCharts() {\n                var _this = this;\n\n                var w = this.w;\n                var gl = w.globals;\n                var yaxisLabelCoords = this.dimYAxis.getyAxisLabelsCoords();\n                var yTitleCoords = this.dimYAxis.getyAxisTitleCoords();\n                w.globals.yLabelsCoords = [];\n                w.globals.yTitleCoords = [];\n                w.config.yaxis.map(function(yaxe, index) {\n                    // store the labels and titles coords in global vars\n                    w.globals.yLabelsCoords.push({\n                        width: yaxisLabelCoords[index].width,\n                        index: index\n                    });\n                    w.globals.yTitleCoords.push({\n                        width: yTitleCoords[index].width,\n                        index: index\n                    });\n                });\n                this.yAxisWidth = this.dimYAxis.getTotalYAxisWidth();\n                var xaxisLabelCoords = this.dimXAxis.getxAxisLabelsCoords();\n                var xtitleCoords = this.dimXAxis.getxAxisTitleCoords();\n                this.conditionalChecksForAxisCoords(xaxisLabelCoords, xtitleCoords);\n                gl.translateXAxisY = w.globals.rotateXLabels ? this.xAxisHeight / 8 : -4;\n                gl.translateXAxisX = w.globals.rotateXLabels && w.globals.isXNumeric && w.config.xaxis.labels.rotate <= -45 ? -this.xAxisWidth / 4 : 0;\n\n                if (w.globals.isBarHorizontal) {\n                    gl.rotateXLabels = false;\n                    gl.translateXAxisY = -1 * (parseInt(w.config.xaxis.labels.style.fontSize, 10) / 1.5);\n                }\n\n                gl.translateXAxisY = gl.translateXAxisY + w.config.xaxis.labels.offsetY;\n                gl.translateXAxisX = gl.translateXAxisX + w.config.xaxis.labels.offsetX;\n                var yAxisWidth = this.yAxisWidth;\n                var xAxisHeight = this.xAxisHeight;\n                gl.xAxisLabelsHeight = this.xAxisHeight - xtitleCoords.height;\n                gl.xAxisLabelsWidth = this.xAxisWidth;\n                gl.xAxisHeight = this.xAxisHeight;\n                var translateY = 10;\n\n                if (w.config.chart.type === 'radar' || this.isSparkline) {\n                    yAxisWidth = 0;\n                    xAxisHeight = gl.goldenPadding;\n                }\n\n                if (this.isSparkline) {\n                    this.lgRect = {\n                        height: 0,\n                        width: 0\n                    };\n                }\n\n                if (this.isSparkline || w.config.chart.type === 'treemap') {\n                    yAxisWidth = 0;\n                    xAxisHeight = 0;\n                    translateY = 0;\n                }\n\n                if (!this.isSparkline) {\n                    this.dimXAxis.additionalPaddingXLabels(xaxisLabelCoords);\n                }\n\n                var legendTopBottom = function legendTopBottom() {\n                    gl.translateX = yAxisWidth;\n                    gl.gridHeight = gl.svgHeight - _this.lgRect.height - xAxisHeight - (!_this.isSparkline && w.config.chart.type !== 'treemap' ? w.globals.rotateXLabels ? 10 : 15 : 0);\n                    gl.gridWidth = gl.svgWidth - yAxisWidth;\n                };\n\n                if (w.config.xaxis.position === 'top') translateY = gl.xAxisHeight - w.config.xaxis.axisTicks.height - 5;\n\n                switch (w.config.legend.position) {\n                    case 'bottom':\n                        gl.translateY = translateY;\n                        legendTopBottom();\n                        break;\n\n                    case 'top':\n                        gl.translateY = this.lgRect.height + translateY;\n                        legendTopBottom();\n                        break;\n\n                    case 'left':\n                        gl.translateY = translateY;\n                        gl.translateX = this.lgRect.width + yAxisWidth;\n                        gl.gridHeight = gl.svgHeight - xAxisHeight - 12;\n                        gl.gridWidth = gl.svgWidth - this.lgRect.width - yAxisWidth;\n                        break;\n\n                    case 'right':\n                        gl.translateY = translateY;\n                        gl.translateX = yAxisWidth;\n                        gl.gridHeight = gl.svgHeight - xAxisHeight - 12;\n                        gl.gridWidth = gl.svgWidth - this.lgRect.width - yAxisWidth - 5;\n                        break;\n\n                    default:\n                        throw new Error('Legend position not supported');\n                }\n\n                this.dimGrid.setGridXPosForDualYAxis(yTitleCoords, yaxisLabelCoords); // after drawing everything, set the Y axis positions\n\n                var objyAxis = new YAxis(this.ctx);\n                objyAxis.setYAxisXPosition(yaxisLabelCoords, yTitleCoords);\n            }\n        }, {\n            key: \"setDimensionsForNonAxisCharts\",\n            value: function setDimensionsForNonAxisCharts() {\n                var w = this.w;\n                var gl = w.globals;\n                var cnf = w.config;\n                var xPad = 0;\n\n                if (w.config.legend.show && !w.config.legend.floating) {\n                    xPad = 20;\n                }\n\n                var type = cnf.chart.type === 'pie' || cnf.chart.type === 'polarArea' || cnf.chart.type === 'donut' ? 'pie' : 'radialBar';\n                var offY = cnf.plotOptions[type].offsetY;\n                var offX = cnf.plotOptions[type].offsetX;\n\n                if (!cnf.legend.show || cnf.legend.floating) {\n                    gl.gridHeight = gl.svgHeight - cnf.grid.padding.left + cnf.grid.padding.right;\n                    gl.gridWidth = gl.gridHeight;\n                    gl.translateY = offY;\n                    gl.translateX = offX + (gl.svgWidth - gl.gridWidth) / 2;\n                    return;\n                }\n\n                switch (cnf.legend.position) {\n                    case 'bottom':\n                        gl.gridHeight = gl.svgHeight - this.lgRect.height - gl.goldenPadding;\n                        gl.gridWidth = gl.svgWidth;\n                        gl.translateY = offY - 10;\n                        gl.translateX = offX + (gl.svgWidth - gl.gridWidth) / 2;\n                        break;\n\n                    case 'top':\n                        gl.gridHeight = gl.svgHeight - this.lgRect.height - gl.goldenPadding;\n                        gl.gridWidth = gl.svgWidth;\n                        gl.translateY = this.lgRect.height + offY + 10;\n                        gl.translateX = offX + (gl.svgWidth - gl.gridWidth) / 2;\n                        break;\n\n                    case 'left':\n                        gl.gridWidth = gl.svgWidth - this.lgRect.width - xPad;\n                        gl.gridHeight = cnf.chart.height !== 'auto' ? gl.svgHeight : gl.gridWidth;\n                        gl.translateY = offY;\n                        gl.translateX = offX + this.lgRect.width + xPad;\n                        break;\n\n                    case 'right':\n                        gl.gridWidth = gl.svgWidth - this.lgRect.width - xPad - 5;\n                        gl.gridHeight = cnf.chart.height !== 'auto' ? gl.svgHeight : gl.gridWidth;\n                        gl.translateY = offY;\n                        gl.translateX = offX + 10;\n                        break;\n\n                    default:\n                        throw new Error('Legend position not supported');\n                }\n            }\n        }, {\n            key: \"conditionalChecksForAxisCoords\",\n            value: function conditionalChecksForAxisCoords(xaxisLabelCoords, xtitleCoords) {\n                var w = this.w;\n                this.xAxisHeight = (xaxisLabelCoords.height + xtitleCoords.height) * (w.globals.isMultiLineX ? 1.2 : w.globals.LINE_HEIGHT_RATIO) + (w.globals.rotateXLabels ? 22 : 10);\n                this.xAxisWidth = xaxisLabelCoords.width;\n\n                if (this.xAxisHeight - xtitleCoords.height > w.config.xaxis.labels.maxHeight) {\n                    this.xAxisHeight = w.config.xaxis.labels.maxHeight;\n                }\n\n                if (w.config.xaxis.labels.minHeight && this.xAxisHeight < w.config.xaxis.labels.minHeight) {\n                    this.xAxisHeight = w.config.xaxis.labels.minHeight;\n                }\n\n                if (w.config.xaxis.floating) {\n                    this.xAxisHeight = 0;\n                }\n\n                var minYAxisWidth = 0;\n                var maxYAxisWidth = 0;\n                w.config.yaxis.forEach(function(y) {\n                    minYAxisWidth += y.labels.minWidth;\n                    maxYAxisWidth += y.labels.maxWidth;\n                });\n\n                if (this.yAxisWidth < minYAxisWidth) {\n                    this.yAxisWidth = minYAxisWidth;\n                }\n\n                if (this.yAxisWidth > maxYAxisWidth) {\n                    this.yAxisWidth = maxYAxisWidth;\n                }\n            }\n        }]);\n\n        return Dimensions;\n    }();\n\n    var Helpers$3 = /*#__PURE__*/ function() {\n        function Helpers(lgCtx) {\n            _classCallCheck(this, Helpers);\n\n            this.w = lgCtx.w;\n            this.lgCtx = lgCtx;\n        }\n\n        _createClass(Helpers, [{\n            key: \"getLegendStyles\",\n            value: function getLegendStyles() {\n                var stylesheet = document.createElement('style');\n                stylesheet.setAttribute('type', 'text/css');\n                var text = \"\\t\\n    \\t\\n      .apexcharts-legend {\\t\\n        display: flex;\\t\\n        overflow: auto;\\t\\n        padding: 0 10px;\\t\\n      }\\t\\n      .apexcharts-legend.position-bottom, .apexcharts-legend.position-top {\\t\\n        flex-wrap: wrap\\t\\n      }\\t\\n      .apexcharts-legend.position-right, .apexcharts-legend.position-left {\\t\\n        flex-direction: column;\\t\\n        bottom: 0;\\t\\n      }\\t\\n      .apexcharts-legend.position-bottom.apexcharts-align-left, .apexcharts-legend.position-top.apexcharts-align-left, .apexcharts-legend.position-right, .apexcharts-legend.position-left {\\t\\n        justify-content: flex-start;\\t\\n      }\\t\\n      .apexcharts-legend.position-bottom.apexcharts-align-center, .apexcharts-legend.position-top.apexcharts-align-center {\\t\\n        justify-content: center;  \\t\\n      }\\t\\n      .apexcharts-legend.position-bottom.apexcharts-align-right, .apexcharts-legend.position-top.apexcharts-align-right {\\t\\n        justify-content: flex-end;\\t\\n      }\\t\\n      .apexcharts-legend-series {\\t\\n        cursor: pointer;\\t\\n        line-height: normal;\\t\\n      }\\t\\n      .apexcharts-legend.position-bottom .apexcharts-legend-series, .apexcharts-legend.position-top .apexcharts-legend-series{\\t\\n        display: flex;\\t\\n        align-items: center;\\t\\n      }\\t\\n      .apexcharts-legend-text {\\t\\n        position: relative;\\t\\n        font-size: 14px;\\t\\n      }\\t\\n      .apexcharts-legend-text *, .apexcharts-legend-marker * {\\t\\n        pointer-events: none;\\t\\n      }\\t\\n      .apexcharts-legend-marker {\\t\\n        position: relative;\\t\\n        display: inline-block;\\t\\n        cursor: pointer;\\t\\n        margin-right: 3px;\\t\\n        border-style: solid;\\n      }\\t\\n      \\t\\n      .apexcharts-legend.apexcharts-align-right .apexcharts-legend-series, .apexcharts-legend.apexcharts-align-left .apexcharts-legend-series{\\t\\n        display: inline-block;\\t\\n      }\\t\\n      .apexcharts-legend-series.apexcharts-no-click {\\t\\n        cursor: auto;\\t\\n      }\\t\\n      .apexcharts-legend .apexcharts-hidden-zero-series, .apexcharts-legend .apexcharts-hidden-null-series {\\t\\n        display: none !important;\\t\\n      }\\t\\n      .apexcharts-inactive-legend {\\t\\n        opacity: 0.45;\\t\\n      }\";\n                var rules = document.createTextNode(text);\n                stylesheet.appendChild(rules);\n                return stylesheet;\n            }\n        }, {\n            key: \"getLegendBBox\",\n            value: function getLegendBBox() {\n                var w = this.w;\n                var currLegendsWrap = w.globals.dom.baseEl.querySelector('.apexcharts-legend');\n                var currLegendsWrapRect = currLegendsWrap.getBoundingClientRect();\n                var currLegendsWrapWidth = currLegendsWrapRect.width;\n                var currLegendsWrapHeight = currLegendsWrapRect.height;\n                return {\n                    clwh: currLegendsWrapHeight,\n                    clww: currLegendsWrapWidth\n                };\n            }\n        }, {\n            key: \"appendToForeignObject\",\n            value: function appendToForeignObject() {\n                var gl = this.w.globals;\n                gl.dom.elLegendForeign = document.createElementNS(gl.SVGNS, 'foreignObject');\n                var elForeign = gl.dom.elLegendForeign;\n                elForeign.setAttribute('x', 0);\n                elForeign.setAttribute('y', 0);\n                elForeign.setAttribute('width', gl.svgWidth);\n                elForeign.setAttribute('height', gl.svgHeight);\n                gl.dom.elLegendWrap.setAttribute('xmlns', 'http://www.w3.org/1999/xhtml');\n                elForeign.appendChild(gl.dom.elLegendWrap);\n                elForeign.appendChild(this.getLegendStyles()); //gl.dom.elGraphical.node.insertAdjacentElement('afterend', elForeign)\n                // the above line causes issue #1907\n\n                gl.dom.Paper.node.insertBefore(elForeign, gl.dom.elGraphical.node);\n            }\n        }, {\n            key: \"toggleDataSeries\",\n            value: function toggleDataSeries(seriesCnt, isHidden) {\n                var _this = this;\n\n                var w = this.w;\n\n                if (w.globals.axisCharts || w.config.chart.type === 'radialBar') {\n                    w.globals.resized = true; // we don't want initial animations again\n\n                    var seriesEl = null;\n                    var realIndex = null; // yes, make it null. 1 series will rise at a time\n\n                    w.globals.risingSeries = [];\n\n                    if (w.globals.axisCharts) {\n                        seriesEl = w.globals.dom.baseEl.querySelector(\".apexcharts-series[data\\\\:realIndex='\".concat(seriesCnt, \"']\"));\n                        realIndex = parseInt(seriesEl.getAttribute('data:realIndex'), 10);\n                    } else {\n                        seriesEl = w.globals.dom.baseEl.querySelector(\".apexcharts-series[rel='\".concat(seriesCnt + 1, \"']\"));\n                        realIndex = parseInt(seriesEl.getAttribute('rel'), 10) - 1;\n                    }\n\n                    if (isHidden) {\n                        var seriesToMakeVisible = [{\n                            cs: w.globals.collapsedSeries,\n                            csi: w.globals.collapsedSeriesIndices\n                        }, {\n                            cs: w.globals.ancillaryCollapsedSeries,\n                            csi: w.globals.ancillaryCollapsedSeriesIndices\n                        }];\n                        seriesToMakeVisible.forEach(function(r) {\n                            _this.riseCollapsedSeries(r.cs, r.csi, realIndex);\n                        });\n                    } else {\n                        this.hideSeries({\n                            seriesEl: seriesEl,\n                            realIndex: realIndex\n                        });\n                    }\n                } else {\n                    // for non-axis charts i.e pie / donuts\n                    var _seriesEl = w.globals.dom.Paper.select(\" .apexcharts-series[rel='\".concat(seriesCnt + 1, \"'] path\"));\n\n                    var type = w.config.chart.type;\n\n                    if (type === 'pie' || type === 'polarArea' || type === 'donut') {\n                        var dataLabels = w.config.plotOptions.pie.donut.labels;\n                        var graphics = new Graphics(this.lgCtx.ctx);\n                        graphics.pathMouseDown(_seriesEl.members[0], null);\n                        this.lgCtx.ctx.pie.printDataLabelsInner(_seriesEl.members[0].node, dataLabels);\n                    }\n\n                    _seriesEl.fire('click');\n                }\n            }\n        }, {\n            key: \"hideSeries\",\n            value: function hideSeries(_ref) {\n                var seriesEl = _ref.seriesEl,\n                    realIndex = _ref.realIndex;\n                var w = this.w;\n                var series = Utils.clone(w.config.series);\n\n                if (w.globals.axisCharts) {\n                    var shouldNotHideYAxis = false;\n\n                    if (w.config.yaxis[realIndex] && w.config.yaxis[realIndex].show && w.config.yaxis[realIndex].showAlways) {\n                        shouldNotHideYAxis = true;\n\n                        if (w.globals.ancillaryCollapsedSeriesIndices.indexOf(realIndex) < 0) {\n                            w.globals.ancillaryCollapsedSeries.push({\n                                index: realIndex,\n                                data: series[realIndex].data.slice(),\n                                type: seriesEl.parentNode.className.baseVal.split('-')[1]\n                            });\n                            w.globals.ancillaryCollapsedSeriesIndices.push(realIndex);\n                        }\n                    }\n\n                    if (!shouldNotHideYAxis) {\n                        w.globals.collapsedSeries.push({\n                            index: realIndex,\n                            data: series[realIndex].data.slice(),\n                            type: seriesEl.parentNode.className.baseVal.split('-')[1]\n                        });\n                        w.globals.collapsedSeriesIndices.push(realIndex);\n                        var removeIndexOfRising = w.globals.risingSeries.indexOf(realIndex);\n                        w.globals.risingSeries.splice(removeIndexOfRising, 1);\n                    }\n                } else {\n                    w.globals.collapsedSeries.push({\n                        index: realIndex,\n                        data: series[realIndex]\n                    });\n                    w.globals.collapsedSeriesIndices.push(realIndex);\n                }\n\n                var seriesChildren = seriesEl.childNodes;\n\n                for (var sc = 0; sc < seriesChildren.length; sc++) {\n                    if (seriesChildren[sc].classList.contains('apexcharts-series-markers-wrap')) {\n                        if (seriesChildren[sc].classList.contains('apexcharts-hide')) {\n                            seriesChildren[sc].classList.remove('apexcharts-hide');\n                        } else {\n                            seriesChildren[sc].classList.add('apexcharts-hide');\n                        }\n                    }\n                }\n\n                w.globals.allSeriesCollapsed = w.globals.collapsedSeries.length === w.config.series.length;\n                series = this._getSeriesBasedOnCollapsedState(series);\n\n                this.lgCtx.ctx.updateHelpers._updateSeries(series, w.config.chart.animations.dynamicAnimation.enabled);\n            }\n        }, {\n            key: \"riseCollapsedSeries\",\n            value: function riseCollapsedSeries(collapsedSeries, seriesIndices, realIndex) {\n                var w = this.w;\n                var series = Utils.clone(w.config.series);\n\n                if (collapsedSeries.length > 0) {\n                    for (var c = 0; c < collapsedSeries.length; c++) {\n                        if (collapsedSeries[c].index === realIndex) {\n                            if (w.globals.axisCharts) {\n                                series[realIndex].data = collapsedSeries[c].data.slice();\n                                collapsedSeries.splice(c, 1);\n                                seriesIndices.splice(c, 1);\n                                w.globals.risingSeries.push(realIndex);\n                            } else {\n                                series[realIndex] = collapsedSeries[c].data;\n                                collapsedSeries.splice(c, 1);\n                                seriesIndices.splice(c, 1);\n                                w.globals.risingSeries.push(realIndex);\n                            }\n                        }\n                    }\n\n                    series = this._getSeriesBasedOnCollapsedState(series);\n\n                    this.lgCtx.ctx.updateHelpers._updateSeries(series, w.config.chart.animations.dynamicAnimation.enabled);\n                }\n            }\n        }, {\n            key: \"_getSeriesBasedOnCollapsedState\",\n            value: function _getSeriesBasedOnCollapsedState(series) {\n                var w = this.w;\n\n                if (w.globals.axisCharts) {\n                    series.forEach(function(s, sI) {\n                        if (w.globals.collapsedSeriesIndices.indexOf(sI) > -1) {\n                            series[sI].data = [];\n                        }\n                    });\n                } else {\n                    series.forEach(function(s, sI) {\n                        if (w.globals.collapsedSeriesIndices.indexOf(sI) > -1) {\n                            series[sI] = 0;\n                        }\n                    });\n                }\n\n                return series;\n            }\n        }]);\n\n        return Helpers;\n    }();\n\n    /**\n     * ApexCharts Legend Class to draw legend.\n     *\n     * @module Legend\n     **/\n\n    var Legend = /*#__PURE__*/ function() {\n        function Legend(ctx, opts) {\n            _classCallCheck(this, Legend);\n\n            this.ctx = ctx;\n            this.w = ctx.w;\n            this.onLegendClick = this.onLegendClick.bind(this);\n            this.onLegendHovered = this.onLegendHovered.bind(this);\n            this.isBarsDistributed = this.w.config.chart.type === 'bar' && this.w.config.plotOptions.bar.distributed && this.w.config.series.length === 1;\n            this.legendHelpers = new Helpers$3(this);\n        }\n\n        _createClass(Legend, [{\n            key: \"init\",\n            value: function init() {\n                var w = this.w;\n                var gl = w.globals;\n                var cnf = w.config;\n                var showLegendAlways = cnf.legend.showForSingleSeries && gl.series.length === 1 || this.isBarsDistributed || gl.series.length > 1;\n\n                if ((showLegendAlways || !gl.axisCharts) && cnf.legend.show) {\n                    while (gl.dom.elLegendWrap.firstChild) {\n                        gl.dom.elLegendWrap.removeChild(gl.dom.elLegendWrap.firstChild);\n                    }\n\n                    this.drawLegends();\n\n                    if (!Utils.isIE11()) {\n                        this.legendHelpers.appendToForeignObject();\n                    } else {\n                        // IE11 doesn't supports foreignObject, hence append it to <head>\n                        document.getElementsByTagName('head')[0].appendChild(this.legendHelpers.getLegendStyles());\n                    }\n\n                    if (cnf.legend.position === 'bottom' || cnf.legend.position === 'top') {\n                        this.legendAlignHorizontal();\n                    } else if (cnf.legend.position === 'right' || cnf.legend.position === 'left') {\n                        this.legendAlignVertical();\n                    }\n                }\n            }\n        }, {\n            key: \"drawLegends\",\n            value: function drawLegends() {\n                var self = this;\n                var w = this.w;\n                var fontFamily = w.config.legend.fontFamily;\n                var legendNames = w.globals.seriesNames;\n                var fillcolor = w.globals.colors.slice();\n\n                if (w.config.chart.type === 'heatmap') {\n                    var ranges = w.config.plotOptions.heatmap.colorScale.ranges;\n                    legendNames = ranges.map(function(colorScale) {\n                        return colorScale.name ? colorScale.name : colorScale.from + ' - ' + colorScale.to;\n                    });\n                    fillcolor = ranges.map(function(color) {\n                        return color.color;\n                    });\n                } else if (this.isBarsDistributed) {\n                    legendNames = w.globals.labels.slice();\n                }\n\n                if (w.config.legend.customLegendItems.length) {\n                    legendNames = w.config.legend.customLegendItems;\n                }\n\n                var legendFormatter = w.globals.legendFormatter;\n                var isLegendInversed = w.config.legend.inverseOrder;\n\n                for (var i = isLegendInversed ? legendNames.length - 1 : 0; isLegendInversed ? i >= 0 : i <= legendNames.length - 1; isLegendInversed ? i-- : i++) {\n                    var text = legendFormatter(legendNames[i], {\n                        seriesIndex: i,\n                        w: w\n                    });\n                    var collapsedSeries = false;\n                    var ancillaryCollapsedSeries = false;\n\n                    if (w.globals.collapsedSeries.length > 0) {\n                        for (var c = 0; c < w.globals.collapsedSeries.length; c++) {\n                            if (w.globals.collapsedSeries[c].index === i) {\n                                collapsedSeries = true;\n                            }\n                        }\n                    }\n\n                    if (w.globals.ancillaryCollapsedSeriesIndices.length > 0) {\n                        for (var _c = 0; _c < w.globals.ancillaryCollapsedSeriesIndices.length; _c++) {\n                            if (w.globals.ancillaryCollapsedSeriesIndices[_c] === i) {\n                                ancillaryCollapsedSeries = true;\n                            }\n                        }\n                    }\n\n                    var elMarker = document.createElement('span');\n                    elMarker.classList.add('apexcharts-legend-marker');\n                    var mOffsetX = w.config.legend.markers.offsetX;\n                    var mOffsetY = w.config.legend.markers.offsetY;\n                    var mHeight = w.config.legend.markers.height;\n                    var mWidth = w.config.legend.markers.width;\n                    var mBorderWidth = w.config.legend.markers.strokeWidth;\n                    var mBorderColor = w.config.legend.markers.strokeColor;\n                    var mBorderRadius = w.config.legend.markers.radius;\n                    var mStyle = elMarker.style;\n                    mStyle.background = fillcolor[i];\n                    mStyle.color = fillcolor[i];\n                    mStyle.setProperty('background', fillcolor[i], 'important'); // override fill color with custom legend.markers.fillColors\n\n                    if (w.config.legend.markers.fillColors && w.config.legend.markers.fillColors[i]) {\n                        mStyle.background = w.config.legend.markers.fillColors[i];\n                    } // override with data color\n\n\n                    if (w.globals.seriesColors[i] !== undefined) {\n                        mStyle.background = w.globals.seriesColors[i];\n                        mStyle.color = w.globals.seriesColors[i];\n                    }\n\n                    mStyle.height = Array.isArray(mHeight) ? parseFloat(mHeight[i]) + 'px' : parseFloat(mHeight) + 'px';\n                    mStyle.width = Array.isArray(mWidth) ? parseFloat(mWidth[i]) + 'px' : parseFloat(mWidth) + 'px';\n                    mStyle.left = (Array.isArray(mOffsetX) ? parseFloat(mOffsetX[i]) : parseFloat(mOffsetX)) + 'px';\n                    mStyle.top = (Array.isArray(mOffsetY) ? parseFloat(mOffsetY[i]) : parseFloat(mOffsetY)) + 'px';\n                    mStyle.borderWidth = Array.isArray(mBorderWidth) ? mBorderWidth[i] : mBorderWidth;\n                    mStyle.borderColor = Array.isArray(mBorderColor) ? mBorderColor[i] : mBorderColor;\n                    mStyle.borderRadius = Array.isArray(mBorderRadius) ? parseFloat(mBorderRadius[i]) + 'px' : parseFloat(mBorderRadius) + 'px';\n\n                    if (w.config.legend.markers.customHTML) {\n                        if (Array.isArray(w.config.legend.markers.customHTML)) {\n                            if (w.config.legend.markers.customHTML[i]) {\n                                elMarker.innerHTML = w.config.legend.markers.customHTML[i]();\n                            }\n                        } else {\n                            elMarker.innerHTML = w.config.legend.markers.customHTML();\n                        }\n                    }\n\n                    Graphics.setAttrs(elMarker, {\n                        rel: i + 1,\n                        'data:collapsed': collapsedSeries || ancillaryCollapsedSeries\n                    });\n\n                    if (collapsedSeries || ancillaryCollapsedSeries) {\n                        elMarker.classList.add('apexcharts-inactive-legend');\n                    }\n\n                    var elLegend = document.createElement('div');\n                    var elLegendText = document.createElement('span');\n                    elLegendText.classList.add('apexcharts-legend-text');\n                    elLegendText.innerHTML = Array.isArray(text) ? Utils.sanitizeDom(text.join(' ')) : Utils.sanitizeDom(text);\n                    var textColor = w.config.legend.labels.useSeriesColors ? w.globals.colors[i] : w.config.legend.labels.colors;\n\n                    if (!textColor) {\n                        textColor = w.config.chart.foreColor;\n                    }\n\n                    elLegendText.style.color = textColor;\n                    elLegendText.style.fontSize = parseFloat(w.config.legend.fontSize) + 'px';\n                    elLegendText.style.fontWeight = w.config.legend.fontWeight;\n                    elLegendText.style.fontFamily = fontFamily || w.config.chart.fontFamily;\n                    Graphics.setAttrs(elLegendText, {\n                        rel: i + 1,\n                        i: i,\n                        'data:default-text': encodeURIComponent(text),\n                        'data:collapsed': collapsedSeries || ancillaryCollapsedSeries\n                    });\n                    elLegend.appendChild(elMarker);\n                    elLegend.appendChild(elLegendText);\n                    var coreUtils = new CoreUtils(this.ctx);\n\n                    if (!w.config.legend.showForZeroSeries) {\n                        var total = coreUtils.getSeriesTotalByIndex(i);\n\n                        if (total === 0 && coreUtils.seriesHaveSameValues(i) && !coreUtils.isSeriesNull(i) && w.globals.collapsedSeriesIndices.indexOf(i) === -1 && w.globals.ancillaryCollapsedSeriesIndices.indexOf(i) === -1) {\n                            elLegend.classList.add('apexcharts-hidden-zero-series');\n                        }\n                    }\n\n                    if (!w.config.legend.showForNullSeries) {\n                        if (coreUtils.isSeriesNull(i) && w.globals.collapsedSeriesIndices.indexOf(i) === -1 && w.globals.ancillaryCollapsedSeriesIndices.indexOf(i) === -1) {\n                            elLegend.classList.add('apexcharts-hidden-null-series');\n                        }\n                    }\n\n                    w.globals.dom.elLegendWrap.appendChild(elLegend);\n                    w.globals.dom.elLegendWrap.classList.add(\"apexcharts-align-\".concat(w.config.legend.horizontalAlign));\n                    w.globals.dom.elLegendWrap.classList.add('position-' + w.config.legend.position);\n                    elLegend.classList.add('apexcharts-legend-series');\n                    elLegend.style.margin = \"\".concat(w.config.legend.itemMargin.vertical, \"px \").concat(w.config.legend.itemMargin.horizontal, \"px\");\n                    w.globals.dom.elLegendWrap.style.width = w.config.legend.width ? w.config.legend.width + 'px' : '';\n                    w.globals.dom.elLegendWrap.style.height = w.config.legend.height ? w.config.legend.height + 'px' : '';\n                    Graphics.setAttrs(elLegend, {\n                        rel: i + 1,\n                        seriesName: Utils.escapeString(legendNames[i]),\n                        'data:collapsed': collapsedSeries || ancillaryCollapsedSeries\n                    });\n\n                    if (collapsedSeries || ancillaryCollapsedSeries) {\n                        elLegend.classList.add('apexcharts-inactive-legend');\n                    }\n\n                    if (!w.config.legend.onItemClick.toggleDataSeries) {\n                        elLegend.classList.add('apexcharts-no-click');\n                    }\n                }\n\n                w.globals.dom.elWrap.addEventListener('click', self.onLegendClick, true);\n\n                if (w.config.legend.onItemHover.highlightDataSeries && w.config.legend.customLegendItems.length === 0) {\n                    w.globals.dom.elWrap.addEventListener('mousemove', self.onLegendHovered, true);\n                    w.globals.dom.elWrap.addEventListener('mouseout', self.onLegendHovered, true);\n                }\n            }\n        }, {\n            key: \"setLegendWrapXY\",\n            value: function setLegendWrapXY(offsetX, offsetY) {\n                var w = this.w;\n                var elLegendWrap = w.globals.dom.baseEl.querySelector('.apexcharts-legend');\n                var legendRect = elLegendWrap.getBoundingClientRect();\n                var x = 0;\n                var y = 0;\n\n                if (w.config.legend.position === 'bottom') {\n                    y = y + (w.globals.svgHeight - legendRect.height / 2);\n                } else if (w.config.legend.position === 'top') {\n                    var dim = new Dimensions(this.ctx);\n                    var titleH = dim.dimHelpers.getTitleSubtitleCoords('title').height;\n                    var subtitleH = dim.dimHelpers.getTitleSubtitleCoords('subtitle').height;\n                    y = y + (titleH > 0 ? titleH - 10 : 0) + (subtitleH > 0 ? subtitleH - 10 : 0);\n                }\n\n                elLegendWrap.style.position = 'absolute';\n                x = x + offsetX + w.config.legend.offsetX;\n                y = y + offsetY + w.config.legend.offsetY;\n                elLegendWrap.style.left = x + 'px';\n                elLegendWrap.style.top = y + 'px';\n\n                if (w.config.legend.position === 'bottom') {\n                    elLegendWrap.style.top = 'auto';\n                    elLegendWrap.style.bottom = 5 - w.config.legend.offsetY + 'px';\n                } else if (w.config.legend.position === 'right') {\n                    elLegendWrap.style.left = 'auto';\n                    elLegendWrap.style.right = 25 + w.config.legend.offsetX + 'px';\n                }\n\n                var fixedHeigthWidth = ['width', 'height'];\n                fixedHeigthWidth.forEach(function(hw) {\n                    if (elLegendWrap.style[hw]) {\n                        elLegendWrap.style[hw] = parseInt(w.config.legend[hw], 10) + 'px';\n                    }\n                });\n            }\n        }, {\n            key: \"legendAlignHorizontal\",\n            value: function legendAlignHorizontal() {\n                var w = this.w;\n                var elLegendWrap = w.globals.dom.baseEl.querySelector('.apexcharts-legend');\n                elLegendWrap.style.right = 0;\n                var lRect = this.legendHelpers.getLegendBBox();\n                var dimensions = new Dimensions(this.ctx);\n                var titleRect = dimensions.dimHelpers.getTitleSubtitleCoords('title');\n                var subtitleRect = dimensions.dimHelpers.getTitleSubtitleCoords('subtitle');\n                var offsetX = 20;\n                var offsetY = 0; // the whole legend box is set to bottom\n\n                if (w.config.legend.position === 'bottom') {\n                    offsetY = -lRect.clwh / 1.8;\n                } else if (w.config.legend.position === 'top') {\n                    offsetY = titleRect.height + subtitleRect.height + w.config.title.margin + w.config.subtitle.margin - 10;\n                }\n\n                this.setLegendWrapXY(offsetX, offsetY);\n            }\n        }, {\n            key: \"legendAlignVertical\",\n            value: function legendAlignVertical() {\n                var w = this.w;\n                var lRect = this.legendHelpers.getLegendBBox();\n                var offsetY = 20;\n                var offsetX = 0;\n\n                if (w.config.legend.position === 'left') {\n                    offsetX = 20;\n                }\n\n                if (w.config.legend.position === 'right') {\n                    offsetX = w.globals.svgWidth - lRect.clww - 10;\n                }\n\n                this.setLegendWrapXY(offsetX, offsetY);\n            }\n        }, {\n            key: \"onLegendHovered\",\n            value: function onLegendHovered(e) {\n                var w = this.w;\n                var hoverOverLegend = e.target.classList.contains('apexcharts-legend-text') || e.target.classList.contains('apexcharts-legend-marker');\n\n                if (w.config.chart.type !== 'heatmap' && !this.isBarsDistributed) {\n                    if (!e.target.classList.contains('apexcharts-inactive-legend') && hoverOverLegend) {\n                        var series = new Series(this.ctx);\n                        series.toggleSeriesOnHover(e, e.target);\n                    }\n                } else {\n                    // for heatmap handling\n                    if (hoverOverLegend) {\n                        var seriesCnt = parseInt(e.target.getAttribute('rel'), 10) - 1;\n                        this.ctx.events.fireEvent('legendHover', [this.ctx, seriesCnt, this.w]);\n\n                        var _series = new Series(this.ctx);\n\n                        _series.highlightRangeInSeries(e, e.target);\n                    }\n                }\n            }\n        }, {\n            key: \"onLegendClick\",\n            value: function onLegendClick(e) {\n                var w = this.w;\n                if (w.config.legend.customLegendItems.length) return;\n\n                if (e.target.classList.contains('apexcharts-legend-text') || e.target.classList.contains('apexcharts-legend-marker')) {\n                    var seriesCnt = parseInt(e.target.getAttribute('rel'), 10) - 1;\n                    var isHidden = e.target.getAttribute('data:collapsed') === 'true';\n                    var legendClick = this.w.config.chart.events.legendClick;\n\n                    if (typeof legendClick === 'function') {\n                        legendClick(this.ctx, seriesCnt, this.w);\n                    }\n\n                    this.ctx.events.fireEvent('legendClick', [this.ctx, seriesCnt, this.w]);\n                    var markerClick = this.w.config.legend.markers.onClick;\n\n                    if (typeof markerClick === 'function' && e.target.classList.contains('apexcharts-legend-marker')) {\n                        markerClick(this.ctx, seriesCnt, this.w);\n                        this.ctx.events.fireEvent('legendMarkerClick', [this.ctx, seriesCnt, this.w]);\n                    } // for now - just prevent click on heatmap legend - and allow hover only\n\n\n                    var clickAllowed = w.config.chart.type !== 'treemap' && w.config.chart.type !== 'heatmap' && !this.isBarsDistributed;\n\n                    if (clickAllowed && w.config.legend.onItemClick.toggleDataSeries) {\n                        this.legendHelpers.toggleDataSeries(seriesCnt, isHidden);\n                    }\n                }\n            }\n        }]);\n\n        return Legend;\n    }();\n\n    var icoPan = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" fill=\\\"#000000\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" width=\\\"24\\\">\\n    <defs>\\n        <path d=\\\"M0 0h24v24H0z\\\" id=\\\"a\\\"/>\\n    </defs>\\n    <clipPath id=\\\"b\\\">\\n        <use overflow=\\\"visible\\\" xlink:href=\\\"#a\\\"/>\\n    </clipPath>\\n    <path clip-path=\\\"url(#b)\\\" d=\\\"M23 5.5V20c0 2.2-1.8 4-4 4h-7.3c-1.08 0-2.1-.43-2.85-1.19L1 14.83s1.26-1.23 1.3-1.25c.22-.19.49-.29.79-.29.22 0 .42.06.6.16.04.01 4.31 2.46 4.31 2.46V4c0-.83.67-1.5 1.5-1.5S11 3.17 11 4v7h1V1.5c0-.83.67-1.5 1.5-1.5S15 .67 15 1.5V11h1V2.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5V11h1V5.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5z\\\"/>\\n</svg>\";\n\n    var icoZoom = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" fill=\\\"#000000\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" width=\\\"24\\\">\\n    <path d=\\\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\\\"/>\\n    <path d=\\\"M0 0h24v24H0V0z\\\" fill=\\\"none\\\"/>\\n    <path d=\\\"M12 10h-2v2H9v-2H7V9h2V7h1v2h2v1z\\\"/>\\n</svg>\";\n\n    var icoReset = \"<svg fill=\\\"#000000\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" width=\\\"24\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n    <path d=\\\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\\\"/>\\n    <path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\"/>\\n</svg>\";\n\n    var icoZoomIn = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\">\\n    <path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\"/>\\n    <path d=\\\"M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\\\"/>\\n</svg>\\n\";\n\n    var icoZoomOut = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\">\\n    <path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\"/>\\n    <path d=\\\"M7 11v2h10v-2H7zm5-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\\\"/>\\n</svg>\\n\";\n\n    var icoSelect = \"<svg fill=\\\"#6E8192\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" width=\\\"24\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n    <path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\"/>\\n    <path d=\\\"M3 5h2V3c-1.1 0-2 .9-2 2zm0 8h2v-2H3v2zm4 8h2v-2H7v2zM3 9h2V7H3v2zm10-6h-2v2h2V3zm6 0v2h2c0-1.1-.9-2-2-2zM5 21v-2H3c0 1.1.9 2 2 2zm-2-4h2v-2H3v2zM9 3H7v2h2V3zm2 18h2v-2h-2v2zm8-8h2v-2h-2v2zm0 8c1.1 0 2-.9 2-2h-2v2zm0-12h2V7h-2v2zm0 8h2v-2h-2v2zm-4 4h2v-2h-2v2zm0-16h2V3h-2v2z\\\"/>\\n</svg>\";\n\n    var icoMenu = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\"><path fill=\\\"none\\\" d=\\\"M0 0h24v24H0V0z\\\"/><path d=\\\"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\\\"/></svg>\";\n\n    /**\n     * ApexCharts Toolbar Class for creating toolbar in axis based charts.\n     *\n     * @module Toolbar\n     **/\n\n    var Toolbar = /*#__PURE__*/ function() {\n        function Toolbar(ctx) {\n            _classCallCheck(this, Toolbar);\n\n            this.ctx = ctx;\n            this.w = ctx.w;\n            var w = this.w;\n            this.ev = this.w.config.chart.events;\n            this.selectedClass = 'apexcharts-selected';\n            this.localeValues = this.w.globals.locale.toolbar;\n            this.minX = w.globals.minX;\n            this.maxX = w.globals.maxX;\n        }\n\n        _createClass(Toolbar, [{\n            key: \"createToolbar\",\n            value: function createToolbar() {\n                var _this = this;\n\n                var w = this.w;\n\n                var createDiv = function createDiv() {\n                    return document.createElement('div');\n                };\n\n                var elToolbarWrap = createDiv();\n                elToolbarWrap.setAttribute('class', 'apexcharts-toolbar');\n                elToolbarWrap.style.top = w.config.chart.toolbar.offsetY + 'px';\n                elToolbarWrap.style.right = -w.config.chart.toolbar.offsetX + 3 + 'px';\n                w.globals.dom.elWrap.appendChild(elToolbarWrap);\n                this.elZoom = createDiv();\n                this.elZoomIn = createDiv();\n                this.elZoomOut = createDiv();\n                this.elPan = createDiv();\n                this.elSelection = createDiv();\n                this.elZoomReset = createDiv();\n                this.elMenuIcon = createDiv();\n                this.elMenu = createDiv();\n                this.elCustomIcons = [];\n                this.t = w.config.chart.toolbar.tools;\n\n                if (Array.isArray(this.t.customIcons)) {\n                    for (var i = 0; i < this.t.customIcons.length; i++) {\n                        this.elCustomIcons.push(createDiv());\n                    }\n                }\n\n                var toolbarControls = [];\n\n                var appendZoomControl = function appendZoomControl(type, el, ico) {\n                    var tool = type.toLowerCase();\n\n                    if (_this.t[tool] && w.config.chart.zoom.enabled) {\n                        toolbarControls.push({\n                            el: el,\n                            icon: typeof _this.t[tool] === 'string' ? _this.t[tool] : ico,\n                            title: _this.localeValues[type],\n                            class: \"apexcharts-\".concat(tool, \"-icon\")\n                        });\n                    }\n                };\n\n                appendZoomControl('zoomIn', this.elZoomIn, icoZoomIn);\n                appendZoomControl('zoomOut', this.elZoomOut, icoZoomOut);\n\n                var zoomSelectionCtrls = function zoomSelectionCtrls(z) {\n                    if (_this.t[z] && w.config.chart[z].enabled) {\n                        toolbarControls.push({\n                            el: z === 'zoom' ? _this.elZoom : _this.elSelection,\n                            icon: typeof _this.t[z] === 'string' ? _this.t[z] : z === 'zoom' ? icoZoom : icoSelect,\n                            title: _this.localeValues[z === 'zoom' ? 'selectionZoom' : 'selection'],\n                            class: w.globals.isTouchDevice ? 'apexcharts-element-hidden' : \"apexcharts-\".concat(z, \"-icon\")\n                        });\n                    }\n                };\n\n                zoomSelectionCtrls('zoom');\n                zoomSelectionCtrls('selection');\n\n                if (this.t.pan && w.config.chart.zoom.enabled) {\n                    toolbarControls.push({\n                        el: this.elPan,\n                        icon: typeof this.t.pan === 'string' ? this.t.pan : icoPan,\n                        title: this.localeValues.pan,\n                        class: w.globals.isTouchDevice ? 'apexcharts-element-hidden' : 'apexcharts-pan-icon'\n                    });\n                }\n\n                appendZoomControl('reset', this.elZoomReset, icoReset);\n\n                if (this.t.download) {\n                    toolbarControls.push({\n                        el: this.elMenuIcon,\n                        icon: typeof this.t.download === 'string' ? this.t.download : icoMenu,\n                        title: this.localeValues.menu,\n                        class: 'apexcharts-menu-icon'\n                    });\n                }\n\n                for (var _i = 0; _i < this.elCustomIcons.length; _i++) {\n                    toolbarControls.push({\n                        el: this.elCustomIcons[_i],\n                        icon: this.t.customIcons[_i].icon,\n                        title: this.t.customIcons[_i].title,\n                        index: this.t.customIcons[_i].index,\n                        class: 'apexcharts-toolbar-custom-icon ' + this.t.customIcons[_i].class\n                    });\n                }\n\n                toolbarControls.forEach(function(t, index) {\n                    if (t.index) {\n                        Utils.moveIndexInArray(toolbarControls, index, t.index);\n                    }\n                });\n\n                for (var _i2 = 0; _i2 < toolbarControls.length; _i2++) {\n                    Graphics.setAttrs(toolbarControls[_i2].el, {\n                        class: toolbarControls[_i2].class,\n                        title: toolbarControls[_i2].title\n                    });\n                    toolbarControls[_i2].el.innerHTML = toolbarControls[_i2].icon;\n                    elToolbarWrap.appendChild(toolbarControls[_i2].el);\n                }\n\n                this._createHamburgerMenu(elToolbarWrap);\n\n                if (w.globals.zoomEnabled) {\n                    this.elZoom.classList.add(this.selectedClass);\n                } else if (w.globals.panEnabled) {\n                    this.elPan.classList.add(this.selectedClass);\n                } else if (w.globals.selectionEnabled) {\n                    this.elSelection.classList.add(this.selectedClass);\n                }\n\n                this.addToolbarEventListeners();\n            }\n        }, {\n            key: \"_createHamburgerMenu\",\n            value: function _createHamburgerMenu(parent) {\n                this.elMenuItems = [];\n                parent.appendChild(this.elMenu);\n                Graphics.setAttrs(this.elMenu, {\n                    class: 'apexcharts-menu'\n                });\n                var menuItems = [{\n                    name: 'exportSVG',\n                    title: this.localeValues.exportToSVG\n                }, {\n                    name: 'exportPNG',\n                    title: this.localeValues.exportToPNG\n                }, {\n                    name: 'exportCSV',\n                    title: this.localeValues.exportToCSV\n                }];\n\n                if (!this.w.globals.allSeriesHasEqualX) {\n                    // if it is a multi series, and all series have variable x values, export CSV won't work\n                    menuItems.splice(2, 1);\n                }\n\n                for (var i = 0; i < menuItems.length; i++) {\n                    this.elMenuItems.push(document.createElement('div'));\n                    this.elMenuItems[i].innerHTML = menuItems[i].title;\n                    Graphics.setAttrs(this.elMenuItems[i], {\n                        class: \"apexcharts-menu-item \".concat(menuItems[i].name),\n                        title: menuItems[i].title\n                    });\n                    this.elMenu.appendChild(this.elMenuItems[i]);\n                }\n            }\n        }, {\n            key: \"addToolbarEventListeners\",\n            value: function addToolbarEventListeners() {\n                var _this2 = this;\n\n                this.elZoomReset.addEventListener('click', this.handleZoomReset.bind(this));\n                this.elSelection.addEventListener('click', this.toggleZoomSelection.bind(this, 'selection'));\n                this.elZoom.addEventListener('click', this.toggleZoomSelection.bind(this, 'zoom'));\n                this.elZoomIn.addEventListener('click', this.handleZoomIn.bind(this));\n                this.elZoomOut.addEventListener('click', this.handleZoomOut.bind(this));\n                this.elPan.addEventListener('click', this.togglePanning.bind(this));\n                this.elMenuIcon.addEventListener('click', this.toggleMenu.bind(this));\n                this.elMenuItems.forEach(function(m) {\n                    if (m.classList.contains('exportSVG')) {\n                        m.addEventListener('click', _this2.handleDownload.bind(_this2, 'svg'));\n                    } else if (m.classList.contains('exportPNG')) {\n                        m.addEventListener('click', _this2.handleDownload.bind(_this2, 'png'));\n                    } else if (m.classList.contains('exportCSV')) {\n                        m.addEventListener('click', _this2.handleDownload.bind(_this2, 'csv'));\n                    }\n                });\n\n                for (var i = 0; i < this.t.customIcons.length; i++) {\n                    this.elCustomIcons[i].addEventListener('click', this.t.customIcons[i].click.bind(this, this.ctx, this.ctx.w));\n                }\n            }\n        }, {\n            key: \"toggleZoomSelection\",\n            value: function toggleZoomSelection(type) {\n                var charts = this.ctx.getSyncedCharts();\n                charts.forEach(function(ch) {\n                    ch.ctx.toolbar.toggleOtherControls();\n                    var el = type === 'selection' ? ch.ctx.toolbar.elSelection : ch.ctx.toolbar.elZoom;\n                    var enabledType = type === 'selection' ? 'selectionEnabled' : 'zoomEnabled';\n                    ch.w.globals[enabledType] = !ch.w.globals[enabledType];\n\n                    if (!el.classList.contains(ch.ctx.toolbar.selectedClass)) {\n                        el.classList.add(ch.ctx.toolbar.selectedClass);\n                    } else {\n                        el.classList.remove(ch.ctx.toolbar.selectedClass);\n                    }\n                });\n            }\n        }, {\n            key: \"getToolbarIconsReference\",\n            value: function getToolbarIconsReference() {\n                var w = this.w;\n\n                if (!this.elZoom) {\n                    this.elZoom = w.globals.dom.baseEl.querySelector('.apexcharts-zoom-icon');\n                }\n\n                if (!this.elPan) {\n                    this.elPan = w.globals.dom.baseEl.querySelector('.apexcharts-pan-icon');\n                }\n\n                if (!this.elSelection) {\n                    this.elSelection = w.globals.dom.baseEl.querySelector('.apexcharts-selection-icon');\n                }\n            }\n        }, {\n            key: \"enableZoomPanFromToolbar\",\n            value: function enableZoomPanFromToolbar(type) {\n                this.toggleOtherControls();\n                type === 'pan' ? this.w.globals.panEnabled = true : this.w.globals.zoomEnabled = true;\n                var el = type === 'pan' ? this.elPan : this.elZoom;\n                var el2 = type === 'pan' ? this.elZoom : this.elPan;\n\n                if (el) {\n                    el.classList.add(this.selectedClass);\n                }\n\n                if (el2) {\n                    el2.classList.remove(this.selectedClass);\n                }\n            }\n        }, {\n            key: \"togglePanning\",\n            value: function togglePanning() {\n                var charts = this.ctx.getSyncedCharts();\n                charts.forEach(function(ch) {\n                    ch.ctx.toolbar.toggleOtherControls();\n                    ch.w.globals.panEnabled = !ch.w.globals.panEnabled;\n\n                    if (!ch.ctx.toolbar.elPan.classList.contains(ch.ctx.toolbar.selectedClass)) {\n                        ch.ctx.toolbar.elPan.classList.add(ch.ctx.toolbar.selectedClass);\n                    } else {\n                        ch.ctx.toolbar.elPan.classList.remove(ch.ctx.toolbar.selectedClass);\n                    }\n                });\n            }\n        }, {\n            key: \"toggleOtherControls\",\n            value: function toggleOtherControls() {\n                var _this3 = this;\n\n                var w = this.w;\n                w.globals.panEnabled = false;\n                w.globals.zoomEnabled = false;\n                w.globals.selectionEnabled = false;\n                this.getToolbarIconsReference();\n                var toggleEls = [this.elPan, this.elSelection, this.elZoom];\n                toggleEls.forEach(function(el) {\n                    if (el) {\n                        el.classList.remove(_this3.selectedClass);\n                    }\n                });\n            }\n        }, {\n            key: \"handleZoomIn\",\n            value: function handleZoomIn() {\n                var w = this.w;\n\n                if (w.globals.isTimelineBar) {\n                    this.minX = w.globals.minY;\n                    this.maxX = w.globals.maxY;\n                }\n\n                var centerX = (this.minX + this.maxX) / 2;\n                var newMinX = (this.minX + centerX) / 2;\n                var newMaxX = (this.maxX + centerX) / 2;\n\n                var newMinXMaxX = this._getNewMinXMaxX(newMinX, newMaxX);\n\n                if (!w.globals.disableZoomIn) {\n                    this.zoomUpdateOptions(newMinXMaxX.minX, newMinXMaxX.maxX);\n                }\n            }\n        }, {\n            key: \"handleZoomOut\",\n            value: function handleZoomOut() {\n                var w = this.w;\n\n                if (w.globals.isTimelineBar) {\n                    this.minX = w.globals.minY;\n                    this.maxX = w.globals.maxY;\n                } // avoid zooming out beyond 1000 which may result in NaN values being printed on x-axis\n\n\n                if (w.config.xaxis.type === 'datetime' && new Date(this.minX).getUTCFullYear() < 1000) {\n                    return;\n                }\n\n                var centerX = (this.minX + this.maxX) / 2;\n                var newMinX = this.minX - (centerX - this.minX);\n                var newMaxX = this.maxX - (centerX - this.maxX);\n\n                var newMinXMaxX = this._getNewMinXMaxX(newMinX, newMaxX);\n\n                if (!w.globals.disableZoomOut) {\n                    this.zoomUpdateOptions(newMinXMaxX.minX, newMinXMaxX.maxX);\n                }\n            }\n        }, {\n            key: \"_getNewMinXMaxX\",\n            value: function _getNewMinXMaxX(newMinX, newMaxX) {\n                var shouldFloor = this.w.config.xaxis.convertedCatToNumeric;\n                return {\n                    minX: shouldFloor ? Math.floor(newMinX) : newMinX,\n                    maxX: shouldFloor ? Math.floor(newMaxX) : newMaxX\n                };\n            }\n        }, {\n            key: \"zoomUpdateOptions\",\n            value: function zoomUpdateOptions(newMinX, newMaxX) {\n                var w = this.w;\n\n                if (newMinX === undefined && newMaxX === undefined) {\n                    this.handleZoomReset();\n                    return;\n                }\n\n                if (w.config.xaxis.convertedCatToNumeric) {\n                    // in category charts, avoid zooming out beyond min and max\n                    if (newMinX < 1) {\n                        newMinX = 1;\n                        newMaxX = w.globals.dataPoints;\n                    }\n\n                    if (newMaxX - newMinX < 2) {\n                        return;\n                    }\n                }\n\n                var xaxis = {\n                    min: newMinX,\n                    max: newMaxX\n                };\n                var beforeZoomRange = this.getBeforeZoomRange(xaxis);\n\n                if (beforeZoomRange) {\n                    xaxis = beforeZoomRange.xaxis;\n                }\n\n                var options = {\n                    xaxis: xaxis\n                };\n                var yaxis = Utils.clone(w.globals.initialConfig.yaxis);\n\n                if (w.config.chart.zoom.autoScaleYaxis) {\n                    var scale = new Range(this.ctx);\n                    yaxis = scale.autoScaleY(this.ctx, yaxis, {\n                        xaxis: xaxis\n                    });\n                }\n\n                if (!w.config.chart.group) {\n                    // if chart in a group, prevent yaxis update here\n                    // fix issue #650\n                    options.yaxis = yaxis;\n                }\n\n                this.w.globals.zoomed = true;\n\n                this.ctx.updateHelpers._updateOptions(options, false, this.w.config.chart.animations.dynamicAnimation.enabled);\n\n                this.zoomCallback(xaxis, yaxis);\n            }\n        }, {\n            key: \"zoomCallback\",\n            value: function zoomCallback(xaxis, yaxis) {\n                if (typeof this.ev.zoomed === 'function') {\n                    this.ev.zoomed(this.ctx, {\n                        xaxis: xaxis,\n                        yaxis: yaxis\n                    });\n                }\n            }\n        }, {\n            key: \"getBeforeZoomRange\",\n            value: function getBeforeZoomRange(xaxis, yaxis) {\n                var newRange = null;\n\n                if (typeof this.ev.beforeZoom === 'function') {\n                    newRange = this.ev.beforeZoom(this, {\n                        xaxis: xaxis,\n                        yaxis: yaxis\n                    });\n                }\n\n                return newRange;\n            }\n        }, {\n            key: \"toggleMenu\",\n            value: function toggleMenu() {\n                var _this4 = this;\n\n                window.setTimeout(function() {\n                    if (_this4.elMenu.classList.contains('apexcharts-menu-open')) {\n                        _this4.elMenu.classList.remove('apexcharts-menu-open');\n                    } else {\n                        _this4.elMenu.classList.add('apexcharts-menu-open');\n                    }\n                }, 0);\n            }\n        }, {\n            key: \"handleDownload\",\n            value: function handleDownload(type) {\n                var w = this.w;\n                var exprt = new Exports(this.ctx);\n\n                switch (type) {\n                    case 'svg':\n                        exprt.exportToSVG(this.ctx);\n                        break;\n\n                    case 'png':\n                        exprt.exportToPng(this.ctx);\n                        break;\n\n                    case 'csv':\n                        exprt.exportToCSV({\n                            series: w.config.series,\n                            columnDelimiter: w.config.chart.toolbar.export.csv.columnDelimiter\n                        });\n                        break;\n                }\n            }\n        }, {\n            key: \"handleZoomReset\",\n            value: function handleZoomReset(e) {\n                var charts = this.ctx.getSyncedCharts();\n                charts.forEach(function(ch) {\n                    var w = ch.w; // forget lastXAxis min/max as reset button isn't resetting the x-axis completely if zoomX is called before\n\n                    w.globals.lastXAxis.min = undefined;\n                    w.globals.lastXAxis.max = undefined;\n                    ch.updateHelpers.revertDefaultAxisMinMax();\n\n                    if (typeof w.config.chart.events.beforeResetZoom === 'function') {\n                        // here, user get an option to control xaxis and yaxis when resetZoom is called\n                        // at this point, whatever is returned from w.config.chart.events.beforeResetZoom\n                        // is set as the new xaxis/yaxis min/max\n                        var resetZoomRange = w.config.chart.events.beforeResetZoom(ch, w);\n\n                        if (resetZoomRange) {\n                            ch.updateHelpers.revertDefaultAxisMinMax(resetZoomRange);\n                        }\n                    }\n\n                    if (typeof w.config.chart.events.zoomed === 'function') {\n                        ch.ctx.toolbar.zoomCallback({\n                            min: w.config.xaxis.min,\n                            max: w.config.xaxis.max\n                        });\n                    }\n\n                    w.globals.zoomed = false; // if user has some series collapsed before hitting zoom reset button,\n                    // those series should stay collapsed\n\n                    var series = ch.ctx.series.emptyCollapsedSeries(Utils.clone(w.globals.initialSeries));\n\n                    ch.updateHelpers._updateSeries(series, w.config.chart.animations.dynamicAnimation.enabled);\n                });\n            }\n        }, {\n            key: \"destroy\",\n            value: function destroy() {\n                this.elZoom = null;\n                this.elZoomIn = null;\n                this.elZoomOut = null;\n                this.elPan = null;\n                this.elSelection = null;\n                this.elZoomReset = null;\n                this.elMenuIcon = null;\n            }\n        }]);\n\n        return Toolbar;\n    }();\n\n    /**\n     * ApexCharts Zoom Class for handling zooming and panning on axes based charts.\n     *\n     * @module ZoomPanSelection\n     **/\n\n    var ZoomPanSelection = /*#__PURE__*/ function(_Toolbar) {\n        _inherits(ZoomPanSelection, _Toolbar);\n\n        var _super = _createSuper(ZoomPanSelection);\n\n        function ZoomPanSelection(ctx) {\n            var _this;\n\n            _classCallCheck(this, ZoomPanSelection);\n\n            _this = _super.call(this, ctx);\n            _this.ctx = ctx;\n            _this.w = ctx.w;\n            _this.dragged = false;\n            _this.graphics = new Graphics(_this.ctx);\n            _this.eventList = ['mousedown', 'mouseleave', 'mousemove', 'touchstart', 'touchmove', 'mouseup', 'touchend'];\n            _this.clientX = 0;\n            _this.clientY = 0;\n            _this.startX = 0;\n            _this.endX = 0;\n            _this.dragX = 0;\n            _this.startY = 0;\n            _this.endY = 0;\n            _this.dragY = 0;\n            _this.moveDirection = 'none';\n            return _this;\n        }\n\n        _createClass(ZoomPanSelection, [{\n            key: \"init\",\n            value: function init(_ref) {\n                    var _this2 = this;\n\n                    var xyRatios = _ref.xyRatios;\n                    var w = this.w;\n                    var me = this;\n                    this.xyRatios = xyRatios;\n                    this.zoomRect = this.graphics.drawRect(0, 0, 0, 0);\n                    this.selectionRect = this.graphics.drawRect(0, 0, 0, 0);\n                    this.gridRect = w.globals.dom.baseEl.querySelector('.apexcharts-grid');\n                    this.zoomRect.node.classList.add('apexcharts-zoom-rect');\n                    this.selectionRect.node.classList.add('apexcharts-selection-rect');\n                    w.globals.dom.elGraphical.add(this.zoomRect);\n                    w.globals.dom.elGraphical.add(this.selectionRect);\n\n                    if (w.config.chart.selection.type === 'x') {\n                        this.slDraggableRect = this.selectionRect.draggable({\n                            minX: 0,\n                            minY: 0,\n                            maxX: w.globals.gridWidth,\n                            maxY: w.globals.gridHeight\n                        }).on('dragmove', this.selectionDragging.bind(this, 'dragging'));\n                    } else if (w.config.chart.selection.type === 'y') {\n                        this.slDraggableRect = this.selectionRect.draggable({\n                            minX: 0,\n                            maxX: w.globals.gridWidth\n                        }).on('dragmove', this.selectionDragging.bind(this, 'dragging'));\n                    } else {\n                        this.slDraggableRect = this.selectionRect.draggable().on('dragmove', this.selectionDragging.bind(this, 'dragging'));\n                    }\n\n                    this.preselectedSelection();\n                    this.hoverArea = w.globals.dom.baseEl.querySelector(\"\".concat(w.globals.chartClass, \" .apexcharts-svg\"));\n                    this.hoverArea.classList.add('apexcharts-zoomable');\n                    this.eventList.forEach(function(event) {\n                        _this2.hoverArea.addEventListener(event, me.svgMouseEvents.bind(me, xyRatios), {\n                            capture: false,\n                            passive: true\n                        });\n                    });\n                } // remove the event listeners which were previously added on hover area\n\n        }, {\n            key: \"destroy\",\n            value: function destroy() {\n                if (this.slDraggableRect) {\n                    this.slDraggableRect.draggable(false);\n                    this.slDraggableRect.off();\n                    this.selectionRect.off();\n                }\n\n                this.selectionRect = null;\n                this.zoomRect = null;\n                this.gridRect = null;\n            }\n        }, {\n            key: \"svgMouseEvents\",\n            value: function svgMouseEvents(xyRatios, e) {\n                var w = this.w;\n                var me = this;\n                var toolbar = this.ctx.toolbar;\n                var zoomtype = w.globals.zoomEnabled ? w.config.chart.zoom.type : w.config.chart.selection.type;\n                var autoSelected = w.config.chart.toolbar.autoSelected;\n\n                if (e.shiftKey) {\n                    this.shiftWasPressed = true;\n                    toolbar.enableZoomPanFromToolbar(autoSelected === 'pan' ? 'zoom' : 'pan');\n                } else {\n                    if (this.shiftWasPressed) {\n                        toolbar.enableZoomPanFromToolbar(autoSelected);\n                        this.shiftWasPressed = false;\n                    }\n                }\n\n                var tc = e.target.classList;\n                var falsePositives = tc.contains('apexcharts-selection-rect') || tc.contains('apexcharts-legend-marker') || tc.contains('apexcharts-legend-text') || e.target.parentNode.classList.contains('apexcharts-toolbar');\n                if (falsePositives) return;\n                me.clientX = e.type === 'touchmove' || e.type === 'touchstart' ? e.touches[0].clientX : e.type === 'touchend' ? e.changedTouches[0].clientX : e.clientX;\n                me.clientY = e.type === 'touchmove' || e.type === 'touchstart' ? e.touches[0].clientY : e.type === 'touchend' ? e.changedTouches[0].clientY : e.clientY;\n\n                if (e.type === 'mousedown' && e.which === 1) {\n                    var gridRectDim = me.gridRect.getBoundingClientRect();\n                    me.startX = me.clientX - gridRectDim.left;\n                    me.startY = me.clientY - gridRectDim.top;\n                    me.dragged = false;\n                    me.w.globals.mousedown = true;\n                }\n\n                if (e.type === 'mousemove' && e.which === 1 || e.type === 'touchmove') {\n                    me.dragged = true;\n\n                    if (w.globals.panEnabled) {\n                        w.globals.selection = null;\n\n                        if (me.w.globals.mousedown) {\n                            me.panDragging({\n                                context: me,\n                                zoomtype: zoomtype,\n                                xyRatios: xyRatios\n                            });\n                        }\n                    } else {\n                        if (me.w.globals.mousedown && w.globals.zoomEnabled || me.w.globals.mousedown && w.globals.selectionEnabled) {\n                            me.selection = me.selectionDrawing({\n                                context: me,\n                                zoomtype: zoomtype\n                            });\n                        }\n                    }\n                }\n\n                if (e.type === 'mouseup' || e.type === 'touchend' || e.type === 'mouseleave') {\n                    // we will be calling getBoundingClientRect on each mousedown/mousemove/mouseup\n                    var _gridRectDim = me.gridRect.getBoundingClientRect();\n\n                    if (me.w.globals.mousedown) {\n                        // user released the drag, now do all the calculations\n                        me.endX = me.clientX - _gridRectDim.left;\n                        me.endY = me.clientY - _gridRectDim.top;\n                        me.dragX = Math.abs(me.endX - me.startX);\n                        me.dragY = Math.abs(me.endY - me.startY);\n\n                        if (w.globals.zoomEnabled || w.globals.selectionEnabled) {\n                            me.selectionDrawn({\n                                context: me,\n                                zoomtype: zoomtype\n                            });\n                        }\n\n                        if (w.globals.panEnabled && w.config.xaxis.convertedCatToNumeric) {\n                            me.delayedPanScrolled();\n                        }\n                    }\n\n                    if (w.globals.zoomEnabled) {\n                        me.hideSelectionRect(this.selectionRect);\n                    }\n\n                    me.dragged = false;\n                    me.w.globals.mousedown = false;\n                }\n\n                this.makeSelectionRectDraggable();\n            }\n        }, {\n            key: \"makeSelectionRectDraggable\",\n            value: function makeSelectionRectDraggable() {\n                var w = this.w;\n                if (!this.selectionRect) return;\n                var rectDim = this.selectionRect.node.getBoundingClientRect();\n\n                if (rectDim.width > 0 && rectDim.height > 0) {\n                    this.slDraggableRect.selectize({\n                        points: 'l, r',\n                        pointSize: 8,\n                        pointType: 'rect'\n                    }).resize({\n                        constraint: {\n                            minX: 0,\n                            minY: 0,\n                            maxX: w.globals.gridWidth,\n                            maxY: w.globals.gridHeight\n                        }\n                    }).on('resizing', this.selectionDragging.bind(this, 'resizing'));\n                }\n            }\n        }, {\n            key: \"preselectedSelection\",\n            value: function preselectedSelection() {\n                var w = this.w;\n                var xyRatios = this.xyRatios;\n\n                if (!w.globals.zoomEnabled) {\n                    if (typeof w.globals.selection !== 'undefined' && w.globals.selection !== null) {\n                        this.drawSelectionRect(w.globals.selection);\n                    } else {\n                        if (w.config.chart.selection.xaxis.min !== undefined && w.config.chart.selection.xaxis.max !== undefined) {\n                            var x = (w.config.chart.selection.xaxis.min - w.globals.minX) / xyRatios.xRatio;\n                            var width = w.globals.gridWidth - (w.globals.maxX - w.config.chart.selection.xaxis.max) / xyRatios.xRatio - x;\n                            var selectionRect = {\n                                x: x,\n                                y: 0,\n                                width: width,\n                                height: w.globals.gridHeight,\n                                translateX: 0,\n                                translateY: 0,\n                                selectionEnabled: true\n                            };\n                            this.drawSelectionRect(selectionRect);\n                            this.makeSelectionRectDraggable();\n\n                            if (typeof w.config.chart.events.selection === 'function') {\n                                w.config.chart.events.selection(this.ctx, {\n                                    xaxis: {\n                                        min: w.config.chart.selection.xaxis.min,\n                                        max: w.config.chart.selection.xaxis.max\n                                    },\n                                    yaxis: {}\n                                });\n                            }\n                        }\n                    }\n                }\n            }\n        }, {\n            key: \"drawSelectionRect\",\n            value: function drawSelectionRect(_ref2) {\n                var x = _ref2.x,\n                    y = _ref2.y,\n                    width = _ref2.width,\n                    height = _ref2.height,\n                    _ref2$translateX = _ref2.translateX,\n                    translateX = _ref2$translateX === void 0 ? 0 : _ref2$translateX,\n                    _ref2$translateY = _ref2.translateY,\n                    translateY = _ref2$translateY === void 0 ? 0 : _ref2$translateY;\n                var w = this.w;\n                var zoomRect = this.zoomRect;\n                var selectionRect = this.selectionRect;\n\n                if (this.dragged || w.globals.selection !== null) {\n                    var scalingAttrs = {\n                        transform: 'translate(' + translateX + ', ' + translateY + ')'\n                    }; // change styles based on zoom or selection\n                    // zoom is Enabled and user has dragged, so draw blue rect\n\n                    if (w.globals.zoomEnabled && this.dragged) {\n                        if (width < 0) width = 1; // fixes apexcharts.js#1168\n\n                        zoomRect.attr({\n                            x: x,\n                            y: y,\n                            width: width,\n                            height: height,\n                            fill: w.config.chart.zoom.zoomedArea.fill.color,\n                            'fill-opacity': w.config.chart.zoom.zoomedArea.fill.opacity,\n                            stroke: w.config.chart.zoom.zoomedArea.stroke.color,\n                            'stroke-width': w.config.chart.zoom.zoomedArea.stroke.width,\n                            'stroke-opacity': w.config.chart.zoom.zoomedArea.stroke.opacity\n                        });\n                        Graphics.setAttrs(zoomRect.node, scalingAttrs);\n                    } // selection is enabled\n\n\n                    if (w.globals.selectionEnabled) {\n                        selectionRect.attr({\n                            x: x,\n                            y: y,\n                            width: width > 0 ? width : 0,\n                            height: height > 0 ? height : 0,\n                            fill: w.config.chart.selection.fill.color,\n                            'fill-opacity': w.config.chart.selection.fill.opacity,\n                            stroke: w.config.chart.selection.stroke.color,\n                            'stroke-width': w.config.chart.selection.stroke.width,\n                            'stroke-dasharray': w.config.chart.selection.stroke.dashArray,\n                            'stroke-opacity': w.config.chart.selection.stroke.opacity\n                        });\n                        Graphics.setAttrs(selectionRect.node, scalingAttrs);\n                    }\n                }\n            }\n        }, {\n            key: \"hideSelectionRect\",\n            value: function hideSelectionRect(rect) {\n                if (rect) {\n                    rect.attr({\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0\n                    });\n                }\n            }\n        }, {\n            key: \"selectionDrawing\",\n            value: function selectionDrawing(_ref3) {\n                var context = _ref3.context,\n                    zoomtype = _ref3.zoomtype;\n                var w = this.w;\n                var me = context;\n                var gridRectDim = this.gridRect.getBoundingClientRect();\n                var startX = me.startX - 1;\n                var startY = me.startY;\n                var inversedX = false;\n                var inversedY = false;\n                var selectionWidth = me.clientX - gridRectDim.left - startX;\n                var selectionHeight = me.clientY - gridRectDim.top - startY;\n                var selectionRect = {};\n\n                if (Math.abs(selectionWidth + startX) > w.globals.gridWidth) {\n                    // user dragged the mouse outside drawing area to the right\n                    selectionWidth = w.globals.gridWidth - startX;\n                } else if (me.clientX - gridRectDim.left < 0) {\n                    // user dragged the mouse outside drawing area to the left\n                    selectionWidth = startX;\n                } // inverse selection X\n\n\n                if (startX > me.clientX - gridRectDim.left) {\n                    inversedX = true;\n                    selectionWidth = Math.abs(selectionWidth);\n                } // inverse selection Y\n\n\n                if (startY > me.clientY - gridRectDim.top) {\n                    inversedY = true;\n                    selectionHeight = Math.abs(selectionHeight);\n                }\n\n                if (zoomtype === 'x') {\n                    selectionRect = {\n                        x: inversedX ? startX - selectionWidth : startX,\n                        y: 0,\n                        width: selectionWidth,\n                        height: w.globals.gridHeight\n                    };\n                } else if (zoomtype === 'y') {\n                    selectionRect = {\n                        x: 0,\n                        y: inversedY ? startY - selectionHeight : startY,\n                        width: w.globals.gridWidth,\n                        height: selectionHeight\n                    };\n                } else {\n                    selectionRect = {\n                        x: inversedX ? startX - selectionWidth : startX,\n                        y: inversedY ? startY - selectionHeight : startY,\n                        width: selectionWidth,\n                        height: selectionHeight\n                    };\n                }\n\n                me.drawSelectionRect(selectionRect);\n                me.selectionDragging('resizing');\n                return selectionRect;\n            }\n        }, {\n            key: \"selectionDragging\",\n            value: function selectionDragging(type, e) {\n                var _this3 = this;\n\n                var w = this.w;\n                var xyRatios = this.xyRatios;\n                var selRect = this.selectionRect;\n                var timerInterval = 0;\n\n                if (type === 'resizing') {\n                    timerInterval = 30;\n                } // update selection when selection rect is dragged\n\n\n                var getSelAttr = function getSelAttr(attr) {\n                    return parseFloat(selRect.node.getAttribute(attr));\n                };\n\n                var draggedProps = {\n                    x: getSelAttr('x'),\n                    y: getSelAttr('y'),\n                    width: getSelAttr('width'),\n                    height: getSelAttr('height')\n                };\n                w.globals.selection = draggedProps; // update selection ends\n\n                if (typeof w.config.chart.events.selection === 'function' && w.globals.selectionEnabled) {\n                    // a small debouncer is required when resizing to avoid freezing the chart\n                    clearTimeout(this.w.globals.selectionResizeTimer);\n                    this.w.globals.selectionResizeTimer = window.setTimeout(function() {\n                        var gridRectDim = _this3.gridRect.getBoundingClientRect();\n\n                        var selectionRect = selRect.node.getBoundingClientRect();\n                        var minX = w.globals.xAxisScale.niceMin + (selectionRect.left - gridRectDim.left) * xyRatios.xRatio;\n                        var maxX = w.globals.xAxisScale.niceMin + (selectionRect.right - gridRectDim.left) * xyRatios.xRatio;\n                        var minY = w.globals.yAxisScale[0].niceMin + (gridRectDim.bottom - selectionRect.bottom) * xyRatios.yRatio[0];\n                        var maxY = w.globals.yAxisScale[0].niceMax - (selectionRect.top - gridRectDim.top) * xyRatios.yRatio[0];\n                        var xyAxis = {\n                            xaxis: {\n                                min: minX,\n                                max: maxX\n                            },\n                            yaxis: {\n                                min: minY,\n                                max: maxY\n                            }\n                        };\n                        w.config.chart.events.selection(_this3.ctx, xyAxis);\n\n                        if (w.config.chart.brush.enabled && w.config.chart.events.brushScrolled !== undefined) {\n                            w.config.chart.events.brushScrolled(_this3.ctx, xyAxis);\n                        }\n                    }, timerInterval);\n                }\n            }\n        }, {\n            key: \"selectionDrawn\",\n            value: function selectionDrawn(_ref4) {\n                var context = _ref4.context,\n                    zoomtype = _ref4.zoomtype;\n                var w = this.w;\n                var me = context;\n                var xyRatios = this.xyRatios;\n                var toolbar = this.ctx.toolbar;\n\n                if (me.startX > me.endX) {\n                    var tempX = me.startX;\n                    me.startX = me.endX;\n                    me.endX = tempX;\n                }\n\n                if (me.startY > me.endY) {\n                    var tempY = me.startY;\n                    me.startY = me.endY;\n                    me.endY = tempY;\n                }\n\n                var xLowestValue = undefined;\n                var xHighestValue = undefined;\n\n                if (!w.globals.isTimelineBar) {\n                    xLowestValue = w.globals.xAxisScale.niceMin + me.startX * xyRatios.xRatio;\n                    xHighestValue = w.globals.xAxisScale.niceMin + me.endX * xyRatios.xRatio;\n                } else {\n                    xLowestValue = w.globals.yAxisScale[0].niceMin + me.startX * xyRatios.invertedYRatio;\n                    xHighestValue = w.globals.yAxisScale[0].niceMin + me.endX * xyRatios.invertedYRatio;\n                } // TODO: we will consider the 1st y axis values here for getting highest and lowest y\n\n\n                var yHighestValue = [];\n                var yLowestValue = [];\n                w.config.yaxis.forEach(function(yaxe, index) {\n                    yHighestValue.push(w.globals.yAxisScale[index].niceMax - xyRatios.yRatio[index] * me.startY);\n                    yLowestValue.push(w.globals.yAxisScale[index].niceMax - xyRatios.yRatio[index] * me.endY);\n                });\n\n                if (me.dragged && (me.dragX > 10 || me.dragY > 10) && xLowestValue !== xHighestValue) {\n                    if (w.globals.zoomEnabled) {\n                        var yaxis = Utils.clone(w.globals.initialConfig.yaxis);\n                        var xaxis = Utils.clone(w.globals.initialConfig.xaxis);\n                        w.globals.zoomed = true;\n\n                        if (w.config.xaxis.convertedCatToNumeric) {\n                            xLowestValue = Math.floor(xLowestValue);\n                            xHighestValue = Math.floor(xHighestValue);\n\n                            if (xLowestValue < 1) {\n                                xLowestValue = 1;\n                                xHighestValue = w.globals.dataPoints;\n                            }\n\n                            if (xHighestValue - xLowestValue < 2) {\n                                xHighestValue = xLowestValue + 1;\n                            }\n                        }\n\n                        if (zoomtype === 'xy' || zoomtype === 'x') {\n                            xaxis = {\n                                min: xLowestValue,\n                                max: xHighestValue\n                            };\n                        }\n\n                        if (zoomtype === 'xy' || zoomtype === 'y') {\n                            yaxis.forEach(function(yaxe, index) {\n                                yaxis[index].min = yLowestValue[index];\n                                yaxis[index].max = yHighestValue[index];\n                            });\n                        }\n\n                        if (w.config.chart.zoom.autoScaleYaxis) {\n                            var scale = new Range(me.ctx);\n                            yaxis = scale.autoScaleY(me.ctx, yaxis, {\n                                xaxis: xaxis\n                            });\n                        }\n\n                        if (toolbar) {\n                            var beforeZoomRange = toolbar.getBeforeZoomRange(xaxis, yaxis);\n\n                            if (beforeZoomRange) {\n                                xaxis = beforeZoomRange.xaxis ? beforeZoomRange.xaxis : xaxis;\n                                yaxis = beforeZoomRange.yaxis ? beforeZoomRange.yaxis : yaxis;\n                            }\n                        }\n\n                        var options = {\n                            xaxis: xaxis\n                        };\n\n                        if (!w.config.chart.group) {\n                            // if chart in a group, prevent yaxis update here\n                            // fix issue #650\n                            options.yaxis = yaxis;\n                        }\n\n                        me.ctx.updateHelpers._updateOptions(options, false, me.w.config.chart.animations.dynamicAnimation.enabled);\n\n                        if (typeof w.config.chart.events.zoomed === 'function') {\n                            toolbar.zoomCallback(xaxis, yaxis);\n                        }\n                    } else if (w.globals.selectionEnabled) {\n                        var _yaxis = null;\n                        var _xaxis = null;\n                        _xaxis = {\n                            min: xLowestValue,\n                            max: xHighestValue\n                        };\n\n                        if (zoomtype === 'xy' || zoomtype === 'y') {\n                            _yaxis = Utils.clone(w.config.yaxis);\n\n                            _yaxis.forEach(function(yaxe, index) {\n                                _yaxis[index].min = yLowestValue[index];\n                                _yaxis[index].max = yHighestValue[index];\n                            });\n                        }\n\n                        w.globals.selection = me.selection;\n\n                        if (typeof w.config.chart.events.selection === 'function') {\n                            w.config.chart.events.selection(me.ctx, {\n                                xaxis: _xaxis,\n                                yaxis: _yaxis\n                            });\n                        }\n                    }\n                }\n            }\n        }, {\n            key: \"panDragging\",\n            value: function panDragging(_ref5) {\n                var context = _ref5.context;\n                var w = this.w;\n                var me = context; // check to make sure there is data to compare against\n\n                if (typeof w.globals.lastClientPosition.x !== 'undefined') {\n                    // get the change from last position to this position\n                    var deltaX = w.globals.lastClientPosition.x - me.clientX;\n                    var deltaY = w.globals.lastClientPosition.y - me.clientY; // check which direction had the highest amplitude and then figure out direction by checking if the value is greater or less than zero\n\n                    if (Math.abs(deltaX) > Math.abs(deltaY) && deltaX > 0) {\n                        this.moveDirection = 'left';\n                    } else if (Math.abs(deltaX) > Math.abs(deltaY) && deltaX < 0) {\n                        this.moveDirection = 'right';\n                    } else if (Math.abs(deltaY) > Math.abs(deltaX) && deltaY > 0) {\n                        this.moveDirection = 'up';\n                    } else if (Math.abs(deltaY) > Math.abs(deltaX) && deltaY < 0) {\n                        this.moveDirection = 'down';\n                    }\n                } // set the new last position to the current for next time (to get the position of drag)\n\n\n                w.globals.lastClientPosition = {\n                    x: me.clientX,\n                    y: me.clientY\n                };\n                var xLowestValue = w.globals.isTimelineBar ? w.globals.minY : w.globals.minX;\n                var xHighestValue = w.globals.isTimelineBar ? w.globals.maxY : w.globals.maxX; // on a category, we don't pan continuosly as it causes bugs\n\n                if (!w.config.xaxis.convertedCatToNumeric) {\n                    me.panScrolled(xLowestValue, xHighestValue);\n                }\n            }\n        }, {\n            key: \"delayedPanScrolled\",\n            value: function delayedPanScrolled() {\n                var w = this.w;\n                var newMinX = w.globals.minX;\n                var newMaxX = w.globals.maxX;\n                var centerX = (w.globals.maxX - w.globals.minX) / 2;\n\n                if (this.moveDirection === 'left') {\n                    newMinX = w.globals.minX + centerX;\n                    newMaxX = w.globals.maxX + centerX;\n                } else if (this.moveDirection === 'right') {\n                    newMinX = w.globals.minX - centerX;\n                    newMaxX = w.globals.maxX - centerX;\n                }\n\n                newMinX = Math.floor(newMinX);\n                newMaxX = Math.floor(newMaxX);\n                this.updateScrolledChart({\n                    xaxis: {\n                        min: newMinX,\n                        max: newMaxX\n                    }\n                }, newMinX, newMaxX);\n            }\n        }, {\n            key: \"panScrolled\",\n            value: function panScrolled(xLowestValue, xHighestValue) {\n                var w = this.w;\n                var xyRatios = this.xyRatios;\n                var yaxis = Utils.clone(w.globals.initialConfig.yaxis);\n                var xRatio = xyRatios.xRatio;\n                var minX = w.globals.minX;\n                var maxX = w.globals.maxX;\n\n                if (w.globals.isTimelineBar) {\n                    xRatio = xyRatios.invertedYRatio;\n                    minX = w.globals.minY;\n                    maxX = w.globals.maxY;\n                }\n\n                if (this.moveDirection === 'left') {\n                    xLowestValue = minX + w.globals.gridWidth / 15 * xRatio;\n                    xHighestValue = maxX + w.globals.gridWidth / 15 * xRatio;\n                } else if (this.moveDirection === 'right') {\n                    xLowestValue = minX - w.globals.gridWidth / 15 * xRatio;\n                    xHighestValue = maxX - w.globals.gridWidth / 15 * xRatio;\n                }\n\n                if (!w.globals.isTimelineBar) {\n                    if (xLowestValue < w.globals.initialMinX || xHighestValue > w.globals.initialMaxX) {\n                        xLowestValue = minX;\n                        xHighestValue = maxX;\n                    }\n                }\n\n                var xaxis = {\n                    min: xLowestValue,\n                    max: xHighestValue\n                };\n\n                if (w.config.chart.zoom.autoScaleYaxis) {\n                    var scale = new Range(this.ctx);\n                    yaxis = scale.autoScaleY(this.ctx, yaxis, {\n                        xaxis: xaxis\n                    });\n                }\n\n                var options = {\n                    xaxis: {\n                        min: xLowestValue,\n                        max: xHighestValue\n                    }\n                };\n\n                if (!w.config.chart.group) {\n                    // if chart in a group, prevent yaxis update here\n                    // fix issue #650\n                    options.yaxis = yaxis;\n                }\n\n                this.updateScrolledChart(options, xLowestValue, xHighestValue);\n            }\n        }, {\n            key: \"updateScrolledChart\",\n            value: function updateScrolledChart(options, xLowestValue, xHighestValue) {\n                var w = this.w;\n\n                this.ctx.updateHelpers._updateOptions(options, false, false);\n\n                if (typeof w.config.chart.events.scrolled === 'function') {\n                    w.config.chart.events.scrolled(this.ctx, {\n                        xaxis: {\n                            min: xLowestValue,\n                            max: xHighestValue\n                        }\n                    });\n                }\n            }\n        }]);\n\n        return ZoomPanSelection;\n    }(Toolbar);\n\n    /**\n     * ApexCharts Tooltip.Utils Class to support Tooltip functionality.\n     *\n     * @module Tooltip.Utils\n     **/\n\n    var Utils$1 = /*#__PURE__*/ function() {\n        function Utils$1(tooltipContext) {\n            _classCallCheck(this, Utils$1);\n\n            this.w = tooltipContext.w;\n            this.ttCtx = tooltipContext;\n            this.ctx = tooltipContext.ctx;\n        }\n        /**\n         ** When hovering over series, you need to capture which series is being hovered on.\n         ** This function will return both capturedseries index as well as inner index of that series\n         * @memberof Utils\n         * @param {object}\n         * - hoverArea = the rect on which user hovers\n         * - elGrid = dimensions of the hover rect (it can be different than hoverarea)\n         */\n\n\n        _createClass(Utils$1, [{\n            key: \"getNearestValues\",\n            value: function getNearestValues(_ref) {\n                var hoverArea = _ref.hoverArea,\n                    elGrid = _ref.elGrid,\n                    clientX = _ref.clientX,\n                    clientY = _ref.clientY;\n                var w = this.w;\n                var hoverWidth = w.globals.gridWidth;\n                var hoverHeight = w.globals.gridHeight;\n                var xDivisor = hoverWidth / (w.globals.dataPoints - 1);\n                var yDivisor = hoverHeight / w.globals.dataPoints;\n                var seriesBound = elGrid.getBoundingClientRect();\n                var hasBars = this.hasBars();\n\n                if ((w.globals.comboCharts || hasBars) && !w.config.xaxis.convertedCatToNumeric) {\n                    xDivisor = hoverWidth / w.globals.dataPoints;\n                }\n\n                var hoverX = clientX - seriesBound.left - w.globals.barPadForNumericAxis;\n                var hoverY = clientY - seriesBound.top;\n                var notInRect = hoverX < 0 || hoverY < 0 || hoverX > w.globals.gridWidth || hoverY > w.globals.gridHeight;\n\n                if (notInRect) {\n                    hoverArea.classList.remove('hovering-zoom');\n                    hoverArea.classList.remove('hovering-pan');\n                } else {\n                    if (w.globals.zoomEnabled) {\n                        hoverArea.classList.remove('hovering-pan');\n                        hoverArea.classList.add('hovering-zoom');\n                    } else if (w.globals.panEnabled) {\n                        hoverArea.classList.remove('hovering-zoom');\n                        hoverArea.classList.add('hovering-pan');\n                    }\n                }\n\n                var j = Math.round(hoverX / xDivisor);\n                var jHorz = Math.floor(hoverY / yDivisor);\n\n                if (hasBars && !w.config.xaxis.convertedCatToNumeric) {\n                    j = Math.ceil(hoverX / xDivisor);\n                    j = j - 1;\n                }\n\n                var capturedSeries = null;\n                var closest = null;\n                var seriesXValArr = [];\n                var seriesYValArr = [];\n\n                for (var s = 0; s < w.globals.seriesXvalues.length; s++) {\n                    seriesXValArr.push([w.globals.seriesXvalues[s][0] - 0.000001].concat(w.globals.seriesXvalues[s]));\n                }\n\n                seriesXValArr = seriesXValArr.map(function(seriesXVal) {\n                    return seriesXVal.filter(function(s) {\n                        return s;\n                    });\n                });\n                seriesYValArr = w.globals.seriesYvalues.map(function(seriesYVal) {\n                    return seriesYVal.filter(function(s) {\n                        return Utils.isNumber(s);\n                    });\n                }); // if X axis type is not category and tooltip is not shared, then we need to find the cursor position and get the nearest value\n\n                if (w.globals.isXNumeric) {\n                    closest = this.closestInMultiArray(hoverX, hoverY, seriesXValArr, seriesYValArr);\n                    capturedSeries = closest.index;\n                    j = closest.j;\n\n                    if (capturedSeries !== null) {\n                        // initial push, it should be a little smaller than the 1st val\n                        seriesXValArr = w.globals.seriesXvalues[capturedSeries];\n                        closest = this.closestInArray(hoverX, seriesXValArr);\n                        j = closest.index;\n                    }\n                }\n\n                w.globals.capturedSeriesIndex = capturedSeries === null ? -1 : capturedSeries;\n                if (!j || j < 1) j = 0;\n                w.globals.capturedDataPointIndex = j;\n                return {\n                    capturedSeries: capturedSeries,\n                    j: w.globals.isBarHorizontal ? jHorz : j,\n                    hoverX: hoverX,\n                    hoverY: hoverY\n                };\n            }\n        }, {\n            key: \"closestInMultiArray\",\n            value: function closestInMultiArray(hoverX, hoverY, Xarrays, Yarrays) {\n                var w = this.w;\n                var activeIndex = 0;\n                var currIndex = null;\n                var j = -1;\n\n                if (w.globals.series.length > 1) {\n                    activeIndex = this.getFirstActiveXArray(Xarrays);\n                } else {\n                    currIndex = 0;\n                }\n\n                var currY = Yarrays[activeIndex][0];\n                var currX = Xarrays[activeIndex][0];\n                var diffX = Math.abs(hoverX - currX);\n                var diffY = Math.abs(hoverY - currY);\n                var diff = diffY + diffX;\n                Yarrays.map(function(arrY, arrIndex) {\n                    arrY.map(function(y, innerKey) {\n                        var newdiffY = Math.abs(hoverY - Yarrays[arrIndex][innerKey]);\n                        var newdiffX = Math.abs(hoverX - Xarrays[arrIndex][innerKey]);\n                        var newdiff = newdiffX + newdiffY;\n\n                        if (newdiff < diff) {\n                            diff = newdiff;\n                            diffX = newdiffX;\n                            diffY = newdiffY;\n                            currIndex = arrIndex;\n                            j = innerKey;\n                        }\n                    });\n                });\n                return {\n                    index: currIndex,\n                    j: j\n                };\n            }\n        }, {\n            key: \"getFirstActiveXArray\",\n            value: function getFirstActiveXArray(Xarrays) {\n                var activeIndex = 0;\n                var firstActiveSeriesIndex = Xarrays.map(function(xarr, index) {\n                    return xarr.length > 0 ? index : -1;\n                });\n\n                for (var a = 0; a < firstActiveSeriesIndex.length; a++) {\n                    if (firstActiveSeriesIndex[a] !== -1) {\n                        activeIndex = firstActiveSeriesIndex[a];\n                        break;\n                    }\n                }\n\n                return activeIndex;\n            }\n        }, {\n            key: \"closestInArray\",\n            value: function closestInArray(val, arr) {\n                    var curr = arr[0];\n                    var currIndex = null;\n                    var diff = Math.abs(val - curr);\n\n                    for (var i = 0; i < arr.length; i++) {\n                        var newdiff = Math.abs(val - arr[i]);\n\n                        if (newdiff < diff) {\n                            diff = newdiff;\n                            currIndex = i;\n                        }\n                    }\n\n                    return {\n                        index: currIndex\n                    };\n                }\n                /**\n                 * When there are multiple series, it is possible to have different x values for each series.\n                 * But it may be possible in those multiple series, that there is same x value for 2 or more\n                 * series.\n                 * @memberof Utils\n                 * @param {int}\n                 * - j = is the inner index of series -> (series[i][j])\n                 * @return {bool}\n                 */\n\n        }, {\n            key: \"isXoverlap\",\n            value: function isXoverlap(j) {\n                var w = this.w;\n                var xSameForAllSeriesJArr = [];\n                var seriesX = w.globals.seriesX.filter(function(s) {\n                    return typeof s[0] !== 'undefined';\n                });\n\n                if (seriesX.length > 0) {\n                    for (var i = 0; i < seriesX.length - 1; i++) {\n                        if (typeof seriesX[i][j] !== 'undefined' && typeof seriesX[i + 1][j] !== 'undefined') {\n                            if (seriesX[i][j] !== seriesX[i + 1][j]) {\n                                xSameForAllSeriesJArr.push('unEqual');\n                            }\n                        }\n                    }\n                }\n\n                if (xSameForAllSeriesJArr.length === 0) {\n                    return true;\n                }\n\n                return false;\n            }\n        }, {\n            key: \"isInitialSeriesSameLen\",\n            value: function isInitialSeriesSameLen() {\n                var sameLen = true;\n                var initialSeries = this.w.globals.initialSeries;\n\n                for (var i = 0; i < initialSeries.length - 1; i++) {\n                    if (initialSeries[i].data.length !== initialSeries[i + 1].data.length) {\n                        sameLen = false;\n                        break;\n                    }\n                }\n\n                return sameLen;\n            }\n        }, {\n            key: \"getBarsHeight\",\n            value: function getBarsHeight(allbars) {\n                var bars = _toConsumableArray(allbars);\n\n                var totalHeight = bars.reduce(function(acc, bar) {\n                    return acc + bar.getBBox().height;\n                }, 0);\n                return totalHeight;\n            }\n        }, {\n            key: \"getElMarkers\",\n            value: function getElMarkers() {\n                return this.w.globals.dom.baseEl.querySelectorAll(' .apexcharts-series-markers');\n            }\n        }, {\n            key: \"getAllMarkers\",\n            value: function getAllMarkers() {\n                // first get all marker parents. This parent class contains series-index\n                // which helps to sort the markers as they are dynamic\n                var markersWraps = this.w.globals.dom.baseEl.querySelectorAll('.apexcharts-series-markers-wrap');\n                markersWraps = _toConsumableArray(markersWraps);\n                markersWraps.sort(function(a, b) {\n                    return Number(b.getAttribute('data:realIndex')) < Number(a.getAttribute('data:realIndex')) ? 0 : -1;\n                });\n                var markers = [];\n                markersWraps.forEach(function(m) {\n                    markers.push(m.querySelector('.apexcharts-marker'));\n                });\n                return markers;\n            }\n        }, {\n            key: \"hasMarkers\",\n            value: function hasMarkers() {\n                var markers = this.getElMarkers();\n                return markers.length > 0;\n            }\n        }, {\n            key: \"getElBars\",\n            value: function getElBars() {\n                return this.w.globals.dom.baseEl.querySelectorAll('.apexcharts-bar-series,  .apexcharts-candlestick-series, .apexcharts-boxPlot-series, .apexcharts-rangebar-series');\n            }\n        }, {\n            key: \"hasBars\",\n            value: function hasBars() {\n                var bars = this.getElBars();\n                return bars.length > 0;\n            }\n        }, {\n            key: \"getHoverMarkerSize\",\n            value: function getHoverMarkerSize(index) {\n                var w = this.w;\n                var hoverSize = w.config.markers.hover.size;\n\n                if (hoverSize === undefined) {\n                    hoverSize = w.globals.markers.size[index] + w.config.markers.hover.sizeOffset;\n                }\n\n                return hoverSize;\n            }\n        }, {\n            key: \"toggleAllTooltipSeriesGroups\",\n            value: function toggleAllTooltipSeriesGroups(state) {\n                var w = this.w;\n                var ttCtx = this.ttCtx;\n\n                if (ttCtx.allTooltipSeriesGroups.length === 0) {\n                    ttCtx.allTooltipSeriesGroups = w.globals.dom.baseEl.querySelectorAll('.apexcharts-tooltip-series-group');\n                }\n\n                var allTooltipSeriesGroups = ttCtx.allTooltipSeriesGroups;\n\n                for (var i = 0; i < allTooltipSeriesGroups.length; i++) {\n                    if (state === 'enable') {\n                        allTooltipSeriesGroups[i].classList.add('apexcharts-active');\n                        allTooltipSeriesGroups[i].style.display = w.config.tooltip.items.display;\n                    } else {\n                        allTooltipSeriesGroups[i].classList.remove('apexcharts-active');\n                        allTooltipSeriesGroups[i].style.display = 'none';\n                    }\n                }\n            }\n        }]);\n\n        return Utils$1;\n    }();\n\n    /**\n     * ApexCharts Tooltip.Labels Class to draw texts on the tooltip.\n     *\n     * @module Tooltip.Labels\n     **/\n\n    var Labels = /*#__PURE__*/ function() {\n        function Labels(tooltipContext) {\n            _classCallCheck(this, Labels);\n\n            this.w = tooltipContext.w;\n            this.ctx = tooltipContext.ctx;\n            this.ttCtx = tooltipContext;\n            this.tooltipUtil = new Utils$1(tooltipContext);\n        }\n\n        _createClass(Labels, [{\n            key: \"drawSeriesTexts\",\n            value: function drawSeriesTexts(_ref) {\n                var _ref$shared = _ref.shared,\n                    shared = _ref$shared === void 0 ? true : _ref$shared,\n                    ttItems = _ref.ttItems,\n                    _ref$i = _ref.i,\n                    i = _ref$i === void 0 ? 0 : _ref$i,\n                    _ref$j = _ref.j,\n                    j = _ref$j === void 0 ? null : _ref$j,\n                    y1 = _ref.y1,\n                    y2 = _ref.y2,\n                    e = _ref.e;\n                var w = this.w;\n\n                if (w.config.tooltip.custom !== undefined) {\n                    this.handleCustomTooltip({\n                        i: i,\n                        j: j,\n                        y1: y1,\n                        y2: y2,\n                        w: w\n                    });\n                } else {\n                    this.toggleActiveInactiveSeries(shared);\n                }\n\n                var values = this.getValuesToPrint({\n                    i: i,\n                    j: j\n                });\n                this.printLabels({\n                    i: i,\n                    j: j,\n                    values: values,\n                    ttItems: ttItems,\n                    shared: shared,\n                    e: e\n                }); // Re-calculate tooltip dimensions now that we have drawn the text\n\n                var tooltipEl = this.ttCtx.getElTooltip();\n                this.ttCtx.tooltipRect.ttWidth = tooltipEl.getBoundingClientRect().width;\n                this.ttCtx.tooltipRect.ttHeight = tooltipEl.getBoundingClientRect().height;\n            }\n        }, {\n            key: \"printLabels\",\n            value: function printLabels(_ref2) {\n                var _this = this;\n\n                var i = _ref2.i,\n                    j = _ref2.j,\n                    values = _ref2.values,\n                    ttItems = _ref2.ttItems,\n                    shared = _ref2.shared,\n                    e = _ref2.e;\n                var w = this.w;\n                var val;\n                var goalVals = [];\n\n                var hasGoalValues = function hasGoalValues(gi) {\n                    return w.globals.seriesGoals[gi] && w.globals.seriesGoals[gi][j] && Array.isArray(w.globals.seriesGoals[gi][j]);\n                };\n\n                var xVal = values.xVal,\n                    zVal = values.zVal,\n                    xAxisTTVal = values.xAxisTTVal;\n                var seriesName = '';\n                var pColor = w.globals.colors[i];\n\n                if (j !== null && w.config.plotOptions.bar.distributed) {\n                    pColor = w.globals.colors[j];\n                }\n\n                var _loop = function _loop(t, inverset) {\n                    var f = _this.getFormatters(i);\n\n                    seriesName = _this.getSeriesName({\n                        fn: f.yLbTitleFormatter,\n                        index: i,\n                        seriesIndex: i,\n                        j: j\n                    });\n\n                    if (w.config.chart.type === 'treemap') {\n                        seriesName = f.yLbTitleFormatter(String(w.config.series[i].data[j].x), {\n                            series: w.globals.series,\n                            seriesIndex: i,\n                            dataPointIndex: j,\n                            w: w\n                        });\n                    }\n\n                    var tIndex = w.config.tooltip.inverseOrder ? inverset : t;\n\n                    if (w.globals.axisCharts) {\n                        var getValBySeriesIndex = function getValBySeriesIndex(index) {\n                            return f.yLbFormatter(w.globals.series[index][j], {\n                                series: w.globals.series,\n                                seriesIndex: index,\n                                dataPointIndex: j,\n                                w: w\n                            });\n                        };\n\n                        if (shared) {\n                            f = _this.getFormatters(tIndex);\n                            seriesName = _this.getSeriesName({\n                                fn: f.yLbTitleFormatter,\n                                index: tIndex,\n                                seriesIndex: i,\n                                j: j\n                            });\n                            pColor = w.globals.colors[tIndex];\n                            val = getValBySeriesIndex(tIndex);\n\n                            if (hasGoalValues(tIndex)) {\n                                goalVals = w.globals.seriesGoals[tIndex][j].map(function(goal) {\n                                    return {\n                                        attrs: goal,\n                                        val: f.yLbFormatter(goal.value, {\n                                            seriesIndex: tIndex,\n                                            dataPointIndex: j,\n                                            w: w\n                                        })\n                                    };\n                                });\n                            }\n                        } else {\n                            if (e && e.target && e.target.getAttribute('fill')) {\n                                pColor = e.target.getAttribute('fill');\n                            }\n\n                            val = getValBySeriesIndex(i);\n\n                            if (hasGoalValues(i) && Array.isArray(w.globals.seriesGoals[i][j])) {\n                                goalVals = w.globals.seriesGoals[i][j].map(function(goal) {\n                                    return {\n                                        attrs: goal,\n                                        val: f.yLbFormatter(goal.value, {\n                                            seriesIndex: i,\n                                            dataPointIndex: j,\n                                            w: w\n                                        })\n                                    };\n                                });\n                            }\n                        }\n                    } // for pie / donuts\n\n\n                    if (j === null) {\n                        val = f.yLbFormatter(w.globals.series[i], _objectSpread2(_objectSpread2({}, w), {}, {\n                            seriesIndex: i,\n                            dataPointIndex: i\n                        }));\n                    }\n\n                    _this.DOMHandling({\n                        i: i,\n                        t: tIndex,\n                        j: j,\n                        ttItems: ttItems,\n                        values: {\n                            val: val,\n                            goalVals: goalVals,\n                            xVal: xVal,\n                            xAxisTTVal: xAxisTTVal,\n                            zVal: zVal\n                        },\n                        seriesName: seriesName,\n                        shared: shared,\n                        pColor: pColor\n                    });\n                };\n\n                for (var t = 0, inverset = w.globals.series.length - 1; t < w.globals.series.length; t++, inverset--) {\n                    _loop(t, inverset);\n                }\n            }\n        }, {\n            key: \"getFormatters\",\n            value: function getFormatters(i) {\n                var w = this.w;\n                var yLbFormatter = w.globals.yLabelFormatters[i];\n                var yLbTitleFormatter;\n\n                if (w.globals.ttVal !== undefined) {\n                    if (Array.isArray(w.globals.ttVal)) {\n                        yLbFormatter = w.globals.ttVal[i] && w.globals.ttVal[i].formatter;\n                        yLbTitleFormatter = w.globals.ttVal[i] && w.globals.ttVal[i].title && w.globals.ttVal[i].title.formatter;\n                    } else {\n                        yLbFormatter = w.globals.ttVal.formatter;\n\n                        if (typeof w.globals.ttVal.title.formatter === 'function') {\n                            yLbTitleFormatter = w.globals.ttVal.title.formatter;\n                        }\n                    }\n                } else {\n                    yLbTitleFormatter = w.config.tooltip.y.title.formatter;\n                }\n\n                if (typeof yLbFormatter !== 'function') {\n                    if (w.globals.yLabelFormatters[0]) {\n                        yLbFormatter = w.globals.yLabelFormatters[0];\n                    } else {\n                        yLbFormatter = function yLbFormatter(label) {\n                            return label;\n                        };\n                    }\n                }\n\n                if (typeof yLbTitleFormatter !== 'function') {\n                    yLbTitleFormatter = function yLbTitleFormatter(label) {\n                        return label;\n                    };\n                }\n\n                return {\n                    yLbFormatter: yLbFormatter,\n                    yLbTitleFormatter: yLbTitleFormatter\n                };\n            }\n        }, {\n            key: \"getSeriesName\",\n            value: function getSeriesName(_ref3) {\n                var fn = _ref3.fn,\n                    index = _ref3.index,\n                    seriesIndex = _ref3.seriesIndex,\n                    j = _ref3.j;\n                var w = this.w;\n                return fn(String(w.globals.seriesNames[index]), {\n                    series: w.globals.series,\n                    seriesIndex: seriesIndex,\n                    dataPointIndex: j,\n                    w: w\n                });\n            }\n        }, {\n            key: \"DOMHandling\",\n            value: function DOMHandling(_ref4) {\n                var i = _ref4.i,\n                    t = _ref4.t,\n                    j = _ref4.j,\n                    ttItems = _ref4.ttItems,\n                    values = _ref4.values,\n                    seriesName = _ref4.seriesName,\n                    shared = _ref4.shared,\n                    pColor = _ref4.pColor;\n                var w = this.w;\n                var ttCtx = this.ttCtx;\n                Object.keys(values).forEach(function(key) {\n                    if (typeof values[key] === 'string') values[key] = Utils.sanitizeDom(values[key]);\n                });\n                var val = values.val,\n                    goalVals = values.goalVals,\n                    xVal = values.xVal,\n                    xAxisTTVal = values.xAxisTTVal,\n                    zVal = values.zVal;\n                var ttItemsChildren = null;\n                ttItemsChildren = ttItems[t].children;\n\n                if (w.config.tooltip.fillSeriesColor) {\n                    //  elTooltip.style.backgroundColor = pColor\n                    ttItems[t].style.backgroundColor = pColor;\n                    ttItemsChildren[0].style.display = 'none';\n                }\n\n                if (ttCtx.showTooltipTitle) {\n                    if (ttCtx.tooltipTitle === null) {\n                        // get it once if null, and store it in class property\n                        ttCtx.tooltipTitle = w.globals.dom.baseEl.querySelector('.apexcharts-tooltip-title');\n                    }\n\n                    ttCtx.tooltipTitle.innerHTML = xVal;\n                } // if xaxis tooltip is constructed, we need to replace the innerHTML\n\n\n                if (ttCtx.blxaxisTooltip) {\n                    ttCtx.xaxisTooltipText.innerHTML = xAxisTTVal !== '' ? xAxisTTVal : xVal;\n                }\n\n                var ttYLabel = ttItems[t].querySelector('.apexcharts-tooltip-text-y-label');\n\n                if (ttYLabel) {\n                    ttYLabel.innerHTML = seriesName ? Utils.sanitizeDom(seriesName) : '';\n                }\n\n                var ttYVal = ttItems[t].querySelector('.apexcharts-tooltip-text-y-value');\n\n                if (ttYVal) {\n                    ttYVal.innerHTML = typeof val !== 'undefined' ? val : '';\n                }\n\n                if (ttItemsChildren[0] && ttItemsChildren[0].classList.contains('apexcharts-tooltip-marker')) {\n                    if (w.config.tooltip.marker.fillColors && Array.isArray(w.config.tooltip.marker.fillColors)) {\n                        pColor = w.config.tooltip.marker.fillColors[t];\n                    }\n\n                    ttItemsChildren[0].style.backgroundColor = pColor;\n                }\n\n                if (!w.config.tooltip.marker.show) {\n                    ttItemsChildren[0].style.display = 'none';\n                }\n\n                var ttGLabel = ttItems[t].querySelector('.apexcharts-tooltip-text-goals-label');\n                var ttGVal = ttItems[t].querySelector('.apexcharts-tooltip-text-goals-value');\n\n                if (goalVals.length && w.globals.seriesGoals[t]) {\n                    var createGoalsHtml = function createGoalsHtml() {\n                        var gLabels = '<div >';\n                        var gVals = '<div>';\n                        goalVals.forEach(function(goal, gi) {\n                            gLabels += \" <div style=\\\"display: flex\\\"><span class=\\\"apexcharts-tooltip-marker\\\" style=\\\"background-color: \".concat(goal.attrs.strokeColor, \"; height: 3px; border-radius: 0; top: 5px;\\\"></span> \").concat(goal.attrs.name, \"</div>\");\n                            gVals += \"<div>\".concat(goal.val, \"</div>\");\n                        });\n                        ttGLabel.innerHTML = gLabels + \"</div>\";\n                        ttGVal.innerHTML = gVals + \"</div>\";\n                    };\n\n                    if (shared) {\n                        if (w.globals.seriesGoals[t][j] && Array.isArray(w.globals.seriesGoals[t][j])) {\n                            createGoalsHtml();\n                        } else {\n                            ttGLabel.innerHTML = '';\n                            ttGVal.innerHTML = '';\n                        }\n                    } else {\n                        createGoalsHtml();\n                    }\n                } else {\n                    ttGLabel.innerHTML = '';\n                    ttGVal.innerHTML = '';\n                }\n\n                if (zVal !== null) {\n                    var ttZLabel = ttItems[t].querySelector('.apexcharts-tooltip-text-z-label');\n                    ttZLabel.innerHTML = w.config.tooltip.z.title;\n                    var ttZVal = ttItems[t].querySelector('.apexcharts-tooltip-text-z-value');\n                    ttZVal.innerHTML = typeof zVal !== 'undefined' ? zVal : '';\n                }\n\n                if (shared && ttItemsChildren[0]) {\n                    // hide when no Val or series collapsed\n                    if (typeof val === 'undefined' || val === null || w.globals.collapsedSeriesIndices.indexOf(t) > -1) {\n                        ttItemsChildren[0].parentNode.style.display = 'none';\n                    } else {\n                        ttItemsChildren[0].parentNode.style.display = w.config.tooltip.items.display;\n                    } // TODO: issue #1240 needs to be looked at again. commenting it because this also hides single series values with 0 in it (shared tooltip)\n                    // if (w.globals.stackedSeriesTotals[j] === 0) {\n                    //   // shared tooltip and all values are null, so we need to hide the x value too\n                    //   let allYZeroForJ = false\n                    //   for (let si = 1; si < w.globals.seriesYvalues.length; si++) {\n                    //     if (\n                    //       w.globals.seriesYvalues[si][j] ===\n                    //       w.globals.seriesYvalues[si - 1][j]\n                    //     ) {\n                    //       allYZeroForJ = true\n                    //     }\n                    //   }\n                    //   if (allYZeroForJ) {\n                    //     ttCtx.tooltipTitle.style.display = 'none'\n                    //   } else {\n                    //     ttCtx.tooltipTitle.style.display = w.config.tooltip.items.display\n                    //   }\n                    // } else {\n                    //   ttCtx.tooltipTitle.style.display = w.config.tooltip.items.display\n                    // }\n\n                }\n            }\n        }, {\n            key: \"toggleActiveInactiveSeries\",\n            value: function toggleActiveInactiveSeries(shared) {\n                var w = this.w;\n\n                if (shared) {\n                    // make all tooltips active\n                    this.tooltipUtil.toggleAllTooltipSeriesGroups('enable');\n                } else {\n                    // disable all tooltip text groups\n                    this.tooltipUtil.toggleAllTooltipSeriesGroups('disable'); // enable the first tooltip text group\n\n                    var firstTooltipSeriesGroup = w.globals.dom.baseEl.querySelector('.apexcharts-tooltip-series-group');\n\n                    if (firstTooltipSeriesGroup) {\n                        firstTooltipSeriesGroup.classList.add('apexcharts-active');\n                        firstTooltipSeriesGroup.style.display = w.config.tooltip.items.display;\n                    }\n                }\n            }\n        }, {\n            key: \"getValuesToPrint\",\n            value: function getValuesToPrint(_ref5) {\n                var i = _ref5.i,\n                    j = _ref5.j;\n                var w = this.w;\n                var filteredSeriesX = this.ctx.series.filteredSeriesX();\n                var xVal = '';\n                var xAxisTTVal = '';\n                var zVal = null;\n                var val = null;\n                var customFormatterOpts = {\n                    series: w.globals.series,\n                    seriesIndex: i,\n                    dataPointIndex: j,\n                    w: w\n                };\n                var zFormatter = w.globals.ttZFormatter;\n\n                if (j === null) {\n                    val = w.globals.series[i];\n                } else {\n                    if (w.globals.isXNumeric && w.config.chart.type !== 'treemap') {\n                        xVal = filteredSeriesX[i][j];\n\n                        if (filteredSeriesX[i].length === 0) {\n                            // a series (possibly the first one) might be collapsed, so get the next active index\n                            var firstActiveSeriesIndex = this.tooltipUtil.getFirstActiveXArray(filteredSeriesX);\n                            xVal = filteredSeriesX[firstActiveSeriesIndex][j];\n                        }\n                    } else {\n                        xVal = typeof w.globals.labels[j] !== 'undefined' ? w.globals.labels[j] : '';\n                    }\n                }\n\n                var bufferXVal = xVal;\n\n                if (w.globals.isXNumeric && w.config.xaxis.type === 'datetime') {\n                    var xFormat = new Formatters(this.ctx);\n                    xVal = xFormat.xLabelFormat(w.globals.ttKeyFormatter, bufferXVal, bufferXVal, {\n                        i: undefined,\n                        dateFormatter: new DateTime(this.ctx).formatDate,\n                        w: this.w\n                    });\n                } else {\n                    if (w.globals.isBarHorizontal) {\n                        xVal = w.globals.yLabelFormatters[0](bufferXVal, customFormatterOpts);\n                    } else {\n                        xVal = w.globals.xLabelFormatter(bufferXVal, customFormatterOpts);\n                    }\n                } // override default x-axis formatter with tooltip formatter\n\n\n                if (w.config.tooltip.x.formatter !== undefined) {\n                    xVal = w.globals.ttKeyFormatter(bufferXVal, customFormatterOpts);\n                }\n\n                if (w.globals.seriesZ.length > 0 && w.globals.seriesZ[i].length > 0) {\n                    zVal = zFormatter(w.globals.seriesZ[i][j], w);\n                }\n\n                if (typeof w.config.xaxis.tooltip.formatter === 'function') {\n                    xAxisTTVal = w.globals.xaxisTooltipFormatter(bufferXVal, customFormatterOpts);\n                } else {\n                    xAxisTTVal = xVal;\n                }\n\n                return {\n                    val: Array.isArray(val) ? val.join(' ') : val,\n                    xVal: Array.isArray(xVal) ? xVal.join(' ') : xVal,\n                    xAxisTTVal: Array.isArray(xAxisTTVal) ? xAxisTTVal.join(' ') : xAxisTTVal,\n                    zVal: zVal\n                };\n            }\n        }, {\n            key: \"handleCustomTooltip\",\n            value: function handleCustomTooltip(_ref6) {\n                var i = _ref6.i,\n                    j = _ref6.j,\n                    y1 = _ref6.y1,\n                    y2 = _ref6.y2,\n                    w = _ref6.w;\n                var tooltipEl = this.ttCtx.getElTooltip();\n                var fn = w.config.tooltip.custom;\n\n                if (Array.isArray(fn) && fn[i]) {\n                    fn = fn[i];\n                } // override everything with a custom html tooltip and replace it\n\n\n                tooltipEl.innerHTML = fn({\n                    ctx: this.ctx,\n                    series: w.globals.series,\n                    seriesIndex: i,\n                    dataPointIndex: j,\n                    y1: y1,\n                    y2: y2,\n                    w: w\n                });\n            }\n        }]);\n\n        return Labels;\n    }();\n\n    /**\n     * ApexCharts Tooltip.Position Class to move the tooltip based on x and y position.\n     *\n     * @module Tooltip.Position\n     **/\n\n    var Position = /*#__PURE__*/ function() {\n        function Position(tooltipContext) {\n            _classCallCheck(this, Position);\n\n            this.ttCtx = tooltipContext;\n            this.ctx = tooltipContext.ctx;\n            this.w = tooltipContext.w;\n        }\n        /**\n         * This will move the crosshair (the vertical/horz line that moves along with mouse)\n         * Along with this, this function also calls the xaxisMove function\n         * @memberof Position\n         * @param {int} - cx = point's x position, wherever point's x is, you need to move crosshair\n         */\n\n\n        _createClass(Position, [{\n            key: \"moveXCrosshairs\",\n            value: function moveXCrosshairs(cx) {\n                    var j = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n                    var ttCtx = this.ttCtx;\n                    var w = this.w;\n                    var xcrosshairs = ttCtx.getElXCrosshairs();\n                    var x = cx - ttCtx.xcrosshairsWidth / 2;\n                    var tickAmount = w.globals.labels.slice().length;\n\n                    if (j !== null) {\n                        x = w.globals.gridWidth / tickAmount * j;\n                    }\n\n                    if (xcrosshairs !== null) {\n                        xcrosshairs.setAttribute('x', x);\n                        xcrosshairs.setAttribute('x1', x);\n                        xcrosshairs.setAttribute('x2', x);\n                        xcrosshairs.setAttribute('y2', w.globals.gridHeight);\n                        xcrosshairs.classList.add('apexcharts-active');\n                    }\n\n                    if (x < 0) {\n                        x = 0;\n                    }\n\n                    if (x > w.globals.gridWidth) {\n                        x = w.globals.gridWidth;\n                    }\n\n                    if (ttCtx.blxaxisTooltip) {\n                        var tx = x;\n\n                        if (w.config.xaxis.crosshairs.width === 'tickWidth' || w.config.xaxis.crosshairs.width === 'barWidth') {\n                            tx = x + ttCtx.xcrosshairsWidth / 2;\n                        }\n\n                        this.moveXAxisTooltip(tx);\n                    }\n                }\n                /**\n                 * This will move the crosshair (the vertical/horz line that moves along with mouse)\n                 * Along with this, this function also calls the xaxisMove function\n                 * @memberof Position\n                 * @param {int} - cx = point's x position, wherever point's x is, you need to move crosshair\n                 */\n\n        }, {\n            key: \"moveYCrosshairs\",\n            value: function moveYCrosshairs(cy) {\n                    var ttCtx = this.ttCtx;\n\n                    if (ttCtx.ycrosshairs !== null) {\n                        Graphics.setAttrs(ttCtx.ycrosshairs, {\n                            y1: cy,\n                            y2: cy\n                        });\n                    }\n\n                    if (ttCtx.ycrosshairsHidden !== null) {\n                        Graphics.setAttrs(ttCtx.ycrosshairsHidden, {\n                            y1: cy,\n                            y2: cy\n                        });\n                    }\n                }\n                /**\n                 ** AxisTooltip is the small rectangle which appears on x axis with x value, when user moves\n                 * @memberof Position\n                 * @param {int} - cx = point's x position, wherever point's x is, you need to move\n                 */\n\n        }, {\n            key: \"moveXAxisTooltip\",\n            value: function moveXAxisTooltip(cx) {\n                var w = this.w;\n                var ttCtx = this.ttCtx;\n\n                if (ttCtx.xaxisTooltip !== null) {\n                    ttCtx.xaxisTooltip.classList.add('apexcharts-active');\n                    var cy = ttCtx.xaxisOffY + w.config.xaxis.tooltip.offsetY + w.globals.translateY + 1 + w.config.xaxis.offsetY;\n                    var xaxisTTText = ttCtx.xaxisTooltip.getBoundingClientRect();\n                    var xaxisTTTextWidth = xaxisTTText.width;\n                    cx = cx - xaxisTTTextWidth / 2;\n\n                    if (!isNaN(cx)) {\n                        cx = cx + w.globals.translateX;\n                        var textRect = 0;\n                        var graphics = new Graphics(this.ctx);\n                        textRect = graphics.getTextRects(ttCtx.xaxisTooltipText.innerHTML);\n                        ttCtx.xaxisTooltipText.style.minWidth = textRect.width + 'px';\n                        ttCtx.xaxisTooltip.style.left = cx + 'px';\n                        ttCtx.xaxisTooltip.style.top = cy + 'px';\n                    }\n                }\n            }\n        }, {\n            key: \"moveYAxisTooltip\",\n            value: function moveYAxisTooltip(index) {\n                    var w = this.w;\n                    var ttCtx = this.ttCtx;\n\n                    if (ttCtx.yaxisTTEls === null) {\n                        ttCtx.yaxisTTEls = w.globals.dom.baseEl.querySelectorAll('.apexcharts-yaxistooltip');\n                    }\n\n                    var ycrosshairsHiddenRectY1 = parseInt(ttCtx.ycrosshairsHidden.getAttribute('y1'), 10);\n                    var cy = w.globals.translateY + ycrosshairsHiddenRectY1;\n                    var yAxisTTRect = ttCtx.yaxisTTEls[index].getBoundingClientRect();\n                    var yAxisTTHeight = yAxisTTRect.height;\n                    var cx = w.globals.translateYAxisX[index] - 2;\n\n                    if (w.config.yaxis[index].opposite) {\n                        cx = cx - 26;\n                    }\n\n                    cy = cy - yAxisTTHeight / 2;\n\n                    if (w.globals.ignoreYAxisIndexes.indexOf(index) === -1) {\n                        ttCtx.yaxisTTEls[index].classList.add('apexcharts-active');\n                        ttCtx.yaxisTTEls[index].style.top = cy + 'px';\n                        ttCtx.yaxisTTEls[index].style.left = cx + w.config.yaxis[index].tooltip.offsetX + 'px';\n                    } else {\n                        ttCtx.yaxisTTEls[index].classList.remove('apexcharts-active');\n                    }\n                }\n                /**\n                 ** moves the whole tooltip by changing x, y attrs\n                 * @memberof Position\n                 * @param {int} - cx = point's x position, wherever point's x is, you need to move tooltip\n                 * @param {int} - cy = point's y position, wherever point's y is, you need to move tooltip\n                 * @param {int} - r = point's radius\n                 */\n\n        }, {\n            key: \"moveTooltip\",\n            value: function moveTooltip(cx, cy) {\n                var r = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n                var w = this.w;\n                var ttCtx = this.ttCtx;\n                var tooltipEl = ttCtx.getElTooltip();\n                var tooltipRect = ttCtx.tooltipRect;\n                var pointR = r !== null ? parseFloat(r) : 1;\n                var x = parseFloat(cx) + pointR + 5;\n                var y = parseFloat(cy) + pointR / 2; // - tooltipRect.ttHeight / 2\n\n                if (x > w.globals.gridWidth / 2) {\n                    x = x - tooltipRect.ttWidth - pointR - 15;\n                }\n\n                if (x > w.globals.gridWidth - tooltipRect.ttWidth - 10) {\n                    x = w.globals.gridWidth - tooltipRect.ttWidth;\n                }\n\n                if (x < -20) {\n                    x = -20;\n                }\n\n                if (w.config.tooltip.followCursor) {\n                    var elGrid = ttCtx.getElGrid();\n                    var seriesBound = elGrid.getBoundingClientRect();\n                    y = ttCtx.e.clientY + w.globals.translateY - seriesBound.top - tooltipRect.ttHeight / 2;\n                } else {\n                    if (w.globals.isBarHorizontal) {\n                        // non follow shared tooltip in a horizontal bar chart\n                        y = y - tooltipRect.ttHeight;\n                    } else {\n                        if (tooltipRect.ttHeight / 2 + y > w.globals.gridHeight) {\n                            y = w.globals.gridHeight - tooltipRect.ttHeight + w.globals.translateY;\n                        }\n\n                        if (y < 0) {\n                            y = 0;\n                        }\n                    }\n                }\n\n                if (!isNaN(x)) {\n                    x = x + w.globals.translateX;\n                    tooltipEl.style.left = x + 'px';\n                    tooltipEl.style.top = y + 'px';\n                }\n            }\n        }, {\n            key: \"moveMarkers\",\n            value: function moveMarkers(i, j) {\n                    var w = this.w;\n                    var ttCtx = this.ttCtx;\n\n                    if (w.globals.markers.size[i] > 0) {\n                        var allPoints = w.globals.dom.baseEl.querySelectorAll(\" .apexcharts-series[data\\\\:realIndex='\".concat(i, \"'] .apexcharts-marker\"));\n\n                        for (var p = 0; p < allPoints.length; p++) {\n                            if (parseInt(allPoints[p].getAttribute('rel'), 10) === j) {\n                                ttCtx.marker.resetPointsSize();\n                                ttCtx.marker.enlargeCurrentPoint(j, allPoints[p]);\n                            }\n                        }\n                    } else {\n                        ttCtx.marker.resetPointsSize();\n                        this.moveDynamicPointOnHover(j, i);\n                    }\n                } // This function is used when you need to show markers/points only on hover -\n                // DIFFERENT X VALUES in multiple series\n\n        }, {\n            key: \"moveDynamicPointOnHover\",\n            value: function moveDynamicPointOnHover(j, capturedSeries) {\n                    var w = this.w;\n                    var ttCtx = this.ttCtx;\n                    var cx = 0;\n                    var cy = 0;\n                    var pointsArr = w.globals.pointsArray;\n                    var hoverSize = ttCtx.tooltipUtil.getHoverMarkerSize(capturedSeries);\n                    var serType = w.config.series[capturedSeries].type;\n\n                    if (serType && (serType === 'column' || serType === 'candlestick' || serType === 'boxPlot')) {\n                        // fix error mentioned in #811\n                        return;\n                    }\n\n                    cx = pointsArr[capturedSeries][j][0];\n                    cy = pointsArr[capturedSeries][j][1] ? pointsArr[capturedSeries][j][1] : 0;\n                    var point = w.globals.dom.baseEl.querySelector(\".apexcharts-series[data\\\\:realIndex='\".concat(capturedSeries, \"'] .apexcharts-series-markers circle\"));\n\n                    if (point && cy < w.globals.gridHeight && cy > 0) {\n                        point.setAttribute('r', hoverSize);\n                        point.setAttribute('cx', cx);\n                        point.setAttribute('cy', cy);\n                    } // point.style.opacity = w.config.markers.hover.opacity\n\n\n                    this.moveXCrosshairs(cx);\n\n                    if (!ttCtx.fixedTooltip) {\n                        this.moveTooltip(cx, cy, hoverSize);\n                    }\n                } // This function is used when you need to show markers/points only on hover -\n                // SAME X VALUES in multiple series\n\n        }, {\n            key: \"moveDynamicPointsOnHover\",\n            value: function moveDynamicPointsOnHover(j) {\n                var ttCtx = this.ttCtx;\n                var w = ttCtx.w;\n                var cx = 0;\n                var cy = 0;\n                var activeSeries = 0;\n                var pointsArr = w.globals.pointsArray;\n                var series = new Series(this.ctx);\n                activeSeries = series.getActiveConfigSeriesIndex(true);\n                var hoverSize = ttCtx.tooltipUtil.getHoverMarkerSize(activeSeries);\n\n                if (pointsArr[activeSeries]) {\n                    cx = pointsArr[activeSeries][j][0];\n                    cy = pointsArr[activeSeries][j][1];\n                }\n\n                var points = ttCtx.tooltipUtil.getAllMarkers();\n\n                if (points !== null) {\n                    for (var p = 0; p < w.globals.series.length; p++) {\n                        var pointArr = pointsArr[p];\n\n                        if (w.globals.comboCharts) {\n                            // in a combo chart, if column charts are present, markers will not match with the number of series, hence this patch to push a null value in points array\n                            if (typeof pointArr === 'undefined') {\n                                // nodelist to array\n                                points.splice(p, 0, null);\n                            }\n                        }\n\n                        if (pointArr && pointArr.length) {\n                            var pcy = pointsArr[p][j][1];\n                            points[p].setAttribute('cx', cx);\n\n                            if (pcy !== null && !isNaN(pcy) && pcy < w.globals.gridHeight && pcy > 0) {\n                                points[p] && points[p].setAttribute('r', hoverSize);\n                                points[p] && points[p].setAttribute('cy', pcy);\n                            } else {\n                                points[p] && points[p].setAttribute('r', 0);\n                            }\n                        }\n                    }\n                }\n\n                this.moveXCrosshairs(cx);\n\n                if (!ttCtx.fixedTooltip) {\n                    var tcy = cy || w.globals.gridHeight;\n                    this.moveTooltip(cx, tcy, hoverSize);\n                }\n            }\n        }, {\n            key: \"moveStickyTooltipOverBars\",\n            value: function moveStickyTooltipOverBars(j) {\n                var w = this.w;\n                var ttCtx = this.ttCtx;\n                var barLen = w.globals.columnSeries ? w.globals.columnSeries.length : w.globals.series.length;\n                var i = barLen >= 2 && barLen % 2 === 0 ? Math.floor(barLen / 2) : Math.floor(barLen / 2) + 1;\n\n                if (w.globals.isBarHorizontal) {\n                    var series = new Series(this.ctx);\n                    i = series.getActiveConfigSeriesIndex(false, 'desc') + 1;\n                }\n\n                var jBar = w.globals.dom.baseEl.querySelector(\".apexcharts-bar-series .apexcharts-series[rel='\".concat(i, \"'] path[j='\").concat(j, \"'], .apexcharts-candlestick-series .apexcharts-series[rel='\").concat(i, \"'] path[j='\").concat(j, \"'], .apexcharts-boxPlot-series .apexcharts-series[rel='\").concat(i, \"'] path[j='\").concat(j, \"'], .apexcharts-rangebar-series .apexcharts-series[rel='\").concat(i, \"'] path[j='\").concat(j, \"']\"));\n                var bcx = jBar ? parseFloat(jBar.getAttribute('cx')) : 0;\n                var bcy = jBar ? parseFloat(jBar.getAttribute('cy')) : 0;\n                var bw = jBar ? parseFloat(jBar.getAttribute('barWidth')) : 0;\n                var bh = jBar ? parseFloat(jBar.getAttribute('barHeight')) : 0;\n                var elGrid = ttCtx.getElGrid();\n                var seriesBound = elGrid.getBoundingClientRect();\n\n                if (w.globals.isXNumeric) {\n                    bcx = bcx - (barLen % 2 !== 0 ? bw / 2 : 0);\n\n                    if (jBar && ( // fixes apexcharts.js#2354\n                            jBar.classList.contains('apexcharts-candlestick-area') || jBar.classList.contains('apexcharts-boxPlot-area')) && w.globals.comboCharts) {\n                        bcx = bcx - bw / 2;\n                    }\n                } else {\n                    if (!w.globals.isBarHorizontal) {\n                        bcx = ttCtx.xAxisTicksPositions[j - 1] + ttCtx.dataPointsDividedWidth / 2;\n\n                        if (isNaN(bcx)) {\n                            bcx = ttCtx.xAxisTicksPositions[j] - ttCtx.dataPointsDividedWidth / 2;\n                        }\n                    }\n                }\n\n                if (!w.globals.isBarHorizontal) {\n                    bcy = ttCtx.e.clientY - seriesBound.top - ttCtx.tooltipRect.ttHeight / 2;\n                } else {\n                    bcy = bcy + bh / 3;\n                }\n\n                if (!w.globals.isBarHorizontal) {\n                    this.moveXCrosshairs(bcx);\n                }\n\n                if (!ttCtx.fixedTooltip) {\n                    var tcy = bcy || w.globals.gridHeight;\n                    this.moveTooltip(bcx, tcy);\n                }\n            }\n        }]);\n\n        return Position;\n    }();\n\n    /**\n     * ApexCharts Tooltip.Marker Class to draw texts on the tooltip.\n     *\n     * @module Tooltip.Marker\n     **/\n\n    var Marker = /*#__PURE__*/ function() {\n        function Marker(tooltipContext) {\n            _classCallCheck(this, Marker);\n\n            this.w = tooltipContext.w;\n            this.ttCtx = tooltipContext;\n            this.ctx = tooltipContext.ctx;\n            this.tooltipPosition = new Position(tooltipContext);\n        }\n\n        _createClass(Marker, [{\n            key: \"drawDynamicPoints\",\n            value: function drawDynamicPoints() {\n                var w = this.w;\n                var graphics = new Graphics(this.ctx);\n                var marker = new Markers(this.ctx);\n                var elsSeries = w.globals.dom.baseEl.querySelectorAll('.apexcharts-series');\n                elsSeries = _toConsumableArray(elsSeries);\n\n                if (w.config.chart.stacked) {\n                    elsSeries.sort(function(a, b) {\n                        return parseFloat(a.getAttribute('data:realIndex')) - parseFloat(b.getAttribute('data:realIndex'));\n                    });\n                }\n\n                for (var i = 0; i < elsSeries.length; i++) {\n                    var pointsMain = elsSeries[i].querySelector(\".apexcharts-series-markers-wrap\");\n\n                    if (pointsMain !== null) {\n                        // it can be null as we have tooltips in donut/bar charts\n                        var point = void 0;\n                        var PointClasses = \"apexcharts-marker w\".concat((Math.random() + 1).toString(36).substring(4));\n\n                        if ((w.config.chart.type === 'line' || w.config.chart.type === 'area') && !w.globals.comboCharts && !w.config.tooltip.intersect) {\n                            PointClasses += ' no-pointer-events';\n                        }\n\n                        var elPointOptions = marker.getMarkerConfig(PointClasses, i);\n                        point = graphics.drawMarker(0, 0, elPointOptions);\n                        point.node.setAttribute('default-marker-size', 0);\n                        var elPointsG = document.createElementNS(w.globals.SVGNS, 'g');\n                        elPointsG.classList.add('apexcharts-series-markers');\n                        elPointsG.appendChild(point.node);\n                        pointsMain.appendChild(elPointsG);\n                    }\n                }\n            }\n        }, {\n            key: \"enlargeCurrentPoint\",\n            value: function enlargeCurrentPoint(rel, point) {\n                var x = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n                var y = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n                var w = this.w;\n\n                if (w.config.chart.type !== 'bubble') {\n                    this.newPointSize(rel, point);\n                }\n\n                var cx = point.getAttribute('cx');\n                var cy = point.getAttribute('cy');\n\n                if (x !== null && y !== null) {\n                    cx = x;\n                    cy = y;\n                }\n\n                this.tooltipPosition.moveXCrosshairs(cx);\n\n                if (!this.fixedTooltip) {\n                    if (w.config.chart.type === 'radar') {\n                        var elGrid = this.ttCtx.getElGrid();\n                        var seriesBound = elGrid.getBoundingClientRect();\n                        cx = this.ttCtx.e.clientX - seriesBound.left;\n                    }\n\n                    this.tooltipPosition.moveTooltip(cx, cy, w.config.markers.hover.size);\n                }\n            }\n        }, {\n            key: \"enlargePoints\",\n            value: function enlargePoints(j) {\n                var w = this.w;\n                var me = this;\n                var ttCtx = this.ttCtx;\n                var col = j;\n                var points = w.globals.dom.baseEl.querySelectorAll('.apexcharts-series:not(.apexcharts-series-collapsed) .apexcharts-marker');\n                var newSize = w.config.markers.hover.size;\n\n                for (var p = 0; p < points.length; p++) {\n                    var rel = points[p].getAttribute('rel');\n                    var index = points[p].getAttribute('index');\n\n                    if (newSize === undefined) {\n                        newSize = w.globals.markers.size[index] + w.config.markers.hover.sizeOffset;\n                    }\n\n                    if (col === parseInt(rel, 10)) {\n                        me.newPointSize(col, points[p]);\n                        var cx = points[p].getAttribute('cx');\n                        var cy = points[p].getAttribute('cy');\n                        me.tooltipPosition.moveXCrosshairs(cx);\n\n                        if (!ttCtx.fixedTooltip) {\n                            me.tooltipPosition.moveTooltip(cx, cy, newSize);\n                        }\n                    } else {\n                        me.oldPointSize(points[p]);\n                    }\n                }\n            }\n        }, {\n            key: \"newPointSize\",\n            value: function newPointSize(rel, point) {\n                var w = this.w;\n                var newSize = w.config.markers.hover.size;\n                var elPoint = rel === 0 ? point.parentNode.firstChild : point.parentNode.lastChild;\n\n                if (elPoint.getAttribute('default-marker-size') !== '0') {\n                    var index = parseInt(elPoint.getAttribute('index'), 10);\n\n                    if (newSize === undefined) {\n                        newSize = w.globals.markers.size[index] + w.config.markers.hover.sizeOffset;\n                    }\n\n                    if (newSize < 0) newSize = 0;\n                    elPoint.setAttribute('r', newSize);\n                }\n            }\n        }, {\n            key: \"oldPointSize\",\n            value: function oldPointSize(point) {\n                var size = parseFloat(point.getAttribute('default-marker-size'));\n                point.setAttribute('r', size);\n            }\n        }, {\n            key: \"resetPointsSize\",\n            value: function resetPointsSize() {\n                var w = this.w;\n                var points = w.globals.dom.baseEl.querySelectorAll('.apexcharts-series:not(.apexcharts-series-collapsed) .apexcharts-marker');\n\n                for (var p = 0; p < points.length; p++) {\n                    var size = parseFloat(points[p].getAttribute('default-marker-size'));\n\n                    if (Utils.isNumber(size) && size >= 0) {\n                        points[p].setAttribute('r', size);\n                    } else {\n                        points[p].setAttribute('r', 0);\n                    }\n                }\n            }\n        }]);\n\n        return Marker;\n    }();\n\n    /**\n     * ApexCharts Tooltip.Intersect Class.\n     *\n     * @module Tooltip.Intersect\n     **/\n\n    var Intersect = /*#__PURE__*/ function() {\n        function Intersect(tooltipContext) {\n            _classCallCheck(this, Intersect);\n\n            this.w = tooltipContext.w;\n            this.ttCtx = tooltipContext;\n        }\n\n        _createClass(Intersect, [{\n            key: \"getAttr\",\n            value: function getAttr(e, attr) {\n                return parseFloat(e.target.getAttribute(attr));\n            }\n        }, {\n            key: \"handleHeatTreeTooltip\",\n            value: function handleHeatTreeTooltip(_ref) {\n                var e = _ref.e,\n                    opt = _ref.opt,\n                    x = _ref.x,\n                    y = _ref.y,\n                    type = _ref.type;\n                var ttCtx = this.ttCtx;\n                var w = this.w;\n\n                if (e.target.classList.contains(\"apexcharts-\".concat(type, \"-rect\"))) {\n                    var i = this.getAttr(e, 'i');\n                    var j = this.getAttr(e, 'j');\n                    var cx = this.getAttr(e, 'cx');\n                    var cy = this.getAttr(e, 'cy');\n                    var width = this.getAttr(e, 'width');\n                    var height = this.getAttr(e, 'height');\n                    ttCtx.tooltipLabels.drawSeriesTexts({\n                        ttItems: opt.ttItems,\n                        i: i,\n                        j: j,\n                        shared: false,\n                        e: e\n                    });\n                    w.globals.capturedSeriesIndex = i;\n                    w.globals.capturedDataPointIndex = j;\n                    x = cx + ttCtx.tooltipRect.ttWidth / 2 + width;\n                    y = cy + ttCtx.tooltipRect.ttHeight / 2 - height / 2;\n                    ttCtx.tooltipPosition.moveXCrosshairs(cx + width / 2);\n\n                    if (x > w.globals.gridWidth / 2) {\n                        x = cx - ttCtx.tooltipRect.ttWidth / 2 + width;\n                    }\n\n                    if (ttCtx.w.config.tooltip.followCursor) {\n                        var seriesBound = w.globals.dom.elWrap.getBoundingClientRect();\n                        x = w.globals.clientX - seriesBound.left - ttCtx.tooltipRect.ttWidth / 2;\n                        y = w.globals.clientY - seriesBound.top - ttCtx.tooltipRect.ttHeight - 5;\n                    }\n                }\n\n                return {\n                    x: x,\n                    y: y\n                };\n            }\n        }, {\n            key: \"handleMarkerTooltip\",\n            value: function handleMarkerTooltip(_ref2) {\n                var e = _ref2.e,\n                    opt = _ref2.opt,\n                    x = _ref2.x,\n                    y = _ref2.y;\n                var w = this.w;\n                var ttCtx = this.ttCtx;\n                var i;\n                var j;\n\n                if (e.target.classList.contains('apexcharts-marker')) {\n                    var cx = parseInt(opt.paths.getAttribute('cx'), 10);\n                    var cy = parseInt(opt.paths.getAttribute('cy'), 10);\n                    var val = parseFloat(opt.paths.getAttribute('val'));\n                    j = parseInt(opt.paths.getAttribute('rel'), 10);\n                    i = parseInt(opt.paths.parentNode.parentNode.parentNode.getAttribute('rel'), 10) - 1;\n\n                    if (ttCtx.intersect) {\n                        var el = Utils.findAncestor(opt.paths, 'apexcharts-series');\n\n                        if (el) {\n                            i = parseInt(el.getAttribute('data:realIndex'), 10);\n                        }\n                    }\n\n                    ttCtx.tooltipLabels.drawSeriesTexts({\n                        ttItems: opt.ttItems,\n                        i: i,\n                        j: j,\n                        shared: ttCtx.showOnIntersect ? false : w.config.tooltip.shared,\n                        e: e\n                    });\n\n                    if (e.type === 'mouseup') {\n                        ttCtx.markerClick(e, i, j);\n                    }\n\n                    w.globals.capturedSeriesIndex = i;\n                    w.globals.capturedDataPointIndex = j;\n                    x = cx;\n                    y = cy + w.globals.translateY - ttCtx.tooltipRect.ttHeight * 1.4;\n\n                    if (ttCtx.w.config.tooltip.followCursor) {\n                        var elGrid = ttCtx.getElGrid();\n                        var seriesBound = elGrid.getBoundingClientRect();\n                        y = ttCtx.e.clientY + w.globals.translateY - seriesBound.top;\n                    }\n\n                    if (val < 0) {\n                        y = cy;\n                    }\n\n                    ttCtx.marker.enlargeCurrentPoint(j, opt.paths, x, y);\n                }\n\n                return {\n                    x: x,\n                    y: y\n                };\n            }\n        }, {\n            key: \"handleBarTooltip\",\n            value: function handleBarTooltip(_ref3) {\n                var e = _ref3.e,\n                    opt = _ref3.opt;\n                var w = this.w;\n                var ttCtx = this.ttCtx;\n                var tooltipEl = ttCtx.getElTooltip();\n                var bx = 0;\n                var x = 0;\n                var y = 0;\n                var i = 0;\n                var strokeWidth;\n                var barXY = this.getBarTooltipXY({\n                    e: e,\n                    opt: opt\n                });\n                i = barXY.i;\n                var barHeight = barXY.barHeight;\n                var j = barXY.j;\n                w.globals.capturedSeriesIndex = i;\n                w.globals.capturedDataPointIndex = j;\n\n                if (w.globals.isBarHorizontal && ttCtx.tooltipUtil.hasBars() || !w.config.tooltip.shared) {\n                    x = barXY.x;\n                    y = barXY.y;\n                    strokeWidth = Array.isArray(w.config.stroke.width) ? w.config.stroke.width[i] : w.config.stroke.width;\n                    bx = x;\n                } else {\n                    if (!w.globals.comboCharts && !w.config.tooltip.shared) {\n                        bx = bx / 2;\n                    }\n                } // y is NaN, make it touch the bottom of grid area\n\n\n                if (isNaN(y)) {\n                    y = w.globals.svgHeight - ttCtx.tooltipRect.ttHeight;\n                } else if (y < 0) {\n                    y = 0;\n                }\n\n                var seriesIndex = parseInt(opt.paths.parentNode.getAttribute('data:realIndex'), 10);\n                var isReversed = w.globals.isMultipleYAxis ? w.config.yaxis[seriesIndex] && w.config.yaxis[seriesIndex].reversed : w.config.yaxis[0].reversed;\n\n                if (x + ttCtx.tooltipRect.ttWidth > w.globals.gridWidth && !isReversed) {\n                    x = x - ttCtx.tooltipRect.ttWidth;\n                } else if (x < 0) {\n                    x = 0;\n                }\n\n                if (ttCtx.w.config.tooltip.followCursor) {\n                    var elGrid = ttCtx.getElGrid();\n                    var seriesBound = elGrid.getBoundingClientRect();\n                    y = ttCtx.e.clientY - seriesBound.top;\n                } // if tooltip is still null, querySelector\n\n\n                if (ttCtx.tooltip === null) {\n                    ttCtx.tooltip = w.globals.dom.baseEl.querySelector('.apexcharts-tooltip');\n                }\n\n                if (!w.config.tooltip.shared) {\n                    if (w.globals.comboBarCount > 0) {\n                        ttCtx.tooltipPosition.moveXCrosshairs(bx + strokeWidth / 2);\n                    } else {\n                        ttCtx.tooltipPosition.moveXCrosshairs(bx);\n                    }\n                } // move tooltip here\n\n\n                if (!ttCtx.fixedTooltip && (!w.config.tooltip.shared || w.globals.isBarHorizontal && ttCtx.tooltipUtil.hasBars())) {\n                    if (isReversed) {\n                        x = x - ttCtx.tooltipRect.ttWidth;\n\n                        if (x < 0) {\n                            x = 0;\n                        }\n                    }\n\n                    tooltipEl.style.left = x + w.globals.translateX + 'px';\n\n                    if (isReversed && !(w.globals.isBarHorizontal && ttCtx.tooltipUtil.hasBars())) {\n                        y = y + barHeight - (w.globals.series[i][j] < 0 ? barHeight : 0) * 2;\n                    }\n\n                    if (ttCtx.tooltipRect.ttHeight + y > w.globals.gridHeight) {\n                        y = w.globals.gridHeight - ttCtx.tooltipRect.ttHeight + w.globals.translateY;\n                        tooltipEl.style.top = y + 'px';\n                    } else {\n                        tooltipEl.style.top = y + w.globals.translateY - ttCtx.tooltipRect.ttHeight / 2 + 'px';\n                    }\n                }\n            }\n        }, {\n            key: \"getBarTooltipXY\",\n            value: function getBarTooltipXY(_ref4) {\n                var e = _ref4.e,\n                    opt = _ref4.opt;\n                var w = this.w;\n                var j = null;\n                var ttCtx = this.ttCtx;\n                var i = 0;\n                var x = 0;\n                var y = 0;\n                var barWidth = 0;\n                var barHeight = 0;\n                var cl = e.target.classList;\n\n                if (cl.contains('apexcharts-bar-area') || cl.contains('apexcharts-candlestick-area') || cl.contains('apexcharts-boxPlot-area') || cl.contains('apexcharts-rangebar-area')) {\n                    var bar = e.target;\n                    var barRect = bar.getBoundingClientRect();\n                    var seriesBound = opt.elGrid.getBoundingClientRect();\n                    var bh = barRect.height;\n                    barHeight = barRect.height;\n                    var bw = barRect.width;\n                    var cx = parseInt(bar.getAttribute('cx'), 10);\n                    var cy = parseInt(bar.getAttribute('cy'), 10);\n                    barWidth = parseFloat(bar.getAttribute('barWidth'));\n                    var clientX = e.type === 'touchmove' ? e.touches[0].clientX : e.clientX;\n                    j = parseInt(bar.getAttribute('j'), 10);\n                    i = parseInt(bar.parentNode.getAttribute('rel'), 10) - 1;\n                    var y1 = bar.getAttribute('data-range-y1');\n                    var y2 = bar.getAttribute('data-range-y2');\n\n                    if (w.globals.comboCharts) {\n                        i = parseInt(bar.parentNode.getAttribute('data:realIndex'), 10);\n                    } // if (w.config.tooltip.shared) {\n                    // this check not needed  at the moment\n                    //   const yDivisor = w.globals.gridHeight / (w.globals.series.length)\n                    //   const hoverY = ttCtx.clientY - ttCtx.seriesBound.top\n                    //   j = Math.ceil(hoverY / yDivisor)\n                    // }\n\n\n                    ttCtx.tooltipLabels.drawSeriesTexts({\n                        ttItems: opt.ttItems,\n                        i: i,\n                        j: j,\n                        y1: y1 ? parseInt(y1, 10) : null,\n                        y2: y2 ? parseInt(y2, 10) : null,\n                        shared: ttCtx.showOnIntersect ? false : w.config.tooltip.shared,\n                        e: e\n                    });\n\n                    if (w.config.tooltip.followCursor) {\n                        if (w.globals.isBarHorizontal) {\n                            x = clientX - seriesBound.left + 15;\n                            y = cy - ttCtx.dataPointsDividedHeight + bh / 2 - ttCtx.tooltipRect.ttHeight / 2;\n                        } else {\n                            if (w.globals.isXNumeric) {\n                                x = cx - bw / 2;\n                            } else {\n                                x = cx - ttCtx.dataPointsDividedWidth + bw / 2;\n                            }\n\n                            y = e.clientY - seriesBound.top - ttCtx.tooltipRect.ttHeight / 2 - 15;\n                        }\n                    } else {\n                        if (w.globals.isBarHorizontal) {\n                            x = cx;\n\n                            if (x < ttCtx.xyRatios.baseLineInvertedY) {\n                                x = cx - ttCtx.tooltipRect.ttWidth;\n                            }\n\n                            y = cy - ttCtx.dataPointsDividedHeight + bh / 2 - ttCtx.tooltipRect.ttHeight / 2;\n                        } else {\n                            // if columns\n                            if (w.globals.isXNumeric) {\n                                x = cx - bw / 2;\n                            } else {\n                                x = cx - ttCtx.dataPointsDividedWidth + bw / 2;\n                            }\n\n                            y = cy; // - ttCtx.tooltipRect.ttHeight / 2 + 10\n                        }\n                    }\n                }\n\n                return {\n                    x: x,\n                    y: y,\n                    barHeight: barHeight,\n                    barWidth: barWidth,\n                    i: i,\n                    j: j\n                };\n            }\n        }]);\n\n        return Intersect;\n    }();\n\n    /**\n     * ApexCharts Tooltip.AxesTooltip Class.\n     *\n     * @module Tooltip.AxesTooltip\n     **/\n    var AxesTooltip = /*#__PURE__*/ function() {\n        function AxesTooltip(tooltipContext) {\n            _classCallCheck(this, AxesTooltip);\n\n            this.w = tooltipContext.w;\n            this.ttCtx = tooltipContext;\n        }\n        /**\n         * This method adds the secondary tooltip which appears below x axis\n         * @memberof Tooltip\n         **/\n\n\n        _createClass(AxesTooltip, [{\n            key: \"drawXaxisTooltip\",\n            value: function drawXaxisTooltip() {\n                    var w = this.w;\n                    var ttCtx = this.ttCtx;\n                    var isBottom = w.config.xaxis.position === 'bottom';\n                    ttCtx.xaxisOffY = isBottom ? w.globals.gridHeight + 1 : -w.globals.xAxisHeight - w.config.xaxis.axisTicks.height + 3;\n                    var tooltipCssClass = isBottom ? 'apexcharts-xaxistooltip apexcharts-xaxistooltip-bottom' : 'apexcharts-xaxistooltip apexcharts-xaxistooltip-top';\n                    var renderTo = w.globals.dom.elWrap;\n\n                    if (ttCtx.blxaxisTooltip) {\n                        var xaxisTooltip = w.globals.dom.baseEl.querySelector('.apexcharts-xaxistooltip');\n\n                        if (xaxisTooltip === null) {\n                            ttCtx.xaxisTooltip = document.createElement('div');\n                            ttCtx.xaxisTooltip.setAttribute('class', tooltipCssClass + ' apexcharts-theme-' + w.config.tooltip.theme);\n                            renderTo.appendChild(ttCtx.xaxisTooltip);\n                            ttCtx.xaxisTooltipText = document.createElement('div');\n                            ttCtx.xaxisTooltipText.classList.add('apexcharts-xaxistooltip-text');\n                            ttCtx.xaxisTooltipText.style.fontFamily = w.config.xaxis.tooltip.style.fontFamily || w.config.chart.fontFamily;\n                            ttCtx.xaxisTooltipText.style.fontSize = w.config.xaxis.tooltip.style.fontSize;\n                            ttCtx.xaxisTooltip.appendChild(ttCtx.xaxisTooltipText);\n                        }\n                    }\n                }\n                /**\n                 * This method adds the secondary tooltip which appears below x axis\n                 * @memberof Tooltip\n                 **/\n\n        }, {\n            key: \"drawYaxisTooltip\",\n            value: function drawYaxisTooltip() {\n                    var w = this.w;\n                    var ttCtx = this.ttCtx;\n\n                    var _loop = function _loop(i) {\n                        var isRight = w.config.yaxis[i].opposite || w.config.yaxis[i].crosshairs.opposite;\n                        ttCtx.yaxisOffX = isRight ? w.globals.gridWidth + 1 : 1;\n                        var tooltipCssClass = isRight ? \"apexcharts-yaxistooltip apexcharts-yaxistooltip-\".concat(i, \" apexcharts-yaxistooltip-right\") : \"apexcharts-yaxistooltip apexcharts-yaxistooltip-\".concat(i, \" apexcharts-yaxistooltip-left\");\n                        w.globals.yAxisSameScaleIndices.map(function(samescales, ssi) {\n                            samescales.map(function(s, si) {\n                                if (si === i) {\n                                    tooltipCssClass += w.config.yaxis[si].show ? \" \" : \" apexcharts-yaxistooltip-hidden\";\n                                }\n                            });\n                        });\n                        var renderTo = w.globals.dom.elWrap;\n                        var yaxisTooltip = w.globals.dom.baseEl.querySelector(\".apexcharts-yaxistooltip apexcharts-yaxistooltip-\".concat(i));\n\n                        if (yaxisTooltip === null) {\n                            ttCtx.yaxisTooltip = document.createElement('div');\n                            ttCtx.yaxisTooltip.setAttribute('class', tooltipCssClass + ' apexcharts-theme-' + w.config.tooltip.theme);\n                            renderTo.appendChild(ttCtx.yaxisTooltip);\n                            if (i === 0) ttCtx.yaxisTooltipText = [];\n                            ttCtx.yaxisTooltipText[i] = document.createElement('div');\n                            ttCtx.yaxisTooltipText[i].classList.add('apexcharts-yaxistooltip-text');\n                            ttCtx.yaxisTooltip.appendChild(ttCtx.yaxisTooltipText[i]);\n                        }\n                    };\n\n                    for (var i = 0; i < w.config.yaxis.length; i++) {\n                        _loop(i);\n                    }\n                }\n                /**\n                 * @memberof Tooltip\n                 **/\n\n        }, {\n            key: \"setXCrosshairWidth\",\n            value: function setXCrosshairWidth() {\n                var w = this.w;\n                var ttCtx = this.ttCtx; // set xcrosshairs width\n\n                var xcrosshairs = ttCtx.getElXCrosshairs();\n                ttCtx.xcrosshairsWidth = parseInt(w.config.xaxis.crosshairs.width, 10);\n\n                if (!w.globals.comboCharts) {\n                    if (w.config.xaxis.crosshairs.width === 'tickWidth') {\n                        var count = w.globals.labels.length;\n                        ttCtx.xcrosshairsWidth = w.globals.gridWidth / count;\n                    } else if (w.config.xaxis.crosshairs.width === 'barWidth') {\n                        var bar = w.globals.dom.baseEl.querySelector('.apexcharts-bar-area');\n\n                        if (bar !== null) {\n                            var barWidth = parseFloat(bar.getAttribute('barWidth'));\n                            ttCtx.xcrosshairsWidth = barWidth;\n                        } else {\n                            ttCtx.xcrosshairsWidth = 1;\n                        }\n                    }\n                } else {\n                    var _bar = w.globals.dom.baseEl.querySelector('.apexcharts-bar-area');\n\n                    if (_bar !== null && w.config.xaxis.crosshairs.width === 'barWidth') {\n                        var _barWidth = parseFloat(_bar.getAttribute('barWidth'));\n\n                        ttCtx.xcrosshairsWidth = _barWidth;\n                    } else {\n                        if (w.config.xaxis.crosshairs.width === 'tickWidth') {\n                            var _count = w.globals.labels.length;\n                            ttCtx.xcrosshairsWidth = w.globals.gridWidth / _count;\n                        }\n                    }\n                }\n\n                if (w.globals.isBarHorizontal) {\n                    ttCtx.xcrosshairsWidth = 0;\n                }\n\n                if (xcrosshairs !== null && ttCtx.xcrosshairsWidth > 0) {\n                    xcrosshairs.setAttribute('width', ttCtx.xcrosshairsWidth);\n                }\n            }\n        }, {\n            key: \"handleYCrosshair\",\n            value: function handleYCrosshair() {\n                var w = this.w;\n                var ttCtx = this.ttCtx; // set ycrosshairs height\n\n                ttCtx.ycrosshairs = w.globals.dom.baseEl.querySelector('.apexcharts-ycrosshairs');\n                ttCtx.ycrosshairsHidden = w.globals.dom.baseEl.querySelector('.apexcharts-ycrosshairs-hidden');\n            }\n        }, {\n            key: \"drawYaxisTooltipText\",\n            value: function drawYaxisTooltipText(index, clientY, xyRatios) {\n                var ttCtx = this.ttCtx;\n                var w = this.w;\n                var lbFormatter = w.globals.yLabelFormatters[index];\n\n                if (ttCtx.yaxisTooltips[index]) {\n                    var elGrid = ttCtx.getElGrid();\n                    var seriesBound = elGrid.getBoundingClientRect();\n                    var hoverY = (clientY - seriesBound.top) * xyRatios.yRatio[index];\n                    var height = w.globals.maxYArr[index] - w.globals.minYArr[index];\n                    var val = w.globals.minYArr[index] + (height - hoverY);\n                    ttCtx.tooltipPosition.moveYCrosshairs(clientY - seriesBound.top);\n                    ttCtx.yaxisTooltipText[index].innerHTML = lbFormatter(val);\n                    ttCtx.tooltipPosition.moveYAxisTooltip(index);\n                }\n            }\n        }]);\n\n        return AxesTooltip;\n    }();\n\n    /**\n     * ApexCharts Core Tooltip Class to handle the tooltip generation.\n     *\n     * @module Tooltip\n     **/\n\n    var Tooltip = /*#__PURE__*/ function() {\n        function Tooltip(ctx) {\n            _classCallCheck(this, Tooltip);\n\n            this.ctx = ctx;\n            this.w = ctx.w;\n            var w = this.w;\n            this.tConfig = w.config.tooltip;\n            this.tooltipUtil = new Utils$1(this);\n            this.tooltipLabels = new Labels(this);\n            this.tooltipPosition = new Position(this);\n            this.marker = new Marker(this);\n            this.intersect = new Intersect(this);\n            this.axesTooltip = new AxesTooltip(this);\n            this.showOnIntersect = this.tConfig.intersect;\n            this.showTooltipTitle = this.tConfig.x.show;\n            this.fixedTooltip = this.tConfig.fixed.enabled;\n            this.xaxisTooltip = null;\n            this.yaxisTTEls = null;\n            this.isBarShared = !w.globals.isBarHorizontal && this.tConfig.shared;\n        }\n\n        _createClass(Tooltip, [{\n            key: \"getElTooltip\",\n            value: function getElTooltip(ctx) {\n                if (!ctx) ctx = this;\n                return ctx.w.globals.dom.baseEl.querySelector('.apexcharts-tooltip');\n            }\n        }, {\n            key: \"getElXCrosshairs\",\n            value: function getElXCrosshairs() {\n                return this.w.globals.dom.baseEl.querySelector('.apexcharts-xcrosshairs');\n            }\n        }, {\n            key: \"getElGrid\",\n            value: function getElGrid() {\n                return this.w.globals.dom.baseEl.querySelector('.apexcharts-grid');\n            }\n        }, {\n            key: \"drawTooltip\",\n            value: function drawTooltip(xyRatios) {\n                var w = this.w;\n                this.xyRatios = xyRatios;\n                this.blxaxisTooltip = w.config.xaxis.tooltip.enabled && w.globals.axisCharts;\n                this.yaxisTooltips = w.config.yaxis.map(function(y, i) {\n                    return y.show && y.tooltip.enabled && w.globals.axisCharts ? true : false;\n                });\n                this.allTooltipSeriesGroups = [];\n\n                if (!w.globals.axisCharts) {\n                    this.showTooltipTitle = false;\n                }\n\n                var tooltipEl = document.createElement('div');\n                tooltipEl.classList.add('apexcharts-tooltip');\n                tooltipEl.classList.add(\"apexcharts-theme-\".concat(this.tConfig.theme));\n                w.globals.dom.elWrap.appendChild(tooltipEl);\n\n                if (w.globals.axisCharts) {\n                    this.axesTooltip.drawXaxisTooltip();\n                    this.axesTooltip.drawYaxisTooltip();\n                    this.axesTooltip.setXCrosshairWidth();\n                    this.axesTooltip.handleYCrosshair();\n                    var xAxis = new XAxis(this.ctx);\n                    this.xAxisTicksPositions = xAxis.getXAxisTicksPositions();\n                } // we forcefully set intersect true for these conditions\n\n\n                if ((w.globals.comboCharts || this.tConfig.intersect || w.config.chart.type === 'rangeBar') && !this.tConfig.shared) {\n                    this.showOnIntersect = true;\n                }\n\n                if (w.config.markers.size === 0 || w.globals.markers.largestSize === 0) {\n                    // when user don't want to show points all the time, but only on when hovering on series\n                    this.marker.drawDynamicPoints(this);\n                } // no visible series, exit\n\n\n                if (w.globals.collapsedSeries.length === w.globals.series.length) return;\n                this.dataPointsDividedHeight = w.globals.gridHeight / w.globals.dataPoints;\n                this.dataPointsDividedWidth = w.globals.gridWidth / w.globals.dataPoints;\n\n                if (this.showTooltipTitle) {\n                    this.tooltipTitle = document.createElement('div');\n                    this.tooltipTitle.classList.add('apexcharts-tooltip-title');\n                    this.tooltipTitle.style.fontFamily = this.tConfig.style.fontFamily || w.config.chart.fontFamily;\n                    this.tooltipTitle.style.fontSize = this.tConfig.style.fontSize;\n                    tooltipEl.appendChild(this.tooltipTitle);\n                }\n\n                var ttItemsCnt = w.globals.series.length; // whether shared or not, default is shared\n\n                if ((w.globals.xyCharts || w.globals.comboCharts) && this.tConfig.shared) {\n                    if (!this.showOnIntersect) {\n                        ttItemsCnt = w.globals.series.length;\n                    } else {\n                        ttItemsCnt = 1;\n                    }\n                }\n\n                this.legendLabels = w.globals.dom.baseEl.querySelectorAll('.apexcharts-legend-text');\n                this.ttItems = this.createTTElements(ttItemsCnt);\n                this.addSVGEvents();\n            }\n        }, {\n            key: \"createTTElements\",\n            value: function createTTElements(ttItemsCnt) {\n                var _this = this;\n\n                var w = this.w;\n                var ttItems = [];\n                var tooltipEl = this.getElTooltip();\n\n                var _loop = function _loop(i) {\n                    var gTxt = document.createElement('div');\n                    gTxt.classList.add('apexcharts-tooltip-series-group');\n                    gTxt.style.order = w.config.tooltip.inverseOrder ? ttItemsCnt - i : i + 1;\n\n                    if (_this.tConfig.shared && _this.tConfig.enabledOnSeries && Array.isArray(_this.tConfig.enabledOnSeries)) {\n                        if (_this.tConfig.enabledOnSeries.indexOf(i) < 0) {\n                            gTxt.classList.add('apexcharts-tooltip-series-group-hidden');\n                        }\n                    }\n\n                    var point = document.createElement('span');\n                    point.classList.add('apexcharts-tooltip-marker');\n                    point.style.backgroundColor = w.globals.colors[i];\n                    gTxt.appendChild(point);\n                    var gYZ = document.createElement('div');\n                    gYZ.classList.add('apexcharts-tooltip-text');\n                    gYZ.style.fontFamily = _this.tConfig.style.fontFamily || w.config.chart.fontFamily;\n                    gYZ.style.fontSize = _this.tConfig.style.fontSize;\n                    ['y', 'goals', 'z'].forEach(function(g) {\n                        var gValText = document.createElement('div');\n                        gValText.classList.add(\"apexcharts-tooltip-\".concat(g, \"-group\"));\n                        var txtLabel = document.createElement('span');\n                        txtLabel.classList.add(\"apexcharts-tooltip-text-\".concat(g, \"-label\"));\n                        gValText.appendChild(txtLabel);\n                        var txtValue = document.createElement('span');\n                        txtValue.classList.add(\"apexcharts-tooltip-text-\".concat(g, \"-value\"));\n                        gValText.appendChild(txtValue);\n                        gYZ.appendChild(gValText);\n                    });\n                    gTxt.appendChild(gYZ);\n                    tooltipEl.appendChild(gTxt);\n                    ttItems.push(gTxt);\n                };\n\n                for (var i = 0; i < ttItemsCnt; i++) {\n                    _loop(i);\n                }\n\n                return ttItems;\n            }\n        }, {\n            key: \"addSVGEvents\",\n            value: function addSVGEvents() {\n                var w = this.w;\n                var type = w.config.chart.type;\n                var tooltipEl = this.getElTooltip();\n                var commonBar = !!(type === 'bar' || type === 'candlestick' || type === 'boxPlot' || type === 'rangeBar');\n                var chartWithmarkers = type === 'area' || type === 'line' || type === 'scatter' || type === 'bubble' || type === 'radar';\n                var hoverArea = w.globals.dom.Paper.node;\n                var elGrid = this.getElGrid();\n\n                if (elGrid) {\n                    this.seriesBound = elGrid.getBoundingClientRect();\n                }\n\n                var tooltipY = [];\n                var tooltipX = [];\n                var seriesHoverParams = {\n                    hoverArea: hoverArea,\n                    elGrid: elGrid,\n                    tooltipEl: tooltipEl,\n                    tooltipY: tooltipY,\n                    tooltipX: tooltipX,\n                    ttItems: this.ttItems\n                };\n                var points;\n\n                if (w.globals.axisCharts) {\n                    if (chartWithmarkers) {\n                        points = w.globals.dom.baseEl.querySelectorAll(\".apexcharts-series[data\\\\:longestSeries='true'] .apexcharts-marker\");\n                    } else if (commonBar) {\n                        points = w.globals.dom.baseEl.querySelectorAll('.apexcharts-series .apexcharts-bar-area, .apexcharts-series .apexcharts-candlestick-area, .apexcharts-series .apexcharts-boxPlot-area, .apexcharts-series .apexcharts-rangebar-area');\n                    } else if (type === 'heatmap' || type === 'treemap') {\n                        points = w.globals.dom.baseEl.querySelectorAll('.apexcharts-series .apexcharts-heatmap, .apexcharts-series .apexcharts-treemap');\n                    }\n\n                    if (points && points.length) {\n                        for (var p = 0; p < points.length; p++) {\n                            tooltipY.push(points[p].getAttribute('cy'));\n                            tooltipX.push(points[p].getAttribute('cx'));\n                        }\n                    }\n                }\n\n                var validSharedChartTypes = w.globals.xyCharts && !this.showOnIntersect || w.globals.comboCharts && !this.showOnIntersect || commonBar && this.tooltipUtil.hasBars() && this.tConfig.shared;\n\n                if (validSharedChartTypes) {\n                    this.addPathsEventListeners([hoverArea], seriesHoverParams);\n                } else if (commonBar && !w.globals.comboCharts || chartWithmarkers && this.showOnIntersect) {\n                    this.addDatapointEventsListeners(seriesHoverParams);\n                } else if (!w.globals.axisCharts || type === 'heatmap' || type === 'treemap') {\n                    var seriesAll = w.globals.dom.baseEl.querySelectorAll('.apexcharts-series');\n                    this.addPathsEventListeners(seriesAll, seriesHoverParams);\n                }\n\n                if (this.showOnIntersect) {\n                    var lineAreaPoints = w.globals.dom.baseEl.querySelectorAll('.apexcharts-line-series .apexcharts-marker, .apexcharts-area-series .apexcharts-marker');\n\n                    if (lineAreaPoints.length > 0) {\n                        // if we find any lineSeries, addEventListeners for them\n                        this.addPathsEventListeners(lineAreaPoints, seriesHoverParams);\n                    } // combo charts may have bars, so add event listeners here too\n\n\n                    if (this.tooltipUtil.hasBars() && !this.tConfig.shared) {\n                        this.addDatapointEventsListeners(seriesHoverParams);\n                    }\n                }\n            }\n        }, {\n            key: \"drawFixedTooltipRect\",\n            value: function drawFixedTooltipRect() {\n                var w = this.w;\n                var tooltipEl = this.getElTooltip();\n                var tooltipRect = tooltipEl.getBoundingClientRect();\n                var ttWidth = tooltipRect.width + 10;\n                var ttHeight = tooltipRect.height + 10;\n                var x = this.tConfig.fixed.offsetX;\n                var y = this.tConfig.fixed.offsetY;\n                var fixed = this.tConfig.fixed.position.toLowerCase();\n\n                if (fixed.indexOf('right') > -1) {\n                    x = x + w.globals.svgWidth - ttWidth + 10;\n                }\n\n                if (fixed.indexOf('bottom') > -1) {\n                    y = y + w.globals.svgHeight - ttHeight - 10;\n                }\n\n                tooltipEl.style.left = x + 'px';\n                tooltipEl.style.top = y + 'px';\n                return {\n                    x: x,\n                    y: y,\n                    ttWidth: ttWidth,\n                    ttHeight: ttHeight\n                };\n            }\n        }, {\n            key: \"addDatapointEventsListeners\",\n            value: function addDatapointEventsListeners(seriesHoverParams) {\n                var w = this.w;\n                var points = w.globals.dom.baseEl.querySelectorAll('.apexcharts-series-markers .apexcharts-marker, .apexcharts-bar-area, .apexcharts-candlestick-area, .apexcharts-boxPlot-area, .apexcharts-rangebar-area');\n                this.addPathsEventListeners(points, seriesHoverParams);\n            }\n        }, {\n            key: \"addPathsEventListeners\",\n            value: function addPathsEventListeners(paths, opts) {\n                    var self = this;\n\n                    var _loop2 = function _loop2(p) {\n                        var extendedOpts = {\n                            paths: paths[p],\n                            tooltipEl: opts.tooltipEl,\n                            tooltipY: opts.tooltipY,\n                            tooltipX: opts.tooltipX,\n                            elGrid: opts.elGrid,\n                            hoverArea: opts.hoverArea,\n                            ttItems: opts.ttItems\n                        };\n                        var events = ['mousemove', 'mouseup', 'touchmove', 'mouseout', 'touchend'];\n                        events.map(function(ev) {\n                            return paths[p].addEventListener(ev, self.seriesHover.bind(self, extendedOpts), {\n                                capture: false,\n                                passive: true\n                            });\n                        });\n                    };\n\n                    for (var p = 0; p < paths.length; p++) {\n                        _loop2(p);\n                    }\n                }\n                /*\n                 ** The actual series hover function\n                 */\n\n        }, {\n            key: \"seriesHover\",\n            value: function seriesHover(opt, e) {\n                var _this2 = this;\n\n                var chartGroups = [];\n                var w = this.w; // if user has more than one charts in group, we need to sync\n\n                if (w.config.chart.group) {\n                    chartGroups = this.ctx.getGroupedCharts();\n                }\n\n                if (w.globals.axisCharts && (w.globals.minX === -Infinity && w.globals.maxX === Infinity || w.globals.dataPoints === 0)) {\n                    return;\n                }\n\n                if (chartGroups.length) {\n                    chartGroups.forEach(function(ch) {\n                        var tooltipEl = _this2.getElTooltip(ch);\n\n                        var newOpts = {\n                            paths: opt.paths,\n                            tooltipEl: tooltipEl,\n                            tooltipY: opt.tooltipY,\n                            tooltipX: opt.tooltipX,\n                            elGrid: opt.elGrid,\n                            hoverArea: opt.hoverArea,\n                            ttItems: ch.w.globals.tooltip.ttItems\n                        }; // all the charts should have the same minX and maxX (same xaxis) for multiple tooltips to work correctly\n\n                        if (ch.w.globals.minX === _this2.w.globals.minX && ch.w.globals.maxX === _this2.w.globals.maxX) {\n                            ch.w.globals.tooltip.seriesHoverByContext({\n                                chartCtx: ch,\n                                ttCtx: ch.w.globals.tooltip,\n                                opt: newOpts,\n                                e: e\n                            });\n                        }\n                    });\n                } else {\n                    this.seriesHoverByContext({\n                        chartCtx: this.ctx,\n                        ttCtx: this.w.globals.tooltip,\n                        opt: opt,\n                        e: e\n                    });\n                }\n            }\n        }, {\n            key: \"seriesHoverByContext\",\n            value: function seriesHoverByContext(_ref) {\n                    var chartCtx = _ref.chartCtx,\n                        ttCtx = _ref.ttCtx,\n                        opt = _ref.opt,\n                        e = _ref.e;\n                    var w = chartCtx.w;\n                    var tooltipEl = this.getElTooltip(); // tooltipRect is calculated on every mousemove, because the text is dynamic\n\n                    ttCtx.tooltipRect = {\n                        x: 0,\n                        y: 0,\n                        ttWidth: tooltipEl.getBoundingClientRect().width,\n                        ttHeight: tooltipEl.getBoundingClientRect().height\n                    };\n                    ttCtx.e = e; // highlight the current hovered bars\n\n                    if (ttCtx.tooltipUtil.hasBars() && !w.globals.comboCharts && !ttCtx.isBarShared) {\n                        if (this.tConfig.onDatasetHover.highlightDataSeries) {\n                            var series = new Series(chartCtx);\n                            series.toggleSeriesOnHover(e, e.target.parentNode);\n                        }\n                    }\n\n                    if (ttCtx.fixedTooltip) {\n                        ttCtx.drawFixedTooltipRect();\n                    }\n\n                    if (w.globals.axisCharts) {\n                        ttCtx.axisChartsTooltips({\n                            e: e,\n                            opt: opt,\n                            tooltipRect: ttCtx.tooltipRect\n                        });\n                    } else {\n                        // non-plot charts i.e pie/donut/circle\n                        ttCtx.nonAxisChartsTooltips({\n                            e: e,\n                            opt: opt,\n                            tooltipRect: ttCtx.tooltipRect\n                        });\n                    }\n                } // tooltip handling for line/area/bar/columns/scatter\n\n        }, {\n            key: \"axisChartsTooltips\",\n            value: function axisChartsTooltips(_ref2) {\n                    var e = _ref2.e,\n                        opt = _ref2.opt;\n                    var w = this.w;\n                    var x, y;\n                    var seriesBound = opt.elGrid.getBoundingClientRect();\n                    var clientX = e.type === 'touchmove' ? e.touches[0].clientX : e.clientX;\n                    var clientY = e.type === 'touchmove' ? e.touches[0].clientY : e.clientY;\n                    this.clientY = clientY;\n                    this.clientX = clientX;\n                    w.globals.capturedSeriesIndex = -1;\n                    w.globals.capturedDataPointIndex = -1;\n\n                    if (clientY < seriesBound.top || clientY > seriesBound.top + seriesBound.height) {\n                        this.handleMouseOut(opt);\n                        return;\n                    }\n\n                    if (Array.isArray(this.tConfig.enabledOnSeries) && !w.config.tooltip.shared) {\n                        var index = parseInt(opt.paths.getAttribute('index'), 10);\n\n                        if (this.tConfig.enabledOnSeries.indexOf(index) < 0) {\n                            this.handleMouseOut(opt);\n                            return;\n                        }\n                    }\n\n                    var tooltipEl = this.getElTooltip();\n                    var xcrosshairs = this.getElXCrosshairs();\n                    var isStickyTooltip = w.globals.xyCharts || w.config.chart.type === 'bar' && !w.globals.isBarHorizontal && this.tooltipUtil.hasBars() && this.tConfig.shared || w.globals.comboCharts && this.tooltipUtil.hasBars();\n\n                    if (e.type === 'mousemove' || e.type === 'touchmove' || e.type === 'mouseup') {\n                        if (xcrosshairs !== null) {\n                            xcrosshairs.classList.add('apexcharts-active');\n                        }\n\n                        var hasYAxisTooltip = this.yaxisTooltips.filter(function(b) {\n                            return b === true;\n                        });\n\n                        if (this.ycrosshairs !== null && hasYAxisTooltip.length) {\n                            this.ycrosshairs.classList.add('apexcharts-active');\n                        }\n\n                        if (isStickyTooltip && !this.showOnIntersect) {\n                            this.handleStickyTooltip(e, clientX, clientY, opt);\n                        } else {\n                            if (w.config.chart.type === 'heatmap' || w.config.chart.type === 'treemap') {\n                                var markerXY = this.intersect.handleHeatTreeTooltip({\n                                    e: e,\n                                    opt: opt,\n                                    x: x,\n                                    y: y,\n                                    type: w.config.chart.type\n                                });\n                                x = markerXY.x;\n                                y = markerXY.y;\n                                tooltipEl.style.left = x + 'px';\n                                tooltipEl.style.top = y + 'px';\n                            } else {\n                                if (this.tooltipUtil.hasBars()) {\n                                    this.intersect.handleBarTooltip({\n                                        e: e,\n                                        opt: opt\n                                    });\n                                }\n\n                                if (this.tooltipUtil.hasMarkers()) {\n                                    // intersect - line/area/scatter/bubble\n                                    this.intersect.handleMarkerTooltip({\n                                        e: e,\n                                        opt: opt,\n                                        x: x,\n                                        y: y\n                                    });\n                                }\n                            }\n                        }\n\n                        if (this.yaxisTooltips.length) {\n                            for (var yt = 0; yt < w.config.yaxis.length; yt++) {\n                                this.axesTooltip.drawYaxisTooltipText(yt, clientY, this.xyRatios);\n                            }\n                        }\n\n                        opt.tooltipEl.classList.add('apexcharts-active');\n                    } else if (e.type === 'mouseout' || e.type === 'touchend') {\n                        this.handleMouseOut(opt);\n                    }\n                } // tooltip handling for pie/donuts\n\n        }, {\n            key: \"nonAxisChartsTooltips\",\n            value: function nonAxisChartsTooltips(_ref3) {\n                var e = _ref3.e,\n                    opt = _ref3.opt,\n                    tooltipRect = _ref3.tooltipRect;\n                var w = this.w;\n                var rel = opt.paths.getAttribute('rel');\n                var tooltipEl = this.getElTooltip();\n                var seriesBound = w.globals.dom.elWrap.getBoundingClientRect();\n\n                if (e.type === 'mousemove' || e.type === 'touchmove') {\n                    tooltipEl.classList.add('apexcharts-active');\n                    this.tooltipLabels.drawSeriesTexts({\n                        ttItems: opt.ttItems,\n                        i: parseInt(rel, 10) - 1,\n                        shared: false\n                    });\n                    var x = w.globals.clientX - seriesBound.left - tooltipRect.ttWidth / 2;\n                    var y = w.globals.clientY - seriesBound.top - tooltipRect.ttHeight - 10;\n                    tooltipEl.style.left = x + 'px';\n                    tooltipEl.style.top = y + 'px';\n\n                    if (w.config.legend.tooltipHoverFormatter) {\n                        var legendFormatter = w.config.legend.tooltipHoverFormatter;\n                        var i = rel - 1;\n                        var legendName = this.legendLabels[i].getAttribute('data:default-text');\n                        var text = legendFormatter(legendName, {\n                            seriesIndex: i,\n                            dataPointIndex: i,\n                            w: w\n                        });\n                        this.legendLabels[i].innerHTML = text;\n                    }\n                } else if (e.type === 'mouseout' || e.type === 'touchend') {\n                    tooltipEl.classList.remove('apexcharts-active');\n\n                    if (w.config.legend.tooltipHoverFormatter) {\n                        this.legendLabels.forEach(function(l) {\n                            var defaultText = l.getAttribute('data:default-text');\n                            l.innerHTML = decodeURIComponent(defaultText);\n                        });\n                    }\n                }\n            }\n        }, {\n            key: \"handleStickyTooltip\",\n            value: function handleStickyTooltip(e, clientX, clientY, opt) {\n                var w = this.w;\n                var capj = this.tooltipUtil.getNearestValues({\n                    context: this,\n                    hoverArea: opt.hoverArea,\n                    elGrid: opt.elGrid,\n                    clientX: clientX,\n                    clientY: clientY\n                });\n                var j = capj.j;\n                var capturedSeries = capj.capturedSeries;\n\n                if (capj.hoverX < 0 || capj.hoverX > w.globals.gridWidth) {\n                    this.handleMouseOut(opt);\n                    return;\n                }\n\n                if (capturedSeries !== null) {\n                    this.handleStickyCapturedSeries(e, capturedSeries, opt, j);\n                } else {\n                    // couldn't capture any series. check if shared X is same,\n                    // if yes, draw a grouped tooltip\n                    if (this.tooltipUtil.isXoverlap(j) || w.globals.isBarHorizontal) {\n                        this.create(e, this, 0, j, opt.ttItems);\n                    }\n                }\n            }\n        }, {\n            key: \"handleStickyCapturedSeries\",\n            value: function handleStickyCapturedSeries(e, capturedSeries, opt, j) {\n                var w = this.w;\n                var ignoreNull = w.globals.series[capturedSeries][j] === null;\n\n                if (ignoreNull) {\n                    this.handleMouseOut(opt);\n                    return;\n                }\n\n                if (typeof w.globals.series[capturedSeries][j] !== 'undefined') {\n                    if (this.tConfig.shared && this.tooltipUtil.isXoverlap(j) && this.tooltipUtil.isInitialSeriesSameLen()) {\n                        this.create(e, this, capturedSeries, j, opt.ttItems);\n                    } else {\n                        this.create(e, this, capturedSeries, j, opt.ttItems, false);\n                    }\n                } else {\n                    if (this.tooltipUtil.isXoverlap(j)) {\n                        this.create(e, this, 0, j, opt.ttItems);\n                    }\n                }\n            }\n        }, {\n            key: \"deactivateHoverFilter\",\n            value: function deactivateHoverFilter() {\n                var w = this.w;\n                var graphics = new Graphics(this.ctx);\n                var allPaths = w.globals.dom.Paper.select(\".apexcharts-bar-area\");\n\n                for (var b = 0; b < allPaths.length; b++) {\n                    graphics.pathMouseLeave(allPaths[b]);\n                }\n            }\n        }, {\n            key: \"handleMouseOut\",\n            value: function handleMouseOut(opt) {\n                var w = this.w;\n                var xcrosshairs = this.getElXCrosshairs();\n                opt.tooltipEl.classList.remove('apexcharts-active');\n                this.deactivateHoverFilter();\n\n                if (w.config.chart.type !== 'bubble') {\n                    this.marker.resetPointsSize();\n                }\n\n                if (xcrosshairs !== null) {\n                    xcrosshairs.classList.remove('apexcharts-active');\n                }\n\n                if (this.ycrosshairs !== null) {\n                    this.ycrosshairs.classList.remove('apexcharts-active');\n                }\n\n                if (this.blxaxisTooltip) {\n                    this.xaxisTooltip.classList.remove('apexcharts-active');\n                }\n\n                if (this.yaxisTooltips.length) {\n                    if (this.yaxisTTEls === null) {\n                        this.yaxisTTEls = w.globals.dom.baseEl.querySelectorAll('.apexcharts-yaxistooltip');\n                    }\n\n                    for (var i = 0; i < this.yaxisTTEls.length; i++) {\n                        this.yaxisTTEls[i].classList.remove('apexcharts-active');\n                    }\n                }\n\n                if (w.config.legend.tooltipHoverFormatter) {\n                    this.legendLabels.forEach(function(l) {\n                        var defaultText = l.getAttribute('data:default-text');\n                        l.innerHTML = decodeURIComponent(defaultText);\n                    });\n                }\n            }\n        }, {\n            key: \"markerClick\",\n            value: function markerClick(e, seriesIndex, dataPointIndex) {\n                var w = this.w;\n\n                if (typeof w.config.chart.events.markerClick === 'function') {\n                    w.config.chart.events.markerClick(e, this.ctx, {\n                        seriesIndex: seriesIndex,\n                        dataPointIndex: dataPointIndex,\n                        w: w\n                    });\n                }\n\n                this.ctx.events.fireEvent('markerClick', [e, this.ctx, {\n                    seriesIndex: seriesIndex,\n                    dataPointIndex: dataPointIndex,\n                    w: w\n                }]);\n            }\n        }, {\n            key: \"create\",\n            value: function create(e, context, capturedSeries, j, ttItems) {\n                var shared = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n                var w = this.w;\n                var ttCtx = context;\n\n                if (e.type === 'mouseup') {\n                    this.markerClick(e, capturedSeries, j);\n                }\n\n                if (shared === null) shared = this.tConfig.shared;\n                var hasMarkers = this.tooltipUtil.hasMarkers();\n                var bars = this.tooltipUtil.getElBars();\n\n                if (w.config.legend.tooltipHoverFormatter) {\n                    var legendFormatter = w.config.legend.tooltipHoverFormatter;\n                    var els = Array.from(this.legendLabels); // reset all legend values first\n\n                    els.forEach(function(l) {\n                        var legendName = l.getAttribute('data:default-text');\n                        l.innerHTML = decodeURIComponent(legendName);\n                    }); // for irregular time series\n\n                    for (var i = 0; i < els.length; i++) {\n                        var l = els[i];\n                        var lsIndex = parseInt(l.getAttribute('i'), 10);\n                        var legendName = decodeURIComponent(l.getAttribute('data:default-text'));\n                        var text = legendFormatter(legendName, {\n                            seriesIndex: shared ? lsIndex : capturedSeries,\n                            dataPointIndex: j,\n                            w: w\n                        });\n\n                        if (!shared) {\n                            l.innerHTML = lsIndex === capturedSeries ? text : legendName;\n\n                            if (capturedSeries === lsIndex) {\n                                break;\n                            }\n                        } else {\n                            l.innerHTML = w.globals.collapsedSeriesIndices.indexOf(lsIndex) < 0 ? text : legendName;\n                        }\n                    }\n                }\n\n                if (shared) {\n                    ttCtx.tooltipLabels.drawSeriesTexts({\n                        ttItems: ttItems,\n                        i: capturedSeries,\n                        j: j,\n                        shared: this.showOnIntersect ? false : this.tConfig.shared\n                    });\n\n                    if (hasMarkers) {\n                        if (w.globals.markers.largestSize > 0) {\n                            ttCtx.marker.enlargePoints(j);\n                        } else {\n                            ttCtx.tooltipPosition.moveDynamicPointsOnHover(j);\n                        }\n                    }\n\n                    if (this.tooltipUtil.hasBars()) {\n                        this.barSeriesHeight = this.tooltipUtil.getBarsHeight(bars);\n\n                        if (this.barSeriesHeight > 0) {\n                            // hover state, activate snap filter\n                            var graphics = new Graphics(this.ctx);\n                            var paths = w.globals.dom.Paper.select(\".apexcharts-bar-area[j='\".concat(j, \"']\")); // de-activate first\n\n                            this.deactivateHoverFilter();\n                            this.tooltipPosition.moveStickyTooltipOverBars(j);\n\n                            for (var b = 0; b < paths.length; b++) {\n                                graphics.pathMouseEnter(paths[b]);\n                            }\n                        }\n                    }\n                } else {\n                    ttCtx.tooltipLabels.drawSeriesTexts({\n                        shared: false,\n                        ttItems: ttItems,\n                        i: capturedSeries,\n                        j: j\n                    });\n\n                    if (this.tooltipUtil.hasBars()) {\n                        ttCtx.tooltipPosition.moveStickyTooltipOverBars(j);\n                    }\n\n                    if (hasMarkers) {\n                        ttCtx.tooltipPosition.moveMarkers(capturedSeries, j);\n                    }\n                }\n            }\n        }]);\n\n        return Tooltip;\n    }();\n\n    /**\n     * ApexCharts BarStacked Class responsible for drawing both Stacked Columns and Bars.\n     *\n     * @module BarStacked\n     * The whole calculation for stacked bar/column is different from normal bar/column,\n     * hence it makes sense to derive a new class for it extending most of the props of Parent Bar\n     **/\n\n    var BarStacked = /*#__PURE__*/ function(_Bar) {\n        _inherits(BarStacked, _Bar);\n\n        var _super = _createSuper(BarStacked);\n\n        function BarStacked() {\n            _classCallCheck(this, BarStacked);\n\n            return _super.apply(this, arguments);\n        }\n\n        _createClass(BarStacked, [{\n            key: \"draw\",\n            value: function draw(series, seriesIndex) {\n                var _this = this;\n\n                var w = this.w;\n                this.graphics = new Graphics(this.ctx);\n                this.bar = new Bar(this.ctx, this.xyRatios);\n                var coreUtils = new CoreUtils(this.ctx, w);\n                series = coreUtils.getLogSeries(series);\n                this.yRatio = coreUtils.getLogYRatios(this.yRatio);\n                this.barHelpers.initVariables(series);\n\n                if (w.config.chart.stackType === '100%') {\n                    series = w.globals.seriesPercent.slice();\n                }\n\n                this.series = series;\n                this.totalItems = 0;\n                this.prevY = []; // y position on chart\n\n                this.prevX = []; // x position on chart\n\n                this.prevYF = []; // y position including shapes on chart\n\n                this.prevXF = []; // x position including shapes on chart\n\n                this.prevYVal = []; // y values (series[i][j]) in columns\n\n                this.prevXVal = []; // x values (series[i][j]) in bars\n\n                this.xArrj = []; // xj indicates x position on graph in bars\n\n                this.xArrjF = []; // xjF indicates bar's x position + roundedShape's positions in bars\n\n                this.xArrjVal = []; // x val means the actual series's y values in horizontal/bars\n\n                this.yArrj = []; // yj indicates y position on graph in columns\n\n                this.yArrjF = []; // yjF indicates bar's y position + roundedShape's positions in columns\n\n                this.yArrjVal = []; // y val means the actual series's y values in columns\n\n                for (var sl = 0; sl < series.length; sl++) {\n                    if (series[sl].length > 0) {\n                        this.totalItems += series[sl].length;\n                    }\n                }\n\n                var ret = this.graphics.group({\n                    class: 'apexcharts-bar-series apexcharts-plot-series'\n                });\n                var x = 0;\n                var y = 0;\n\n                var _loop = function _loop(i, bc) {\n                    var xDivision = void 0; // xDivision is the GRIDWIDTH divided by number of datapoints (columns)\n\n                    var yDivision = void 0; // yDivision is the GRIDHEIGHT divided by number of datapoints (bars)\n\n                    var zeroH = void 0; // zeroH is the baseline where 0 meets y axis\n\n                    var zeroW = void 0; // zeroW is the baseline where 0 meets x axis\n\n                    var xArrValues = [];\n                    var yArrValues = [];\n                    var realIndex = w.globals.comboCharts ? seriesIndex[i] : i;\n\n                    if (_this.yRatio.length > 1) {\n                        _this.yaxisIndex = realIndex;\n                    }\n\n                    _this.isReversed = w.config.yaxis[_this.yaxisIndex] && w.config.yaxis[_this.yaxisIndex].reversed; // el to which series will be drawn\n\n                    var elSeries = _this.graphics.group({\n                        class: \"apexcharts-series\",\n                        seriesName: Utils.escapeString(w.globals.seriesNames[realIndex]),\n                        rel: i + 1,\n                        'data:realIndex': realIndex\n                    });\n\n                    _this.ctx.series.addCollapsedClassToSeries(elSeries, realIndex); // eldatalabels\n\n\n                    var elDataLabelsWrap = _this.graphics.group({\n                        class: 'apexcharts-datalabels',\n                        'data:realIndex': realIndex\n                    });\n\n                    var barHeight = 0;\n                    var barWidth = 0;\n\n                    var initPositions = _this.initialPositions(x, y, xDivision, yDivision, zeroH, zeroW);\n\n                    y = initPositions.y;\n                    barHeight = initPositions.barHeight;\n                    yDivision = initPositions.yDivision;\n                    zeroW = initPositions.zeroW;\n                    x = initPositions.x;\n                    barWidth = initPositions.barWidth;\n                    xDivision = initPositions.xDivision;\n                    zeroH = initPositions.zeroH;\n                    _this.yArrj = [];\n                    _this.yArrjF = [];\n                    _this.yArrjVal = [];\n                    _this.xArrj = [];\n                    _this.xArrjF = [];\n                    _this.xArrjVal = []; // if (!this.horizontal) {\n                    // this.xArrj.push(x + barWidth / 2)\n                    // }\n                    // fix issue #1215;\n                    // where all stack bar disappear after collapsing the first series\n                    // sol: if only 1 arr in this.prevY(this.prevY.length === 1) and all are NaN\n\n                    if (_this.prevY.length === 1 && _this.prevY[0].every(function(val) {\n                            return isNaN(val);\n                        })) {\n                        // make this.prevY[0] all zeroH\n                        _this.prevY[0] = _this.prevY[0].map(function(val) {\n                            return zeroH;\n                        }); // make this.prevYF[0] all 0\n\n                        _this.prevYF[0] = _this.prevYF[0].map(function(val) {\n                            return 0;\n                        });\n                    }\n\n                    for (var j = 0; j < w.globals.dataPoints; j++) {\n                        var strokeWidth = _this.barHelpers.getStrokeWidth(i, j, realIndex);\n\n                        var commonPathOpts = {\n                            indexes: {\n                                i: i,\n                                j: j,\n                                realIndex: realIndex,\n                                bc: bc\n                            },\n                            strokeWidth: strokeWidth,\n                            x: x,\n                            y: y,\n                            elSeries: elSeries\n                        };\n                        var paths = null;\n\n                        if (_this.isHorizontal) {\n                            paths = _this.drawStackedBarPaths(_objectSpread2(_objectSpread2({}, commonPathOpts), {}, {\n                                zeroW: zeroW,\n                                barHeight: barHeight,\n                                yDivision: yDivision\n                            }));\n                            barWidth = _this.series[i][j] / _this.invertedYRatio;\n                        } else {\n                            paths = _this.drawStackedColumnPaths(_objectSpread2(_objectSpread2({}, commonPathOpts), {}, {\n                                xDivision: xDivision,\n                                barWidth: barWidth,\n                                zeroH: zeroH\n                            }));\n                            barHeight = _this.series[i][j] / _this.yRatio[_this.yaxisIndex];\n                        }\n\n                        y = paths.y;\n                        x = paths.x;\n                        xArrValues.push(x);\n                        yArrValues.push(y);\n\n                        var pathFill = _this.barHelpers.getPathFillColor(series, i, j, realIndex);\n\n                        elSeries = _this.renderSeries({\n                            realIndex: realIndex,\n                            pathFill: pathFill,\n                            j: j,\n                            i: i,\n                            pathFrom: paths.pathFrom,\n                            pathTo: paths.pathTo,\n                            strokeWidth: strokeWidth,\n                            elSeries: elSeries,\n                            x: x,\n                            y: y,\n                            series: series,\n                            barHeight: barHeight,\n                            barWidth: barWidth,\n                            elDataLabelsWrap: elDataLabelsWrap,\n                            type: 'bar',\n                            visibleSeries: 0\n                        });\n                    } // push all x val arrays into main xArr\n\n\n                    w.globals.seriesXvalues[realIndex] = xArrValues;\n                    w.globals.seriesYvalues[realIndex] = yArrValues; // push all current y values array to main PrevY Array\n\n                    _this.prevY.push(_this.yArrj);\n\n                    _this.prevYF.push(_this.yArrjF);\n\n                    _this.prevYVal.push(_this.yArrjVal);\n\n                    _this.prevX.push(_this.xArrj);\n\n                    _this.prevXF.push(_this.xArrjF);\n\n                    _this.prevXVal.push(_this.xArrjVal);\n\n                    ret.add(elSeries);\n                };\n\n                for (var i = 0, bc = 0; i < series.length; i++, bc++) {\n                    _loop(i, bc);\n                }\n\n                return ret;\n            }\n        }, {\n            key: \"initialPositions\",\n            value: function initialPositions(x, y, xDivision, yDivision, zeroH, zeroW) {\n                var w = this.w;\n                var barHeight, barWidth;\n\n                if (this.isHorizontal) {\n                    // height divided into equal parts\n                    yDivision = w.globals.gridHeight / w.globals.dataPoints;\n                    barHeight = yDivision;\n                    barHeight = barHeight * parseInt(w.config.plotOptions.bar.barHeight, 10) / 100;\n                    zeroW = this.baseLineInvertedY + w.globals.padHorizontal + (this.isReversed ? w.globals.gridWidth : 0) - (this.isReversed ? this.baseLineInvertedY * 2 : 0); // initial y position is half of barHeight * half of number of Bars\n\n                    y = (yDivision - barHeight) / 2;\n                } else {\n                    // width divided into equal parts\n                    xDivision = w.globals.gridWidth / w.globals.dataPoints;\n                    barWidth = xDivision;\n\n                    if (w.globals.isXNumeric && w.globals.dataPoints > 1) {\n                        // the check (w.globals.dataPoints > 1) fixes apexcharts.js #1617\n                        xDivision = w.globals.minXDiff / this.xRatio;\n                        barWidth = xDivision * parseInt(this.barOptions.columnWidth, 10) / 100;\n                    } else {\n                        barWidth = barWidth * parseInt(w.config.plotOptions.bar.columnWidth, 10) / 100;\n                    }\n\n                    zeroH = this.baseLineY[this.yaxisIndex] + (this.isReversed ? w.globals.gridHeight : 0) - (this.isReversed ? this.baseLineY[this.yaxisIndex] * 2 : 0); // initial x position is one third of barWidth\n\n                    x = w.globals.padHorizontal + (xDivision - barWidth) / 2;\n                }\n\n                return {\n                    x: x,\n                    y: y,\n                    yDivision: yDivision,\n                    xDivision: xDivision,\n                    barHeight: barHeight,\n                    barWidth: barWidth,\n                    zeroH: zeroH,\n                    zeroW: zeroW\n                };\n            }\n        }, {\n            key: \"drawStackedBarPaths\",\n            value: function drawStackedBarPaths(_ref) {\n                var indexes = _ref.indexes,\n                    barHeight = _ref.barHeight,\n                    strokeWidth = _ref.strokeWidth,\n                    zeroW = _ref.zeroW,\n                    x = _ref.x,\n                    y = _ref.y,\n                    yDivision = _ref.yDivision,\n                    elSeries = _ref.elSeries;\n                var w = this.w;\n                var barYPosition = y;\n                var barXPosition;\n                var i = indexes.i;\n                var j = indexes.j;\n                var prevBarW = 0;\n\n                for (var k = 0; k < this.prevXF.length; k++) {\n                    prevBarW = prevBarW + this.prevXF[k][j];\n                }\n\n                if (i > 0) {\n                    var bXP = zeroW;\n\n                    if (this.prevXVal[i - 1][j] < 0) {\n                        bXP = this.series[i][j] >= 0 ? this.prevX[i - 1][j] + prevBarW - (this.isReversed ? prevBarW : 0) * 2 : this.prevX[i - 1][j];\n                    } else if (this.prevXVal[i - 1][j] >= 0) {\n                        bXP = this.series[i][j] >= 0 ? this.prevX[i - 1][j] : this.prevX[i - 1][j] - prevBarW + (this.isReversed ? prevBarW : 0) * 2;\n                    }\n\n                    barXPosition = bXP;\n                } else {\n                    // the first series will not have prevX values\n                    barXPosition = zeroW;\n                }\n\n                if (this.series[i][j] === null) {\n                    x = barXPosition;\n                } else {\n                    x = barXPosition + this.series[i][j] / this.invertedYRatio - (this.isReversed ? this.series[i][j] / this.invertedYRatio : 0) * 2;\n                }\n\n                var paths = this.barHelpers.getBarpaths({\n                    barYPosition: barYPosition,\n                    barHeight: barHeight,\n                    x1: barXPosition,\n                    x2: x,\n                    strokeWidth: strokeWidth,\n                    series: this.series,\n                    realIndex: indexes.realIndex,\n                    i: i,\n                    j: j,\n                    w: w\n                });\n                this.barHelpers.barBackground({\n                    j: j,\n                    i: i,\n                    y1: barYPosition,\n                    y2: barHeight,\n                    elSeries: elSeries\n                });\n                y = y + yDivision;\n                return {\n                    pathTo: paths.pathTo,\n                    pathFrom: paths.pathFrom,\n                    x: x,\n                    y: y\n                };\n            }\n        }, {\n            key: \"drawStackedColumnPaths\",\n            value: function drawStackedColumnPaths(_ref2) {\n                var indexes = _ref2.indexes,\n                    x = _ref2.x,\n                    y = _ref2.y,\n                    xDivision = _ref2.xDivision,\n                    barWidth = _ref2.barWidth,\n                    zeroH = _ref2.zeroH,\n                    strokeWidth = _ref2.strokeWidth,\n                    elSeries = _ref2.elSeries;\n                var w = this.w;\n                var i = indexes.i;\n                var j = indexes.j;\n                var bc = indexes.bc;\n\n                if (w.globals.isXNumeric) {\n                    var seriesVal = w.globals.seriesX[i][j];\n                    if (!seriesVal) seriesVal = 0;\n                    x = (seriesVal - w.globals.minX) / this.xRatio - barWidth / 2;\n                }\n\n                var barXPosition = x;\n                var barYPosition;\n                var prevBarH = 0;\n\n                for (var k = 0; k < this.prevYF.length; k++) {\n                    // fix issue #1215\n                    // in case where this.prevYF[k][j] is NaN, use 0 instead\n                    prevBarH = prevBarH + (!isNaN(this.prevYF[k][j]) ? this.prevYF[k][j] : 0);\n                }\n\n                if (i > 0 && !w.globals.isXNumeric || i > 0 && w.globals.isXNumeric && w.globals.seriesX[i - 1][j] === w.globals.seriesX[i][j]) {\n                    var bYP;\n                    var prevYValue;\n                    var p = Math.min(this.yRatio.length + 1, i + 1);\n\n                    if (this.prevY[i - 1] !== undefined) {\n                        for (var ii = 1; ii < p; ii++) {\n                            if (!isNaN(this.prevY[i - ii][j])) {\n                                // find the previous available value to give prevYValue\n                                prevYValue = this.prevY[i - ii][j]; // if found it, break the loop\n\n                                break;\n                            }\n                        }\n                    }\n\n                    for (var _ii = 1; _ii < p; _ii++) {\n                        // find the previous available value(non-NaN) to give bYP\n                        if (this.prevYVal[i - _ii][j] < 0) {\n                            bYP = this.series[i][j] >= 0 ? prevYValue - prevBarH + (this.isReversed ? prevBarH : 0) * 2 : prevYValue; // found it? break the loop\n\n                            break;\n                        } else if (this.prevYVal[i - _ii][j] >= 0) {\n                            bYP = this.series[i][j] >= 0 ? prevYValue : prevYValue + prevBarH - (this.isReversed ? prevBarH : 0) * 2; // found it? break the loop\n\n                            break;\n                        }\n                    }\n\n                    if (typeof bYP === 'undefined') bYP = w.globals.gridHeight; // if this.prevYF[0] is all 0 resulted from line #486\n                    // AND every arr starting from the second only contains NaN\n\n                    if (this.prevYF[0].every(function(val) {\n                            return val === 0;\n                        }) && this.prevYF.slice(1, i).every(function(arr) {\n                            return arr.every(function(val) {\n                                return isNaN(val);\n                            });\n                        })) {\n                        // Use the same calc way as line #485\n                        barYPosition = w.globals.gridHeight - zeroH;\n                    } else {\n                        // Nothing special\n                        barYPosition = bYP;\n                    }\n                } else {\n                    // the first series will not have prevY values, also if the prev index's series X doesn't matches the current index's series X, then start from zero\n                    barYPosition = w.globals.gridHeight - zeroH;\n                }\n\n                y = barYPosition - this.series[i][j] / this.yRatio[this.yaxisIndex] + (this.isReversed ? this.series[i][j] / this.yRatio[this.yaxisIndex] : 0) * 2;\n                var paths = this.barHelpers.getColumnPaths({\n                    barXPosition: barXPosition,\n                    barWidth: barWidth,\n                    y1: barYPosition,\n                    y2: y,\n                    yRatio: this.yRatio[this.yaxisIndex],\n                    strokeWidth: this.strokeWidth,\n                    series: this.series,\n                    realIndex: indexes.realIndex,\n                    i: i,\n                    j: j,\n                    w: w\n                });\n                this.barHelpers.barBackground({\n                    bc: bc,\n                    j: j,\n                    i: i,\n                    x1: barXPosition,\n                    x2: barWidth,\n                    elSeries: elSeries\n                });\n                x = x + xDivision;\n                return {\n                    pathTo: paths.pathTo,\n                    pathFrom: paths.pathFrom,\n                    x: w.globals.isXNumeric ? x - xDivision : x,\n                    y: y\n                };\n            }\n        }]);\n\n        return BarStacked;\n    }(Bar);\n\n    /**\n     * ApexCharts BoxCandleStick Class responsible for drawing both Stacked Columns and Bars.\n     *\n     * @module BoxCandleStick\n     **/\n\n    var BoxCandleStick = /*#__PURE__*/ function(_Bar) {\n        _inherits(BoxCandleStick, _Bar);\n\n        var _super = _createSuper(BoxCandleStick);\n\n        function BoxCandleStick() {\n            _classCallCheck(this, BoxCandleStick);\n\n            return _super.apply(this, arguments);\n        }\n\n        _createClass(BoxCandleStick, [{\n            key: \"draw\",\n            value: function draw(series, seriesIndex) {\n                var _this = this;\n\n                var w = this.w;\n                var graphics = new Graphics(this.ctx);\n                var fill = new Fill(this.ctx);\n                this.candlestickOptions = this.w.config.plotOptions.candlestick;\n                this.boxOptions = this.w.config.plotOptions.boxPlot;\n                var coreUtils = new CoreUtils(this.ctx, w);\n                series = coreUtils.getLogSeries(series);\n                this.series = series;\n                this.yRatio = coreUtils.getLogYRatios(this.yRatio);\n                this.barHelpers.initVariables(series);\n                var ret = graphics.group({\n                    class: \"apexcharts-\".concat(w.config.chart.type, \"-series apexcharts-plot-series\")\n                });\n\n                var _loop = function _loop(i) {\n                    _this.isBoxPlot = w.config.chart.type === 'boxPlot' || w.config.series[i].type === 'boxPlot';\n                    var x = void 0,\n                        y = void 0,\n                        xDivision = void 0,\n                        // xDivision is the GRIDWIDTH divided by number of datapoints (columns)\n                        zeroH = void 0; // zeroH is the baseline where 0 meets y axis\n\n                    var yArrj = []; // hold y values of current iterating series\n\n                    var xArrj = []; // hold x values of current iterating series\n\n                    var realIndex = w.globals.comboCharts ? seriesIndex[i] : i; // el to which series will be drawn\n\n                    var elSeries = graphics.group({\n                        class: \"apexcharts-series\",\n                        seriesName: Utils.escapeString(w.globals.seriesNames[realIndex]),\n                        rel: i + 1,\n                        'data:realIndex': realIndex\n                    });\n\n                    if (series[i].length > 0) {\n                        _this.visibleI = _this.visibleI + 1;\n                    }\n\n                    var barHeight = 0;\n                    var barWidth = 0;\n\n                    if (_this.yRatio.length > 1) {\n                        _this.yaxisIndex = realIndex;\n                    }\n\n                    var initPositions = _this.barHelpers.initialPositions();\n\n                    y = initPositions.y;\n                    barHeight = initPositions.barHeight;\n                    x = initPositions.x;\n                    barWidth = initPositions.barWidth;\n                    xDivision = initPositions.xDivision;\n                    zeroH = initPositions.zeroH;\n                    xArrj.push(x + barWidth / 2); // eldatalabels\n\n                    var elDataLabelsWrap = graphics.group({\n                        class: 'apexcharts-datalabels',\n                        'data:realIndex': realIndex\n                    });\n\n                    var _loop2 = function _loop2(j) {\n                        var strokeWidth = _this.barHelpers.getStrokeWidth(i, j, realIndex);\n\n                        var paths = _this.drawBoxPaths({\n                            indexes: {\n                                i: i,\n                                j: j,\n                                realIndex: realIndex\n                            },\n                            x: x,\n                            y: y,\n                            xDivision: xDivision,\n                            barWidth: barWidth,\n                            zeroH: zeroH,\n                            strokeWidth: strokeWidth,\n                            elSeries: elSeries\n                        });\n\n                        y = paths.y;\n                        x = paths.x; // push current X\n\n                        if (j > 0) {\n                            xArrj.push(x + barWidth / 2);\n                        }\n\n                        yArrj.push(y);\n                        paths.pathTo.forEach(function(pathTo, pi) {\n                            var lineFill = !_this.isBoxPlot && _this.candlestickOptions.wick.useFillColor ? paths.color[pi] : w.globals.stroke.colors[i];\n                            var pathFill = fill.fillPath({\n                                seriesNumber: realIndex,\n                                dataPointIndex: j,\n                                color: paths.color[pi],\n                                value: series[i][j]\n                            });\n\n                            _this.renderSeries({\n                                realIndex: realIndex,\n                                pathFill: pathFill,\n                                lineFill: lineFill,\n                                j: j,\n                                i: i,\n                                pathFrom: paths.pathFrom,\n                                pathTo: pathTo,\n                                strokeWidth: strokeWidth,\n                                elSeries: elSeries,\n                                x: x,\n                                y: y,\n                                series: series,\n                                barHeight: barHeight,\n                                barWidth: barWidth,\n                                elDataLabelsWrap: elDataLabelsWrap,\n                                visibleSeries: _this.visibleI,\n                                type: w.config.chart.type\n                            });\n                        });\n                    };\n\n                    for (var j = 0; j < w.globals.dataPoints; j++) {\n                        _loop2(j);\n                    } // push all x val arrays into main xArr\n\n\n                    w.globals.seriesXvalues[realIndex] = xArrj;\n                    w.globals.seriesYvalues[realIndex] = yArrj;\n                    ret.add(elSeries);\n                };\n\n                for (var i = 0; i < series.length; i++) {\n                    _loop(i);\n                }\n\n                return ret;\n            }\n        }, {\n            key: \"drawBoxPaths\",\n            value: function drawBoxPaths(_ref) {\n                var indexes = _ref.indexes,\n                    x = _ref.x,\n                    y = _ref.y,\n                    xDivision = _ref.xDivision,\n                    barWidth = _ref.barWidth,\n                    zeroH = _ref.zeroH,\n                    strokeWidth = _ref.strokeWidth;\n                var w = this.w;\n                var graphics = new Graphics(this.ctx);\n                var i = indexes.i;\n                var j = indexes.j;\n                var isPositive = true;\n                var colorPos = w.config.plotOptions.candlestick.colors.upward;\n                var colorNeg = w.config.plotOptions.candlestick.colors.downward;\n                var color = '';\n\n                if (this.isBoxPlot) {\n                    color = [this.boxOptions.colors.lower, this.boxOptions.colors.upper];\n                }\n\n                var yRatio = this.yRatio[this.yaxisIndex];\n                var realIndex = indexes.realIndex;\n                var ohlc = this.getOHLCValue(realIndex, j);\n                var l1 = zeroH;\n                var l2 = zeroH;\n\n                if (ohlc.o > ohlc.c) {\n                    isPositive = false;\n                }\n\n                var y1 = Math.min(ohlc.o, ohlc.c);\n                var y2 = Math.max(ohlc.o, ohlc.c);\n                var m = ohlc.m;\n\n                if (w.globals.isXNumeric) {\n                    x = (w.globals.seriesX[realIndex][j] - w.globals.minX) / this.xRatio - barWidth / 2;\n                }\n\n                var barXPosition = x + barWidth * this.visibleI;\n\n                if (typeof this.series[i][j] === 'undefined' || this.series[i][j] === null) {\n                    y1 = zeroH;\n                    y2 = zeroH;\n                } else {\n                    y1 = zeroH - y1 / yRatio;\n                    y2 = zeroH - y2 / yRatio;\n                    l1 = zeroH - ohlc.h / yRatio;\n                    l2 = zeroH - ohlc.l / yRatio;\n                    m = zeroH - ohlc.m / yRatio;\n                }\n\n                var pathTo = graphics.move(barXPosition, zeroH);\n                var pathFrom = graphics.move(barXPosition + barWidth / 2, y1);\n\n                if (w.globals.previousPaths.length > 0) {\n                    pathFrom = this.getPreviousPath(realIndex, j, true);\n                }\n\n                if (this.isBoxPlot) {\n                    pathTo = [graphics.move(barXPosition, y1) + graphics.line(barXPosition + barWidth / 2, y1) + graphics.line(barXPosition + barWidth / 2, l1) + graphics.line(barXPosition + barWidth / 4, l1) + graphics.line(barXPosition + barWidth - barWidth / 4, l1) + graphics.line(barXPosition + barWidth / 2, l1) + graphics.line(barXPosition + barWidth / 2, y1) + graphics.line(barXPosition + barWidth, y1) + graphics.line(barXPosition + barWidth, m) + graphics.line(barXPosition, m) + graphics.line(barXPosition, y1 + strokeWidth / 2), graphics.move(barXPosition, m) + graphics.line(barXPosition + barWidth, m) + graphics.line(barXPosition + barWidth, y2) + graphics.line(barXPosition + barWidth / 2, y2) + graphics.line(barXPosition + barWidth / 2, l2) + graphics.line(barXPosition + barWidth - barWidth / 4, l2) + graphics.line(barXPosition + barWidth / 4, l2) + graphics.line(barXPosition + barWidth / 2, l2) + graphics.line(barXPosition + barWidth / 2, y2) + graphics.line(barXPosition, y2) + graphics.line(barXPosition, m) + 'z'];\n                } else {\n                    // candlestick\n                    pathTo = [graphics.move(barXPosition, y2) + graphics.line(barXPosition + barWidth / 2, y2) + graphics.line(barXPosition + barWidth / 2, l1) + graphics.line(barXPosition + barWidth / 2, y2) + graphics.line(barXPosition + barWidth, y2) + graphics.line(barXPosition + barWidth, y1) + graphics.line(barXPosition + barWidth / 2, y1) + graphics.line(barXPosition + barWidth / 2, l2) + graphics.line(barXPosition + barWidth / 2, y1) + graphics.line(barXPosition, y1) + graphics.line(barXPosition, y2 - strokeWidth / 2)];\n                }\n\n                pathFrom = pathFrom + graphics.move(barXPosition, y1);\n\n                if (!w.globals.isXNumeric) {\n                    x = x + xDivision;\n                }\n\n                return {\n                    pathTo: pathTo,\n                    pathFrom: pathFrom,\n                    x: x,\n                    y: y2,\n                    barXPosition: barXPosition,\n                    color: this.isBoxPlot ? color : isPositive ? [colorPos] : [colorNeg]\n                };\n            }\n        }, {\n            key: \"getOHLCValue\",\n            value: function getOHLCValue(i, j) {\n                var w = this.w;\n                return {\n                    o: this.isBoxPlot ? w.globals.seriesCandleH[i][j] : w.globals.seriesCandleO[i][j],\n                    h: this.isBoxPlot ? w.globals.seriesCandleO[i][j] : w.globals.seriesCandleH[i][j],\n                    m: w.globals.seriesCandleM[i][j],\n                    l: this.isBoxPlot ? w.globals.seriesCandleC[i][j] : w.globals.seriesCandleL[i][j],\n                    c: this.isBoxPlot ? w.globals.seriesCandleL[i][j] : w.globals.seriesCandleC[i][j]\n                };\n            }\n        }]);\n\n        return BoxCandleStick;\n    }(Bar);\n\n    var TreemapHelpers = /*#__PURE__*/ function() {\n        function TreemapHelpers(ctx) {\n            _classCallCheck(this, TreemapHelpers);\n\n            this.ctx = ctx;\n            this.w = ctx.w;\n        }\n\n        _createClass(TreemapHelpers, [{\n            key: \"checkColorRange\",\n            value: function checkColorRange() {\n                var w = this.w;\n                var negRange = false;\n                var chartOpts = w.config.plotOptions[w.config.chart.type];\n\n                if (chartOpts.colorScale.ranges.length > 0) {\n                    chartOpts.colorScale.ranges.map(function(range, index) {\n                        if (range.from <= 0) {\n                            negRange = true;\n                        }\n                    });\n                }\n\n                return negRange;\n            }\n        }, {\n            key: \"getShadeColor\",\n            value: function getShadeColor(chartType, i, j, negRange) {\n                var w = this.w;\n                var colorShadePercent = 1;\n                var shadeIntensity = w.config.plotOptions[chartType].shadeIntensity;\n                var colorProps = this.determineColor(chartType, i, j);\n\n                if (w.globals.hasNegs || negRange) {\n                    if (w.config.plotOptions[chartType].reverseNegativeShade) {\n                        if (colorProps.percent < 0) {\n                            colorShadePercent = colorProps.percent / 100 * (shadeIntensity * 1.25);\n                        } else {\n                            colorShadePercent = (1 - colorProps.percent / 100) * (shadeIntensity * 1.25);\n                        }\n                    } else {\n                        if (colorProps.percent <= 0) {\n                            colorShadePercent = 1 - (1 + colorProps.percent / 100) * shadeIntensity;\n                        } else {\n                            colorShadePercent = (1 - colorProps.percent / 100) * shadeIntensity;\n                        }\n                    }\n                } else {\n                    colorShadePercent = 1 - colorProps.percent / 100;\n\n                    if (chartType === 'treemap') {\n                        colorShadePercent = (1 - colorProps.percent / 100) * (shadeIntensity * 1.25);\n                    }\n                }\n\n                var color = colorProps.color;\n                var utils = new Utils();\n\n                if (w.config.plotOptions[chartType].enableShades) {\n                    if (this.w.config.theme.mode === 'dark') {\n                        color = Utils.hexToRgba(utils.shadeColor(colorShadePercent * -1, colorProps.color), w.config.fill.opacity);\n                    } else {\n                        color = Utils.hexToRgba(utils.shadeColor(colorShadePercent, colorProps.color), w.config.fill.opacity);\n                    }\n                }\n\n                return {\n                    color: color,\n                    colorProps: colorProps\n                };\n            }\n        }, {\n            key: \"determineColor\",\n            value: function determineColor(chartType, i, j) {\n                var w = this.w;\n                var val = w.globals.series[i][j];\n                var chartOpts = w.config.plotOptions[chartType];\n                var seriesNumber = chartOpts.colorScale.inverse ? j : i;\n                var isDistributed = w.config.plotOptions[chartType].distributed;\n\n                if (isDistributed) {\n                    seriesNumber = j;\n                }\n\n                var color = w.globals.colors[seriesNumber];\n                var foreColor = null;\n                var min = Math.min.apply(Math, _toConsumableArray(w.globals.series[i]));\n                var max = Math.max.apply(Math, _toConsumableArray(w.globals.series[i]));\n\n                if (!chartOpts.distributed && chartType === 'heatmap') {\n                    min = w.globals.minY;\n                    max = w.globals.maxY;\n                }\n\n                if (typeof chartOpts.colorScale.min !== 'undefined') {\n                    min = chartOpts.colorScale.min < w.globals.minY ? chartOpts.colorScale.min : w.globals.minY;\n                    max = chartOpts.colorScale.max > w.globals.maxY ? chartOpts.colorScale.max : w.globals.maxY;\n                }\n\n                var total = Math.abs(max) + Math.abs(min);\n                var percent = 100 * val / (total === 0 ? total - 0.000001 : total);\n\n                if (chartOpts.colorScale.ranges.length > 0) {\n                    var colorRange = chartOpts.colorScale.ranges;\n                    colorRange.map(function(range, index) {\n                        if (val >= range.from && val <= range.to) {\n                            color = range.color;\n                            foreColor = range.foreColor ? range.foreColor : null;\n                            min = range.from;\n                            max = range.to;\n                            var rTotal = Math.abs(max) + Math.abs(min);\n                            percent = 100 * val / (rTotal === 0 ? rTotal - 0.000001 : rTotal);\n                        }\n                    });\n                }\n\n                return {\n                    color: color,\n                    foreColor: foreColor,\n                    percent: percent\n                };\n            }\n        }, {\n            key: \"calculateDataLabels\",\n            value: function calculateDataLabels(_ref) {\n                var text = _ref.text,\n                    x = _ref.x,\n                    y = _ref.y,\n                    i = _ref.i,\n                    j = _ref.j,\n                    colorProps = _ref.colorProps,\n                    fontSize = _ref.fontSize;\n                var w = this.w;\n                var dataLabelsConfig = w.config.dataLabels;\n                var graphics = new Graphics(this.ctx);\n                var dataLabels = new DataLabels(this.ctx);\n                var elDataLabelsWrap = null;\n\n                if (dataLabelsConfig.enabled) {\n                    elDataLabelsWrap = graphics.group({\n                        class: 'apexcharts-data-labels'\n                    });\n                    var offX = dataLabelsConfig.offsetX;\n                    var offY = dataLabelsConfig.offsetY;\n                    var dataLabelsX = x + offX;\n                    var dataLabelsY = y + parseFloat(dataLabelsConfig.style.fontSize) / 3 + offY;\n                    dataLabels.plotDataLabelsText({\n                        x: dataLabelsX,\n                        y: dataLabelsY,\n                        text: text,\n                        i: i,\n                        j: j,\n                        color: colorProps.foreColor,\n                        parent: elDataLabelsWrap,\n                        fontSize: fontSize,\n                        dataLabelsConfig: dataLabelsConfig\n                    });\n                }\n\n                return elDataLabelsWrap;\n            }\n        }, {\n            key: \"addListeners\",\n            value: function addListeners(elRect) {\n                var graphics = new Graphics(this.ctx);\n                elRect.node.addEventListener('mouseenter', graphics.pathMouseEnter.bind(this, elRect));\n                elRect.node.addEventListener('mouseleave', graphics.pathMouseLeave.bind(this, elRect));\n                elRect.node.addEventListener('mousedown', graphics.pathMouseDown.bind(this, elRect));\n            }\n        }]);\n\n        return TreemapHelpers;\n    }();\n\n    /**\n     * ApexCharts HeatMap Class.\n     * @module HeatMap\n     **/\n\n    var HeatMap = /*#__PURE__*/ function() {\n        function HeatMap(ctx, xyRatios) {\n            _classCallCheck(this, HeatMap);\n\n            this.ctx = ctx;\n            this.w = ctx.w;\n            this.xRatio = xyRatios.xRatio;\n            this.yRatio = xyRatios.yRatio;\n            this.dynamicAnim = this.w.config.chart.animations.dynamicAnimation;\n            this.helpers = new TreemapHelpers(ctx);\n            this.rectRadius = this.w.config.plotOptions.heatmap.radius;\n            this.strokeWidth = this.w.config.stroke.show ? this.w.config.stroke.width : 0;\n        }\n\n        _createClass(HeatMap, [{\n            key: \"draw\",\n            value: function draw(series) {\n                var w = this.w;\n                var graphics = new Graphics(this.ctx);\n                var ret = graphics.group({\n                    class: 'apexcharts-heatmap'\n                });\n                ret.attr('clip-path', \"url(#gridRectMask\".concat(w.globals.cuid, \")\")); // width divided into equal parts\n\n                var xDivision = w.globals.gridWidth / w.globals.dataPoints;\n                var yDivision = w.globals.gridHeight / w.globals.series.length;\n                var y1 = 0;\n                var rev = false;\n                this.negRange = this.helpers.checkColorRange();\n                var heatSeries = series.slice();\n\n                if (w.config.yaxis[0].reversed) {\n                    rev = true;\n                    heatSeries.reverse();\n                }\n\n                for (var i = rev ? 0 : heatSeries.length - 1; rev ? i < heatSeries.length : i >= 0; rev ? i++ : i--) {\n                    // el to which series will be drawn\n                    var elSeries = graphics.group({\n                        class: \"apexcharts-series apexcharts-heatmap-series\",\n                        seriesName: Utils.escapeString(w.globals.seriesNames[i]),\n                        rel: i + 1,\n                        'data:realIndex': i\n                    });\n                    this.ctx.series.addCollapsedClassToSeries(elSeries, i);\n\n                    if (w.config.chart.dropShadow.enabled) {\n                        var shadow = w.config.chart.dropShadow;\n                        var filters = new Filters(this.ctx);\n                        filters.dropShadow(elSeries, shadow, i);\n                    }\n\n                    var x1 = 0;\n                    var shadeIntensity = w.config.plotOptions.heatmap.shadeIntensity;\n\n                    for (var j = 0; j < heatSeries[i].length; j++) {\n                        var heatColor = this.helpers.getShadeColor(w.config.chart.type, i, j, this.negRange);\n                        var color = heatColor.color;\n                        var heatColorProps = heatColor.colorProps;\n\n                        if (w.config.fill.type === 'image') {\n                            var fill = new Fill(this.ctx);\n                            color = fill.fillPath({\n                                seriesNumber: i,\n                                dataPointIndex: j,\n                                opacity: w.globals.hasNegs ? heatColorProps.percent < 0 ? 1 - (1 + heatColorProps.percent / 100) : shadeIntensity + heatColorProps.percent / 100 : heatColorProps.percent / 100,\n                                patternID: Utils.randomId(),\n                                width: w.config.fill.image.width ? w.config.fill.image.width : xDivision,\n                                height: w.config.fill.image.height ? w.config.fill.image.height : yDivision\n                            });\n                        }\n\n                        var radius = this.rectRadius;\n                        var rect = graphics.drawRect(x1, y1, xDivision, yDivision, radius);\n                        rect.attr({\n                            cx: x1,\n                            cy: y1\n                        });\n                        rect.node.classList.add('apexcharts-heatmap-rect');\n                        elSeries.add(rect);\n                        rect.attr({\n                            fill: color,\n                            i: i,\n                            index: i,\n                            j: j,\n                            val: heatSeries[i][j],\n                            'stroke-width': this.strokeWidth,\n                            stroke: w.config.plotOptions.heatmap.useFillColorAsStroke ? color : w.globals.stroke.colors[0],\n                            color: color\n                        });\n                        this.helpers.addListeners(rect);\n\n                        if (w.config.chart.animations.enabled && !w.globals.dataChanged) {\n                            var speed = 1;\n\n                            if (!w.globals.resized) {\n                                speed = w.config.chart.animations.speed;\n                            }\n\n                            this.animateHeatMap(rect, x1, y1, xDivision, yDivision, speed);\n                        }\n\n                        if (w.globals.dataChanged) {\n                            var _speed = 1;\n\n                            if (this.dynamicAnim.enabled && w.globals.shouldAnimate) {\n                                _speed = this.dynamicAnim.speed;\n                                var colorFrom = w.globals.previousPaths[i] && w.globals.previousPaths[i][j] && w.globals.previousPaths[i][j].color;\n                                if (!colorFrom) colorFrom = 'rgba(255, 255, 255, 0)';\n                                this.animateHeatColor(rect, Utils.isColorHex(colorFrom) ? colorFrom : Utils.rgb2hex(colorFrom), Utils.isColorHex(color) ? color : Utils.rgb2hex(color), _speed);\n                            }\n                        }\n\n                        var formatter = w.config.dataLabels.formatter;\n                        var formattedText = formatter(w.globals.series[i][j], {\n                            value: w.globals.series[i][j],\n                            seriesIndex: i,\n                            dataPointIndex: j,\n                            w: w\n                        });\n                        var dataLabels = this.helpers.calculateDataLabels({\n                            text: formattedText,\n                            x: x1 + xDivision / 2,\n                            y: y1 + yDivision / 2,\n                            i: i,\n                            j: j,\n                            colorProps: heatColorProps,\n                            series: heatSeries\n                        });\n\n                        if (dataLabels !== null) {\n                            elSeries.add(dataLabels);\n                        }\n\n                        x1 = x1 + xDivision;\n                    }\n\n                    y1 = y1 + yDivision;\n                    ret.add(elSeries);\n                } // adjust yaxis labels for heatmap\n\n\n                var yAxisScale = w.globals.yAxisScale[0].result.slice();\n\n                if (w.config.yaxis[0].reversed) {\n                    yAxisScale.unshift('');\n                } else {\n                    yAxisScale.push('');\n                }\n\n                w.globals.yAxisScale[0].result = yAxisScale;\n                var divisor = w.globals.gridHeight / w.globals.series.length;\n                w.config.yaxis[0].labels.offsetY = -(divisor / 2);\n                return ret;\n            }\n        }, {\n            key: \"animateHeatMap\",\n            value: function animateHeatMap(el, x, y, width, height, speed) {\n                var animations = new Animations(this.ctx);\n                animations.animateRect(el, {\n                    x: x + width / 2,\n                    y: y + height / 2,\n                    width: 0,\n                    height: 0\n                }, {\n                    x: x,\n                    y: y,\n                    width: width,\n                    height: height\n                }, speed, function() {\n                    animations.animationCompleted(el);\n                });\n            }\n        }, {\n            key: \"animateHeatColor\",\n            value: function animateHeatColor(el, colorFrom, colorTo, speed) {\n                el.attr({\n                    fill: colorFrom\n                }).animate(speed).attr({\n                    fill: colorTo\n                });\n            }\n        }]);\n\n        return HeatMap;\n    }();\n\n    var CircularChartsHelpers = /*#__PURE__*/ function() {\n        function CircularChartsHelpers(ctx) {\n            _classCallCheck(this, CircularChartsHelpers);\n\n            this.ctx = ctx;\n            this.w = ctx.w;\n        }\n\n        _createClass(CircularChartsHelpers, [{\n            key: \"drawYAxisTexts\",\n            value: function drawYAxisTexts(x, y, i, text) {\n                var w = this.w;\n                var yaxisConfig = w.config.yaxis[0];\n                var formatter = w.globals.yLabelFormatters[0];\n                var graphics = new Graphics(this.ctx);\n                var yaxisLabel = graphics.drawText({\n                    x: x + yaxisConfig.labels.offsetX,\n                    y: y + yaxisConfig.labels.offsetY,\n                    text: formatter(text, i),\n                    textAnchor: 'middle',\n                    fontSize: yaxisConfig.labels.style.fontSize,\n                    fontFamily: yaxisConfig.labels.style.fontFamily,\n                    foreColor: Array.isArray(yaxisConfig.labels.style.colors) ? yaxisConfig.labels.style.colors[i] : yaxisConfig.labels.style.colors\n                });\n                return yaxisLabel;\n            }\n        }]);\n\n        return CircularChartsHelpers;\n    }();\n\n    /**\n     * ApexCharts Pie Class for drawing Pie / Donut Charts.\n     * @module Pie\n     **/\n\n    var Pie = /*#__PURE__*/ function() {\n        function Pie(ctx) {\n            _classCallCheck(this, Pie);\n\n            this.ctx = ctx;\n            this.w = ctx.w;\n            var w = this.w;\n            this.chartType = this.w.config.chart.type;\n            this.initialAnim = this.w.config.chart.animations.enabled;\n            this.dynamicAnim = this.initialAnim && this.w.config.chart.animations.dynamicAnimation.enabled;\n            this.animBeginArr = [0];\n            this.animDur = 0;\n            this.donutDataLabels = this.w.config.plotOptions.pie.donut.labels;\n            this.lineColorArr = w.globals.stroke.colors !== undefined ? w.globals.stroke.colors : w.globals.colors;\n            this.defaultSize = Math.min(w.globals.gridWidth, w.globals.gridHeight);\n            this.centerY = this.defaultSize / 2;\n            this.centerX = w.globals.gridWidth / 2;\n\n            if (w.config.chart.type === 'radialBar') {\n                this.fullAngle = 360;\n            } else {\n                this.fullAngle = Math.abs(w.config.plotOptions.pie.endAngle - w.config.plotOptions.pie.startAngle);\n            }\n\n            this.initialAngle = w.config.plotOptions.pie.startAngle % this.fullAngle;\n            w.globals.radialSize = this.defaultSize / 2.05 - w.config.stroke.width - (!w.config.chart.sparkline.enabled ? w.config.chart.dropShadow.blur : 0);\n            this.donutSize = w.globals.radialSize * parseInt(w.config.plotOptions.pie.donut.size, 10) / 100;\n            this.maxY = 0;\n            this.sliceLabels = [];\n            this.sliceSizes = [];\n            this.prevSectorAngleArr = []; // for dynamic animations\n        }\n\n        _createClass(Pie, [{\n            key: \"draw\",\n            value: function draw(series) {\n                    var _this = this;\n\n                    var self = this;\n                    var w = this.w;\n                    var graphics = new Graphics(this.ctx);\n                    this.ret = graphics.group({\n                        class: 'apexcharts-pie'\n                    });\n                    if (w.globals.noData) return this.ret;\n                    var total = 0;\n\n                    for (var k = 0; k < series.length; k++) {\n                        // CALCULATE THE TOTAL\n                        total += Utils.negToZero(series[k]);\n                    }\n\n                    var sectorAngleArr = []; // el to which series will be drawn\n\n                    var elSeries = graphics.group(); // prevent division by zero error if there is no data\n\n                    if (total === 0) {\n                        total = 0.00001;\n                    }\n\n                    series.forEach(function(m) {\n                        _this.maxY = Math.max(_this.maxY, m);\n                    }); // override maxY if user provided in config\n\n                    if (w.config.yaxis[0].max) {\n                        this.maxY = w.config.yaxis[0].max;\n                    }\n\n                    if (w.config.grid.position === 'back' && this.chartType === 'polarArea') {\n                        this.drawPolarElements(this.ret);\n                    }\n\n                    for (var i = 0; i < series.length; i++) {\n                        // CALCULATE THE ANGLES\n                        var angle = this.fullAngle * Utils.negToZero(series[i]) / total;\n                        sectorAngleArr.push(angle);\n\n                        if (this.chartType === 'polarArea') {\n                            sectorAngleArr[i] = this.fullAngle / series.length;\n                            this.sliceSizes.push(w.globals.radialSize * series[i] / this.maxY);\n                        } else {\n                            this.sliceSizes.push(w.globals.radialSize);\n                        }\n                    }\n\n                    if (w.globals.dataChanged) {\n                        var prevTotal = 0;\n\n                        for (var _k = 0; _k < w.globals.previousPaths.length; _k++) {\n                            // CALCULATE THE PREV TOTAL\n                            prevTotal += Utils.negToZero(w.globals.previousPaths[_k]);\n                        }\n\n                        var previousAngle;\n\n                        for (var _i = 0; _i < w.globals.previousPaths.length; _i++) {\n                            // CALCULATE THE PREVIOUS ANGLES\n                            previousAngle = this.fullAngle * Utils.negToZero(w.globals.previousPaths[_i]) / prevTotal;\n                            this.prevSectorAngleArr.push(previousAngle);\n                        }\n                    } // on small chart size after few count of resizes browser window donutSize can be negative\n\n\n                    if (this.donutSize < 0) {\n                        this.donutSize = 0;\n                    }\n\n                    var scaleSize = w.config.plotOptions.pie.customScale;\n                    var halfW = w.globals.gridWidth / 2;\n                    var halfH = w.globals.gridHeight / 2;\n                    var translateX = halfW - w.globals.gridWidth / 2 * scaleSize;\n                    var translateY = halfH - w.globals.gridHeight / 2 * scaleSize;\n\n                    if (this.chartType === 'donut') {\n                        // draw the inner circle and add some text to it\n                        var circle = graphics.drawCircle(this.donutSize);\n                        circle.attr({\n                            cx: this.centerX,\n                            cy: this.centerY,\n                            fill: w.config.plotOptions.pie.donut.background ? w.config.plotOptions.pie.donut.background : 'transparent'\n                        });\n                        elSeries.add(circle);\n                    }\n\n                    var elG = self.drawArcs(sectorAngleArr, series); // add slice dataLabels at the end\n\n                    this.sliceLabels.forEach(function(s) {\n                        elG.add(s);\n                    });\n                    elSeries.attr({\n                        transform: \"translate(\".concat(translateX, \", \").concat(translateY, \") scale(\").concat(scaleSize, \")\")\n                    });\n                    elSeries.add(elG);\n                    this.ret.add(elSeries);\n\n                    if (this.donutDataLabels.show) {\n                        var dataLabels = this.renderInnerDataLabels(this.donutDataLabels, {\n                            hollowSize: this.donutSize,\n                            centerX: this.centerX,\n                            centerY: this.centerY,\n                            opacity: this.donutDataLabels.show,\n                            translateX: translateX,\n                            translateY: translateY\n                        });\n                        this.ret.add(dataLabels);\n                    }\n\n                    if (w.config.grid.position === 'front' && this.chartType === 'polarArea') {\n                        this.drawPolarElements(this.ret);\n                    }\n\n                    return this.ret;\n                } // core function for drawing pie arcs\n\n        }, {\n            key: \"drawArcs\",\n            value: function drawArcs(sectorAngleArr, series) {\n                var w = this.w;\n                var filters = new Filters(this.ctx);\n                var graphics = new Graphics(this.ctx);\n                var fill = new Fill(this.ctx);\n                var g = graphics.group({\n                    class: 'apexcharts-slices'\n                });\n                var startAngle = this.initialAngle;\n                var prevStartAngle = this.initialAngle;\n                var endAngle = this.initialAngle;\n                var prevEndAngle = this.initialAngle;\n                this.strokeWidth = w.config.stroke.show ? w.config.stroke.width : 0;\n\n                for (var i = 0; i < sectorAngleArr.length; i++) {\n                    var elPieArc = graphics.group({\n                        class: \"apexcharts-series apexcharts-pie-series\",\n                        seriesName: Utils.escapeString(w.globals.seriesNames[i]),\n                        rel: i + 1,\n                        'data:realIndex': i\n                    });\n                    g.add(elPieArc);\n                    startAngle = endAngle;\n                    prevStartAngle = prevEndAngle;\n                    endAngle = startAngle + sectorAngleArr[i];\n                    prevEndAngle = prevStartAngle + this.prevSectorAngleArr[i];\n                    var angle = endAngle < startAngle ? this.fullAngle + endAngle - startAngle : endAngle - startAngle;\n                    var pathFill = fill.fillPath({\n                        seriesNumber: i,\n                        size: this.sliceSizes[i],\n                        value: series[i]\n                    }); // additionally, pass size for gradient drawing in the fillPath function\n\n                    var path = this.getChangedPath(prevStartAngle, prevEndAngle);\n                    var elPath = graphics.drawPath({\n                        d: path,\n                        stroke: Array.isArray(this.lineColorArr) ? this.lineColorArr[i] : this.lineColorArr,\n                        strokeWidth: 0,\n                        fill: pathFill,\n                        fillOpacity: w.config.fill.opacity,\n                        classes: \"apexcharts-pie-area apexcharts-\".concat(this.chartType.toLowerCase(), \"-slice-\").concat(i)\n                    });\n                    elPath.attr({\n                        index: 0,\n                        j: i\n                    });\n                    filters.setSelectionFilter(elPath, 0, i);\n\n                    if (w.config.chart.dropShadow.enabled) {\n                        var shadow = w.config.chart.dropShadow;\n                        filters.dropShadow(elPath, shadow, i);\n                    }\n\n                    this.addListeners(elPath, this.donutDataLabels);\n                    Graphics.setAttrs(elPath.node, {\n                        'data:angle': angle,\n                        'data:startAngle': startAngle,\n                        'data:strokeWidth': this.strokeWidth,\n                        'data:value': series[i]\n                    });\n                    var labelPosition = {\n                        x: 0,\n                        y: 0\n                    };\n\n                    if (this.chartType === 'pie' || this.chartType === 'polarArea') {\n                        labelPosition = Utils.polarToCartesian(this.centerX, this.centerY, w.globals.radialSize / 1.25 + w.config.plotOptions.pie.dataLabels.offset, (startAngle + angle / 2) % this.fullAngle);\n                    } else if (this.chartType === 'donut') {\n                        labelPosition = Utils.polarToCartesian(this.centerX, this.centerY, (w.globals.radialSize + this.donutSize) / 2 + w.config.plotOptions.pie.dataLabels.offset, (startAngle + angle / 2) % this.fullAngle);\n                    }\n\n                    elPieArc.add(elPath); // Animation code starts\n\n                    var dur = 0;\n\n                    if (this.initialAnim && !w.globals.resized && !w.globals.dataChanged) {\n                        dur = angle / this.fullAngle * w.config.chart.animations.speed;\n                        if (dur === 0) dur = 1;\n                        this.animDur = dur + this.animDur;\n                        this.animBeginArr.push(this.animDur);\n                    } else {\n                        this.animBeginArr.push(0);\n                    }\n\n                    if (this.dynamicAnim && w.globals.dataChanged) {\n                        this.animatePaths(elPath, {\n                            size: this.sliceSizes[i],\n                            endAngle: endAngle,\n                            startAngle: startAngle,\n                            prevStartAngle: prevStartAngle,\n                            prevEndAngle: prevEndAngle,\n                            animateStartingPos: true,\n                            i: i,\n                            animBeginArr: this.animBeginArr,\n                            shouldSetPrevPaths: true,\n                            dur: w.config.chart.animations.dynamicAnimation.speed\n                        });\n                    } else {\n                        this.animatePaths(elPath, {\n                            size: this.sliceSizes[i],\n                            endAngle: endAngle,\n                            startAngle: startAngle,\n                            i: i,\n                            totalItems: sectorAngleArr.length - 1,\n                            animBeginArr: this.animBeginArr,\n                            dur: dur\n                        });\n                    } // animation code ends\n\n\n                    if (w.config.plotOptions.pie.expandOnClick && this.chartType !== 'polarArea') {\n                        elPath.click(this.pieClicked.bind(this, i));\n                    }\n\n                    if (typeof w.globals.selectedDataPoints[0] !== 'undefined' && w.globals.selectedDataPoints[0].indexOf(i) > -1) {\n                        this.pieClicked(i);\n                    }\n\n                    if (w.config.dataLabels.enabled) {\n                        var xPos = labelPosition.x;\n                        var yPos = labelPosition.y;\n                        var text = 100 * angle / this.fullAngle + '%';\n\n                        if (angle !== 0 && w.config.plotOptions.pie.dataLabels.minAngleToShowLabel < sectorAngleArr[i]) {\n                            var formatter = w.config.dataLabels.formatter;\n\n                            if (formatter !== undefined) {\n                                text = formatter(w.globals.seriesPercent[i][0], {\n                                    seriesIndex: i,\n                                    w: w\n                                });\n                            }\n\n                            var foreColor = w.globals.dataLabels.style.colors[i];\n                            var elPieLabelWrap = graphics.group({\n                                class: \"apexcharts-datalabels\"\n                            });\n                            var elPieLabel = graphics.drawText({\n                                x: xPos,\n                                y: yPos,\n                                text: text,\n                                textAnchor: 'middle',\n                                fontSize: w.config.dataLabels.style.fontSize,\n                                fontFamily: w.config.dataLabels.style.fontFamily,\n                                fontWeight: w.config.dataLabels.style.fontWeight,\n                                foreColor: foreColor\n                            });\n                            elPieLabelWrap.add(elPieLabel);\n\n                            if (w.config.dataLabels.dropShadow.enabled) {\n                                var textShadow = w.config.dataLabels.dropShadow;\n                                filters.dropShadow(elPieLabel, textShadow);\n                            }\n\n                            elPieLabel.node.classList.add('apexcharts-pie-label');\n\n                            if (w.config.chart.animations.animate && w.globals.resized === false) {\n                                elPieLabel.node.classList.add('apexcharts-pie-label-delay');\n                                elPieLabel.node.style.animationDelay = w.config.chart.animations.speed / 940 + 's';\n                            }\n\n                            this.sliceLabels.push(elPieLabelWrap);\n                        }\n                    }\n                }\n\n                return g;\n            }\n        }, {\n            key: \"addListeners\",\n            value: function addListeners(elPath, dataLabels) {\n                    var graphics = new Graphics(this.ctx); // append filters on mouseenter and mouseleave\n\n                    elPath.node.addEventListener('mouseenter', graphics.pathMouseEnter.bind(this, elPath));\n                    elPath.node.addEventListener('mouseleave', graphics.pathMouseLeave.bind(this, elPath));\n                    elPath.node.addEventListener('mouseleave', this.revertDataLabelsInner.bind(this, elPath.node, dataLabels));\n                    elPath.node.addEventListener('mousedown', graphics.pathMouseDown.bind(this, elPath));\n\n                    if (!this.donutDataLabels.total.showAlways) {\n                        elPath.node.addEventListener('mouseenter', this.printDataLabelsInner.bind(this, elPath.node, dataLabels));\n                        elPath.node.addEventListener('mousedown', this.printDataLabelsInner.bind(this, elPath.node, dataLabels));\n                    }\n                } // This function can be used for other circle charts too\n\n        }, {\n            key: \"animatePaths\",\n            value: function animatePaths(el, opts) {\n                var w = this.w;\n                var me = this;\n                var angle = opts.endAngle < opts.startAngle ? this.fullAngle + opts.endAngle - opts.startAngle : opts.endAngle - opts.startAngle;\n                var prevAngle = angle;\n                var fromStartAngle = opts.startAngle;\n                var toStartAngle = opts.startAngle;\n\n                if (opts.prevStartAngle !== undefined && opts.prevEndAngle !== undefined) {\n                    fromStartAngle = opts.prevEndAngle;\n                    prevAngle = opts.prevEndAngle < opts.prevStartAngle ? this.fullAngle + opts.prevEndAngle - opts.prevStartAngle : opts.prevEndAngle - opts.prevStartAngle;\n                }\n\n                if (opts.i === w.config.series.length - 1) {\n                    // some adjustments for the last overlapping paths\n                    if (angle + toStartAngle > this.fullAngle) {\n                        opts.endAngle = opts.endAngle - (angle + toStartAngle);\n                    } else if (angle + toStartAngle < this.fullAngle) {\n                        opts.endAngle = opts.endAngle + (this.fullAngle - (angle + toStartAngle));\n                    }\n                }\n\n                if (angle === this.fullAngle) angle = this.fullAngle - 0.01;\n                me.animateArc(el, fromStartAngle, toStartAngle, angle, prevAngle, opts);\n            }\n        }, {\n            key: \"animateArc\",\n            value: function animateArc(el, fromStartAngle, toStartAngle, angle, prevAngle, opts) {\n                var me = this;\n                var w = this.w;\n                var animations = new Animations(this.ctx);\n                var size = opts.size;\n                var path;\n\n                if (isNaN(fromStartAngle) || isNaN(prevAngle)) {\n                    fromStartAngle = toStartAngle;\n                    prevAngle = angle;\n                    opts.dur = 0;\n                }\n\n                var currAngle = angle;\n                var startAngle = toStartAngle;\n                var fromAngle = fromStartAngle < toStartAngle ? this.fullAngle + fromStartAngle - toStartAngle : fromStartAngle - toStartAngle;\n\n                if (w.globals.dataChanged && opts.shouldSetPrevPaths) {\n                    // to avoid flicker when updating, set prev path first and then animate from there\n                    if (opts.prevEndAngle) {\n                        path = me.getPiePath({\n                            me: me,\n                            startAngle: opts.prevStartAngle,\n                            angle: opts.prevEndAngle < opts.prevStartAngle ? this.fullAngle + opts.prevEndAngle - opts.prevStartAngle : opts.prevEndAngle - opts.prevStartAngle,\n                            size: size\n                        });\n                        el.attr({\n                            d: path\n                        });\n                    }\n                }\n\n                if (opts.dur !== 0) {\n                    el.animate(opts.dur, w.globals.easing, opts.animBeginArr[opts.i]).afterAll(function() {\n                        if (me.chartType === 'pie' || me.chartType === 'donut' || me.chartType === 'polarArea') {\n                            this.animate(w.config.chart.animations.dynamicAnimation.speed).attr({\n                                'stroke-width': me.strokeWidth\n                            });\n                        }\n\n                        if (opts.i === w.config.series.length - 1) {\n                            animations.animationCompleted(el);\n                        }\n                    }).during(function(pos) {\n                        currAngle = fromAngle + (angle - fromAngle) * pos;\n\n                        if (opts.animateStartingPos) {\n                            currAngle = prevAngle + (angle - prevAngle) * pos;\n                            startAngle = fromStartAngle - prevAngle + (toStartAngle - (fromStartAngle - prevAngle)) * pos;\n                        }\n\n                        path = me.getPiePath({\n                            me: me,\n                            startAngle: startAngle,\n                            angle: currAngle,\n                            size: size\n                        });\n                        el.node.setAttribute('data:pathOrig', path);\n                        el.attr({\n                            d: path\n                        });\n                    });\n                } else {\n                    path = me.getPiePath({\n                        me: me,\n                        startAngle: startAngle,\n                        angle: angle,\n                        size: size\n                    });\n\n                    if (!opts.isTrack) {\n                        w.globals.animationEnded = true;\n                    }\n\n                    el.node.setAttribute('data:pathOrig', path);\n                    el.attr({\n                        d: path,\n                        'stroke-width': me.strokeWidth\n                    });\n                }\n            }\n        }, {\n            key: \"pieClicked\",\n            value: function pieClicked(i) {\n                var w = this.w;\n                var me = this;\n                var path;\n                var size = me.sliceSizes[i] + (w.config.plotOptions.pie.expandOnClick ? 4 : 0);\n                var elPath = w.globals.dom.Paper.select(\".apexcharts-\".concat(me.chartType.toLowerCase(), \"-slice-\").concat(i)).members[0];\n\n                if (elPath.attr('data:pieClicked') === 'true') {\n                    elPath.attr({\n                        'data:pieClicked': 'false'\n                    });\n                    this.revertDataLabelsInner(elPath.node, this.donutDataLabels);\n                    var origPath = elPath.attr('data:pathOrig');\n                    elPath.attr({\n                        d: origPath\n                    });\n                    return;\n                } else {\n                    // reset all elems\n                    var allEls = w.globals.dom.baseEl.getElementsByClassName('apexcharts-pie-area');\n                    Array.prototype.forEach.call(allEls, function(pieSlice) {\n                        pieSlice.setAttribute('data:pieClicked', 'false');\n                        var origPath = pieSlice.getAttribute('data:pathOrig');\n                        pieSlice.setAttribute('d', origPath);\n                    });\n                    elPath.attr('data:pieClicked', 'true');\n                }\n\n                var startAngle = parseInt(elPath.attr('data:startAngle'), 10);\n                var angle = parseInt(elPath.attr('data:angle'), 10);\n                path = me.getPiePath({\n                    me: me,\n                    startAngle: startAngle,\n                    angle: angle,\n                    size: size\n                });\n                if (angle === 360) return;\n                elPath.plot(path);\n            }\n        }, {\n            key: \"getChangedPath\",\n            value: function getChangedPath(prevStartAngle, prevEndAngle) {\n                var path = '';\n\n                if (this.dynamicAnim && this.w.globals.dataChanged) {\n                    path = this.getPiePath({\n                        me: this,\n                        startAngle: prevStartAngle,\n                        angle: prevEndAngle - prevStartAngle,\n                        size: this.size\n                    });\n                }\n\n                return path;\n            }\n        }, {\n            key: \"getPiePath\",\n            value: function getPiePath(_ref) {\n                var me = _ref.me,\n                    startAngle = _ref.startAngle,\n                    angle = _ref.angle,\n                    size = _ref.size;\n                var path;\n                var startDeg = startAngle;\n                var startRadians = Math.PI * (startDeg - 90) / 180;\n                var endDeg = angle + startAngle; // prevent overlap\n\n                if (Math.ceil(endDeg) >= this.fullAngle + this.w.config.plotOptions.pie.startAngle % this.fullAngle) {\n                    endDeg = this.fullAngle + this.w.config.plotOptions.pie.startAngle % this.fullAngle - 0.01;\n                }\n\n                if (Math.ceil(endDeg) > this.fullAngle) endDeg -= this.fullAngle;\n                var endRadians = Math.PI * (endDeg - 90) / 180;\n                var x1 = me.centerX + size * Math.cos(startRadians);\n                var y1 = me.centerY + size * Math.sin(startRadians);\n                var x2 = me.centerX + size * Math.cos(endRadians);\n                var y2 = me.centerY + size * Math.sin(endRadians);\n                var startInner = Utils.polarToCartesian(me.centerX, me.centerY, me.donutSize, endDeg);\n                var endInner = Utils.polarToCartesian(me.centerX, me.centerY, me.donutSize, startDeg);\n                var largeArc = angle > 180 ? 1 : 0;\n                var pathBeginning = ['M', x1, y1, 'A', size, size, 0, largeArc, 1, x2, y2];\n\n                if (me.chartType === 'donut') {\n                    path = [].concat(pathBeginning, ['L', startInner.x, startInner.y, 'A', me.donutSize, me.donutSize, 0, largeArc, 0, endInner.x, endInner.y, 'L', x1, y1, 'z']).join(' ');\n                } else if (me.chartType === 'pie' || me.chartType === 'polarArea') {\n                    path = [].concat(pathBeginning, ['L', me.centerX, me.centerY, 'L', x1, y1]).join(' ');\n                } else {\n                    path = [].concat(pathBeginning).join(' ');\n                }\n\n                return path;\n            }\n        }, {\n            key: \"drawPolarElements\",\n            value: function drawPolarElements(parent) {\n                var w = this.w;\n                var scale = new Range(this.ctx);\n                var graphics = new Graphics(this.ctx);\n                var helpers = new CircularChartsHelpers(this.ctx);\n                var gCircles = graphics.group();\n                var gYAxis = graphics.group();\n                var yScale = scale.niceScale(0, Math.ceil(this.maxY), w.config.yaxis[0].tickAmount, 0, true);\n                var yTexts = yScale.result.reverse();\n                var len = yScale.result.length;\n                this.maxY = yScale.niceMax;\n                var circleSize = w.globals.radialSize;\n                var diff = circleSize / (len - 1);\n\n                for (var i = 0; i < len - 1; i++) {\n                    var circle = graphics.drawCircle(circleSize);\n                    circle.attr({\n                        cx: this.centerX,\n                        cy: this.centerY,\n                        fill: 'none',\n                        'stroke-width': w.config.plotOptions.polarArea.rings.strokeWidth,\n                        stroke: w.config.plotOptions.polarArea.rings.strokeColor\n                    });\n\n                    if (w.config.yaxis[0].show) {\n                        var yLabel = helpers.drawYAxisTexts(this.centerX, this.centerY - circleSize + parseInt(w.config.yaxis[0].labels.style.fontSize, 10) / 2, i, yTexts[i]);\n                        gYAxis.add(yLabel);\n                    }\n\n                    gCircles.add(circle);\n                    circleSize = circleSize - diff;\n                }\n\n                this.drawSpokes(parent);\n                parent.add(gCircles);\n                parent.add(gYAxis);\n            }\n        }, {\n            key: \"renderInnerDataLabels\",\n            value: function renderInnerDataLabels(dataLabelsConfig, opts) {\n                    var w = this.w;\n                    var graphics = new Graphics(this.ctx);\n                    var g = graphics.group({\n                        class: 'apexcharts-datalabels-group',\n                        transform: \"translate(\".concat(opts.translateX ? opts.translateX : 0, \", \").concat(opts.translateY ? opts.translateY : 0, \") scale(\").concat(w.config.plotOptions.pie.customScale, \")\")\n                    });\n                    var showTotal = dataLabelsConfig.total.show;\n                    g.node.style.opacity = opts.opacity;\n                    var x = opts.centerX;\n                    var y = opts.centerY;\n                    var labelColor, valueColor;\n\n                    if (dataLabelsConfig.name.color === undefined) {\n                        labelColor = w.globals.colors[0];\n                    } else {\n                        labelColor = dataLabelsConfig.name.color;\n                    }\n\n                    var labelFontSize = dataLabelsConfig.name.fontSize;\n                    var labelFontFamily = dataLabelsConfig.name.fontFamily;\n                    var labelFontWeight = dataLabelsConfig.value.fontWeight;\n\n                    if (dataLabelsConfig.value.color === undefined) {\n                        valueColor = w.config.chart.foreColor;\n                    } else {\n                        valueColor = dataLabelsConfig.value.color;\n                    }\n\n                    var lbFormatter = dataLabelsConfig.value.formatter;\n                    var val = '';\n                    var name = '';\n\n                    if (showTotal) {\n                        labelColor = dataLabelsConfig.total.color;\n                        labelFontSize = dataLabelsConfig.total.fontSize;\n                        labelFontFamily = dataLabelsConfig.total.fontFamily;\n                        labelFontWeight = dataLabelsConfig.total.fontWeight;\n                        name = dataLabelsConfig.total.label;\n                        val = dataLabelsConfig.total.formatter(w);\n                    } else {\n                        if (w.globals.series.length === 1) {\n                            val = lbFormatter(w.globals.series[0], w);\n                            name = w.globals.seriesNames[0];\n                        }\n                    }\n\n                    if (name) {\n                        name = dataLabelsConfig.name.formatter(name, dataLabelsConfig.total.show, w);\n                    }\n\n                    if (dataLabelsConfig.name.show) {\n                        var elLabel = graphics.drawText({\n                            x: x,\n                            y: y + parseFloat(dataLabelsConfig.name.offsetY),\n                            text: name,\n                            textAnchor: 'middle',\n                            foreColor: labelColor,\n                            fontSize: labelFontSize,\n                            fontWeight: labelFontWeight,\n                            fontFamily: labelFontFamily\n                        });\n                        elLabel.node.classList.add('apexcharts-datalabel-label');\n                        g.add(elLabel);\n                    }\n\n                    if (dataLabelsConfig.value.show) {\n                        var valOffset = dataLabelsConfig.name.show ? parseFloat(dataLabelsConfig.value.offsetY) + 16 : dataLabelsConfig.value.offsetY;\n                        var elValue = graphics.drawText({\n                            x: x,\n                            y: y + valOffset,\n                            text: val,\n                            textAnchor: 'middle',\n                            foreColor: valueColor,\n                            fontWeight: dataLabelsConfig.value.fontWeight,\n                            fontSize: dataLabelsConfig.value.fontSize,\n                            fontFamily: dataLabelsConfig.value.fontFamily\n                        });\n                        elValue.node.classList.add('apexcharts-datalabel-value');\n                        g.add(elValue);\n                    } // for a multi-series circle chart, we need to show total value instead of first series labels\n\n\n                    return g;\n                }\n                /**\n                 *\n                 * @param {string} name - The name of the series\n                 * @param {string} val - The value of that series\n                 * @param {object} el - Optional el (indicates which series was hovered/clicked). If this param is not present, means we need to show total\n                 */\n\n        }, {\n            key: \"printInnerLabels\",\n            value: function printInnerLabels(labelsConfig, name, val, el) {\n                var w = this.w;\n                var labelColor;\n\n                if (el) {\n                    if (labelsConfig.name.color === undefined) {\n                        labelColor = w.globals.colors[parseInt(el.parentNode.getAttribute('rel'), 10) - 1];\n                    } else {\n                        labelColor = labelsConfig.name.color;\n                    }\n                } else {\n                    if (w.globals.series.length > 1 && labelsConfig.total.show) {\n                        labelColor = labelsConfig.total.color;\n                    }\n                }\n\n                var elLabel = w.globals.dom.baseEl.querySelector('.apexcharts-datalabel-label');\n                var elValue = w.globals.dom.baseEl.querySelector('.apexcharts-datalabel-value');\n                var lbFormatter = labelsConfig.value.formatter;\n                val = lbFormatter(val, w); // we need to show Total Val - so get the formatter of it\n\n                if (!el && typeof labelsConfig.total.formatter === 'function') {\n                    val = labelsConfig.total.formatter(w);\n                }\n\n                var isTotal = name === labelsConfig.total.label;\n                name = labelsConfig.name.formatter(name, isTotal, w);\n\n                if (elLabel !== null) {\n                    elLabel.textContent = name;\n                }\n\n                if (elValue !== null) {\n                    elValue.textContent = val;\n                }\n\n                if (elLabel !== null) {\n                    elLabel.style.fill = labelColor;\n                }\n            }\n        }, {\n            key: \"printDataLabelsInner\",\n            value: function printDataLabelsInner(el, dataLabelsConfig) {\n                var w = this.w;\n                var val = el.getAttribute('data:value');\n                var name = w.globals.seriesNames[parseInt(el.parentNode.getAttribute('rel'), 10) - 1];\n\n                if (w.globals.series.length > 1) {\n                    this.printInnerLabels(dataLabelsConfig, name, val, el);\n                }\n\n                var dataLabelsGroup = w.globals.dom.baseEl.querySelector('.apexcharts-datalabels-group');\n\n                if (dataLabelsGroup !== null) {\n                    dataLabelsGroup.style.opacity = 1;\n                }\n            }\n        }, {\n            key: \"drawSpokes\",\n            value: function drawSpokes(parent) {\n                var _this2 = this;\n\n                var w = this.w;\n                var graphics = new Graphics(this.ctx);\n                var spokeConfig = w.config.plotOptions.polarArea.spokes;\n                if (spokeConfig.strokeWidth === 0) return;\n                var spokes = [];\n                var angleDivision = 360 / w.globals.series.length;\n\n                for (var i = 0; i < w.globals.series.length; i++) {\n                    spokes.push(Utils.polarToCartesian(this.centerX, this.centerY, w.globals.radialSize, w.config.plotOptions.pie.startAngle + angleDivision * i));\n                }\n\n                spokes.forEach(function(p, i) {\n                    var line = graphics.drawLine(p.x, p.y, _this2.centerX, _this2.centerY, Array.isArray(spokeConfig.connectorColors) ? spokeConfig.connectorColors[i] : spokeConfig.connectorColors);\n                    parent.add(line);\n                });\n            }\n        }, {\n            key: \"revertDataLabelsInner\",\n            value: function revertDataLabelsInner(elem, dataLabelsConfig, event) {\n                var _this3 = this;\n\n                var w = this.w;\n                var dataLabelsGroup = w.globals.dom.baseEl.querySelector('.apexcharts-datalabels-group');\n                var sliceOut = false;\n                var slices = w.globals.dom.baseEl.getElementsByClassName(\"apexcharts-pie-area\");\n\n                var selectSlice = function selectSlice(_ref2) {\n                    var makeSliceOut = _ref2.makeSliceOut,\n                        printLabel = _ref2.printLabel;\n                    Array.prototype.forEach.call(slices, function(s) {\n                        if (s.getAttribute('data:pieClicked') === 'true') {\n                            if (makeSliceOut) {\n                                sliceOut = true;\n                            }\n\n                            if (printLabel) {\n                                _this3.printDataLabelsInner(s, dataLabelsConfig);\n                            }\n                        }\n                    });\n                };\n\n                selectSlice({\n                    makeSliceOut: true,\n                    printLabel: false\n                });\n\n                if (dataLabelsConfig.total.show && w.globals.series.length > 1) {\n                    if (sliceOut && !dataLabelsConfig.total.showAlways) {\n                        selectSlice({\n                            makeSliceOut: false,\n                            printLabel: true\n                        });\n                    } else {\n                        this.printInnerLabels(dataLabelsConfig, dataLabelsConfig.total.label, dataLabelsConfig.total.formatter(w));\n                    }\n                } else {\n                    selectSlice({\n                        makeSliceOut: false,\n                        printLabel: true\n                    });\n\n                    if (!sliceOut) {\n                        if (w.globals.selectedDataPoints.length && w.globals.series.length > 1) {\n                            if (w.globals.selectedDataPoints[0].length > 0) {\n                                var index = w.globals.selectedDataPoints[0];\n                                var el = w.globals.dom.baseEl.querySelector(\".apexcharts-\".concat(this.chartType.toLowerCase(), \"-slice-\").concat(index));\n                                this.printDataLabelsInner(el, dataLabelsConfig);\n                            } else if (dataLabelsGroup && w.globals.selectedDataPoints.length && w.globals.selectedDataPoints[0].length === 0) {\n                                dataLabelsGroup.style.opacity = 0;\n                            }\n                        } else {\n                            if (dataLabelsGroup && w.globals.series.length > 1) {\n                                dataLabelsGroup.style.opacity = 0;\n                            }\n                        }\n                    }\n                }\n            }\n        }]);\n\n        return Pie;\n    }();\n\n    /**\n     * ApexCharts Radar Class for Spider/Radar Charts.\n     * @module Radar\n     **/\n\n    var Radar = /*#__PURE__*/ function() {\n        function Radar(ctx) {\n            _classCallCheck(this, Radar);\n\n            this.ctx = ctx;\n            this.w = ctx.w;\n            this.chartType = this.w.config.chart.type;\n            this.initialAnim = this.w.config.chart.animations.enabled;\n            this.dynamicAnim = this.initialAnim && this.w.config.chart.animations.dynamicAnimation.enabled;\n            this.animDur = 0;\n            var w = this.w;\n            this.graphics = new Graphics(this.ctx);\n            this.lineColorArr = w.globals.stroke.colors !== undefined ? w.globals.stroke.colors : w.globals.colors;\n            this.defaultSize = w.globals.svgHeight < w.globals.svgWidth ? w.globals.gridHeight + w.globals.goldenPadding * 1.5 : w.globals.gridWidth;\n            this.isLog = w.config.yaxis[0].logarithmic;\n            this.coreUtils = new CoreUtils(this.ctx);\n            this.maxValue = this.isLog ? this.coreUtils.getLogVal(w.globals.maxY, 0) : w.globals.maxY;\n            this.minValue = this.isLog ? this.coreUtils.getLogVal(this.w.globals.minY, 0) : w.globals.minY;\n            this.polygons = w.config.plotOptions.radar.polygons;\n            this.strokeWidth = w.config.stroke.show ? w.config.stroke.width : 0;\n            this.size = this.defaultSize / 2.1 - this.strokeWidth - w.config.chart.dropShadow.blur;\n\n            if (w.config.xaxis.labels.show) {\n                this.size = this.size - w.globals.xAxisLabelsWidth / 1.75;\n            }\n\n            if (w.config.plotOptions.radar.size !== undefined) {\n                this.size = w.config.plotOptions.radar.size;\n            }\n\n            this.dataRadiusOfPercent = [];\n            this.dataRadius = [];\n            this.angleArr = [];\n            this.yaxisLabelsTextsPos = [];\n        }\n\n        _createClass(Radar, [{\n            key: \"draw\",\n            value: function draw(series) {\n                var _this = this;\n\n                var w = this.w;\n                var fill = new Fill(this.ctx);\n                var allSeries = [];\n                var dataLabels = new DataLabels(this.ctx);\n\n                if (series.length) {\n                    this.dataPointsLen = series[w.globals.maxValsInArrayIndex].length;\n                }\n\n                this.disAngle = Math.PI * 2 / this.dataPointsLen;\n                var halfW = w.globals.gridWidth / 2;\n                var halfH = w.globals.gridHeight / 2;\n                var translateX = halfW + w.config.plotOptions.radar.offsetX;\n                var translateY = halfH + w.config.plotOptions.radar.offsetY;\n                var ret = this.graphics.group({\n                    class: 'apexcharts-radar-series apexcharts-plot-series',\n                    transform: \"translate(\".concat(translateX || 0, \", \").concat(translateY || 0, \")\")\n                });\n                var dataPointsPos = [];\n                var elPointsMain = null;\n                var elDataPointsMain = null;\n                this.yaxisLabels = this.graphics.group({\n                    class: 'apexcharts-yaxis'\n                });\n                series.forEach(function(s, i) {\n                    var longestSeries = s.length === w.globals.dataPoints; // el to which series will be drawn\n\n                    var elSeries = _this.graphics.group().attr({\n                        class: \"apexcharts-series\",\n                        'data:longestSeries': longestSeries,\n                        seriesName: Utils.escapeString(w.globals.seriesNames[i]),\n                        rel: i + 1,\n                        'data:realIndex': i\n                    });\n\n                    _this.dataRadiusOfPercent[i] = [];\n                    _this.dataRadius[i] = [];\n                    _this.angleArr[i] = [];\n                    s.forEach(function(dv, j) {\n                        var range = Math.abs(_this.maxValue - _this.minValue);\n                        dv = dv + Math.abs(_this.minValue);\n\n                        if (_this.isLog) {\n                            dv = _this.coreUtils.getLogVal(dv, 0);\n                        }\n\n                        _this.dataRadiusOfPercent[i][j] = dv / range;\n                        _this.dataRadius[i][j] = _this.dataRadiusOfPercent[i][j] * _this.size;\n                        _this.angleArr[i][j] = j * _this.disAngle;\n                    });\n                    dataPointsPos = _this.getDataPointsPos(_this.dataRadius[i], _this.angleArr[i]);\n\n                    var paths = _this.createPaths(dataPointsPos, {\n                        x: 0,\n                        y: 0\n                    }); // points\n\n\n                    elPointsMain = _this.graphics.group({\n                        class: 'apexcharts-series-markers-wrap apexcharts-element-hidden'\n                    }); // datapoints\n\n                    elDataPointsMain = _this.graphics.group({\n                        class: \"apexcharts-datalabels\",\n                        'data:realIndex': i\n                    });\n                    w.globals.delayedElements.push({\n                        el: elPointsMain.node,\n                        index: i\n                    });\n                    var defaultRenderedPathOptions = {\n                        i: i,\n                        realIndex: i,\n                        animationDelay: i,\n                        initialSpeed: w.config.chart.animations.speed,\n                        dataChangeSpeed: w.config.chart.animations.dynamicAnimation.speed,\n                        className: \"apexcharts-radar\",\n                        shouldClipToGrid: false,\n                        bindEventsOnPaths: false,\n                        stroke: w.globals.stroke.colors[i],\n                        strokeLineCap: w.config.stroke.lineCap\n                    };\n                    var pathFrom = null;\n\n                    if (w.globals.previousPaths.length > 0) {\n                        pathFrom = _this.getPreviousPath(i);\n                    }\n\n                    for (var p = 0; p < paths.linePathsTo.length; p++) {\n                        var renderedLinePath = _this.graphics.renderPaths(_objectSpread2(_objectSpread2({}, defaultRenderedPathOptions), {}, {\n                            pathFrom: pathFrom === null ? paths.linePathsFrom[p] : pathFrom,\n                            pathTo: paths.linePathsTo[p],\n                            strokeWidth: Array.isArray(_this.strokeWidth) ? _this.strokeWidth[i] : _this.strokeWidth,\n                            fill: 'none',\n                            drawShadow: false\n                        }));\n\n                        elSeries.add(renderedLinePath);\n                        var pathFill = fill.fillPath({\n                            seriesNumber: i\n                        });\n\n                        var renderedAreaPath = _this.graphics.renderPaths(_objectSpread2(_objectSpread2({}, defaultRenderedPathOptions), {}, {\n                            pathFrom: pathFrom === null ? paths.areaPathsFrom[p] : pathFrom,\n                            pathTo: paths.areaPathsTo[p],\n                            strokeWidth: 0,\n                            fill: pathFill,\n                            drawShadow: false\n                        }));\n\n                        if (w.config.chart.dropShadow.enabled) {\n                            var filters = new Filters(_this.ctx);\n                            var shadow = w.config.chart.dropShadow;\n                            filters.dropShadow(renderedAreaPath, Object.assign({}, shadow, {\n                                noUserSpaceOnUse: true\n                            }), i);\n                        }\n\n                        elSeries.add(renderedAreaPath);\n                    }\n\n                    s.forEach(function(sj, j) {\n                        var markers = new Markers(_this.ctx);\n                        var opts = markers.getMarkerConfig('apexcharts-marker', i, j);\n\n                        var point = _this.graphics.drawMarker(dataPointsPos[j].x, dataPointsPos[j].y, opts);\n\n                        point.attr('rel', j);\n                        point.attr('j', j);\n                        point.attr('index', i);\n                        point.node.setAttribute('default-marker-size', opts.pSize);\n\n                        var elPointsWrap = _this.graphics.group({\n                            class: 'apexcharts-series-markers'\n                        });\n\n                        if (elPointsWrap) {\n                            elPointsWrap.add(point);\n                        }\n\n                        elPointsMain.add(elPointsWrap);\n                        elSeries.add(elPointsMain);\n                        var dataLabelsConfig = w.config.dataLabels;\n\n                        if (dataLabelsConfig.enabled) {\n                            var text = dataLabelsConfig.formatter(w.globals.series[i][j], {\n                                seriesIndex: i,\n                                dataPointIndex: j,\n                                w: w\n                            });\n                            dataLabels.plotDataLabelsText({\n                                x: dataPointsPos[j].x,\n                                y: dataPointsPos[j].y,\n                                text: text,\n                                textAnchor: 'middle',\n                                i: i,\n                                j: i,\n                                parent: elDataPointsMain,\n                                offsetCorrection: false,\n                                dataLabelsConfig: _objectSpread2({}, dataLabelsConfig)\n                            });\n                        }\n\n                        elSeries.add(elDataPointsMain);\n                    });\n                    allSeries.push(elSeries);\n                });\n                this.drawPolygons({\n                    parent: ret\n                });\n\n                if (w.config.xaxis.labels.show) {\n                    var xaxisTexts = this.drawXAxisTexts();\n                    ret.add(xaxisTexts);\n                }\n\n                allSeries.forEach(function(elS) {\n                    ret.add(elS);\n                });\n                ret.add(this.yaxisLabels);\n                return ret;\n            }\n        }, {\n            key: \"drawPolygons\",\n            value: function drawPolygons(opts) {\n                var _this2 = this;\n\n                var w = this.w;\n                var parent = opts.parent;\n                var helpers = new CircularChartsHelpers(this.ctx);\n                var yaxisTexts = w.globals.yAxisScale[0].result.reverse();\n                var layers = yaxisTexts.length;\n                var radiusSizes = [];\n                var layerDis = this.size / (layers - 1);\n\n                for (var i = 0; i < layers; i++) {\n                    radiusSizes[i] = layerDis * i;\n                }\n\n                radiusSizes.reverse();\n                var polygonStrings = [];\n                var lines = [];\n                radiusSizes.forEach(function(radiusSize, r) {\n                    var polygon = Utils.getPolygonPos(radiusSize, _this2.dataPointsLen);\n                    var string = '';\n                    polygon.forEach(function(p, i) {\n                        if (r === 0) {\n                            var line = _this2.graphics.drawLine(p.x, p.y, 0, 0, Array.isArray(_this2.polygons.connectorColors) ? _this2.polygons.connectorColors[i] : _this2.polygons.connectorColors);\n\n                            lines.push(line);\n                        }\n\n                        if (i === 0) {\n                            _this2.yaxisLabelsTextsPos.push({\n                                x: p.x,\n                                y: p.y\n                            });\n                        }\n\n                        string += p.x + ',' + p.y + ' ';\n                    });\n                    polygonStrings.push(string);\n                });\n                polygonStrings.forEach(function(p, i) {\n                    var strokeColors = _this2.polygons.strokeColors;\n                    var strokeWidth = _this2.polygons.strokeWidth;\n\n                    var polygon = _this2.graphics.drawPolygon(p, Array.isArray(strokeColors) ? strokeColors[i] : strokeColors, Array.isArray(strokeWidth) ? strokeWidth[i] : strokeWidth, w.globals.radarPolygons.fill.colors[i]);\n\n                    parent.add(polygon);\n                });\n                lines.forEach(function(l) {\n                    parent.add(l);\n                });\n\n                if (w.config.yaxis[0].show) {\n                    this.yaxisLabelsTextsPos.forEach(function(p, i) {\n                        var yText = helpers.drawYAxisTexts(p.x, p.y, i, yaxisTexts[i]);\n\n                        _this2.yaxisLabels.add(yText);\n                    });\n                }\n            }\n        }, {\n            key: \"drawXAxisTexts\",\n            value: function drawXAxisTexts() {\n                var _this3 = this;\n\n                var w = this.w;\n                var xaxisLabelsConfig = w.config.xaxis.labels;\n                var elXAxisWrap = this.graphics.group({\n                    class: 'apexcharts-xaxis'\n                });\n                var polygonPos = Utils.getPolygonPos(this.size, this.dataPointsLen);\n                w.globals.labels.forEach(function(label, i) {\n                    var formatter = w.config.xaxis.labels.formatter;\n                    var dataLabels = new DataLabels(_this3.ctx);\n\n                    if (polygonPos[i]) {\n                        var textPos = _this3.getTextPos(polygonPos[i], _this3.size);\n\n                        var text = formatter(label, {\n                            seriesIndex: -1,\n                            dataPointIndex: i,\n                            w: w\n                        });\n                        dataLabels.plotDataLabelsText({\n                            x: textPos.newX,\n                            y: textPos.newY,\n                            text: text,\n                            textAnchor: textPos.textAnchor,\n                            i: i,\n                            j: i,\n                            parent: elXAxisWrap,\n                            color: Array.isArray(xaxisLabelsConfig.style.colors) && xaxisLabelsConfig.style.colors[i] ? xaxisLabelsConfig.style.colors[i] : '#a8a8a8',\n                            dataLabelsConfig: _objectSpread2({\n                                textAnchor: textPos.textAnchor,\n                                dropShadow: {\n                                    enabled: false\n                                }\n                            }, xaxisLabelsConfig),\n                            offsetCorrection: false\n                        });\n                    }\n                });\n                return elXAxisWrap;\n            }\n        }, {\n            key: \"createPaths\",\n            value: function createPaths(pos, origin) {\n                var _this4 = this;\n\n                var linePathsTo = [];\n                var linePathsFrom = [];\n                var areaPathsTo = [];\n                var areaPathsFrom = [];\n\n                if (pos.length) {\n                    linePathsFrom = [this.graphics.move(origin.x, origin.y)];\n                    areaPathsFrom = [this.graphics.move(origin.x, origin.y)];\n                    var linePathTo = this.graphics.move(pos[0].x, pos[0].y);\n                    var areaPathTo = this.graphics.move(pos[0].x, pos[0].y);\n                    pos.forEach(function(p, i) {\n                        linePathTo += _this4.graphics.line(p.x, p.y);\n                        areaPathTo += _this4.graphics.line(p.x, p.y);\n\n                        if (i === pos.length - 1) {\n                            linePathTo += 'Z';\n                            areaPathTo += 'Z';\n                        }\n                    });\n                    linePathsTo.push(linePathTo);\n                    areaPathsTo.push(areaPathTo);\n                }\n\n                return {\n                    linePathsFrom: linePathsFrom,\n                    linePathsTo: linePathsTo,\n                    areaPathsFrom: areaPathsFrom,\n                    areaPathsTo: areaPathsTo\n                };\n            }\n        }, {\n            key: \"getTextPos\",\n            value: function getTextPos(pos, polygonSize) {\n                var limit = 10;\n                var textAnchor = 'middle';\n                var newX = pos.x;\n                var newY = pos.y;\n\n                if (Math.abs(pos.x) >= limit) {\n                    if (pos.x > 0) {\n                        textAnchor = 'start';\n                        newX += 10;\n                    } else if (pos.x < 0) {\n                        textAnchor = 'end';\n                        newX -= 10;\n                    }\n                } else {\n                    textAnchor = 'middle';\n                }\n\n                if (Math.abs(pos.y) >= polygonSize - limit) {\n                    if (pos.y < 0) {\n                        newY -= 10;\n                    } else if (pos.y > 0) {\n                        newY += 10;\n                    }\n                }\n\n                return {\n                    textAnchor: textAnchor,\n                    newX: newX,\n                    newY: newY\n                };\n            }\n        }, {\n            key: \"getPreviousPath\",\n            value: function getPreviousPath(realIndex) {\n                var w = this.w;\n                var pathFrom = null;\n\n                for (var pp = 0; pp < w.globals.previousPaths.length; pp++) {\n                    var gpp = w.globals.previousPaths[pp];\n\n                    if (gpp.paths.length > 0 && parseInt(gpp.realIndex, 10) === parseInt(realIndex, 10)) {\n                        if (typeof w.globals.previousPaths[pp].paths[0] !== 'undefined') {\n                            pathFrom = w.globals.previousPaths[pp].paths[0].d;\n                        }\n                    }\n                }\n\n                return pathFrom;\n            }\n        }, {\n            key: \"getDataPointsPos\",\n            value: function getDataPointsPos(dataRadiusArr, angleArr) {\n                var dataPointsLen = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.dataPointsLen;\n                dataRadiusArr = dataRadiusArr || [];\n                angleArr = angleArr || [];\n                var dataPointsPosArray = [];\n\n                for (var j = 0; j < dataPointsLen; j++) {\n                    var curPointPos = {};\n                    curPointPos.x = dataRadiusArr[j] * Math.sin(angleArr[j]);\n                    curPointPos.y = -dataRadiusArr[j] * Math.cos(angleArr[j]);\n                    dataPointsPosArray.push(curPointPos);\n                }\n\n                return dataPointsPosArray;\n            }\n        }]);\n\n        return Radar;\n    }();\n\n    /**\n     * ApexCharts Radial Class for drawing Circle / Semi Circle Charts.\n     * @module Radial\n     **/\n\n    var Radial = /*#__PURE__*/ function(_Pie) {\n        _inherits(Radial, _Pie);\n\n        var _super = _createSuper(Radial);\n\n        function Radial(ctx) {\n            var _this;\n\n            _classCallCheck(this, Radial);\n\n            _this = _super.call(this, ctx);\n            _this.ctx = ctx;\n            _this.w = ctx.w;\n            _this.animBeginArr = [0];\n            _this.animDur = 0;\n            var w = _this.w;\n            _this.startAngle = w.config.plotOptions.radialBar.startAngle;\n            _this.endAngle = w.config.plotOptions.radialBar.endAngle;\n            _this.totalAngle = Math.abs(w.config.plotOptions.radialBar.endAngle - w.config.plotOptions.radialBar.startAngle);\n            _this.trackStartAngle = w.config.plotOptions.radialBar.track.startAngle;\n            _this.trackEndAngle = w.config.plotOptions.radialBar.track.endAngle;\n            _this.radialDataLabels = w.config.plotOptions.radialBar.dataLabels;\n            if (!_this.trackStartAngle) _this.trackStartAngle = _this.startAngle;\n            if (!_this.trackEndAngle) _this.trackEndAngle = _this.endAngle;\n            if (_this.endAngle === 360) _this.endAngle = 359.99;\n            _this.margin = parseInt(w.config.plotOptions.radialBar.track.margin, 10);\n            return _this;\n        }\n\n        _createClass(Radial, [{\n            key: \"draw\",\n            value: function draw(series) {\n                var w = this.w;\n                var graphics = new Graphics(this.ctx);\n                var ret = graphics.group({\n                    class: 'apexcharts-radialbar'\n                });\n                if (w.globals.noData) return ret;\n                var elSeries = graphics.group();\n                var centerY = this.defaultSize / 2;\n                var centerX = w.globals.gridWidth / 2;\n                var size = this.defaultSize / 2.05;\n\n                if (!w.config.chart.sparkline.enabled) {\n                    size = size - w.config.stroke.width - w.config.chart.dropShadow.blur;\n                }\n\n                var colorArr = w.globals.fill.colors;\n\n                if (w.config.plotOptions.radialBar.track.show) {\n                    var elTracks = this.drawTracks({\n                        size: size,\n                        centerX: centerX,\n                        centerY: centerY,\n                        colorArr: colorArr,\n                        series: series\n                    });\n                    elSeries.add(elTracks);\n                }\n\n                var elG = this.drawArcs({\n                    size: size,\n                    centerX: centerX,\n                    centerY: centerY,\n                    colorArr: colorArr,\n                    series: series\n                });\n                var totalAngle = 360;\n\n                if (w.config.plotOptions.radialBar.startAngle < 0) {\n                    totalAngle = this.totalAngle;\n                }\n\n                var angleRatio = (360 - totalAngle) / 360;\n                w.globals.radialSize = size - size * angleRatio;\n\n                if (this.radialDataLabels.value.show) {\n                    var offset = Math.max(this.radialDataLabels.value.offsetY, this.radialDataLabels.name.offsetY);\n                    w.globals.radialSize += offset * angleRatio;\n                }\n\n                elSeries.add(elG.g);\n\n                if (w.config.plotOptions.radialBar.hollow.position === 'front') {\n                    elG.g.add(elG.elHollow);\n\n                    if (elG.dataLabels) {\n                        elG.g.add(elG.dataLabels);\n                    }\n                }\n\n                ret.add(elSeries);\n                return ret;\n            }\n        }, {\n            key: \"drawTracks\",\n            value: function drawTracks(opts) {\n                var w = this.w;\n                var graphics = new Graphics(this.ctx);\n                var g = graphics.group({\n                    class: 'apexcharts-tracks'\n                });\n                var filters = new Filters(this.ctx);\n                var fill = new Fill(this.ctx);\n                var strokeWidth = this.getStrokeWidth(opts);\n                opts.size = opts.size - strokeWidth / 2;\n\n                for (var i = 0; i < opts.series.length; i++) {\n                    var elRadialBarTrack = graphics.group({\n                        class: 'apexcharts-radialbar-track apexcharts-track'\n                    });\n                    g.add(elRadialBarTrack);\n                    elRadialBarTrack.attr({\n                        rel: i + 1\n                    });\n                    opts.size = opts.size - strokeWidth - this.margin;\n                    var trackConfig = w.config.plotOptions.radialBar.track;\n                    var pathFill = fill.fillPath({\n                        seriesNumber: 0,\n                        size: opts.size,\n                        fillColors: Array.isArray(trackConfig.background) ? trackConfig.background[i] : trackConfig.background,\n                        solid: true\n                    });\n                    var startAngle = this.trackStartAngle;\n                    var endAngle = this.trackEndAngle;\n                    if (Math.abs(endAngle) + Math.abs(startAngle) >= 360) endAngle = 360 - Math.abs(this.startAngle) - 0.1;\n                    var elPath = graphics.drawPath({\n                        d: '',\n                        stroke: pathFill,\n                        strokeWidth: strokeWidth * parseInt(trackConfig.strokeWidth, 10) / 100,\n                        fill: 'none',\n                        strokeOpacity: trackConfig.opacity,\n                        classes: 'apexcharts-radialbar-area'\n                    });\n\n                    if (trackConfig.dropShadow.enabled) {\n                        var shadow = trackConfig.dropShadow;\n                        filters.dropShadow(elPath, shadow);\n                    }\n\n                    elRadialBarTrack.add(elPath);\n                    elPath.attr('id', 'apexcharts-radialbarTrack-' + i);\n                    this.animatePaths(elPath, {\n                        centerX: opts.centerX,\n                        centerY: opts.centerY,\n                        endAngle: endAngle,\n                        startAngle: startAngle,\n                        size: opts.size,\n                        i: i,\n                        totalItems: 2,\n                        animBeginArr: 0,\n                        dur: 0,\n                        isTrack: true,\n                        easing: w.globals.easing\n                    });\n                }\n\n                return g;\n            }\n        }, {\n            key: \"drawArcs\",\n            value: function drawArcs(opts) {\n                var w = this.w; // size, donutSize, centerX, centerY, colorArr, lineColorArr, sectorAngleArr, series\n\n                var graphics = new Graphics(this.ctx);\n                var fill = new Fill(this.ctx);\n                var filters = new Filters(this.ctx);\n                var g = graphics.group();\n                var strokeWidth = this.getStrokeWidth(opts);\n                opts.size = opts.size - strokeWidth / 2;\n                var hollowFillID = w.config.plotOptions.radialBar.hollow.background;\n                var hollowSize = opts.size - strokeWidth * opts.series.length - this.margin * opts.series.length - strokeWidth * parseInt(w.config.plotOptions.radialBar.track.strokeWidth, 10) / 100 / 2;\n                var hollowRadius = hollowSize - w.config.plotOptions.radialBar.hollow.margin;\n\n                if (w.config.plotOptions.radialBar.hollow.image !== undefined) {\n                    hollowFillID = this.drawHollowImage(opts, g, hollowSize, hollowFillID);\n                }\n\n                var elHollow = this.drawHollow({\n                    size: hollowRadius,\n                    centerX: opts.centerX,\n                    centerY: opts.centerY,\n                    fill: hollowFillID ? hollowFillID : 'transparent'\n                });\n\n                if (w.config.plotOptions.radialBar.hollow.dropShadow.enabled) {\n                    var shadow = w.config.plotOptions.radialBar.hollow.dropShadow;\n                    filters.dropShadow(elHollow, shadow);\n                }\n\n                var shown = 1;\n\n                if (!this.radialDataLabels.total.show && w.globals.series.length > 1) {\n                    shown = 0;\n                }\n\n                var dataLabels = null;\n\n                if (this.radialDataLabels.show) {\n                    dataLabels = this.renderInnerDataLabels(this.radialDataLabels, {\n                        hollowSize: hollowSize,\n                        centerX: opts.centerX,\n                        centerY: opts.centerY,\n                        opacity: shown\n                    });\n                }\n\n                if (w.config.plotOptions.radialBar.hollow.position === 'back') {\n                    g.add(elHollow);\n\n                    if (dataLabels) {\n                        g.add(dataLabels);\n                    }\n                }\n\n                var reverseLoop = false;\n\n                if (w.config.plotOptions.radialBar.inverseOrder) {\n                    reverseLoop = true;\n                }\n\n                for (var i = reverseLoop ? opts.series.length - 1 : 0; reverseLoop ? i >= 0 : i < opts.series.length; reverseLoop ? i-- : i++) {\n                    var elRadialBarArc = graphics.group({\n                        class: \"apexcharts-series apexcharts-radial-series\",\n                        seriesName: Utils.escapeString(w.globals.seriesNames[i])\n                    });\n                    g.add(elRadialBarArc);\n                    elRadialBarArc.attr({\n                        rel: i + 1,\n                        'data:realIndex': i\n                    });\n                    this.ctx.series.addCollapsedClassToSeries(elRadialBarArc, i);\n                    opts.size = opts.size - strokeWidth - this.margin;\n                    var pathFill = fill.fillPath({\n                        seriesNumber: i,\n                        size: opts.size,\n                        value: opts.series[i]\n                    });\n                    var startAngle = this.startAngle;\n                    var prevStartAngle = void 0; // if data exceeds 100, make it 100\n\n                    var dataValue = Utils.negToZero(opts.series[i] > 100 ? 100 : opts.series[i]) / 100;\n                    var endAngle = Math.round(this.totalAngle * dataValue) + this.startAngle;\n                    var prevEndAngle = void 0;\n\n                    if (w.globals.dataChanged) {\n                        prevStartAngle = this.startAngle;\n                        prevEndAngle = Math.round(this.totalAngle * Utils.negToZero(w.globals.previousPaths[i]) / 100) + prevStartAngle;\n                    }\n\n                    var currFullAngle = Math.abs(endAngle) + Math.abs(startAngle);\n\n                    if (currFullAngle >= 360) {\n                        endAngle = endAngle - 0.01;\n                    }\n\n                    var prevFullAngle = Math.abs(prevEndAngle) + Math.abs(prevStartAngle);\n\n                    if (prevFullAngle >= 360) {\n                        prevEndAngle = prevEndAngle - 0.01;\n                    }\n\n                    var angle = endAngle - startAngle;\n                    var dashArray = Array.isArray(w.config.stroke.dashArray) ? w.config.stroke.dashArray[i] : w.config.stroke.dashArray;\n                    var elPath = graphics.drawPath({\n                        d: '',\n                        stroke: pathFill,\n                        strokeWidth: strokeWidth,\n                        fill: 'none',\n                        fillOpacity: w.config.fill.opacity,\n                        classes: 'apexcharts-radialbar-area apexcharts-radialbar-slice-' + i,\n                        strokeDashArray: dashArray\n                    });\n                    Graphics.setAttrs(elPath.node, {\n                        'data:angle': angle,\n                        'data:value': opts.series[i]\n                    });\n\n                    if (w.config.chart.dropShadow.enabled) {\n                        var _shadow = w.config.chart.dropShadow;\n                        filters.dropShadow(elPath, _shadow, i);\n                    }\n\n                    filters.setSelectionFilter(elPath, 0, i);\n                    this.addListeners(elPath, this.radialDataLabels);\n                    elRadialBarArc.add(elPath);\n                    elPath.attr({\n                        index: 0,\n                        j: i\n                    });\n                    var dur = 0;\n\n                    if (this.initialAnim && !w.globals.resized && !w.globals.dataChanged) {\n                        dur = (endAngle - startAngle) / 360 * w.config.chart.animations.speed;\n                        this.animDur = dur / (opts.series.length * 1.2) + this.animDur;\n                        this.animBeginArr.push(this.animDur);\n                    }\n\n                    if (w.globals.dataChanged) {\n                        dur = (endAngle - startAngle) / 360 * w.config.chart.animations.dynamicAnimation.speed;\n                        this.animDur = dur / (opts.series.length * 1.2) + this.animDur;\n                        this.animBeginArr.push(this.animDur);\n                    }\n\n                    this.animatePaths(elPath, {\n                        centerX: opts.centerX,\n                        centerY: opts.centerY,\n                        endAngle: endAngle,\n                        startAngle: startAngle,\n                        prevEndAngle: prevEndAngle,\n                        prevStartAngle: prevStartAngle,\n                        size: opts.size,\n                        i: i,\n                        totalItems: 2,\n                        animBeginArr: this.animBeginArr,\n                        dur: dur,\n                        shouldSetPrevPaths: true,\n                        easing: w.globals.easing\n                    });\n                }\n\n                return {\n                    g: g,\n                    elHollow: elHollow,\n                    dataLabels: dataLabels\n                };\n            }\n        }, {\n            key: \"drawHollow\",\n            value: function drawHollow(opts) {\n                var graphics = new Graphics(this.ctx);\n                var circle = graphics.drawCircle(opts.size * 2);\n                circle.attr({\n                    class: 'apexcharts-radialbar-hollow',\n                    cx: opts.centerX,\n                    cy: opts.centerY,\n                    r: opts.size,\n                    fill: opts.fill\n                });\n                return circle;\n            }\n        }, {\n            key: \"drawHollowImage\",\n            value: function drawHollowImage(opts, g, hollowSize, hollowFillID) {\n                var w = this.w;\n                var fill = new Fill(this.ctx);\n                var randID = Utils.randomId();\n                var hollowFillImg = w.config.plotOptions.radialBar.hollow.image;\n\n                if (w.config.plotOptions.radialBar.hollow.imageClipped) {\n                    fill.clippedImgArea({\n                        width: hollowSize,\n                        height: hollowSize,\n                        image: hollowFillImg,\n                        patternID: \"pattern\".concat(w.globals.cuid).concat(randID)\n                    });\n                    hollowFillID = \"url(#pattern\".concat(w.globals.cuid).concat(randID, \")\");\n                } else {\n                    var imgWidth = w.config.plotOptions.radialBar.hollow.imageWidth;\n                    var imgHeight = w.config.plotOptions.radialBar.hollow.imageHeight;\n\n                    if (imgWidth === undefined && imgHeight === undefined) {\n                        var image = w.globals.dom.Paper.image(hollowFillImg).loaded(function(loader) {\n                            this.move(opts.centerX - loader.width / 2 + w.config.plotOptions.radialBar.hollow.imageOffsetX, opts.centerY - loader.height / 2 + w.config.plotOptions.radialBar.hollow.imageOffsetY);\n                        });\n                        g.add(image);\n                    } else {\n                        var _image = w.globals.dom.Paper.image(hollowFillImg).loaded(function(loader) {\n                            this.move(opts.centerX - imgWidth / 2 + w.config.plotOptions.radialBar.hollow.imageOffsetX, opts.centerY - imgHeight / 2 + w.config.plotOptions.radialBar.hollow.imageOffsetY);\n                            this.size(imgWidth, imgHeight);\n                        });\n\n                        g.add(_image);\n                    }\n                }\n\n                return hollowFillID;\n            }\n        }, {\n            key: \"getStrokeWidth\",\n            value: function getStrokeWidth(opts) {\n                var w = this.w;\n                return opts.size * (100 - parseInt(w.config.plotOptions.radialBar.hollow.size, 10)) / 100 / (opts.series.length + 1) - this.margin;\n            }\n        }]);\n\n        return Radial;\n    }(Pie);\n\n    var Helpers$4 = /*#__PURE__*/ function() {\n        function Helpers(lineCtx) {\n            _classCallCheck(this, Helpers);\n\n            this.w = lineCtx.w;\n            this.lineCtx = lineCtx;\n        }\n\n        _createClass(Helpers, [{\n            key: \"sameValueSeriesFix\",\n            value: function sameValueSeriesFix(i, series) {\n                var w = this.w;\n\n                if (w.config.chart.type === 'line' && (w.config.fill.type === 'gradient' || w.config.fill.type[i] === 'gradient')) {\n                    var coreUtils = new CoreUtils(this.lineCtx.ctx, w); // a small adjustment to allow gradient line to draw correctly for all same values\n\n                    /* #fix https://github.com/apexcharts/apexcharts.js/issues/358 */\n\n                    if (coreUtils.seriesHaveSameValues(i)) {\n                        var gSeries = series[i].slice();\n                        gSeries[gSeries.length - 1] = gSeries[gSeries.length - 1] + 0.000001;\n                        series[i] = gSeries;\n                    }\n                }\n\n                return series;\n            }\n        }, {\n            key: \"calculatePoints\",\n            value: function calculatePoints(_ref) {\n                var series = _ref.series,\n                    realIndex = _ref.realIndex,\n                    x = _ref.x,\n                    y = _ref.y,\n                    i = _ref.i,\n                    j = _ref.j,\n                    prevY = _ref.prevY;\n                var w = this.w;\n                var ptX = [];\n                var ptY = [];\n\n                if (j === 0) {\n                    var xPT1st = this.lineCtx.categoryAxisCorrection + w.config.markers.offsetX; // the first point for line series\n                    // we need to check whether it's not a time series, because a time series may\n                    // start from the middle of the x axis\n\n                    if (w.globals.isXNumeric) {\n                        xPT1st = (w.globals.seriesX[realIndex][0] - w.globals.minX) / this.lineCtx.xRatio + w.config.markers.offsetX;\n                    } // push 2 points for the first data values\n\n\n                    ptX.push(xPT1st);\n                    ptY.push(Utils.isNumber(series[i][0]) ? prevY + w.config.markers.offsetY : null);\n                    ptX.push(x + w.config.markers.offsetX);\n                    ptY.push(Utils.isNumber(series[i][j + 1]) ? y + w.config.markers.offsetY : null);\n                } else {\n                    ptX.push(x + w.config.markers.offsetX);\n                    ptY.push(Utils.isNumber(series[i][j + 1]) ? y + w.config.markers.offsetY : null);\n                }\n\n                var pointsPos = {\n                    x: ptX,\n                    y: ptY\n                };\n                return pointsPos;\n            }\n        }, {\n            key: \"checkPreviousPaths\",\n            value: function checkPreviousPaths(_ref2) {\n                var pathFromLine = _ref2.pathFromLine,\n                    pathFromArea = _ref2.pathFromArea,\n                    realIndex = _ref2.realIndex;\n                var w = this.w;\n\n                for (var pp = 0; pp < w.globals.previousPaths.length; pp++) {\n                    var gpp = w.globals.previousPaths[pp];\n\n                    if ((gpp.type === 'line' || gpp.type === 'area') && gpp.paths.length > 0 && parseInt(gpp.realIndex, 10) === parseInt(realIndex, 10)) {\n                        if (gpp.type === 'line') {\n                            this.lineCtx.appendPathFrom = false;\n                            pathFromLine = w.globals.previousPaths[pp].paths[0].d;\n                        } else if (gpp.type === 'area') {\n                            this.lineCtx.appendPathFrom = false;\n                            pathFromArea = w.globals.previousPaths[pp].paths[0].d;\n\n                            if (w.config.stroke.show && w.globals.previousPaths[pp].paths[1]) {\n                                pathFromLine = w.globals.previousPaths[pp].paths[1].d;\n                            }\n                        }\n                    }\n                }\n\n                return {\n                    pathFromLine: pathFromLine,\n                    pathFromArea: pathFromArea\n                };\n            }\n        }, {\n            key: \"determineFirstPrevY\",\n            value: function determineFirstPrevY(_ref3) {\n                var i = _ref3.i,\n                    series = _ref3.series,\n                    prevY = _ref3.prevY,\n                    lineYPosition = _ref3.lineYPosition;\n                var w = this.w;\n\n                if (typeof series[i][0] !== 'undefined') {\n                    if (w.config.chart.stacked) {\n                        if (i > 0) {\n                            // 1st y value of previous series\n                            lineYPosition = this.lineCtx.prevSeriesY[i - 1][0];\n                        } else {\n                            // the first series will not have prevY values\n                            lineYPosition = this.lineCtx.zeroY;\n                        }\n                    } else {\n                        lineYPosition = this.lineCtx.zeroY;\n                    }\n\n                    prevY = lineYPosition - series[i][0] / this.lineCtx.yRatio[this.lineCtx.yaxisIndex] + (this.lineCtx.isReversed ? series[i][0] / this.lineCtx.yRatio[this.lineCtx.yaxisIndex] : 0) * 2;\n                } else {\n                    // the first value in the current series is null\n                    if (w.config.chart.stacked && i > 0 && typeof series[i][0] === 'undefined') {\n                        // check for undefined value (undefined value will occur when we clear the series while user clicks on legend to hide serieses)\n                        for (var s = i - 1; s >= 0; s--) {\n                            // for loop to get to 1st previous value until we get it\n                            if (series[s][0] !== null && typeof series[s][0] !== 'undefined') {\n                                lineYPosition = this.lineCtx.prevSeriesY[s][0];\n                                prevY = lineYPosition;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                return {\n                    prevY: prevY,\n                    lineYPosition: lineYPosition\n                };\n            }\n        }]);\n\n        return Helpers;\n    }();\n\n    /**\n     * ApexCharts Line Class responsible for drawing Line / Area Charts.\n     * This class is also responsible for generating values for Bubble/Scatter charts, so need to rename it to Axis Charts to avoid confusions\n     * @module Line\n     **/\n\n    var Line = /*#__PURE__*/ function() {\n        function Line(ctx, xyRatios, isPointsChart) {\n            _classCallCheck(this, Line);\n\n            this.ctx = ctx;\n            this.w = ctx.w;\n            this.xyRatios = xyRatios;\n            this.pointsChart = !(this.w.config.chart.type !== 'bubble' && this.w.config.chart.type !== 'scatter') || isPointsChart;\n            this.scatter = new Scatter(this.ctx);\n            this.noNegatives = this.w.globals.minX === Number.MAX_VALUE;\n            this.lineHelpers = new Helpers$4(this);\n            this.markers = new Markers(this.ctx);\n            this.prevSeriesY = [];\n            this.categoryAxisCorrection = 0;\n            this.yaxisIndex = 0;\n        }\n\n        _createClass(Line, [{\n            key: \"draw\",\n            value: function draw(series, ptype, seriesIndex) {\n                var w = this.w;\n                var graphics = new Graphics(this.ctx);\n                var type = w.globals.comboCharts ? ptype : w.config.chart.type;\n                var ret = graphics.group({\n                    class: \"apexcharts-\".concat(type, \"-series apexcharts-plot-series\")\n                });\n                var coreUtils = new CoreUtils(this.ctx, w);\n                this.yRatio = this.xyRatios.yRatio;\n                this.zRatio = this.xyRatios.zRatio;\n                this.xRatio = this.xyRatios.xRatio;\n                this.baseLineY = this.xyRatios.baseLineY;\n                series = coreUtils.getLogSeries(series);\n                this.yRatio = coreUtils.getLogYRatios(this.yRatio); // push all series in an array, so we can draw in reverse order (for stacked charts)\n\n                var allSeries = [];\n\n                for (var i = 0; i < series.length; i++) {\n                    series = this.lineHelpers.sameValueSeriesFix(i, series);\n                    var realIndex = w.globals.comboCharts ? seriesIndex[i] : i;\n\n                    this._initSerieVariables(series, i, realIndex);\n\n                    var yArrj = []; // hold y values of current iterating series\n\n                    var xArrj = []; // hold x values of current iterating series\n\n                    var x = w.globals.padHorizontal + this.categoryAxisCorrection;\n                    var y = 1;\n                    var linePaths = [];\n                    var areaPaths = [];\n                    this.ctx.series.addCollapsedClassToSeries(this.elSeries, realIndex);\n\n                    if (w.globals.isXNumeric && w.globals.seriesX.length > 0) {\n                        x = (w.globals.seriesX[realIndex][0] - w.globals.minX) / this.xRatio;\n                    }\n\n                    xArrj.push(x);\n                    var pX = x;\n                    var pY = void 0;\n                    var prevX = pX;\n                    var prevY = this.zeroY;\n                    var lineYPosition = 0; // the first value in the current series is not null or undefined\n\n                    var firstPrevY = this.lineHelpers.determineFirstPrevY({\n                        i: i,\n                        series: series,\n                        prevY: prevY,\n                        lineYPosition: lineYPosition\n                    });\n                    prevY = firstPrevY.prevY;\n                    yArrj.push(prevY);\n                    pY = prevY;\n\n                    var pathsFrom = this._calculatePathsFrom({\n                        series: series,\n                        i: i,\n                        realIndex: realIndex,\n                        prevX: prevX,\n                        prevY: prevY\n                    });\n\n                    var paths = this._iterateOverDataPoints({\n                        series: series,\n                        realIndex: realIndex,\n                        i: i,\n                        x: x,\n                        y: y,\n                        pX: pX,\n                        pY: pY,\n                        pathsFrom: pathsFrom,\n                        linePaths: linePaths,\n                        areaPaths: areaPaths,\n                        seriesIndex: seriesIndex,\n                        lineYPosition: lineYPosition,\n                        xArrj: xArrj,\n                        yArrj: yArrj\n                    });\n\n                    this._handlePaths({\n                        type: type,\n                        realIndex: realIndex,\n                        i: i,\n                        paths: paths\n                    });\n\n                    this.elSeries.add(this.elPointsMain);\n                    this.elSeries.add(this.elDataLabelsWrap);\n                    allSeries.push(this.elSeries);\n                }\n\n                if (w.config.chart.stacked) {\n                    for (var s = allSeries.length; s > 0; s--) {\n                        ret.add(allSeries[s - 1]);\n                    }\n                } else {\n                    for (var _s = 0; _s < allSeries.length; _s++) {\n                        ret.add(allSeries[_s]);\n                    }\n                }\n\n                return ret;\n            }\n        }, {\n            key: \"_initSerieVariables\",\n            value: function _initSerieVariables(series, i, realIndex) {\n                var w = this.w;\n                var graphics = new Graphics(this.ctx); // width divided into equal parts\n\n                this.xDivision = w.globals.gridWidth / (w.globals.dataPoints - (w.config.xaxis.tickPlacement === 'on' ? 1 : 0));\n                this.strokeWidth = Array.isArray(w.config.stroke.width) ? w.config.stroke.width[realIndex] : w.config.stroke.width;\n\n                if (this.yRatio.length > 1) {\n                    this.yaxisIndex = realIndex;\n                }\n\n                this.isReversed = w.config.yaxis[this.yaxisIndex] && w.config.yaxis[this.yaxisIndex].reversed; // zeroY is the 0 value in y series which can be used in negative charts\n\n                this.zeroY = w.globals.gridHeight - this.baseLineY[this.yaxisIndex] - (this.isReversed ? w.globals.gridHeight : 0) + (this.isReversed ? this.baseLineY[this.yaxisIndex] * 2 : 0);\n                this.areaBottomY = this.zeroY;\n\n                if (this.zeroY > w.globals.gridHeight || w.config.plotOptions.area.fillTo === 'end') {\n                    this.areaBottomY = w.globals.gridHeight;\n                }\n\n                this.categoryAxisCorrection = this.xDivision / 2; // el to which series will be drawn\n\n                this.elSeries = graphics.group({\n                    class: \"apexcharts-series\",\n                    seriesName: Utils.escapeString(w.globals.seriesNames[realIndex])\n                }); // points\n\n                this.elPointsMain = graphics.group({\n                    class: 'apexcharts-series-markers-wrap',\n                    'data:realIndex': realIndex\n                }); // eldatalabels\n\n                this.elDataLabelsWrap = graphics.group({\n                    class: 'apexcharts-datalabels',\n                    'data:realIndex': realIndex\n                });\n                var longestSeries = series[i].length === w.globals.dataPoints;\n                this.elSeries.attr({\n                    'data:longestSeries': longestSeries,\n                    rel: i + 1,\n                    'data:realIndex': realIndex\n                });\n                this.appendPathFrom = true;\n            }\n        }, {\n            key: \"_calculatePathsFrom\",\n            value: function _calculatePathsFrom(_ref) {\n                var series = _ref.series,\n                    i = _ref.i,\n                    realIndex = _ref.realIndex,\n                    prevX = _ref.prevX,\n                    prevY = _ref.prevY;\n                var w = this.w;\n                var graphics = new Graphics(this.ctx);\n                var linePath, areaPath, pathFromLine, pathFromArea;\n\n                if (series[i][0] === null) {\n                    // when the first value itself is null, we need to move the pointer to a location where a null value is not found\n                    for (var s = 0; s < series[i].length; s++) {\n                        if (series[i][s] !== null) {\n                            prevX = this.xDivision * s;\n                            prevY = this.zeroY - series[i][s] / this.yRatio[this.yaxisIndex];\n                            linePath = graphics.move(prevX, prevY);\n                            areaPath = graphics.move(prevX, this.areaBottomY);\n                            break;\n                        }\n                    }\n                } else {\n                    linePath = graphics.move(prevX, prevY);\n                    areaPath = graphics.move(prevX, this.areaBottomY) + graphics.line(prevX, prevY);\n                }\n\n                pathFromLine = graphics.move(-1, this.zeroY) + graphics.line(-1, this.zeroY);\n                pathFromArea = graphics.move(-1, this.zeroY) + graphics.line(-1, this.zeroY);\n\n                if (w.globals.previousPaths.length > 0) {\n                    var pathFrom = this.lineHelpers.checkPreviousPaths({\n                        pathFromLine: pathFromLine,\n                        pathFromArea: pathFromArea,\n                        realIndex: realIndex\n                    });\n                    pathFromLine = pathFrom.pathFromLine;\n                    pathFromArea = pathFrom.pathFromArea;\n                }\n\n                return {\n                    prevX: prevX,\n                    prevY: prevY,\n                    linePath: linePath,\n                    areaPath: areaPath,\n                    pathFromLine: pathFromLine,\n                    pathFromArea: pathFromArea\n                };\n            }\n        }, {\n            key: \"_handlePaths\",\n            value: function _handlePaths(_ref2) {\n                var type = _ref2.type,\n                    realIndex = _ref2.realIndex,\n                    i = _ref2.i,\n                    paths = _ref2.paths;\n                var w = this.w;\n                var graphics = new Graphics(this.ctx);\n                var fill = new Fill(this.ctx); // push all current y values array to main PrevY Array\n\n                this.prevSeriesY.push(paths.yArrj); // push all x val arrays into main xArr\n\n                w.globals.seriesXvalues[realIndex] = paths.xArrj;\n                w.globals.seriesYvalues[realIndex] = paths.yArrj;\n                var forecast = w.config.forecastDataPoints;\n\n                if (forecast.count > 0) {\n                    var forecastCutoff = w.globals.seriesXvalues[realIndex][w.globals.seriesXvalues[realIndex].length - forecast.count - 1];\n                    var elForecastMask = graphics.drawRect(forecastCutoff, 0, w.globals.gridWidth, w.globals.gridHeight, 0);\n                    w.globals.dom.elForecastMask.appendChild(elForecastMask.node);\n                    var elNonForecastMask = graphics.drawRect(0, 0, forecastCutoff, w.globals.gridHeight, 0);\n                    w.globals.dom.elNonForecastMask.appendChild(elNonForecastMask.node);\n                } // these elements will be shown after area path animation completes\n\n\n                if (!this.pointsChart) {\n                    w.globals.delayedElements.push({\n                        el: this.elPointsMain.node,\n                        index: realIndex\n                    });\n                }\n\n                var defaultRenderedPathOptions = {\n                    i: i,\n                    realIndex: realIndex,\n                    animationDelay: i,\n                    initialSpeed: w.config.chart.animations.speed,\n                    dataChangeSpeed: w.config.chart.animations.dynamicAnimation.speed,\n                    className: \"apexcharts-\".concat(type)\n                };\n\n                if (type === 'area') {\n                    var pathFill = fill.fillPath({\n                        seriesNumber: realIndex\n                    });\n\n                    for (var p = 0; p < paths.areaPaths.length; p++) {\n                        var renderedPath = graphics.renderPaths(_objectSpread2(_objectSpread2({}, defaultRenderedPathOptions), {}, {\n                            pathFrom: paths.pathFromArea,\n                            pathTo: paths.areaPaths[p],\n                            stroke: 'none',\n                            strokeWidth: 0,\n                            strokeLineCap: null,\n                            fill: pathFill\n                        }));\n                        this.elSeries.add(renderedPath);\n                    }\n                }\n\n                if (w.config.stroke.show && !this.pointsChart) {\n                    var lineFill = null;\n\n                    if (type === 'line') {\n                        // fillable lines only for lineChart\n                        lineFill = fill.fillPath({\n                            seriesNumber: realIndex,\n                            i: i\n                        });\n                    } else {\n                        lineFill = w.globals.stroke.colors[realIndex];\n                    }\n\n                    for (var _p = 0; _p < paths.linePaths.length; _p++) {\n                        var linePathCommonOpts = _objectSpread2(_objectSpread2({}, defaultRenderedPathOptions), {}, {\n                            pathFrom: paths.pathFromLine,\n                            pathTo: paths.linePaths[_p],\n                            stroke: lineFill,\n                            strokeWidth: this.strokeWidth,\n                            strokeLineCap: w.config.stroke.lineCap,\n                            fill: 'none'\n                        });\n\n                        var _renderedPath = graphics.renderPaths(linePathCommonOpts);\n\n                        this.elSeries.add(_renderedPath);\n\n                        if (forecast.count > 0) {\n                            var renderedForecastPath = graphics.renderPaths(linePathCommonOpts);\n                            renderedForecastPath.node.setAttribute('stroke-dasharray', forecast.dashArray);\n\n                            if (forecast.strokeWidth) {\n                                renderedForecastPath.node.setAttribute('stroke-width', forecast.strokeWidth);\n                            }\n\n                            this.elSeries.add(renderedForecastPath);\n                            renderedForecastPath.attr('clip-path', \"url(#forecastMask\".concat(w.globals.cuid, \")\"));\n\n                            _renderedPath.attr('clip-path', \"url(#nonForecastMask\".concat(w.globals.cuid, \")\"));\n                        }\n                    }\n                }\n            }\n        }, {\n            key: \"_iterateOverDataPoints\",\n            value: function _iterateOverDataPoints(_ref3) {\n                var series = _ref3.series,\n                    realIndex = _ref3.realIndex,\n                    i = _ref3.i,\n                    x = _ref3.x,\n                    y = _ref3.y,\n                    pX = _ref3.pX,\n                    pY = _ref3.pY,\n                    pathsFrom = _ref3.pathsFrom,\n                    linePaths = _ref3.linePaths,\n                    areaPaths = _ref3.areaPaths,\n                    seriesIndex = _ref3.seriesIndex,\n                    lineYPosition = _ref3.lineYPosition,\n                    xArrj = _ref3.xArrj,\n                    yArrj = _ref3.yArrj;\n                var w = this.w;\n                var graphics = new Graphics(this.ctx);\n                var yRatio = this.yRatio;\n                var prevY = pathsFrom.prevY,\n                    linePath = pathsFrom.linePath,\n                    areaPath = pathsFrom.areaPath,\n                    pathFromLine = pathsFrom.pathFromLine,\n                    pathFromArea = pathsFrom.pathFromArea;\n                var minY = Utils.isNumber(w.globals.minYArr[realIndex]) ? w.globals.minYArr[realIndex] : w.globals.minY;\n                var iterations = w.globals.dataPoints > 1 ? w.globals.dataPoints - 1 : w.globals.dataPoints;\n\n                for (var j = 0; j < iterations; j++) {\n                    var isNull = typeof series[i][j + 1] === 'undefined' || series[i][j + 1] === null;\n\n                    if (w.globals.isXNumeric) {\n                        var sX = w.globals.seriesX[realIndex][j + 1];\n\n                        if (typeof w.globals.seriesX[realIndex][j + 1] === 'undefined') {\n                            /* fix #374 */\n                            sX = w.globals.seriesX[realIndex][iterations - 1];\n                        }\n\n                        x = (sX - w.globals.minX) / this.xRatio;\n                    } else {\n                        x = x + this.xDivision;\n                    }\n\n                    if (w.config.chart.stacked) {\n                        if (i > 0 && w.globals.collapsedSeries.length < w.config.series.length - 1) {\n                            // a collapsed series in a stacked bar chart may provide wrong result for the next series, hence find the prevIndex of prev series which is not collapsed - fixes apexcharts.js#1372\n                            var prevIndex = function prevIndex(pi) {\n                                var pii = pi;\n\n                                for (var cpi = 0; cpi < w.globals.series.length; cpi++) {\n                                    if (w.globals.collapsedSeriesIndices.indexOf(pi) > -1) {\n                                        pii--;\n                                        break;\n                                    }\n                                }\n\n                                return pii >= 0 ? pii : 0;\n                            };\n\n                            lineYPosition = this.prevSeriesY[prevIndex(i - 1)][j + 1];\n                        } else {\n                            // the first series will not have prevY values\n                            lineYPosition = this.zeroY;\n                        }\n                    } else {\n                        lineYPosition = this.zeroY;\n                    }\n\n                    if (isNull) {\n                        y = lineYPosition - minY / yRatio[this.yaxisIndex] + (this.isReversed ? minY / yRatio[this.yaxisIndex] : 0) * 2;\n                    } else {\n                        y = lineYPosition - series[i][j + 1] / yRatio[this.yaxisIndex] + (this.isReversed ? series[i][j + 1] / yRatio[this.yaxisIndex] : 0) * 2;\n                    } // push current X\n\n\n                    xArrj.push(x); // push current Y that will be used as next series's bottom position\n\n                    yArrj.push(y);\n                    var pointsPos = this.lineHelpers.calculatePoints({\n                        series: series,\n                        x: x,\n                        y: y,\n                        realIndex: realIndex,\n                        i: i,\n                        j: j,\n                        prevY: prevY\n                    });\n\n                    var calculatedPaths = this._createPaths({\n                        series: series,\n                        i: i,\n                        realIndex: realIndex,\n                        j: j,\n                        x: x,\n                        y: y,\n                        pX: pX,\n                        pY: pY,\n                        linePath: linePath,\n                        areaPath: areaPath,\n                        linePaths: linePaths,\n                        areaPaths: areaPaths,\n                        seriesIndex: seriesIndex\n                    });\n\n                    areaPaths = calculatedPaths.areaPaths;\n                    linePaths = calculatedPaths.linePaths;\n                    pX = calculatedPaths.pX;\n                    pY = calculatedPaths.pY;\n                    areaPath = calculatedPaths.areaPath;\n                    linePath = calculatedPaths.linePath;\n\n                    if (this.appendPathFrom) {\n                        pathFromLine = pathFromLine + graphics.line(x, this.zeroY);\n                        pathFromArea = pathFromArea + graphics.line(x, this.zeroY);\n                    }\n\n                    this.handleNullDataPoints(series, pointsPos, i, j, realIndex);\n\n                    this._handleMarkersAndLabels({\n                        pointsPos: pointsPos,\n                        series: series,\n                        x: x,\n                        y: y,\n                        prevY: prevY,\n                        i: i,\n                        j: j,\n                        realIndex: realIndex\n                    });\n                }\n\n                return {\n                    yArrj: yArrj,\n                    xArrj: xArrj,\n                    pathFromArea: pathFromArea,\n                    areaPaths: areaPaths,\n                    pathFromLine: pathFromLine,\n                    linePaths: linePaths\n                };\n            }\n        }, {\n            key: \"_handleMarkersAndLabels\",\n            value: function _handleMarkersAndLabels(_ref4) {\n                var pointsPos = _ref4.pointsPos,\n                    series = _ref4.series,\n                    x = _ref4.x,\n                    y = _ref4.y,\n                    prevY = _ref4.prevY,\n                    i = _ref4.i,\n                    j = _ref4.j,\n                    realIndex = _ref4.realIndex;\n                var w = this.w;\n                var dataLabels = new DataLabels(this.ctx);\n\n                if (!this.pointsChart) {\n                    if (w.globals.series[i].length > 1) {\n                        this.elPointsMain.node.classList.add('apexcharts-element-hidden');\n                    }\n\n                    var elPointsWrap = this.markers.plotChartMarkers(pointsPos, realIndex, j + 1);\n\n                    if (elPointsWrap !== null) {\n                        this.elPointsMain.add(elPointsWrap);\n                    }\n                } else {\n                    // scatter / bubble chart points creation\n                    this.scatter.draw(this.elSeries, j, {\n                        realIndex: realIndex,\n                        pointsPos: pointsPos,\n                        zRatio: this.zRatio,\n                        elParent: this.elPointsMain\n                    });\n                }\n\n                var drawnLabels = dataLabels.drawDataLabel(pointsPos, realIndex, j + 1, null);\n\n                if (drawnLabels !== null) {\n                    this.elDataLabelsWrap.add(drawnLabels);\n                }\n            }\n        }, {\n            key: \"_createPaths\",\n            value: function _createPaths(_ref5) {\n                var series = _ref5.series,\n                    i = _ref5.i,\n                    realIndex = _ref5.realIndex,\n                    j = _ref5.j,\n                    x = _ref5.x,\n                    y = _ref5.y,\n                    pX = _ref5.pX,\n                    pY = _ref5.pY,\n                    linePath = _ref5.linePath,\n                    areaPath = _ref5.areaPath,\n                    linePaths = _ref5.linePaths,\n                    areaPaths = _ref5.areaPaths,\n                    seriesIndex = _ref5.seriesIndex;\n                var w = this.w;\n                var graphics = new Graphics(this.ctx);\n                var curve = w.config.stroke.curve;\n                var areaBottomY = this.areaBottomY;\n\n                if (Array.isArray(w.config.stroke.curve)) {\n                    if (Array.isArray(seriesIndex)) {\n                        curve = w.config.stroke.curve[seriesIndex[i]];\n                    } else {\n                        curve = w.config.stroke.curve[i];\n                    }\n                } // logic of smooth curve derived from chartist\n                // CREDITS: https://gionkunz.github.io/chartist-js/\n\n\n                if (curve === 'smooth') {\n                    var length = (x - pX) * 0.35;\n\n                    if (w.globals.hasNullValues) {\n                        if (series[i][j] !== null) {\n                            if (series[i][j + 1] !== null) {\n                                linePath = graphics.move(pX, pY) + graphics.curve(pX + length, pY, x - length, y, x + 1, y);\n                                areaPath = graphics.move(pX + 1, pY) + graphics.curve(pX + length, pY, x - length, y, x + 1, y) + graphics.line(x, areaBottomY) + graphics.line(pX, areaBottomY) + 'z';\n                            } else {\n                                linePath = graphics.move(pX, pY);\n                                areaPath = graphics.move(pX, pY) + 'z';\n                            }\n                        }\n\n                        linePaths.push(linePath);\n                        areaPaths.push(areaPath);\n                    } else {\n                        linePath = linePath + graphics.curve(pX + length, pY, x - length, y, x, y);\n                        areaPath = areaPath + graphics.curve(pX + length, pY, x - length, y, x, y);\n                    }\n\n                    pX = x;\n                    pY = y;\n\n                    if (j === series[i].length - 2) {\n                        // last loop, close path\n                        areaPath = areaPath + graphics.curve(pX, pY, x, y, x, areaBottomY) + graphics.move(x, y) + 'z';\n\n                        if (!w.globals.hasNullValues) {\n                            linePaths.push(linePath);\n                            areaPaths.push(areaPath);\n                        }\n                    }\n                } else {\n                    if (series[i][j + 1] === null) {\n                        linePath = linePath + graphics.move(x, y);\n                        var numericOrCatX = w.globals.isXNumeric ? (w.globals.seriesX[realIndex][j] - w.globals.minX) / this.xRatio : x - this.xDivision;\n                        areaPath = areaPath + graphics.line(numericOrCatX, areaBottomY) + graphics.move(x, y) + 'z';\n                    }\n\n                    if (series[i][j] === null) {\n                        linePath = linePath + graphics.move(x, y);\n                        areaPath = areaPath + graphics.move(x, areaBottomY);\n                    }\n\n                    if (curve === 'stepline') {\n                        linePath = linePath + graphics.line(x, null, 'H') + graphics.line(null, y, 'V');\n                        areaPath = areaPath + graphics.line(x, null, 'H') + graphics.line(null, y, 'V');\n                    } else if (curve === 'straight') {\n                        linePath = linePath + graphics.line(x, y);\n                        areaPath = areaPath + graphics.line(x, y);\n                    }\n\n                    if (j === series[i].length - 2) {\n                        // last loop, close path\n                        areaPath = areaPath + graphics.line(x, areaBottomY) + graphics.move(x, y) + 'z';\n                        linePaths.push(linePath);\n                        areaPaths.push(areaPath);\n                    }\n                }\n\n                return {\n                    linePaths: linePaths,\n                    areaPaths: areaPaths,\n                    pX: pX,\n                    pY: pY,\n                    linePath: linePath,\n                    areaPath: areaPath\n                };\n            }\n        }, {\n            key: \"handleNullDataPoints\",\n            value: function handleNullDataPoints(series, pointsPos, i, j, realIndex) {\n                var w = this.w;\n\n                if (series[i][j] === null && w.config.markers.showNullDataPoints || series[i].length === 1) {\n                    // fixes apexcharts.js#1282, #1252\n                    var elPointsWrap = this.markers.plotChartMarkers(pointsPos, realIndex, j + 1, this.strokeWidth - w.config.markers.strokeWidth / 2, true);\n\n                    if (elPointsWrap !== null) {\n                        this.elPointsMain.add(elPointsWrap);\n                    }\n                }\n            }\n        }]);\n\n        return Line;\n    }();\n\n    /*\n     * treemap-squarify.js - open source implementation of squarified treemaps\n     *\n     * Treemap Squared 0.5 - Treemap Charting library\n     *\n     * https://github.com/imranghory/treemap-squared/\n     *\n     * Copyright (c) 2012 Imran Ghory (imranghory@gmail.com)\n     * Licensed under the MIT (http://www.opensource.org/licenses/mit-license.php) license.\n     *\n     *\n     * Implementation of the squarify treemap algorithm described in:\n     *\n     * Bruls, Mark; Huizing, Kees; van Wijk, Jarke J. (2000), \"Squarified treemaps\"\n     * in de Leeuw, W.; van Liere, R., Data Visualization 2000:\n     * Proc. Joint Eurographics and IEEE TCVG Symp. on Visualization, Springer-Verlag, pp. 33–42.\n     *\n     * Paper is available online at: http://www.win.tue.nl/~vanwijk/stm.pdf\n     *\n     * The code in this file is completeley decoupled from the drawing code so it should be trivial\n     * to port it to any other vector drawing library. Given an array of datapoints this library returns\n     * an array of cartesian coordinates that represent the rectangles that make up the treemap.\n     *\n     * The library also supports multidimensional data (nested treemaps) and performs normalization on the data.\n     *\n     * See the README file for more details.\n     */\n    window.TreemapSquared = {};\n\n    (function() {\n\n        window.TreemapSquared.generate = function() {\n            function Container(xoffset, yoffset, width, height) {\n                this.xoffset = xoffset; // offset from the the top left hand corner\n\n                this.yoffset = yoffset; // ditto\n\n                this.height = height;\n                this.width = width;\n\n                this.shortestEdge = function() {\n                    return Math.min(this.height, this.width);\n                }; // getCoordinates - for a row of boxes which we've placed\n                //                  return an array of their cartesian coordinates\n\n\n                this.getCoordinates = function(row) {\n                    var coordinates = [];\n                    var subxoffset = this.xoffset,\n                        subyoffset = this.yoffset; //our offset within the container\n\n                    var areawidth = sumArray(row) / this.height;\n                    var areaheight = sumArray(row) / this.width;\n                    var i;\n\n                    if (this.width >= this.height) {\n                        for (i = 0; i < row.length; i++) {\n                            coordinates.push([subxoffset, subyoffset, subxoffset + areawidth, subyoffset + row[i] / areawidth]);\n                            subyoffset = subyoffset + row[i] / areawidth;\n                        }\n                    } else {\n                        for (i = 0; i < row.length; i++) {\n                            coordinates.push([subxoffset, subyoffset, subxoffset + row[i] / areaheight, subyoffset + areaheight]);\n                            subxoffset = subxoffset + row[i] / areaheight;\n                        }\n                    }\n\n                    return coordinates;\n                }; // cutArea - once we've placed some boxes into an row we then need to identify the remaining area,\n                //           this function takes the area of the boxes we've placed and calculates the location and\n                //           dimensions of the remaining space and returns a container box defined by the remaining area\n\n\n                this.cutArea = function(area) {\n                    var newcontainer;\n\n                    if (this.width >= this.height) {\n                        var areawidth = area / this.height;\n                        var newwidth = this.width - areawidth;\n                        newcontainer = new Container(this.xoffset + areawidth, this.yoffset, newwidth, this.height);\n                    } else {\n                        var areaheight = area / this.width;\n                        var newheight = this.height - areaheight;\n                        newcontainer = new Container(this.xoffset, this.yoffset + areaheight, this.width, newheight);\n                    }\n\n                    return newcontainer;\n                };\n            } // normalize - the Bruls algorithm assumes we're passing in areas that nicely fit into our\n            //             container box, this method takes our raw data and normalizes the data values into\n            //             area values so that this assumption is valid.\n\n\n            function normalize(data, area) {\n                var normalizeddata = [];\n                var sum = sumArray(data);\n                var multiplier = area / sum;\n                var i;\n\n                for (i = 0; i < data.length; i++) {\n                    normalizeddata[i] = data[i] * multiplier;\n                }\n\n                return normalizeddata;\n            } // treemapMultidimensional - takes multidimensional data (aka [[23,11],[11,32]] - nested array)\n            //                           and recursively calls itself using treemapSingledimensional\n            //                           to create a patchwork of treemaps and merge them\n\n\n            function treemapMultidimensional(data, width, height, xoffset, yoffset) {\n                xoffset = typeof xoffset === 'undefined' ? 0 : xoffset;\n                yoffset = typeof yoffset === 'undefined' ? 0 : yoffset;\n                var mergeddata = [];\n                var mergedtreemap;\n                var results = [];\n                var i;\n\n                if (isArray(data[0])) {\n                    // if we've got more dimensions of depth\n                    for (i = 0; i < data.length; i++) {\n                        mergeddata[i] = sumMultidimensionalArray(data[i]);\n                    }\n\n                    mergedtreemap = treemapSingledimensional(mergeddata, width, height, xoffset, yoffset);\n\n                    for (i = 0; i < data.length; i++) {\n                        results.push(treemapMultidimensional(data[i], mergedtreemap[i][2] - mergedtreemap[i][0], mergedtreemap[i][3] - mergedtreemap[i][1], mergedtreemap[i][0], mergedtreemap[i][1]));\n                    }\n                } else {\n                    results = treemapSingledimensional(data, width, height, xoffset, yoffset);\n                }\n\n                return results;\n            } // treemapSingledimensional - simple wrapper around squarify\n\n\n            function treemapSingledimensional(data, width, height, xoffset, yoffset) {\n                xoffset = typeof xoffset === 'undefined' ? 0 : xoffset;\n                yoffset = typeof yoffset === 'undefined' ? 0 : yoffset;\n                var rawtreemap = squarify(normalize(data, width * height), [], new Container(xoffset, yoffset, width, height), []);\n                return flattenTreemap(rawtreemap);\n            } // flattenTreemap - squarify implementation returns an array of arrays of coordinates\n            //                  because we have a new array everytime we switch to building a new row\n            //                  this converts it into an array of coordinates.\n\n\n            function flattenTreemap(rawtreemap) {\n                var flattreemap = [];\n                var i, j;\n\n                for (i = 0; i < rawtreemap.length; i++) {\n                    for (j = 0; j < rawtreemap[i].length; j++) {\n                        flattreemap.push(rawtreemap[i][j]);\n                    }\n                }\n\n                return flattreemap;\n            } // squarify  - as per the Bruls paper\n            //             plus coordinates stack and containers so we get\n            //             usable data out of it\n\n\n            function squarify(data, currentrow, container, stack) {\n                var length;\n                var nextdatapoint;\n                var newcontainer;\n\n                if (data.length === 0) {\n                    stack.push(container.getCoordinates(currentrow));\n                    return;\n                }\n\n                length = container.shortestEdge();\n                nextdatapoint = data[0];\n\n                if (improvesRatio(currentrow, nextdatapoint, length)) {\n                    currentrow.push(nextdatapoint);\n                    squarify(data.slice(1), currentrow, container, stack);\n                } else {\n                    newcontainer = container.cutArea(sumArray(currentrow), stack);\n                    stack.push(container.getCoordinates(currentrow));\n                    squarify(data, [], newcontainer, stack);\n                }\n\n                return stack;\n            } // improveRatio - implements the worse calculation and comparision as given in Bruls\n            //                (note the error in the original paper; fixed here)\n\n\n            function improvesRatio(currentrow, nextnode, length) {\n                var newrow;\n\n                if (currentrow.length === 0) {\n                    return true;\n                }\n\n                newrow = currentrow.slice();\n                newrow.push(nextnode);\n                var currentratio = calculateRatio(currentrow, length);\n                var newratio = calculateRatio(newrow, length); // the pseudocode in the Bruls paper has the direction of the comparison\n                // wrong, this is the correct one.\n\n                return currentratio >= newratio;\n            } // calculateRatio - calculates the maximum width to height ratio of the\n            //                  boxes in this row\n\n\n            function calculateRatio(row, length) {\n                var min = Math.min.apply(Math, row);\n                var max = Math.max.apply(Math, row);\n                var sum = sumArray(row);\n                return Math.max(Math.pow(length, 2) * max / Math.pow(sum, 2), Math.pow(sum, 2) / (Math.pow(length, 2) * min));\n            } // isArray - checks if arr is an array\n\n\n            function isArray(arr) {\n                return arr && arr.constructor === Array;\n            } // sumArray - sums a single dimensional array\n\n\n            function sumArray(arr) {\n                var sum = 0;\n                var i;\n\n                for (i = 0; i < arr.length; i++) {\n                    sum += arr[i];\n                }\n\n                return sum;\n            } // sumMultidimensionalArray - sums the values in a nested array (aka [[0,1],[[2,3]]])\n\n\n            function sumMultidimensionalArray(arr) {\n                var i,\n                    total = 0;\n\n                if (isArray(arr[0])) {\n                    for (i = 0; i < arr.length; i++) {\n                        total += sumMultidimensionalArray(arr[i]);\n                    }\n                } else {\n                    total = sumArray(arr);\n                }\n\n                return total;\n            }\n\n            return treemapMultidimensional;\n        }();\n    })();\n\n    /**\n     * ApexCharts TreemapChart Class.\n     * @module TreemapChart\n     **/\n\n    var TreemapChart = /*#__PURE__*/ function() {\n        function TreemapChart(ctx, xyRatios) {\n            _classCallCheck(this, TreemapChart);\n\n            this.ctx = ctx;\n            this.w = ctx.w;\n            this.strokeWidth = this.w.config.stroke.width;\n            this.helpers = new TreemapHelpers(ctx);\n            this.dynamicAnim = this.w.config.chart.animations.dynamicAnimation;\n            this.labels = [];\n        }\n\n        _createClass(TreemapChart, [{\n            key: \"draw\",\n            value: function draw(series) {\n                    var _this = this;\n\n                    var w = this.w;\n                    var graphics = new Graphics(this.ctx);\n                    var fill = new Fill(this.ctx);\n                    var ret = graphics.group({\n                        class: 'apexcharts-treemap'\n                    });\n                    if (w.globals.noData) return ret;\n                    var ser = [];\n                    series.forEach(function(s) {\n                        var d = s.map(function(v) {\n                            return Math.abs(v);\n                        });\n                        ser.push(d);\n                    });\n                    this.negRange = this.helpers.checkColorRange();\n                    w.config.series.forEach(function(s, i) {\n                        s.data.forEach(function(l) {\n                            if (!Array.isArray(_this.labels[i])) _this.labels[i] = [];\n\n                            _this.labels[i].push(l.x);\n                        });\n                    });\n                    var nodes = window.TreemapSquared.generate(ser, w.globals.gridWidth, w.globals.gridHeight);\n                    nodes.forEach(function(node, i) {\n                        var elSeries = graphics.group({\n                            class: \"apexcharts-series apexcharts-treemap-series\",\n                            seriesName: Utils.escapeString(w.globals.seriesNames[i]),\n                            rel: i + 1,\n                            'data:realIndex': i\n                        });\n\n                        if (w.config.chart.dropShadow.enabled) {\n                            var shadow = w.config.chart.dropShadow;\n                            var filters = new Filters(_this.ctx);\n                            filters.dropShadow(ret, shadow, i);\n                        }\n\n                        var elDataLabelWrap = graphics.group({\n                            class: 'apexcharts-data-labels'\n                        });\n                        node.forEach(function(r, j) {\n                            var x1 = r[0];\n                            var y1 = r[1];\n                            var x2 = r[2];\n                            var y2 = r[3];\n                            var elRect = graphics.drawRect(x1, y1, x2 - x1, y2 - y1, 0, '#fff', 1, _this.strokeWidth, w.config.plotOptions.treemap.useFillColorAsStroke ? color : w.globals.stroke.colors[i]);\n                            elRect.attr({\n                                cx: x1,\n                                cy: y1,\n                                index: i,\n                                i: i,\n                                j: j,\n                                width: x2 - x1,\n                                height: y2 - y1\n                            });\n\n                            var colorProps = _this.helpers.getShadeColor(w.config.chart.type, i, j, _this.negRange);\n\n                            var color = colorProps.color;\n\n                            if (typeof w.config.series[i].data[j] !== 'undefined' && w.config.series[i].data[j].fillColor) {\n                                color = w.config.series[i].data[j].fillColor;\n                            }\n\n                            var pathFill = fill.fillPath({\n                                color: color,\n                                seriesNumber: i,\n                                dataPointIndex: j\n                            });\n                            elRect.node.classList.add('apexcharts-treemap-rect');\n                            elRect.attr({\n                                fill: pathFill\n                            });\n\n                            _this.helpers.addListeners(elRect);\n\n                            var fromRect = {\n                                x: x1 + (x2 - x1) / 2,\n                                y: y1 + (y2 - y1) / 2,\n                                width: 0,\n                                height: 0\n                            };\n                            var toRect = {\n                                x: x1,\n                                y: y1,\n                                width: x2 - x1,\n                                height: y2 - y1\n                            };\n\n                            if (w.config.chart.animations.enabled && !w.globals.dataChanged) {\n                                var speed = 1;\n\n                                if (!w.globals.resized) {\n                                    speed = w.config.chart.animations.speed;\n                                }\n\n                                _this.animateTreemap(elRect, fromRect, toRect, speed);\n                            }\n\n                            if (w.globals.dataChanged) {\n                                var _speed = 1;\n\n                                if (_this.dynamicAnim.enabled && w.globals.shouldAnimate) {\n                                    _speed = _this.dynamicAnim.speed;\n\n                                    if (w.globals.previousPaths[i] && w.globals.previousPaths[i][j] && w.globals.previousPaths[i][j].rect) {\n                                        fromRect = w.globals.previousPaths[i][j].rect;\n                                    }\n\n                                    _this.animateTreemap(elRect, fromRect, toRect, _speed);\n                                }\n                            }\n\n                            var fontSize = _this.getFontSize(r);\n\n                            var formattedText = w.config.dataLabels.formatter(_this.labels[i][j], {\n                                value: w.globals.series[i][j],\n                                seriesIndex: i,\n                                dataPointIndex: j,\n                                w: w\n                            });\n\n                            var dataLabels = _this.helpers.calculateDataLabels({\n                                text: formattedText,\n                                x: (x1 + x2) / 2,\n                                y: (y1 + y2) / 2 + _this.strokeWidth / 2 + fontSize / 3,\n                                i: i,\n                                j: j,\n                                colorProps: colorProps,\n                                fontSize: fontSize,\n                                series: series\n                            });\n\n                            if (w.config.dataLabels.enabled && dataLabels) {\n                                _this.rotateToFitLabel(dataLabels, formattedText, x1, y1, x2, y2);\n                            }\n\n                            elSeries.add(elRect);\n\n                            if (dataLabels !== null) {\n                                elSeries.add(dataLabels);\n                            }\n                        });\n                        elSeries.add(elDataLabelWrap);\n                        ret.add(elSeries);\n                    });\n                    return ret;\n                } // This calculates a font-size based upon\n                // average label length and the size of the box the label is\n                // going into. The maximum font size is set in chart config.\n\n        }, {\n            key: \"getFontSize\",\n            value: function getFontSize(coordinates) {\n                var w = this.w; // total length of labels (i.e [[\"Italy\"],[\"Spain\", \"Greece\"]] -> 16)\n\n                function totalLabelLength(arr) {\n                    var i,\n                        total = 0;\n\n                    if (Array.isArray(arr[0])) {\n                        for (i = 0; i < arr.length; i++) {\n                            total += totalLabelLength(arr[i]);\n                        }\n                    } else {\n                        for (i = 0; i < arr.length; i++) {\n                            total += arr[i].length;\n                        }\n                    }\n\n                    return total;\n                } // count of labels (i.e [[\"Italy\"],[\"Spain\", \"Greece\"]] -> 3)\n\n\n                function countLabels(arr) {\n                    var i,\n                        total = 0;\n\n                    if (Array.isArray(arr[0])) {\n                        for (i = 0; i < arr.length; i++) {\n                            total += countLabels(arr[i]);\n                        }\n                    } else {\n                        for (i = 0; i < arr.length; i++) {\n                            total += 1;\n                        }\n                    }\n\n                    return total;\n                }\n\n                var averagelabelsize = totalLabelLength(this.labels) / countLabels(this.labels);\n\n                function fontSize(width, height) {\n                    // the font size should be proportional to the size of the box (and the value)\n                    // otherwise you can end up creating a visual distortion where two boxes of identical\n                    // size have different sized labels, and thus make it look as if the two boxes\n                    // represent different sizes\n                    var area = width * height;\n                    var arearoot = Math.pow(area, 0.5);\n                    return Math.min(arearoot / averagelabelsize, parseInt(w.config.dataLabels.style.fontSize, 10));\n                }\n\n                return fontSize(coordinates[2] - coordinates[0], coordinates[3] - coordinates[1]);\n            }\n        }, {\n            key: \"rotateToFitLabel\",\n            value: function rotateToFitLabel(elText, text, x1, y1, x2, y2) {\n                var graphics = new Graphics(this.ctx);\n                var textRect = graphics.getTextRects(text); //if the label fits better sideways then rotate it\n\n                if (textRect.width + 5 > x2 - x1 && textRect.width <= y2 - y1) {\n                    var labelRotatingCenter = graphics.rotateAroundCenter(elText.node);\n                    elText.node.setAttribute('transform', \"rotate(-90 \".concat(labelRotatingCenter.x, \" \").concat(labelRotatingCenter.y, \")\"));\n                }\n            }\n        }, {\n            key: \"animateTreemap\",\n            value: function animateTreemap(el, fromRect, toRect, speed) {\n                var animations = new Animations(this.ctx);\n                animations.animateRect(el, {\n                    x: fromRect.x,\n                    y: fromRect.y,\n                    width: fromRect.width,\n                    height: fromRect.height\n                }, {\n                    x: toRect.x,\n                    y: toRect.y,\n                    width: toRect.width,\n                    height: toRect.height\n                }, speed, function() {\n                    animations.animationCompleted(el);\n                });\n            }\n        }]);\n\n        return TreemapChart;\n    }();\n\n    var MINUTES_IN_DAY = 24 * 60;\n    var SECONDS_IN_DAY = MINUTES_IN_DAY * 60;\n    var MIN_ZOOM_DAYS = 10 / SECONDS_IN_DAY;\n    /**\n     * ApexCharts TimeScale Class for generating time ticks for x-axis.\n     *\n     * @module TimeScale\n     **/\n\n    var TimeScale = /*#__PURE__*/ function() {\n        function TimeScale(ctx) {\n            _classCallCheck(this, TimeScale);\n\n            this.ctx = ctx;\n            this.w = ctx.w;\n            this.timeScaleArray = [];\n            this.utc = this.w.config.xaxis.labels.datetimeUTC;\n        }\n\n        _createClass(TimeScale, [{\n            key: \"calculateTimeScaleTicks\",\n            value: function calculateTimeScaleTicks(minX, maxX) {\n                var _this = this;\n\n                var w = this.w; // null check when no series to show\n\n                if (w.globals.allSeriesCollapsed) {\n                    w.globals.labels = [];\n                    w.globals.timescaleLabels = [];\n                    return [];\n                }\n\n                var dt = new DateTime(this.ctx);\n                var daysDiff = (maxX - minX) / (1000 * SECONDS_IN_DAY);\n                this.determineInterval(daysDiff);\n                w.globals.disableZoomIn = false;\n                w.globals.disableZoomOut = false;\n\n                if (daysDiff < MIN_ZOOM_DAYS) {\n                    w.globals.disableZoomIn = true;\n                } else if (daysDiff > 50000) {\n                    w.globals.disableZoomOut = true;\n                }\n\n                var timeIntervals = dt.getTimeUnitsfromTimestamp(minX, maxX, this.utc);\n                var daysWidthOnXAxis = w.globals.gridWidth / daysDiff;\n                var hoursWidthOnXAxis = daysWidthOnXAxis / 24;\n                var minutesWidthOnXAxis = hoursWidthOnXAxis / 60;\n                var secondsWidthOnXAxis = minutesWidthOnXAxis / 60;\n                var numberOfHours = Math.floor(daysDiff * 24);\n                var numberOfMinutes = Math.floor(daysDiff * MINUTES_IN_DAY);\n                var numberOfSeconds = Math.floor(daysDiff * SECONDS_IN_DAY);\n                var numberOfDays = Math.floor(daysDiff);\n                var numberOfMonths = Math.floor(daysDiff / 30);\n                var numberOfYears = Math.floor(daysDiff / 365);\n                var firstVal = {\n                    minMillisecond: timeIntervals.minMillisecond,\n                    minSecond: timeIntervals.minSecond,\n                    minMinute: timeIntervals.minMinute,\n                    minHour: timeIntervals.minHour,\n                    minDate: timeIntervals.minDate,\n                    minMonth: timeIntervals.minMonth,\n                    minYear: timeIntervals.minYear\n                };\n                var currentMillisecond = firstVal.minMillisecond;\n                var currentSecond = firstVal.minSecond;\n                var currentMinute = firstVal.minMinute;\n                var currentHour = firstVal.minHour;\n                var currentMonthDate = firstVal.minDate;\n                var currentDate = firstVal.minDate;\n                var currentMonth = firstVal.minMonth;\n                var currentYear = firstVal.minYear;\n                var params = {\n                    firstVal: firstVal,\n                    currentMillisecond: currentMillisecond,\n                    currentSecond: currentSecond,\n                    currentMinute: currentMinute,\n                    currentHour: currentHour,\n                    currentMonthDate: currentMonthDate,\n                    currentDate: currentDate,\n                    currentMonth: currentMonth,\n                    currentYear: currentYear,\n                    daysWidthOnXAxis: daysWidthOnXAxis,\n                    hoursWidthOnXAxis: hoursWidthOnXAxis,\n                    minutesWidthOnXAxis: minutesWidthOnXAxis,\n                    secondsWidthOnXAxis: secondsWidthOnXAxis,\n                    numberOfSeconds: numberOfSeconds,\n                    numberOfMinutes: numberOfMinutes,\n                    numberOfHours: numberOfHours,\n                    numberOfDays: numberOfDays,\n                    numberOfMonths: numberOfMonths,\n                    numberOfYears: numberOfYears\n                };\n\n                switch (this.tickInterval) {\n                    case 'years':\n                        {\n                            this.generateYearScale(params);\n                            break;\n                        }\n\n                    case 'months':\n                    case 'half_year':\n                        {\n                            this.generateMonthScale(params);\n                            break;\n                        }\n\n                    case 'months_days':\n                    case 'months_fortnight':\n                    case 'days':\n                    case 'week_days':\n                        {\n                            this.generateDayScale(params);\n                            break;\n                        }\n\n                    case 'hours':\n                        {\n                            this.generateHourScale(params);\n                            break;\n                        }\n\n                    case 'minutes_fives':\n                    case 'minutes':\n                        this.generateMinuteScale(params);\n                        break;\n\n                    case 'seconds_tens':\n                    case 'seconds_fives':\n                    case 'seconds':\n                        this.generateSecondScale(params);\n                        break;\n                } // first, we will adjust the month values index\n                // as in the upper function, it is starting from 0\n                // we will start them from 1\n\n\n                var adjustedMonthInTimeScaleArray = this.timeScaleArray.map(function(ts) {\n                    var defaultReturn = {\n                        position: ts.position,\n                        unit: ts.unit,\n                        year: ts.year,\n                        day: ts.day ? ts.day : 1,\n                        hour: ts.hour ? ts.hour : 0,\n                        month: ts.month + 1\n                    };\n\n                    if (ts.unit === 'month') {\n                        return _objectSpread2(_objectSpread2({}, defaultReturn), {}, {\n                            day: 1,\n                            value: ts.value + 1\n                        });\n                    } else if (ts.unit === 'day' || ts.unit === 'hour') {\n                        return _objectSpread2(_objectSpread2({}, defaultReturn), {}, {\n                            value: ts.value\n                        });\n                    } else if (ts.unit === 'minute') {\n                        return _objectSpread2(_objectSpread2({}, defaultReturn), {}, {\n                            value: ts.value,\n                            minute: ts.value\n                        });\n                    } else if (ts.unit === 'second') {\n                        return _objectSpread2(_objectSpread2({}, defaultReturn), {}, {\n                            value: ts.value,\n                            minute: ts.minute,\n                            second: ts.second\n                        });\n                    }\n\n                    return ts;\n                });\n                var filteredTimeScale = adjustedMonthInTimeScaleArray.filter(function(ts) {\n                    var modulo = 1;\n                    var ticks = Math.ceil(w.globals.gridWidth / 120);\n                    var value = ts.value;\n\n                    if (w.config.xaxis.tickAmount !== undefined) {\n                        ticks = w.config.xaxis.tickAmount;\n                    }\n\n                    if (adjustedMonthInTimeScaleArray.length > ticks) {\n                        modulo = Math.floor(adjustedMonthInTimeScaleArray.length / ticks);\n                    }\n\n                    var shouldNotSkipUnit = false; // there is a big change in unit i.e days to months\n\n                    var shouldNotPrint = false; // should skip these values\n\n                    switch (_this.tickInterval) {\n                        case 'years':\n                            // make years label denser\n                            if (ts.unit === 'year') {\n                                shouldNotSkipUnit = true;\n                            }\n\n                            break;\n\n                        case 'half_year':\n                            modulo = 7;\n\n                            if (ts.unit === 'year') {\n                                shouldNotSkipUnit = true;\n                            }\n\n                            break;\n\n                        case 'months':\n                            modulo = 1;\n\n                            if (ts.unit === 'year') {\n                                shouldNotSkipUnit = true;\n                            }\n\n                            break;\n\n                        case 'months_fortnight':\n                            modulo = 15;\n\n                            if (ts.unit === 'year' || ts.unit === 'month') {\n                                shouldNotSkipUnit = true;\n                            }\n\n                            if (value === 30) {\n                                shouldNotPrint = true;\n                            }\n\n                            break;\n\n                        case 'months_days':\n                            modulo = 10;\n\n                            if (ts.unit === 'month') {\n                                shouldNotSkipUnit = true;\n                            }\n\n                            if (value === 30) {\n                                shouldNotPrint = true;\n                            }\n\n                            break;\n\n                        case 'week_days':\n                            modulo = 8;\n\n                            if (ts.unit === 'month') {\n                                shouldNotSkipUnit = true;\n                            }\n\n                            break;\n\n                        case 'days':\n                            modulo = 1;\n\n                            if (ts.unit === 'month') {\n                                shouldNotSkipUnit = true;\n                            }\n\n                            break;\n\n                        case 'hours':\n                            if (ts.unit === 'day') {\n                                shouldNotSkipUnit = true;\n                            }\n\n                            break;\n\n                        case 'minutes_fives':\n                            if (value % 5 !== 0) {\n                                shouldNotPrint = true;\n                            }\n\n                            break;\n\n                        case 'seconds_tens':\n                            if (value % 10 !== 0) {\n                                shouldNotPrint = true;\n                            }\n\n                            break;\n\n                        case 'seconds_fives':\n                            if (value % 5 !== 0) {\n                                shouldNotPrint = true;\n                            }\n\n                            break;\n                    }\n\n                    if (_this.tickInterval === 'hours' || _this.tickInterval === 'minutes_fives' || _this.tickInterval === 'seconds_tens' || _this.tickInterval === 'seconds_fives') {\n                        if (!shouldNotPrint) {\n                            return true;\n                        }\n                    } else {\n                        if ((value % modulo === 0 || shouldNotSkipUnit) && !shouldNotPrint) {\n                            return true;\n                        }\n                    }\n                });\n                return filteredTimeScale;\n            }\n        }, {\n            key: \"recalcDimensionsBasedOnFormat\",\n            value: function recalcDimensionsBasedOnFormat(filteredTimeScale, inverted) {\n                var w = this.w;\n                var reformattedTimescaleArray = this.formatDates(filteredTimeScale);\n                var removedOverlappingTS = this.removeOverlappingTS(reformattedTimescaleArray);\n                w.globals.timescaleLabels = removedOverlappingTS.slice(); // at this stage, we need to re-calculate coords of the grid as timeline labels may have altered the xaxis labels coords\n                // The reason we can't do this prior to this stage is because timeline labels depends on gridWidth, and as the ticks are calculated based on available gridWidth, there can be unknown number of ticks generated for different minX and maxX\n                // Dependency on Dimensions(), need to refactor correctly\n                // TODO - find an alternate way to avoid calling this Heavy method twice\n\n                var dimensions = new Dimensions(this.ctx);\n                dimensions.plotCoords();\n            }\n        }, {\n            key: \"determineInterval\",\n            value: function determineInterval(daysDiff) {\n                var yearsDiff = daysDiff / 365;\n                var hoursDiff = daysDiff * 24;\n                var minutesDiff = hoursDiff * 60;\n                var secondsDiff = minutesDiff * 60;\n\n                switch (true) {\n                    case yearsDiff > 5:\n                        this.tickInterval = 'years';\n                        break;\n\n                    case daysDiff > 800:\n                        this.tickInterval = 'half_year';\n                        break;\n\n                    case daysDiff > 180:\n                        this.tickInterval = 'months';\n                        break;\n\n                    case daysDiff > 90:\n                        this.tickInterval = 'months_fortnight';\n                        break;\n\n                    case daysDiff > 60:\n                        this.tickInterval = 'months_days';\n                        break;\n\n                    case daysDiff > 30:\n                        this.tickInterval = 'week_days';\n                        break;\n\n                    case daysDiff > 2:\n                        this.tickInterval = 'days';\n                        break;\n\n                    case hoursDiff > 2.4:\n                        this.tickInterval = 'hours';\n                        break;\n\n                    case minutesDiff > 15:\n                        this.tickInterval = 'minutes_fives';\n                        break;\n\n                    case minutesDiff > 5:\n                        this.tickInterval = 'minutes';\n                        break;\n\n                    case minutesDiff > 1:\n                        this.tickInterval = 'seconds_tens';\n                        break;\n\n                    case secondsDiff > 20:\n                        this.tickInterval = 'seconds_fives';\n                        break;\n\n                    default:\n                        this.tickInterval = 'seconds';\n                        break;\n                }\n            }\n        }, {\n            key: \"generateYearScale\",\n            value: function generateYearScale(_ref) {\n                var firstVal = _ref.firstVal,\n                    currentMonth = _ref.currentMonth,\n                    currentYear = _ref.currentYear,\n                    daysWidthOnXAxis = _ref.daysWidthOnXAxis,\n                    numberOfYears = _ref.numberOfYears;\n                var firstTickValue = firstVal.minYear;\n                var firstTickPosition = 0;\n                var dt = new DateTime(this.ctx);\n                var unit = 'year';\n\n                if (firstVal.minDate > 1 || firstVal.minMonth > 0) {\n                    var remainingDays = dt.determineRemainingDaysOfYear(firstVal.minYear, firstVal.minMonth, firstVal.minDate); // remainingDaysofFirstMonth is used to reacht the 2nd tick position\n\n                    var remainingDaysOfFirstYear = dt.determineDaysOfYear(firstVal.minYear) - remainingDays + 1; // calculate the first tick position\n\n                    firstTickPosition = remainingDaysOfFirstYear * daysWidthOnXAxis;\n                    firstTickValue = firstVal.minYear + 1; // push the first tick in the array\n\n                    this.timeScaleArray.push({\n                        position: firstTickPosition,\n                        value: firstTickValue,\n                        unit: unit,\n                        year: firstTickValue,\n                        month: Utils.monthMod(currentMonth + 1)\n                    });\n                } else if (firstVal.minDate === 1 && firstVal.minMonth === 0) {\n                    // push the first tick in the array\n                    this.timeScaleArray.push({\n                        position: firstTickPosition,\n                        value: firstTickValue,\n                        unit: unit,\n                        year: currentYear,\n                        month: Utils.monthMod(currentMonth + 1)\n                    });\n                }\n\n                var year = firstTickValue;\n                var pos = firstTickPosition; // keep drawing rest of the ticks\n\n                for (var i = 0; i < numberOfYears; i++) {\n                    year++;\n                    pos = dt.determineDaysOfYear(year - 1) * daysWidthOnXAxis + pos;\n                    this.timeScaleArray.push({\n                        position: pos,\n                        value: year,\n                        unit: unit,\n                        year: year,\n                        month: 1\n                    });\n                }\n            }\n        }, {\n            key: \"generateMonthScale\",\n            value: function generateMonthScale(_ref2) {\n                var firstVal = _ref2.firstVal,\n                    currentMonthDate = _ref2.currentMonthDate,\n                    currentMonth = _ref2.currentMonth,\n                    currentYear = _ref2.currentYear,\n                    daysWidthOnXAxis = _ref2.daysWidthOnXAxis,\n                    numberOfMonths = _ref2.numberOfMonths;\n                var firstTickValue = currentMonth;\n                var firstTickPosition = 0;\n                var dt = new DateTime(this.ctx);\n                var unit = 'month';\n                var yrCounter = 0;\n\n                if (firstVal.minDate > 1) {\n                    // remainingDaysofFirstMonth is used to reacht the 2nd tick position\n                    var remainingDaysOfFirstMonth = dt.determineDaysOfMonths(currentMonth + 1, firstVal.minYear) - currentMonthDate + 1; // calculate the first tick position\n\n                    firstTickPosition = remainingDaysOfFirstMonth * daysWidthOnXAxis;\n                    firstTickValue = Utils.monthMod(currentMonth + 1);\n                    var year = currentYear + yrCounter;\n\n                    var _month = Utils.monthMod(firstTickValue);\n\n                    var value = firstTickValue; // it's Jan, so update the year\n\n                    if (firstTickValue === 0) {\n                        unit = 'year';\n                        value = year;\n                        _month = 1;\n                        yrCounter += 1;\n                        year = year + yrCounter;\n                    } // push the first tick in the array\n\n\n                    this.timeScaleArray.push({\n                        position: firstTickPosition,\n                        value: value,\n                        unit: unit,\n                        year: year,\n                        month: _month\n                    });\n                } else {\n                    // push the first tick in the array\n                    this.timeScaleArray.push({\n                        position: firstTickPosition,\n                        value: firstTickValue,\n                        unit: unit,\n                        year: currentYear,\n                        month: Utils.monthMod(currentMonth)\n                    });\n                }\n\n                var month = firstTickValue + 1;\n                var pos = firstTickPosition; // keep drawing rest of the ticks\n\n                for (var i = 0, j = 1; i < numberOfMonths; i++, j++) {\n                    month = Utils.monthMod(month);\n\n                    if (month === 0) {\n                        unit = 'year';\n                        yrCounter += 1;\n                    } else {\n                        unit = 'month';\n                    }\n\n                    var _year = this._getYear(currentYear, month, yrCounter);\n\n                    pos = dt.determineDaysOfMonths(month, _year) * daysWidthOnXAxis + pos;\n                    var monthVal = month === 0 ? _year : month;\n                    this.timeScaleArray.push({\n                        position: pos,\n                        value: monthVal,\n                        unit: unit,\n                        year: _year,\n                        month: month === 0 ? 1 : month\n                    });\n                    month++;\n                }\n            }\n        }, {\n            key: \"generateDayScale\",\n            value: function generateDayScale(_ref3) {\n                var firstVal = _ref3.firstVal,\n                    currentMonth = _ref3.currentMonth,\n                    currentYear = _ref3.currentYear,\n                    hoursWidthOnXAxis = _ref3.hoursWidthOnXAxis,\n                    numberOfDays = _ref3.numberOfDays;\n                var dt = new DateTime(this.ctx);\n                var unit = 'day';\n                var firstTickValue = firstVal.minDate + 1;\n                var date = firstTickValue;\n\n                var changeMonth = function changeMonth(dateVal, month, year) {\n                    var monthdays = dt.determineDaysOfMonths(month + 1, year);\n\n                    if (dateVal > monthdays) {\n                        month = month + 1;\n                        date = 1;\n                        unit = 'month';\n                        val = month;\n                        return month;\n                    }\n\n                    return month;\n                };\n\n                var remainingHours = 24 - firstVal.minHour;\n                var yrCounter = 0; // calculate the first tick position\n\n                var firstTickPosition = remainingHours * hoursWidthOnXAxis;\n                var val = firstTickValue;\n                var month = changeMonth(date, currentMonth, currentYear);\n\n                if (firstVal.minHour === 0 && firstVal.minDate === 1) {\n                    // the first value is the first day of month\n                    firstTickPosition = 0;\n                    val = Utils.monthMod(firstVal.minMonth);\n                    unit = 'month';\n                    date = firstVal.minDate;\n                    numberOfDays++;\n                } else if (firstVal.minDate !== 1 && firstVal.minHour === 0 && firstVal.minMinute === 0) {\n                    // fixes apexcharts/apexcharts.js/issues/1730\n                    firstTickPosition = 0;\n                    firstTickValue = firstVal.minDate;\n                    date = firstTickValue;\n                    val = firstTickValue; // in case it's the last date of month, we need to check it\n\n                    month = changeMonth(date, currentMonth, currentYear);\n                } // push the first tick in the array\n\n\n                this.timeScaleArray.push({\n                    position: firstTickPosition,\n                    value: val,\n                    unit: unit,\n                    year: this._getYear(currentYear, month, yrCounter),\n                    month: Utils.monthMod(month),\n                    day: date\n                });\n                var pos = firstTickPosition; // keep drawing rest of the ticks\n\n                for (var i = 0; i < numberOfDays; i++) {\n                    date += 1;\n                    unit = 'day';\n                    month = changeMonth(date, month, this._getYear(currentYear, month, yrCounter));\n\n                    var year = this._getYear(currentYear, month, yrCounter);\n\n                    pos = 24 * hoursWidthOnXAxis + pos;\n                    var value = date === 1 ? Utils.monthMod(month) : date;\n                    this.timeScaleArray.push({\n                        position: pos,\n                        value: value,\n                        unit: unit,\n                        year: year,\n                        month: Utils.monthMod(month),\n                        day: value\n                    });\n                }\n            }\n        }, {\n            key: \"generateHourScale\",\n            value: function generateHourScale(_ref4) {\n                var firstVal = _ref4.firstVal,\n                    currentDate = _ref4.currentDate,\n                    currentMonth = _ref4.currentMonth,\n                    currentYear = _ref4.currentYear,\n                    minutesWidthOnXAxis = _ref4.minutesWidthOnXAxis,\n                    numberOfHours = _ref4.numberOfHours;\n                var dt = new DateTime(this.ctx);\n                var yrCounter = 0;\n                var unit = 'hour';\n\n                var changeDate = function changeDate(dateVal, month) {\n                    var monthdays = dt.determineDaysOfMonths(month + 1, currentYear);\n\n                    if (dateVal > monthdays) {\n                        date = 1;\n                        month = month + 1;\n                    }\n\n                    return {\n                        month: month,\n                        date: date\n                    };\n                };\n\n                var changeMonth = function changeMonth(dateVal, month) {\n                    var monthdays = dt.determineDaysOfMonths(month + 1, currentYear);\n\n                    if (dateVal > monthdays) {\n                        month = month + 1;\n                        return month;\n                    }\n\n                    return month;\n                }; // factor in minSeconds as well\n\n\n                var remainingMins = 60 - (firstVal.minMinute + firstVal.minSecond / 60.0);\n                var firstTickPosition = remainingMins * minutesWidthOnXAxis;\n                var firstTickValue = firstVal.minHour + 1;\n                var hour = firstTickValue + 1;\n\n                if (remainingMins === 60) {\n                    firstTickPosition = 0;\n                    firstTickValue = firstVal.minHour;\n                    hour = firstTickValue + 1;\n                }\n\n                var date = currentDate;\n                var month = changeMonth(date, currentMonth); // push the first tick in the array\n\n                this.timeScaleArray.push({\n                    position: firstTickPosition,\n                    value: firstTickValue,\n                    unit: unit,\n                    day: date,\n                    hour: hour,\n                    year: currentYear,\n                    month: Utils.monthMod(month)\n                });\n                var pos = firstTickPosition; // keep drawing rest of the ticks\n\n                for (var i = 0; i < numberOfHours; i++) {\n                    unit = 'hour';\n\n                    if (hour >= 24) {\n                        hour = 0;\n                        date += 1;\n                        unit = 'day';\n                        var checkNextMonth = changeDate(date, month);\n                        month = checkNextMonth.month;\n                        month = changeMonth(date, month);\n                    }\n\n                    var year = this._getYear(currentYear, month, yrCounter);\n\n                    pos = hour === 0 && i === 0 ? remainingMins * minutesWidthOnXAxis : 60 * minutesWidthOnXAxis + pos;\n                    var val = hour === 0 ? date : hour;\n                    this.timeScaleArray.push({\n                        position: pos,\n                        value: val,\n                        unit: unit,\n                        hour: hour,\n                        day: date,\n                        year: year,\n                        month: Utils.monthMod(month)\n                    });\n                    hour++;\n                }\n            }\n        }, {\n            key: \"generateMinuteScale\",\n            value: function generateMinuteScale(_ref5) {\n                var currentMillisecond = _ref5.currentMillisecond,\n                    currentSecond = _ref5.currentSecond,\n                    currentMinute = _ref5.currentMinute,\n                    currentHour = _ref5.currentHour,\n                    currentDate = _ref5.currentDate,\n                    currentMonth = _ref5.currentMonth,\n                    currentYear = _ref5.currentYear,\n                    minutesWidthOnXAxis = _ref5.minutesWidthOnXAxis,\n                    secondsWidthOnXAxis = _ref5.secondsWidthOnXAxis,\n                    numberOfMinutes = _ref5.numberOfMinutes;\n                var yrCounter = 0;\n                var unit = 'minute';\n                var remainingSecs = 60 - currentSecond;\n                var firstTickPosition = (remainingSecs - currentMillisecond / 1000) * secondsWidthOnXAxis;\n                var minute = currentMinute + 1;\n                var date = currentDate;\n                var month = currentMonth;\n                var year = currentYear;\n                var hour = currentHour;\n                var pos = firstTickPosition;\n\n                for (var i = 0; i < numberOfMinutes; i++) {\n                    if (minute >= 60) {\n                        minute = 0;\n                        hour += 1;\n\n                        if (hour === 24) {\n                            hour = 0;\n                        }\n                    }\n\n                    this.timeScaleArray.push({\n                        position: pos,\n                        value: minute,\n                        unit: unit,\n                        hour: hour,\n                        minute: minute,\n                        day: date,\n                        year: this._getYear(year, month, yrCounter),\n                        month: Utils.monthMod(month)\n                    });\n                    pos += minutesWidthOnXAxis;\n                    minute++;\n                }\n            }\n        }, {\n            key: \"generateSecondScale\",\n            value: function generateSecondScale(_ref6) {\n                var currentMillisecond = _ref6.currentMillisecond,\n                    currentSecond = _ref6.currentSecond,\n                    currentMinute = _ref6.currentMinute,\n                    currentHour = _ref6.currentHour,\n                    currentDate = _ref6.currentDate,\n                    currentMonth = _ref6.currentMonth,\n                    currentYear = _ref6.currentYear,\n                    secondsWidthOnXAxis = _ref6.secondsWidthOnXAxis,\n                    numberOfSeconds = _ref6.numberOfSeconds;\n                var yrCounter = 0;\n                var unit = 'second';\n                var remainingMillisecs = 1000 - currentMillisecond;\n                var firstTickPosition = remainingMillisecs / 1000 * secondsWidthOnXAxis;\n                var second = currentSecond + 1;\n                var minute = currentMinute;\n                var date = currentDate;\n                var month = currentMonth;\n                var year = currentYear;\n                var hour = currentHour;\n                var pos = firstTickPosition;\n\n                for (var i = 0; i < numberOfSeconds; i++) {\n                    if (second >= 60) {\n                        minute++;\n                        second = 0;\n\n                        if (minute >= 60) {\n                            hour++;\n                            minute = 0;\n\n                            if (hour === 24) {\n                                hour = 0;\n                            }\n                        }\n                    }\n\n                    this.timeScaleArray.push({\n                        position: pos,\n                        value: second,\n                        unit: unit,\n                        hour: hour,\n                        minute: minute,\n                        second: second,\n                        day: date,\n                        year: this._getYear(year, month, yrCounter),\n                        month: Utils.monthMod(month)\n                    });\n                    pos += secondsWidthOnXAxis;\n                    second++;\n                }\n            }\n        }, {\n            key: \"createRawDateString\",\n            value: function createRawDateString(ts, value) {\n                var raw = ts.year;\n\n                if (ts.month === 0) {\n                    // invalid month, correct it\n                    ts.month = 1;\n                }\n\n                raw += '-' + ('0' + ts.month.toString()).slice(-2); // unit is day\n\n                if (ts.unit === 'day') {\n                    raw += ts.unit === 'day' ? '-' + ('0' + value).slice(-2) : '-01';\n                } else {\n                    raw += '-' + ('0' + (ts.day ? ts.day : '1')).slice(-2);\n                } // unit is hour\n\n\n                if (ts.unit === 'hour') {\n                    raw += ts.unit === 'hour' ? 'T' + ('0' + value).slice(-2) : 'T00';\n                } else {\n                    raw += 'T' + ('0' + (ts.hour ? ts.hour : '0')).slice(-2);\n                }\n\n                if (ts.unit === 'minute') {\n                    raw += ':' + ('0' + value).slice(-2);\n                } else {\n                    raw += ':' + (ts.minute ? ('0' + ts.minute).slice(-2) : '00');\n                }\n\n                if (ts.unit === 'second') {\n                    raw += ':' + ('0' + value).slice(-2);\n                } else {\n                    raw += ':00';\n                }\n\n                if (this.utc) {\n                    raw += '.000Z';\n                }\n\n                return raw;\n            }\n        }, {\n            key: \"formatDates\",\n            value: function formatDates(filteredTimeScale) {\n                var _this2 = this;\n\n                var w = this.w;\n                var reformattedTimescaleArray = filteredTimeScale.map(function(ts) {\n                    var value = ts.value.toString();\n                    // Adjusting date by 1 day.\n                    if (w.config.xaxis.type == 'datetime') {\n                        value--;\n                    }\n\n                    var dt = new DateTime(_this2.ctx);\n\n                    var raw = _this2.createRawDateString(ts, value);\n\n                    var dateToFormat = dt.getDate(dt.parseDate(raw));\n\n                    if (!_this2.utc) {\n                        // Fixes #1726, #1544, #1485, #1255\n                        dateToFormat = dt.getDate(dt.parseDateWithTimezone(raw));\n                    }\n\n                    if (w.config.xaxis.labels.format === undefined) {\n                        var customFormat = 'dd MMM';\n                        var dtFormatter = w.config.xaxis.labels.datetimeFormatter;\n                        if (ts.unit === 'year') customFormat = dtFormatter.year;\n                        if (ts.unit === 'month') customFormat = dtFormatter.month;\n                        if (ts.unit === 'day') customFormat = dtFormatter.day;\n                        if (ts.unit === 'hour') customFormat = dtFormatter.hour;\n                        if (ts.unit === 'minute') customFormat = dtFormatter.minute;\n                        if (ts.unit === 'second') customFormat = dtFormatter.second;\n                        value = dt.formatDate(dateToFormat, customFormat);\n                    } else {\n                        value = dt.formatDate(dateToFormat, w.config.xaxis.labels.format);\n                    }\n\n                    return {\n                        dateString: raw,\n                        position: ts.position,\n                        value: value,\n                        unit: ts.unit,\n                        year: ts.year,\n                        month: ts.month\n                    };\n                });\n                return reformattedTimescaleArray;\n            }\n        }, {\n            key: \"removeOverlappingTS\",\n            value: function removeOverlappingTS(arr) {\n                var _this3 = this;\n\n                var graphics = new Graphics(this.ctx);\n                var equalLabelLengthFlag = false; // These labels got same length?\n\n                var constantLabelWidth; // If true, what is the constant length to use\n\n                if (arr.length > 0 && // check arr length\n                    arr[0].value && // check arr[0] contains value\n                    arr.every(function(lb) {\n                        return lb.value.length === arr[0].value.length;\n                    }) // check every arr label value is the same as the first one\n                ) {\n                    equalLabelLengthFlag = true; // These labels got same length\n\n                    constantLabelWidth = graphics.getTextRects(arr[0].value).width; // The constant label width to use\n                }\n\n                var lastDrawnIndex = 0;\n                var filteredArray = arr.map(function(item, index) {\n                    if (index > 0 && _this3.w.config.xaxis.labels.hideOverlappingLabels) {\n                        var prevLabelWidth = !equalLabelLengthFlag // if vary in label length\n                            ?\n                            graphics.getTextRects(arr[lastDrawnIndex].value).width // get individual length\n                            :\n                            constantLabelWidth; // else: use constant length\n\n                        var prevPos = arr[lastDrawnIndex].position;\n                        var pos = item.position;\n\n                        if (pos > prevPos + prevLabelWidth + 10) {\n                            lastDrawnIndex = index;\n                            return item;\n                        } else {\n                            return null;\n                        }\n                    } else {\n                        return item;\n                    }\n                });\n                filteredArray = filteredArray.filter(function(f) {\n                    return f !== null;\n                });\n                return filteredArray;\n            }\n        }, {\n            key: \"_getYear\",\n            value: function _getYear(currentYear, month, yrCounter) {\n                return currentYear + Math.floor(month / 12) + yrCounter;\n            }\n        }]);\n\n        return TimeScale;\n    }();\n\n    /**\n     * ApexCharts Core Class responsible for major calculations and creating elements.\n     *\n     * @module Core\n     **/\n\n    var Core = /*#__PURE__*/ function() {\n        function Core(el, ctx) {\n            _classCallCheck(this, Core);\n\n            this.ctx = ctx;\n            this.w = ctx.w;\n            this.el = el;\n        } // get data and store into appropriate vars\n\n\n        _createClass(Core, [{\n            key: \"setupElements\",\n            value: function setupElements() {\n                var gl = this.w.globals;\n                var cnf = this.w.config; // const graphics = new Graphics(this.ctx)\n\n                var ct = cnf.chart.type;\n                var axisChartsArrTypes = ['line', 'area', 'bar', 'rangeBar', 'candlestick', 'boxPlot', 'scatter', 'bubble', 'radar', 'heatmap', 'treemap'];\n                var xyChartsArrTypes = ['line', 'area', 'bar', 'rangeBar', 'candlestick', 'boxPlot', 'scatter', 'bubble'];\n                gl.axisCharts = axisChartsArrTypes.indexOf(ct) > -1;\n                gl.xyCharts = xyChartsArrTypes.indexOf(ct) > -1;\n                gl.isBarHorizontal = (cnf.chart.type === 'bar' || cnf.chart.type === 'rangeBar') && cnf.plotOptions.bar.horizontal;\n                gl.chartClass = '.apexcharts' + gl.chartID;\n                gl.dom.baseEl = this.el;\n                gl.dom.elWrap = document.createElement('div');\n                Graphics.setAttrs(gl.dom.elWrap, {\n                    id: gl.chartClass.substring(1),\n                    class: 'apexcharts-canvas ' + gl.chartClass.substring(1)\n                });\n                this.el.appendChild(gl.dom.elWrap);\n                gl.dom.Paper = new window.SVG.Doc(gl.dom.elWrap);\n                gl.dom.Paper.attr({\n                    class: 'apexcharts-svg',\n                    'xmlns:data': 'ApexChartsNS',\n                    transform: \"translate(\".concat(cnf.chart.offsetX, \", \").concat(cnf.chart.offsetY, \")\")\n                });\n                gl.dom.Paper.node.style.background = cnf.chart.background;\n                this.setSVGDimensions();\n                gl.dom.elGraphical = gl.dom.Paper.group().attr({\n                    class: 'apexcharts-inner apexcharts-graphical'\n                });\n                gl.dom.elAnnotations = gl.dom.Paper.group().attr({\n                    class: 'apexcharts-annotations'\n                });\n                gl.dom.elDefs = gl.dom.Paper.defs();\n                gl.dom.elLegendWrap = document.createElement('div');\n                gl.dom.elLegendWrap.classList.add('apexcharts-legend');\n                gl.dom.elWrap.appendChild(gl.dom.elLegendWrap);\n                gl.dom.Paper.add(gl.dom.elGraphical);\n                gl.dom.elGraphical.add(gl.dom.elDefs);\n            }\n        }, {\n            key: \"plotChartType\",\n            value: function plotChartType(ser, xyRatios) {\n                var w = this.w;\n                var cnf = w.config;\n                var gl = w.globals;\n                var lineSeries = {\n                    series: [],\n                    i: []\n                };\n                var areaSeries = {\n                    series: [],\n                    i: []\n                };\n                var scatterSeries = {\n                    series: [],\n                    i: []\n                };\n                var bubbleSeries = {\n                    series: [],\n                    i: []\n                };\n                var columnSeries = {\n                    series: [],\n                    i: []\n                };\n                var candlestickSeries = {\n                    series: [],\n                    i: []\n                };\n                var boxplotSeries = {\n                    series: [],\n                    i: []\n                };\n                gl.series.map(function(series, st) {\n                    var comboCount = 0; // if user has specified a particular type for particular series\n\n                    if (typeof ser[st].type !== 'undefined') {\n                        if (ser[st].type === 'column' || ser[st].type === 'bar') {\n                            if (gl.series.length > 1 && cnf.plotOptions.bar.horizontal) {\n                                // horizontal bars not supported in mixed charts, hence show a warning\n                                console.warn('Horizontal bars are not supported in a mixed/combo chart. Please turn off `plotOptions.bar.horizontal`');\n                            }\n\n                            columnSeries.series.push(series);\n                            columnSeries.i.push(st);\n                            comboCount++;\n                            w.globals.columnSeries = columnSeries.series;\n                        } else if (ser[st].type === 'area') {\n                            areaSeries.series.push(series);\n                            areaSeries.i.push(st);\n                            comboCount++;\n                        } else if (ser[st].type === 'line') {\n                            lineSeries.series.push(series);\n                            lineSeries.i.push(st);\n                            comboCount++;\n                        } else if (ser[st].type === 'scatter') {\n                            scatterSeries.series.push(series);\n                            scatterSeries.i.push(st);\n                        } else if (ser[st].type === 'bubble') {\n                            bubbleSeries.series.push(series);\n                            bubbleSeries.i.push(st);\n                            comboCount++;\n                        } else if (ser[st].type === 'candlestick') {\n                            candlestickSeries.series.push(series);\n                            candlestickSeries.i.push(st);\n                            comboCount++;\n                        } else if (ser[st].type === 'boxPlot') {\n                            boxplotSeries.series.push(series);\n                            boxplotSeries.i.push(st);\n                            comboCount++;\n                        } else {\n                            // user has specified type, but it is not valid (other than line/area/column)\n                            console.warn('You have specified an unrecognized chart type. Available types for this property are line/area/column/bar/scatter/bubble');\n                        }\n\n                        if (comboCount > 1) {\n                            gl.comboCharts = true;\n                        }\n                    } else {\n                        lineSeries.series.push(series);\n                        lineSeries.i.push(st);\n                    }\n                });\n                var line = new Line(this.ctx, xyRatios);\n                var boxCandlestick = new BoxCandleStick(this.ctx, xyRatios);\n                this.ctx.pie = new Pie(this.ctx);\n                var radialBar = new Radial(this.ctx);\n                this.ctx.rangeBar = new RangeBar(this.ctx, xyRatios);\n                var radar = new Radar(this.ctx);\n                var elGraph = [];\n\n                if (gl.comboCharts) {\n                    if (areaSeries.series.length > 0) {\n                        elGraph.push(line.draw(areaSeries.series, 'area', areaSeries.i));\n                    }\n\n                    if (columnSeries.series.length > 0) {\n                        if (w.config.chart.stacked) {\n                            var barStacked = new BarStacked(this.ctx, xyRatios);\n                            elGraph.push(barStacked.draw(columnSeries.series, columnSeries.i));\n                        } else {\n                            this.ctx.bar = new Bar(this.ctx, xyRatios);\n                            elGraph.push(this.ctx.bar.draw(columnSeries.series, columnSeries.i));\n                        }\n                    }\n\n                    if (lineSeries.series.length > 0) {\n                        elGraph.push(line.draw(lineSeries.series, 'line', lineSeries.i));\n                    }\n\n                    if (candlestickSeries.series.length > 0) {\n                        elGraph.push(boxCandlestick.draw(candlestickSeries.series, candlestickSeries.i));\n                    }\n\n                    if (boxplotSeries.series.length > 0) {\n                        elGraph.push(boxCandlestick.draw(boxplotSeries.series, boxplotSeries.i));\n                    }\n\n                    if (scatterSeries.series.length > 0) {\n                        var scatterLine = new Line(this.ctx, xyRatios, true);\n                        elGraph.push(scatterLine.draw(scatterSeries.series, 'scatter', scatterSeries.i));\n                    }\n\n                    if (bubbleSeries.series.length > 0) {\n                        var bubbleLine = new Line(this.ctx, xyRatios, true);\n                        elGraph.push(bubbleLine.draw(bubbleSeries.series, 'bubble', bubbleSeries.i));\n                    }\n                } else {\n                    switch (cnf.chart.type) {\n                        case 'line':\n                            elGraph = line.draw(gl.series, 'line');\n                            break;\n\n                        case 'area':\n                            elGraph = line.draw(gl.series, 'area');\n                            break;\n\n                        case 'bar':\n                            if (cnf.chart.stacked) {\n                                var _barStacked = new BarStacked(this.ctx, xyRatios);\n\n                                elGraph = _barStacked.draw(gl.series);\n                            } else {\n                                this.ctx.bar = new Bar(this.ctx, xyRatios);\n                                elGraph = this.ctx.bar.draw(gl.series);\n                            }\n\n                            break;\n\n                        case 'candlestick':\n                            var candleStick = new BoxCandleStick(this.ctx, xyRatios);\n                            elGraph = candleStick.draw(gl.series);\n                            break;\n\n                        case 'boxPlot':\n                            var boxPlot = new BoxCandleStick(this.ctx, xyRatios);\n                            elGraph = boxPlot.draw(gl.series);\n                            break;\n\n                        case 'rangeBar':\n                            elGraph = this.ctx.rangeBar.draw(gl.series);\n                            break;\n\n                        case 'heatmap':\n                            var heatmap = new HeatMap(this.ctx, xyRatios);\n                            elGraph = heatmap.draw(gl.series);\n                            break;\n\n                        case 'treemap':\n                            var treemap = new TreemapChart(this.ctx, xyRatios);\n                            elGraph = treemap.draw(gl.series);\n                            break;\n\n                        case 'pie':\n                        case 'donut':\n                        case 'polarArea':\n                            elGraph = this.ctx.pie.draw(gl.series);\n                            break;\n\n                        case 'radialBar':\n                            elGraph = radialBar.draw(gl.series);\n                            break;\n\n                        case 'radar':\n                            elGraph = radar.draw(gl.series);\n                            break;\n\n                        default:\n                            elGraph = line.draw(gl.series);\n                    }\n                }\n\n                return elGraph;\n            }\n        }, {\n            key: \"setSVGDimensions\",\n            value: function setSVGDimensions() {\n                var gl = this.w.globals;\n                var cnf = this.w.config;\n                gl.svgWidth = cnf.chart.width;\n                gl.svgHeight = cnf.chart.height;\n                var elDim = Utils.getDimensions(this.el);\n                var widthUnit = cnf.chart.width.toString().split(/[0-9]+/g).pop();\n\n                if (widthUnit === '%') {\n                    if (Utils.isNumber(elDim[0])) {\n                        if (elDim[0].width === 0) {\n                            elDim = Utils.getDimensions(this.el.parentNode);\n                        }\n\n                        gl.svgWidth = elDim[0] * parseInt(cnf.chart.width, 10) / 100;\n                    }\n                } else if (widthUnit === 'px' || widthUnit === '') {\n                    gl.svgWidth = parseInt(cnf.chart.width, 10);\n                }\n\n                var heightUnit = cnf.chart.height.toString().split(/[0-9]+/g).pop();\n\n                if (gl.svgHeight !== 'auto' && gl.svgHeight !== '') {\n                    if (heightUnit === '%') {\n                        var elParentDim = Utils.getDimensions(this.el.parentNode);\n                        gl.svgHeight = elParentDim[1] * parseInt(cnf.chart.height, 10) / 100;\n                    } else {\n                        gl.svgHeight = parseInt(cnf.chart.height, 10);\n                    }\n                } else {\n                    if (gl.axisCharts) {\n                        gl.svgHeight = gl.svgWidth / 1.61;\n                    } else {\n                        gl.svgHeight = gl.svgWidth / 1.2;\n                    }\n                }\n\n                if (gl.svgWidth < 0) gl.svgWidth = 0;\n                if (gl.svgHeight < 0) gl.svgHeight = 0;\n                Graphics.setAttrs(gl.dom.Paper.node, {\n                    width: gl.svgWidth,\n                    height: gl.svgHeight\n                });\n\n                if (heightUnit !== '%') {\n                    // fixes https://github.com/apexcharts/apexcharts.js/issues/2059\n                    var offsetY = cnf.chart.sparkline.enabled ? 0 : gl.axisCharts ? cnf.chart.parentHeightOffset : 0;\n                    gl.dom.Paper.node.parentNode.parentNode.style.minHeight = gl.svgHeight + offsetY + 'px';\n                }\n\n                gl.dom.elWrap.style.width = gl.svgWidth + 'px';\n                gl.dom.elWrap.style.height = gl.svgHeight + 'px';\n            }\n        }, {\n            key: \"shiftGraphPosition\",\n            value: function shiftGraphPosition() {\n                    var gl = this.w.globals;\n                    var tY = gl.translateY;\n                    var tX = gl.translateX;\n                    var scalingAttrs = {\n                        transform: 'translate(' + tX + ', ' + tY + ')'\n                    };\n                    Graphics.setAttrs(gl.dom.elGraphical.node, scalingAttrs);\n                } // To prevent extra spacings in the bottom of the chart, we need to recalculate the height for pie/donut/radialbar charts\n\n        }, {\n            key: \"resizeNonAxisCharts\",\n            value: function resizeNonAxisCharts() {\n                    var w = this.w;\n                    var gl = w.globals;\n                    var legendHeight = 0;\n                    var offY = w.config.chart.sparkline.enabled ? 1 : 15;\n                    offY = offY + w.config.grid.padding.bottom;\n\n                    if ((w.config.legend.position === 'top' || w.config.legend.position === 'bottom') && w.config.legend.show && !w.config.legend.floating) {\n                        legendHeight = new Legend(this.ctx).legendHelpers.getLegendBBox().clwh + 10;\n                    }\n\n                    var el = w.globals.dom.baseEl.querySelector('.apexcharts-radialbar, .apexcharts-pie');\n                    var chartInnerDimensions = w.globals.radialSize * 2.05;\n\n                    if (el && !w.config.chart.sparkline.enabled) {\n                        var elRadialRect = Utils.getBoundingClientRect(el);\n                        chartInnerDimensions = elRadialRect.bottom;\n                        var maxHeight = elRadialRect.bottom - elRadialRect.top;\n                        chartInnerDimensions = Math.max(w.globals.radialSize * 2.05, maxHeight);\n                    }\n\n                    var newHeight = chartInnerDimensions + gl.translateY + legendHeight + offY;\n\n                    if (gl.dom.elLegendForeign) {\n                        gl.dom.elLegendForeign.setAttribute('height', newHeight);\n                    }\n\n                    gl.dom.elWrap.style.height = newHeight + 'px';\n                    Graphics.setAttrs(gl.dom.Paper.node, {\n                        height: newHeight\n                    });\n                    gl.dom.Paper.node.parentNode.parentNode.style.minHeight = newHeight + 'px';\n                }\n                /*\n                 ** All the calculations for setting range in charts will be done here\n                 */\n\n        }, {\n            key: \"coreCalculations\",\n            value: function coreCalculations() {\n                var range = new Range$1(this.ctx);\n                range.init();\n            }\n        }, {\n            key: \"resetGlobals\",\n            value: function resetGlobals() {\n                var _this = this;\n\n                var resetxyValues = function resetxyValues() {\n                    return _this.w.config.series.map(function(s) {\n                        return [];\n                    });\n                };\n\n                var globalObj = new Globals();\n                var gl = this.w.globals;\n                globalObj.initGlobalVars(gl);\n                gl.seriesXvalues = resetxyValues();\n                gl.seriesYvalues = resetxyValues();\n            }\n        }, {\n            key: \"isMultipleY\",\n            value: function isMultipleY() {\n                // user has supplied an array in yaxis property. So, turn on multipleYAxis flag\n                if (this.w.config.yaxis.constructor === Array && this.w.config.yaxis.length > 1) {\n                    this.w.globals.isMultipleYAxis = true;\n                    return true;\n                }\n            }\n        }, {\n            key: \"xySettings\",\n            value: function xySettings() {\n                var xyRatios = null;\n                var w = this.w;\n\n                if (w.globals.axisCharts) {\n                    if (w.config.xaxis.crosshairs.position === 'back') {\n                        var crosshairs = new Crosshairs(this.ctx);\n                        crosshairs.drawXCrosshairs();\n                    }\n\n                    if (w.config.yaxis[0].crosshairs.position === 'back') {\n                        var _crosshairs = new Crosshairs(this.ctx);\n\n                        _crosshairs.drawYCrosshairs();\n                    }\n\n                    if (w.config.xaxis.type === 'datetime' && w.config.xaxis.labels.formatter === undefined) {\n                        this.ctx.timeScale = new TimeScale(this.ctx);\n                        var formattedTimeScale = [];\n\n                        if (isFinite(w.globals.minX) && isFinite(w.globals.maxX) && !w.globals.isBarHorizontal) {\n                            formattedTimeScale = this.ctx.timeScale.calculateTimeScaleTicks(w.globals.minX, w.globals.maxX);\n                        } else if (w.globals.isBarHorizontal) {\n                            formattedTimeScale = this.ctx.timeScale.calculateTimeScaleTicks(w.globals.minY, w.globals.maxY);\n                        }\n\n                        this.ctx.timeScale.recalcDimensionsBasedOnFormat(formattedTimeScale);\n                    }\n\n                    var coreUtils = new CoreUtils(this.ctx);\n                    xyRatios = coreUtils.getCalculatedRatios();\n                }\n\n                return xyRatios;\n            }\n        }, {\n            key: \"updateSourceChart\",\n            value: function updateSourceChart(targetChart) {\n                this.ctx.w.globals.selection = undefined;\n\n                this.ctx.updateHelpers._updateOptions({\n                    chart: {\n                        selection: {\n                            xaxis: {\n                                min: targetChart.w.globals.minX,\n                                max: targetChart.w.globals.maxX\n                            }\n                        }\n                    }\n                }, false, false);\n            }\n        }, {\n            key: \"setupBrushHandler\",\n            value: function setupBrushHandler() {\n                var _this2 = this;\n\n                var w = this.w; // only for brush charts\n\n                if (!w.config.chart.brush.enabled) {\n                    return;\n                } // if user has not defined a custom function for selection - we handle the brush chart\n                // otherwise we leave it to the user to define the functionality for selection\n\n\n                if (typeof w.config.chart.events.selection !== 'function') {\n                    var targets = w.config.chart.brush.targets || [w.config.chart.brush.target]; // retro compatibility with single target option\n\n                    targets.forEach(function(target) {\n                        var targetChart = ApexCharts.getChartByID(target);\n                        targetChart.w.globals.brushSource = _this2.ctx;\n\n                        if (typeof targetChart.w.config.chart.events.zoomed !== 'function') {\n                            targetChart.w.config.chart.events.zoomed = function() {\n                                _this2.updateSourceChart(targetChart);\n                            };\n                        }\n\n                        if (typeof targetChart.w.config.chart.events.scrolled !== 'function') {\n                            targetChart.w.config.chart.events.scrolled = function() {\n                                _this2.updateSourceChart(targetChart);\n                            };\n                        }\n                    });\n\n                    w.config.chart.events.selection = function(chart, e) {\n                        targets.forEach(function(target) {\n                            var targetChart = ApexCharts.getChartByID(target);\n                            var yaxis = Utils.clone(w.config.yaxis);\n\n                            if (w.config.chart.brush.autoScaleYaxis && targetChart.w.globals.series.length === 1) {\n                                var scale = new Range(targetChart);\n                                yaxis = scale.autoScaleY(targetChart, yaxis, e);\n                            }\n\n                            var multipleYaxis = targetChart.w.config.yaxis.reduce(function(acc, curr, index) {\n                                return [].concat(_toConsumableArray(acc), [_objectSpread2(_objectSpread2({}, targetChart.w.config.yaxis[index]), {}, {\n                                    min: yaxis[0].min,\n                                    max: yaxis[0].max\n                                })]);\n                            }, []);\n\n                            targetChart.ctx.updateHelpers._updateOptions({\n                                xaxis: {\n                                    min: e.xaxis.min,\n                                    max: e.xaxis.max\n                                },\n                                yaxis: multipleYaxis\n                            }, false, false, false, false);\n                        });\n                    };\n                }\n            }\n        }]);\n\n        return Core;\n    }();\n\n    var UpdateHelpers = /*#__PURE__*/ function() {\n        function UpdateHelpers(ctx) {\n            _classCallCheck(this, UpdateHelpers);\n\n            this.ctx = ctx;\n            this.w = ctx.w;\n        }\n        /**\n         * private method to update Options.\n         *\n         * @param {object} options - A new config object can be passed which will be merged with the existing config object\n         * @param {boolean} redraw - should redraw from beginning or should use existing paths and redraw from there\n         * @param {boolean} animate - should animate or not on updating Options\n         * @param {boolean} overwriteInitialConfig - should update the initial config or not\n         */\n\n\n        _createClass(UpdateHelpers, [{\n            key: \"_updateOptions\",\n            value: function _updateOptions(options) {\n                    var _this = this;\n\n                    var redraw = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n                    var animate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n                    var updateSyncedCharts = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n                    var overwriteInitialConfig = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n                    var charts = [this.ctx];\n\n                    if (updateSyncedCharts) {\n                        charts = this.ctx.getSyncedCharts();\n                    }\n\n                    if (this.ctx.w.globals.isExecCalled) {\n                        // If the user called exec method, we don't want to get grouped charts as user specifically provided a chartID to update\n                        charts = [this.ctx];\n                        this.ctx.w.globals.isExecCalled = false;\n                    }\n\n                    charts.forEach(function(ch) {\n                        var w = ch.w;\n                        w.globals.shouldAnimate = animate;\n\n                        if (!redraw) {\n                            w.globals.resized = true;\n                            w.globals.dataChanged = true;\n\n                            if (animate) {\n                                ch.series.getPreviousPaths();\n                            }\n                        }\n\n                        if (options && _typeof(options) === 'object') {\n                            ch.config = new Config(options);\n                            options = CoreUtils.extendArrayProps(ch.config, options, w); // fixes #914, #623\n\n                            if (ch.w.globals.chartID !== _this.ctx.w.globals.chartID) {\n                                // don't overwrite series of synchronized charts\n                                delete options.series;\n                            }\n\n                            w.config = Utils.extend(w.config, options);\n\n                            if (overwriteInitialConfig) {\n                                // we need to forget the lastXAxis and lastYAxis is user forcefully overwriteInitialConfig. If we do not do this, and next time when user zooms the chart after setting yaxis.min/max or xaxis.min/max - the stored lastXAxis will never allow the chart to use the updated min/max by user.\n                                w.globals.lastXAxis = options.xaxis ? Utils.clone(options.xaxis) : [];\n                                w.globals.lastYAxis = options.yaxis ? Utils.clone(options.yaxis) : []; // After forgetting lastAxes, we need to restore the new config in initialConfig/initialSeries\n\n                                w.globals.initialConfig = Utils.extend({}, w.config);\n                                w.globals.initialSeries = Utils.clone(w.config.series);\n                            }\n                        }\n\n                        return ch.update(options);\n                    });\n                }\n                /**\n                 * Private method to update Series.\n                 *\n                 * @param {array} series - New series which will override the existing\n                 */\n\n        }, {\n            key: \"_updateSeries\",\n            value: function _updateSeries(newSeries, animate) {\n                var _this2 = this;\n\n                var overwriteInitialSeries = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n                var w = this.w;\n                w.globals.shouldAnimate = animate;\n                w.globals.dataChanged = true;\n\n                if (animate) {\n                    this.ctx.series.getPreviousPaths();\n                }\n\n                var existingSeries; // axis charts\n\n                if (w.globals.axisCharts) {\n                    existingSeries = newSeries.map(function(s, i) {\n                        return _this2._extendSeries(s, i);\n                    });\n\n                    if (existingSeries.length === 0) {\n                        existingSeries = [{\n                            data: []\n                        }];\n                    }\n\n                    w.config.series = existingSeries;\n                } else {\n                    // non-axis chart (pie/radialbar)\n                    w.config.series = newSeries.slice();\n                }\n\n                if (overwriteInitialSeries) {\n                    w.globals.initialSeries = Utils.clone(w.config.series);\n                }\n\n                return this.ctx.update();\n            }\n        }, {\n            key: \"_extendSeries\",\n            value: function _extendSeries(s, i) {\n                var w = this.w;\n                var ser = w.config.series[i];\n                return _objectSpread2(_objectSpread2({}, w.config.series[i]), {}, {\n                    name: s.name ? s.name : ser && ser.name,\n                    color: s.color ? s.color : ser && ser.color,\n                    type: s.type ? s.type : ser && ser.type,\n                    data: s.data ? s.data : ser && ser.data\n                });\n            }\n        }, {\n            key: \"toggleDataPointSelection\",\n            value: function toggleDataPointSelection(seriesIndex, dataPointIndex) {\n                var w = this.w;\n                var elPath = null;\n                var parent = \".apexcharts-series[data\\\\:realIndex='\".concat(seriesIndex, \"']\");\n\n                if (w.globals.axisCharts) {\n                    elPath = w.globals.dom.Paper.select(\"\".concat(parent, \" path[j='\").concat(dataPointIndex, \"'], \").concat(parent, \" circle[j='\").concat(dataPointIndex, \"'], \").concat(parent, \" rect[j='\").concat(dataPointIndex, \"']\")).members[0];\n                } else {\n                    // dataPointIndex will be undefined here, hence using seriesIndex\n                    if (typeof dataPointIndex === 'undefined') {\n                        elPath = w.globals.dom.Paper.select(\"\".concat(parent, \" path[j='\").concat(seriesIndex, \"']\")).members[0];\n\n                        if (w.config.chart.type === 'pie' || w.config.chart.type === 'polarArea' || w.config.chart.type === 'donut') {\n                            this.ctx.pie.pieClicked(seriesIndex);\n                        }\n                    }\n                }\n\n                if (elPath) {\n                    var graphics = new Graphics(this.ctx);\n                    graphics.pathMouseDown(elPath, null);\n                } else {\n                    console.warn('toggleDataPointSelection: Element not found');\n                    return null;\n                }\n\n                return elPath.node ? elPath.node : null;\n            }\n        }, {\n            key: \"forceXAxisUpdate\",\n            value: function forceXAxisUpdate(options) {\n                var w = this.w;\n                var minmax = ['min', 'max'];\n                minmax.forEach(function(a) {\n                    if (typeof options.xaxis[a] !== 'undefined') {\n                        w.config.xaxis[a] = options.xaxis[a];\n                        w.globals.lastXAxis[a] = options.xaxis[a];\n                    }\n                });\n\n                if (options.xaxis.categories && options.xaxis.categories.length) {\n                    w.config.xaxis.categories = options.xaxis.categories;\n                }\n\n                if (w.config.xaxis.convertedCatToNumeric) {\n                    var defaults = new Defaults(options);\n                    options = defaults.convertCatToNumericXaxis(options, this.ctx);\n                }\n\n                return options;\n            }\n        }, {\n            key: \"forceYAxisUpdate\",\n            value: function forceYAxisUpdate(options) {\n                    var w = this.w;\n\n                    if (w.config.chart.stacked && w.config.chart.stackType === '100%') {\n                        if (Array.isArray(options.yaxis)) {\n                            options.yaxis.forEach(function(yaxe, index) {\n                                options.yaxis[index].min = 0;\n                                options.yaxis[index].max = 100;\n                            });\n                        } else {\n                            options.yaxis.min = 0;\n                            options.yaxis.max = 100;\n                        }\n                    }\n\n                    return options;\n                }\n                /**\n                 * This function reverts the yaxis and xaxis min/max values to what it was when the chart was defined.\n                 * This function fixes an important bug where a user might load a new series after zooming in/out of previous series which resulted in wrong min/max\n                 * Also, this should never be called internally on zoom/pan - the reset should only happen when user calls the updateSeries() function externally\n                 * The function also accepts an object {xaxis, yaxis} which when present is set as the new xaxis/yaxis\n                 */\n\n        }, {\n            key: \"revertDefaultAxisMinMax\",\n            value: function revertDefaultAxisMinMax(opts) {\n                var _this3 = this;\n\n                var w = this.w;\n                var xaxis = w.globals.lastXAxis;\n                var yaxis = w.globals.lastYAxis;\n\n                if (opts && opts.xaxis) {\n                    xaxis = opts.xaxis;\n                }\n\n                if (opts && opts.yaxis) {\n                    yaxis = opts.yaxis;\n                }\n\n                w.config.xaxis.min = xaxis.min;\n                w.config.xaxis.max = xaxis.max;\n\n                var getLastYAxis = function getLastYAxis(index) {\n                    if (typeof yaxis[index] !== 'undefined') {\n                        w.config.yaxis[index].min = yaxis[index].min;\n                        w.config.yaxis[index].max = yaxis[index].max;\n                    }\n                };\n\n                w.config.yaxis.map(function(yaxe, index) {\n                    if (w.globals.zoomed) {\n                        // user has zoomed, check the last yaxis\n                        getLastYAxis(index);\n                    } else {\n                        // user hasn't zoomed, check the last yaxis first\n                        if (typeof yaxis[index] !== 'undefined') {\n                            getLastYAxis(index);\n                        } else {\n                            // if last y-axis don't exist, check the original yaxis\n                            if (typeof _this3.ctx.opts.yaxis[index] !== 'undefined') {\n                                yaxe.min = _this3.ctx.opts.yaxis[index].min;\n                                yaxe.max = _this3.ctx.opts.yaxis[index].max;\n                            }\n                        }\n                    }\n                });\n            }\n        }]);\n\n        return UpdateHelpers;\n    }();\n\n    /*! svg.filter.js - v2.0.2 - 2016-02-24\n     * https://github.com/wout/svg.filter.js\n     * Copyright (c) 2016 Wout Fierens; Licensed MIT */\n    (function() {\n\n        // Main filter class\n        SVG.Filter = SVG.invent({\n            create: 'filter',\n            inherit: SVG.Parent,\n            extend: {\n                // Static strings\n                source: 'SourceGraphic',\n                sourceAlpha: 'SourceAlpha',\n                background: 'BackgroundImage',\n                backgroundAlpha: 'BackgroundAlpha',\n                fill: 'FillPaint',\n                stroke: 'StrokePaint',\n\n                autoSetIn: true,\n                // Custom put method for leaner code\n                put: function(element, i) {\n                    this.add(element, i);\n\n                    if (!element.attr('in') && this.autoSetIn) {\n                        element.attr('in', this.source);\n                    }\n                    if (!element.attr('result')) {\n                        element.attr('result', element);\n                    }\n\n                    return element\n                },\n                // Blend effect\n                blend: function(in1, in2, mode) {\n                    return this.put(new SVG.BlendEffect(in1, in2, mode))\n                },\n                // ColorMatrix effect\n                colorMatrix: function(type, values) {\n                    return this.put(new SVG.ColorMatrixEffect(type, values))\n                },\n                // ConvolveMatrix effect\n                convolveMatrix: function(matrix) {\n                    return this.put(new SVG.ConvolveMatrixEffect(matrix))\n                },\n                // ComponentTransfer effect\n                componentTransfer: function(components) {\n                    return this.put(new SVG.ComponentTransferEffect(components))\n                },\n                // Composite effect\n                composite: function(in1, in2, operator) {\n                    return this.put(new SVG.CompositeEffect(in1, in2, operator))\n                },\n                // Flood effect\n                flood: function(color, opacity) {\n                    return this.put(new SVG.FloodEffect(color, opacity))\n                },\n                // Offset effect\n                offset: function(x, y) {\n                    return this.put(new SVG.OffsetEffect(x, y))\n                },\n                // Image effect\n                image: function(src) {\n                    return this.put(new SVG.ImageEffect(src))\n                },\n                // Merge effect\n                merge: function() {\n                    //pass the array of arguments to the constructor because we dont know if the user gave us an array as the first arguemnt or wether they listed the effects in the arguments\n                    var args = [undefined];\n                    for (var i in arguments) args.push(arguments[i]);\n                    return this.put(new(SVG.MergeEffect.bind.apply(SVG.MergeEffect, args)))\n                },\n                // Gaussian Blur effect\n                gaussianBlur: function(x, y) {\n                    return this.put(new SVG.GaussianBlurEffect(x, y))\n                },\n                // Morphology effect\n                morphology: function(operator, radius) {\n                    return this.put(new SVG.MorphologyEffect(operator, radius))\n                },\n                // DiffuseLighting effect\n                diffuseLighting: function(surfaceScale, diffuseConstant, kernelUnitLength) {\n                    return this.put(new SVG.DiffuseLightingEffect(surfaceScale, diffuseConstant, kernelUnitLength))\n                },\n                // DisplacementMap effect\n                displacementMap: function(in1, in2, scale, xChannelSelector, yChannelSelector) {\n                    return this.put(new SVG.DisplacementMapEffect(in1, in2, scale, xChannelSelector, yChannelSelector))\n                },\n                // SpecularLighting effect\n                specularLighting: function(surfaceScale, diffuseConstant, specularExponent, kernelUnitLength) {\n                    return this.put(new SVG.SpecularLightingEffect(surfaceScale, diffuseConstant, specularExponent, kernelUnitLength))\n                },\n                // Tile effect\n                tile: function() {\n                    return this.put(new SVG.TileEffect());\n                },\n                // Turbulence effect\n                turbulence: function(baseFrequency, numOctaves, seed, stitchTiles, type) {\n                    return this.put(new SVG.TurbulenceEffect(baseFrequency, numOctaves, seed, stitchTiles, type))\n                },\n                // Default string value\n                toString: function() {\n                    return 'url(#' + this.attr('id') + ')'\n                }\n            }\n        });\n\n        //add .filter function\n        SVG.extend(SVG.Defs, {\n            // Define filter\n            filter: function(block) {\n                var filter = this.put(new SVG.Filter);\n\n                /* invoke passed block */\n                if (typeof block === 'function')\n                    block.call(filter, filter);\n\n                return filter\n            }\n        });\n        SVG.extend(SVG.Container, {\n            // Define filter on defs\n            filter: function(block) {\n                return this.defs().filter(block)\n            }\n        });\n        SVG.extend(SVG.Element, SVG.G, SVG.Nested, {\n            // Create filter element in defs and store reference\n            filter: function(block) {\n                this.filterer = block instanceof SVG.Element ?\n                    block : this.doc().filter(block);\n\n                if (this.doc() && this.filterer.doc() !== this.doc()) {\n                    this.doc().defs().add(this.filterer);\n                }\n\n                this.attr('filter', this.filterer);\n\n                return this.filterer\n            },\n            // Remove filter\n            unfilter: function(remove) {\n                /* also remove the filter node */\n                if (this.filterer && remove === true)\n                    this.filterer.remove();\n\n                /* delete reference to filterer */\n                delete this.filterer;\n\n                /* remove filter attribute */\n                return this.attr('filter', null)\n            }\n        });\n\n        // Create SVG.Effect class\n        SVG.Effect = SVG.invent({\n            create: function() {\n                this.constructor.call(this);\n            },\n            inherit: SVG.Element,\n            extend: {\n                // Set in attribute\n                in: function(effect) {\n                    return effect == null ? this.parent() && this.parent().select('[result=\"' + this.attr('in') + '\"]').get(0) || this.attr('in') : this.attr('in', effect)\n                },\n                // Named result\n                result: function(result) {\n                    return result == null ? this.attr('result') : this.attr('result', result)\n                },\n                // Stringification\n                toString: function() {\n                    return this.result()\n                }\n            }\n        });\n\n        // create class for parent effects like merge\n        // Inherit from SVG.Parent\n        SVG.ParentEffect = SVG.invent({\n            create: function() {\n                this.constructor.call(this);\n            },\n            inherit: SVG.Parent,\n            extend: {\n                // Set in attribute\n                in: function(effect) {\n                    return effect == null ? this.parent() && this.parent().select('[result=\"' + this.attr('in') + '\"]').get(0) || this.attr('in') : this.attr('in', effect)\n                },\n                // Named result\n                result: function(result) {\n                    return result == null ? this.attr('result') : this.attr('result', result)\n                },\n                // Stringification\n                toString: function() {\n                    return this.result()\n                }\n            }\n        });\n\n        //chaining\n        var chainingEffects = {\n            // Blend effect\n            blend: function(in2, mode) {\n                return this.parent() && this.parent().blend(this, in2, mode) //pass this as the first input\n            },\n            // ColorMatrix effect\n            colorMatrix: function(type, values) {\n                return this.parent() && this.parent().colorMatrix(type, values).in(this)\n            },\n            // ConvolveMatrix effect\n            convolveMatrix: function(matrix) {\n                return this.parent() && this.parent().convolveMatrix(matrix).in(this)\n            },\n            // ComponentTransfer effect\n            componentTransfer: function(components) {\n                return this.parent() && this.parent().componentTransfer(components).in(this)\n            },\n            // Composite effect\n            composite: function(in2, operator) {\n                return this.parent() && this.parent().composite(this, in2, operator) //pass this as the first input\n            },\n            // Flood effect\n            flood: function(color, opacity) {\n                return this.parent() && this.parent().flood(color, opacity) //this effect dont have inputs\n            },\n            // Offset effect\n            offset: function(x, y) {\n                return this.parent() && this.parent().offset(x, y).in(this)\n            },\n            // Image effect\n            image: function(src) {\n                return this.parent() && this.parent().image(src) //this effect dont have inputs\n            },\n            // Merge effect\n            merge: function() {\n                return this.parent() && this.parent().merge.apply(this.parent(), [this].concat(arguments)) //pass this as the first argument\n            },\n            // Gaussian Blur effect\n            gaussianBlur: function(x, y) {\n                return this.parent() && this.parent().gaussianBlur(x, y).in(this)\n            },\n            // Morphology effect\n            morphology: function(operator, radius) {\n                return this.parent() && this.parent().morphology(operator, radius).in(this)\n            },\n            // DiffuseLighting effect\n            diffuseLighting: function(surfaceScale, diffuseConstant, kernelUnitLength) {\n                return this.parent() && this.parent().diffuseLighting(surfaceScale, diffuseConstant, kernelUnitLength).in(this)\n            },\n            // DisplacementMap effect\n            displacementMap: function(in2, scale, xChannelSelector, yChannelSelector) {\n                return this.parent() && this.parent().displacementMap(this, in2, scale, xChannelSelector, yChannelSelector) //pass this as the first input\n            },\n            // SpecularLighting effect\n            specularLighting: function(surfaceScale, diffuseConstant, specularExponent, kernelUnitLength) {\n                return this.parent() && this.parent().specularLighting(surfaceScale, diffuseConstant, specularExponent, kernelUnitLength).in(this)\n            },\n            // Tile effect\n            tile: function() {\n                return this.parent() && this.parent().tile().in(this)\n            },\n            // Turbulence effect\n            turbulence: function(baseFrequency, numOctaves, seed, stitchTiles, type) {\n                return this.parent() && this.parent().turbulence(baseFrequency, numOctaves, seed, stitchTiles, type).in(this)\n            }\n        };\n        SVG.extend(SVG.Effect, chainingEffects);\n        SVG.extend(SVG.ParentEffect, chainingEffects);\n\n        //crea class for child effects, like MergeNode, FuncR and lights\n        SVG.ChildEffect = SVG.invent({\n            create: function() {\n                this.constructor.call(this);\n            },\n            inherit: SVG.Element,\n            extend: { in: function(effect) {\n                        this.attr('in', effect);\n                    }\n                    //dont include any \"result\" functions because these types of nodes dont have them\n            }\n        });\n\n        // Create all different effects\n        var effects = {\n            blend: function(in1, in2, mode) {\n                this.attr({ in: in1,\n                    in2: in2,\n                    mode: mode || 'normal'\n                });\n            },\n            colorMatrix: function(type, values) {\n                if (type == 'matrix')\n                    values = normaliseMatrix(values);\n\n                this.attr({\n                    type: type,\n                    values: typeof values == 'undefined' ? null : values\n                });\n            },\n            convolveMatrix: function(matrix) {\n                matrix = normaliseMatrix(matrix);\n\n                this.attr({\n                    order: Math.sqrt(matrix.split(' ').length),\n                    kernelMatrix: matrix\n                });\n            },\n            composite: function(in1, in2, operator) {\n                this.attr({ in: in1,\n                    in2: in2,\n                    operator: operator\n                });\n            },\n            flood: function(color, opacity) {\n                this.attr('flood-color', color);\n                if (opacity != null) this.attr('flood-opacity', opacity);\n            },\n            offset: function(x, y) {\n                this.attr({\n                    dx: x,\n                    dy: y\n                });\n            },\n            image: function(src) {\n                this.attr('href', src, SVG.xlink);\n            },\n            displacementMap: function(in1, in2, scale, xChannelSelector, yChannelSelector) {\n                this.attr({ in: in1,\n                    in2: in2,\n                    scale: scale,\n                    xChannelSelector: xChannelSelector,\n                    yChannelSelector: yChannelSelector\n                });\n            },\n            gaussianBlur: function(x, y) {\n                if (x != null || y != null)\n                    this.attr('stdDeviation', listString(Array.prototype.slice.call(arguments)));\n                else\n                    this.attr('stdDeviation', '0 0');\n            },\n            morphology: function(operator, radius) {\n                this.attr({\n                    operator: operator,\n                    radius: radius\n                });\n            },\n            tile: function() {\n\n            },\n            turbulence: function(baseFrequency, numOctaves, seed, stitchTiles, type) {\n                this.attr({\n                    numOctaves: numOctaves,\n                    seed: seed,\n                    stitchTiles: stitchTiles,\n                    baseFrequency: baseFrequency,\n                    type: type\n                });\n            }\n        };\n\n        // Create all parent effects\n        var parentEffects = {\n            merge: function() {\n                var children;\n\n                //test to see if we have a set\n                if (arguments[0] instanceof SVG.Set) {\n                    var that = this;\n                    arguments[0].each(function(i) {\n                        if (this instanceof SVG.MergeNode)\n                            that.put(this);\n                        else if (this instanceof SVG.Effect || this instanceof SVG.ParentEffect)\n                            that.put(new SVG.MergeNode(this));\n                    });\n                } else {\n                    //if the first argument is an array use it\n                    if (Array.isArray(arguments[0]))\n                        children = arguments[0];\n                    else\n                        children = arguments;\n\n                    for (var i = 0; i < children.length; i++) {\n                        if (children[i] instanceof SVG.MergeNode) {\n                            this.put(children[i]);\n                        } else this.put(new SVG.MergeNode(children[i]));\n                    }\n                }\n            },\n            componentTransfer: function(compontents) {\n                /* create rgb set */\n                this.rgb = new SVG.Set\n\n                /* create components */\n                ;\n                (['r', 'g', 'b', 'a']).forEach(function(c) {\n                    /* create component */\n                    this[c] = new SVG['Func' + c.toUpperCase()]('identity');\n\n                    /* store component in set */\n                    this.rgb.add(this[c]);\n\n                    /* add component node */\n                    this.node.appendChild(this[c].node);\n                }.bind(this)); //lost context in foreach\n\n                /* set components */\n                if (compontents) {\n                    if (compontents.rgb) {\n                        (['r', 'g', 'b']).forEach(function(c) {\n                            this[c].attr(compontents.rgb);\n                        }.bind(this));\n\n                        delete compontents.rgb;\n                    }\n\n                    /* set individual components */\n                    for (var c in compontents)\n                        this[c].attr(compontents[c]);\n                }\n            },\n            diffuseLighting: function(surfaceScale, diffuseConstant, kernelUnitLength) {\n                this.attr({\n                    surfaceScale: surfaceScale,\n                    diffuseConstant: diffuseConstant,\n                    kernelUnitLength: kernelUnitLength\n                });\n            },\n            specularLighting: function(surfaceScale, diffuseConstant, specularExponent, kernelUnitLength) {\n                this.attr({\n                    surfaceScale: surfaceScale,\n                    diffuseConstant: diffuseConstant,\n                    specularExponent: specularExponent,\n                    kernelUnitLength: kernelUnitLength\n                });\n            },\n        };\n\n        // Create child effects like PointLight and MergeNode\n        var childEffects = {\n            distantLight: function(azimuth, elevation) {\n                this.attr({\n                    azimuth: azimuth,\n                    elevation: elevation\n                });\n            },\n            pointLight: function(x, y, z) {\n                this.attr({\n                    x: x,\n                    y: y,\n                    z: z\n                });\n            },\n            spotLight: function(x, y, z, pointsAtX, pointsAtY, pointsAtZ) {\n                this.attr({\n                    x: x,\n                    y: y,\n                    z: z,\n                    pointsAtX: pointsAtX,\n                    pointsAtY: pointsAtY,\n                    pointsAtZ: pointsAtZ\n                });\n            },\n            mergeNode: function(in1) {\n                this.attr('in', in1);\n            }\n        }\n\n        // Create compontent functions\n        ;\n        (['r', 'g', 'b', 'a']).forEach(function(c) {\n            /* create class */\n            childEffects['Func' + c.toUpperCase()] = function(type) {\n                this.attr('type', type);\n\n                // take diffent arguments based on the type\n                switch (type) {\n                    case 'table':\n                        this.attr('tableValues', arguments[1]);\n                        break\n                    case 'linear':\n                        this.attr('slope', arguments[1]);\n                        this.attr('intercept', arguments[2]);\n                        break\n                    case 'gamma':\n                        this.attr('amplitude', arguments[1]);\n                        this.attr('exponent', arguments[2]);\n                        this.attr('offset', arguments[2]);\n                        break\n                }\n            };\n        });\n\n        //create effects\n        foreach(effects, function(effect, i) {\n\n            /* capitalize name */\n            var name = i.charAt(0).toUpperCase() + i.slice(1);\n            var proto = {};\n\n            /* create class */\n            SVG[name + 'Effect'] = SVG.invent({\n                create: function() {\n                    //call super\n                    this.constructor.call(this, SVG.create('fe' + name));\n\n                    //call constructor for this effect\n                    effect.apply(this, arguments);\n\n                    //set the result\n                    this.result(this.attr('id') + 'Out');\n                },\n                inherit: SVG.Effect,\n                extend: proto\n            });\n        });\n\n        //create parent effects\n        foreach(parentEffects, function(effect, i) {\n\n            /* capitalize name */\n            var name = i.charAt(0).toUpperCase() + i.slice(1);\n            var proto = {};\n\n            /* create class */\n            SVG[name + 'Effect'] = SVG.invent({\n                create: function() {\n                    //call super\n                    this.constructor.call(this, SVG.create('fe' + name));\n\n                    //call constructor for this effect\n                    effect.apply(this, arguments);\n\n                    //set the result\n                    this.result(this.attr('id') + 'Out');\n                },\n                inherit: SVG.ParentEffect,\n                extend: proto\n            });\n        });\n\n        //create child effects\n        foreach(childEffects, function(effect, i) {\n\n            /* capitalize name */\n            var name = i.charAt(0).toUpperCase() + i.slice(1);\n            var proto = {};\n\n            /* create class */\n            SVG[name] = SVG.invent({\n                create: function() {\n                    //call super\n                    this.constructor.call(this, SVG.create('fe' + name));\n\n                    //call constructor for this effect\n                    effect.apply(this, arguments);\n                },\n                inherit: SVG.ChildEffect,\n                extend: proto\n            });\n        });\n\n        // Effect-specific extensions\n        SVG.extend(SVG.MergeEffect, { in: function(effect) {\n                if (effect instanceof SVG.MergeNode)\n                    this.add(effect, 0);\n                else\n                    this.add(new SVG.MergeNode(effect), 0);\n\n                return this\n            }\n        });\n        SVG.extend(SVG.CompositeEffect, SVG.BlendEffect, SVG.DisplacementMapEffect, {\n            in2: function(effect) {\n                return effect == null ? this.parent() && this.parent().select('[result=\"' + this.attr('in2') + '\"]').get(0) || this.attr('in2') : this.attr('in2', effect)\n            }\n        });\n\n        // Presets\n        SVG.filter = {\n            sepiatone: [.343, .669, .119, 0, 0, .249, .626, .130, 0, 0, .172, .334, .111, 0, 0, .000, .000, .000, 1, 0]\n        };\n\n        // Helpers\n        function normaliseMatrix(matrix) {\n            /* convert possible array value to string */\n            if (Array.isArray(matrix))\n                matrix = new SVG.Array(matrix);\n\n            /* ensure there are no leading, tailing or double spaces */\n            return matrix.toString().replace(/^\\s+/, '').replace(/\\s+$/, '').replace(/\\s+/g, ' ')\n        }\n\n        function listString(list) {\n            if (!Array.isArray(list))\n                return list\n\n            for (var i = 0, l = list.length, s = []; i < l; i++)\n                s.push(list[i]);\n\n            return s.join(' ')\n        }\n\n        function foreach() { //loops through mutiple objects\n            var fn = function() {};\n            if (typeof arguments[arguments.length - 1] == 'function') {\n                fn = arguments[arguments.length - 1];\n                Array.prototype.splice.call(arguments, arguments.length - 1, 1);\n            }\n            for (var k in arguments) {\n                for (var i in arguments[k]) {\n                    fn(arguments[k][i], i, arguments[k]);\n                }\n            }\n        }\n\n    }).call(undefined);\n\n    (function() {\n\n        SVG.extend(SVG.PathArray, {\n            morph: function(array) {\n\n                var startArr = this.value,\n                    destArr = this.parse(array);\n\n                var startOffsetM = 0,\n                    destOffsetM = 0;\n\n                var startOffsetNextM = false,\n                    destOffsetNextM = false;\n\n                while (true) {\n                    // stop if there is no M anymore\n                    if (startOffsetM === false && destOffsetM === false) break\n\n                    // find the next M in path array\n                    startOffsetNextM = findNextM(startArr, startOffsetM === false ? false : startOffsetM + 1);\n                    destOffsetNextM = findNextM(destArr, destOffsetM === false ? false : destOffsetM + 1);\n\n                    // We have to add one M to the startArray\n                    if (startOffsetM === false) {\n                        var bbox = new SVG.PathArray(result.start).bbox();\n\n                        // when the last block had no bounding box we simply take the first M we got\n                        if (bbox.height == 0 || bbox.width == 0) {\n                            startOffsetM = startArr.push(startArr[0]) - 1;\n                        } else {\n                            // we take the middle of the bbox instead when we got one\n                            startOffsetM = startArr.push(['M', bbox.x + bbox.width / 2, bbox.y + bbox.height / 2]) - 1;\n                        }\n                    }\n\n                    // We have to add one M to the destArray\n                    if (destOffsetM === false) {\n                        var bbox = new SVG.PathArray(result.dest).bbox();\n\n                        if (bbox.height == 0 || bbox.width == 0) {\n                            destOffsetM = destArr.push(destArr[0]) - 1;\n                        } else {\n                            destOffsetM = destArr.push(['M', bbox.x + bbox.width / 2, bbox.y + bbox.height / 2]) - 1;\n                        }\n                    }\n\n                    // handle block from M to next M\n                    var result = handleBlock(startArr, startOffsetM, startOffsetNextM, destArr, destOffsetM, destOffsetNextM);\n\n                    // update the arrays to their new values\n                    startArr = startArr.slice(0, startOffsetM).concat(result.start, startOffsetNextM === false ? [] : startArr.slice(startOffsetNextM));\n                    destArr = destArr.slice(0, destOffsetM).concat(result.dest, destOffsetNextM === false ? [] : destArr.slice(destOffsetNextM));\n\n                    // update offsets\n                    startOffsetM = startOffsetNextM === false ? false : startOffsetM + result.start.length;\n                    destOffsetM = destOffsetNextM === false ? false : destOffsetM + result.dest.length;\n\n                }\n\n                // copy back arrays\n                this.value = startArr;\n                this.destination = new SVG.PathArray();\n                this.destination.value = destArr;\n\n                return this\n            }\n        });\n\n\n\n        // sorry for the long declaration\n        // slices out one block (from M to M) and syncronize it so the types and length match\n        function handleBlock(startArr, startOffsetM, startOffsetNextM, destArr, destOffsetM, destOffsetNextM, undefined$1) {\n\n            // slice out the block we need\n            var startArrTemp = startArr.slice(startOffsetM, startOffsetNextM || undefined$1),\n                destArrTemp = destArr.slice(destOffsetM, destOffsetNextM || undefined$1);\n\n            var i = 0,\n                posStart = { pos: [0, 0], start: [0, 0] },\n                posDest = { pos: [0, 0], start: [0, 0] };\n\n            do {\n\n                // convert shorthand types to long form\n                startArrTemp[i] = simplyfy.call(posStart, startArrTemp[i]);\n                destArrTemp[i] = simplyfy.call(posDest, destArrTemp[i]);\n\n                // check if both shape types match\n                // 2 elliptical arc curve commands ('A'), are considered different if the\n                // flags (large-arc-flag, sweep-flag) don't match\n                if (startArrTemp[i][0] != destArrTemp[i][0] || startArrTemp[i][0] == 'M' ||\n                    (startArrTemp[i][0] == 'A' &&\n                        (startArrTemp[i][4] != destArrTemp[i][4] || startArrTemp[i][5] != destArrTemp[i][5])\n                    )\n                ) {\n\n                    // if not, convert shapes to beziere\n                    Array.prototype.splice.apply(startArrTemp, [i, 1].concat(toBeziere.call(posStart, startArrTemp[i])));\n                    Array.prototype.splice.apply(destArrTemp, [i, 1].concat(toBeziere.call(posDest, destArrTemp[i])));\n\n                } else {\n\n                    // only update positions otherwise\n                    startArrTemp[i] = setPosAndReflection.call(posStart, startArrTemp[i]);\n                    destArrTemp[i] = setPosAndReflection.call(posDest, destArrTemp[i]);\n\n                }\n\n                // we are at the end at both arrays. stop here\n                if (++i == startArrTemp.length && i == destArrTemp.length) break\n\n                // destArray is longer. Add one element\n                if (i == startArrTemp.length) {\n                    startArrTemp.push([\n                        'C',\n                        posStart.pos[0],\n                        posStart.pos[1],\n                        posStart.pos[0],\n                        posStart.pos[1],\n                        posStart.pos[0],\n                        posStart.pos[1],\n                    ]);\n                }\n\n                // startArr is longer. Add one element\n                if (i == destArrTemp.length) {\n                    destArrTemp.push([\n                        'C',\n                        posDest.pos[0],\n                        posDest.pos[1],\n                        posDest.pos[0],\n                        posDest.pos[1],\n                        posDest.pos[0],\n                        posDest.pos[1]\n                    ]);\n                }\n\n\n            } while (true)\n\n            // return the updated block\n            return { start: startArrTemp, dest: destArrTemp }\n        }\n\n        // converts shorthand types to long form\n        function simplyfy(val) {\n\n            switch (val[0]) {\n                case 'z': // shorthand line to start\n                case 'Z':\n                    val[0] = 'L';\n                    val[1] = this.start[0];\n                    val[2] = this.start[1];\n                    break\n                case 'H': // shorthand horizontal line\n                    val[0] = 'L';\n                    val[2] = this.pos[1];\n                    break\n                case 'V': // shorthand vertical line\n                    val[0] = 'L';\n                    val[2] = val[1];\n                    val[1] = this.pos[0];\n                    break\n                case 'T': // shorthand quadratic beziere\n                    val[0] = 'Q';\n                    val[3] = val[1];\n                    val[4] = val[2];\n                    val[1] = this.reflection[1];\n                    val[2] = this.reflection[0];\n                    break\n                case 'S': // shorthand cubic beziere\n                    val[0] = 'C';\n                    val[6] = val[4];\n                    val[5] = val[3];\n                    val[4] = val[2];\n                    val[3] = val[1];\n                    val[2] = this.reflection[1];\n                    val[1] = this.reflection[0];\n                    break\n            }\n\n            return val\n\n        }\n\n        // updates reflection point and current position\n        function setPosAndReflection(val) {\n\n            var len = val.length;\n\n            this.pos = [val[len - 2], val[len - 1]];\n\n            if ('SCQT'.indexOf(val[0]) != -1)\n                this.reflection = [2 * this.pos[0] - val[len - 4], 2 * this.pos[1] - val[len - 3]];\n\n            return val\n        }\n\n        // converts all types to cubic beziere\n        function toBeziere(val) {\n            var retVal = [val];\n\n            switch (val[0]) {\n                case 'M': // special handling for M\n                    this.pos = this.start = [val[1], val[2]];\n                    return retVal\n                case 'L':\n                    val[5] = val[3] = val[1];\n                    val[6] = val[4] = val[2];\n                    val[1] = this.pos[0];\n                    val[2] = this.pos[1];\n                    break\n                case 'Q':\n                    val[6] = val[4];\n                    val[5] = val[3];\n                    val[4] = val[4] * 1 / 3 + val[2] * 2 / 3;\n                    val[3] = val[3] * 1 / 3 + val[1] * 2 / 3;\n                    val[2] = this.pos[1] * 1 / 3 + val[2] * 2 / 3;\n                    val[1] = this.pos[0] * 1 / 3 + val[1] * 2 / 3;\n                    break\n                case 'A':\n                    retVal = arcToBeziere(this.pos, val);\n                    val = retVal[0];\n                    break\n            }\n\n            val[0] = 'C';\n            this.pos = [val[5], val[6]];\n            this.reflection = [2 * val[5] - val[3], 2 * val[6] - val[4]];\n\n            return retVal\n\n        }\n\n        // finds the next position of type M\n        function findNextM(arr, offset) {\n\n            if (offset === false) return false\n\n            for (var i = offset, len = arr.length; i < len; ++i) {\n\n                if (arr[i][0] == 'M') return i\n\n            }\n\n            return false\n        }\n\n\n\n        // Convert an arc segment into equivalent cubic Bezier curves\n        // Depending on the arc, up to 4 curves might be used to represent it since a\n        // curve gives a good approximation for only a quarter of an ellipse\n        // The curves are returned as an array of SVG curve commands:\n        // [ ['C', x1, y1, x2, y2, x, y] ... ]\n        function arcToBeziere(pos, val) {\n            // Parameters extraction, handle out-of-range parameters as specified in the SVG spec\n            // See: https://www.w3.org/TR/SVG11/implnote.html#ArcOutOfRangeParameters\n            var rx = Math.abs(val[1]),\n                ry = Math.abs(val[2]),\n                xAxisRotation = val[3] % 360,\n                largeArcFlag = val[4],\n                sweepFlag = val[5],\n                x = val[6],\n                y = val[7],\n                A = new SVG.Point(pos),\n                B = new SVG.Point(x, y),\n                primedCoord, lambda, mat, k, c, cSquare, t, O, OA, OB, tetaStart, tetaEnd, deltaTeta, nbSectors, f, arcSegPoints, angle, sinAngle, cosAngle, pt, i, il, retVal = [],\n                x1, y1, x2, y2;\n\n            // Ensure radii are non-zero\n            if (rx === 0 || ry === 0 || (A.x === B.x && A.y === B.y)) {\n                // treat this arc as a straight line segment\n                return [\n                    ['C', A.x, A.y, B.x, B.y, B.x, B.y]\n                ]\n            }\n\n            // Ensure radii are large enough using the algorithm provided in the SVG spec\n            // See: https://www.w3.org/TR/SVG11/implnote.html#ArcCorrectionOutOfRangeRadii\n            primedCoord = new SVG.Point((A.x - B.x) / 2, (A.y - B.y) / 2).transform(new SVG.Matrix().rotate(xAxisRotation));\n            lambda = (primedCoord.x * primedCoord.x) / (rx * rx) + (primedCoord.y * primedCoord.y) / (ry * ry);\n            if (lambda > 1) {\n                lambda = Math.sqrt(lambda);\n                rx = lambda * rx;\n                ry = lambda * ry;\n            }\n\n            // To simplify calculations, we make the arc part of a unit circle (rayon is 1) instead of an ellipse\n            mat = new SVG.Matrix().rotate(xAxisRotation).scale(1 / rx, 1 / ry).rotate(-xAxisRotation);\n            A = A.transform(mat);\n            B = B.transform(mat);\n\n            // Calculate the horizontal and vertical distance between the initial and final point of the arc\n            k = [B.x - A.x, B.y - A.y];\n\n            // Find the length of the chord formed by A and B\n            cSquare = k[0] * k[0] + k[1] * k[1];\n            c = Math.sqrt(cSquare);\n\n            // Calculate the ratios of the horizontal and vertical distance on the length of the chord\n            k[0] /= c;\n            k[1] /= c;\n\n            // Calculate the distance between the circle center and the chord midpoint\n            // using this formula: t = sqrt(r^2 - c^2 / 4)\n            // where t is the distance between the cirle center and the chord midpoint,\n            //       r is the rayon of the circle and c is the chord length\n            // From: http://www.ajdesigner.com/phpcircle/circle_segment_chord_t.php\n            // Because of the imprecision of floating point numbers, cSquare might end\n            // up being slightly above 4 which would result in a negative radicand\n            // To prevent that, a test is made before computing the square root\n            t = (cSquare < 4) ? Math.sqrt(1 - cSquare / 4) : 0;\n\n            // For most situations, there are actually two different ellipses that\n            // satisfy the constraints imposed by the points A and B, the radii rx and ry,\n            // and the xAxisRotation\n            // When the flags largeArcFlag and sweepFlag are equal, it means that the\n            // second ellipse is used as a solution\n            // See: https://www.w3.org/TR/SVG/paths.html#PathDataEllipticalArcCommands\n            if (largeArcFlag === sweepFlag) {\n                t *= -1;\n            }\n\n            // Calculate the coordinates of the center of the circle from the midpoint of the chord\n            // This is done by multiplying the ratios calculated previously by the distance between\n            // the circle center and the chord midpoint and using these values to go from the midpoint\n            // to the center of the circle\n            // The negative of the vertical distance ratio is used to modify the x coordinate while\n            // the horizontal distance ratio is used to modify the y coordinate\n            // That is because the center of the circle is perpendicular to the chord and perpendicular\n            // lines are negative reciprocals\n            O = new SVG.Point((B.x + A.x) / 2 + t * -k[1], (B.y + A.y) / 2 + t * k[0]);\n            // Move the center of the circle at the origin\n            OA = new SVG.Point(A.x - O.x, A.y - O.y);\n            OB = new SVG.Point(B.x - O.x, B.y - O.y);\n\n            // Calculate the start and end angle\n            tetaStart = Math.acos(OA.x / Math.sqrt(OA.x * OA.x + OA.y * OA.y));\n            if (OA.y < 0) {\n                tetaStart *= -1;\n            }\n            tetaEnd = Math.acos(OB.x / Math.sqrt(OB.x * OB.x + OB.y * OB.y));\n            if (OB.y < 0) {\n                tetaEnd *= -1;\n            }\n\n            // If sweep-flag is '1', then the arc will be drawn in a \"positive-angle\" direction,\n            // make sure that the end angle is above the start angle\n            if (sweepFlag && tetaStart > tetaEnd) {\n                tetaEnd += 2 * Math.PI;\n            }\n            // If sweep-flag is '0', then the arc will be drawn in a \"negative-angle\" direction,\n            // make sure that the end angle is below the start angle\n            if (!sweepFlag && tetaStart < tetaEnd) {\n                tetaEnd -= 2 * Math.PI;\n            }\n\n            // Find the number of Bezier curves that are required to represent the arc\n            // A cubic Bezier curve gives a good enough approximation when representing at most a quarter of a circle\n            nbSectors = Math.ceil(Math.abs(tetaStart - tetaEnd) * 2 / Math.PI);\n\n            // Calculate the coordinates of the points of all the Bezier curves required to represent the arc\n            // For an in-depth explanation of this part see: http://pomax.github.io/bezierinfo/#circles_cubic\n            arcSegPoints = [];\n            angle = tetaStart;\n            deltaTeta = (tetaEnd - tetaStart) / nbSectors;\n            f = 4 * Math.tan(deltaTeta / 4) / 3;\n            for (i = 0; i <= nbSectors; i++) { // The <= is because a Bezier curve have a start and a endpoint\n                cosAngle = Math.cos(angle);\n                sinAngle = Math.sin(angle);\n\n                pt = new SVG.Point(O.x + cosAngle, O.y + sinAngle);\n                arcSegPoints[i] = [new SVG.Point(pt.x + f * sinAngle, pt.y - f * cosAngle), pt, new SVG.Point(pt.x - f * sinAngle, pt.y + f * cosAngle)];\n\n                angle += deltaTeta;\n            }\n\n            // Remove the first control point of the first segment point and remove the second control point of the last segment point\n            // These two control points are not used in the approximation of the arc, that is why they are removed\n            arcSegPoints[0][0] = arcSegPoints[0][1].clone();\n            arcSegPoints[arcSegPoints.length - 1][2] = arcSegPoints[arcSegPoints.length - 1][1].clone();\n\n            // Revert the transformation that was applied to make the arc part of a unit circle instead of an ellipse\n            mat = new SVG.Matrix().rotate(xAxisRotation).scale(rx, ry).rotate(-xAxisRotation);\n            for (i = 0, il = arcSegPoints.length; i < il; i++) {\n                arcSegPoints[i][0] = arcSegPoints[i][0].transform(mat);\n                arcSegPoints[i][1] = arcSegPoints[i][1].transform(mat);\n                arcSegPoints[i][2] = arcSegPoints[i][2].transform(mat);\n            }\n\n\n            // Convert the segments points to SVG curve commands\n            for (i = 1, il = arcSegPoints.length; i < il; i++) {\n                pt = arcSegPoints[i - 1][2];\n                x1 = pt.x;\n                y1 = pt.y;\n\n                pt = arcSegPoints[i][0];\n                x2 = pt.x;\n                y2 = pt.y;\n\n                pt = arcSegPoints[i][1];\n                x = pt.x;\n                y = pt.y;\n\n                retVal.push(['C', x1, y1, x2, y2, x, y]);\n            }\n\n            return retVal\n        }\n    }());\n\n    /*! svg.draggable.js - v2.2.2 - 2019-01-08\n     * https://github.com/svgdotjs/svg.draggable.js\n     * Copyright (c) 2019 Wout Fierens; Licensed MIT */\n    (function() {\n\n        // creates handler, saves it\n        function DragHandler(el) {\n            el.remember('_draggable', this);\n            this.el = el;\n        }\n\n\n        // Sets new parameter, starts dragging\n        DragHandler.prototype.init = function(constraint, val) {\n            var _this = this;\n            this.constraint = constraint;\n            this.value = val;\n            this.el.on('mousedown.drag', function(e) { _this.start(e); });\n            this.el.on('touchstart.drag', function(e) { _this.start(e); });\n        };\n\n        // transforms one point from screen to user coords\n        DragHandler.prototype.transformPoint = function(event, offset) {\n            event = event || window.event;\n            var touches = event.changedTouches && event.changedTouches[0] || event;\n            this.p.x = touches.clientX - (offset || 0);\n            this.p.y = touches.clientY;\n            return this.p.matrixTransform(this.m)\n        };\n\n        // gets elements bounding box with special handling of groups, nested and use\n        DragHandler.prototype.getBBox = function() {\n\n            var box = this.el.bbox();\n\n            if (this.el instanceof SVG.Nested) box = this.el.rbox();\n\n            if (this.el instanceof SVG.G || this.el instanceof SVG.Use || this.el instanceof SVG.Nested) {\n                box.x = this.el.x();\n                box.y = this.el.y();\n            }\n\n            return box\n        };\n\n        // start dragging\n        DragHandler.prototype.start = function(e) {\n\n            // check for left button\n            if (e.type == 'click' || e.type == 'mousedown' || e.type == 'mousemove') {\n                if ((e.which || e.buttons) != 1) {\n                    return\n                }\n            }\n\n            var _this = this;\n\n            // fire beforedrag event\n            this.el.fire('beforedrag', { event: e, handler: this });\n            if (this.el.event().defaultPrevented) return;\n\n            // prevent browser drag behavior as soon as possible\n            e.preventDefault();\n\n            // prevent propagation to a parent that might also have dragging enabled\n            e.stopPropagation();\n\n            // search for parent on the fly to make sure we can call\n            // draggable() even when element is not in the dom currently\n            this.parent = this.parent || this.el.parent(SVG.Nested) || this.el.parent(SVG.Doc);\n            this.p = this.parent.node.createSVGPoint();\n\n            // save current transformation matrix\n            this.m = this.el.node.getScreenCTM().inverse();\n\n            var box = this.getBBox();\n\n            var anchorOffset;\n\n            // fix text-anchor in text-element (#37)\n            if (this.el instanceof SVG.Text) {\n                anchorOffset = this.el.node.getComputedTextLength();\n\n                switch (this.el.attr('text-anchor')) {\n                    case 'middle':\n                        anchorOffset /= 2;\n                        break\n                    case 'start':\n                        anchorOffset = 0;\n                        break;\n                }\n            }\n\n            this.startPoints = {\n                // We take absolute coordinates since we are just using a delta here\n                point: this.transformPoint(e, anchorOffset),\n                box: box,\n                transform: this.el.transform()\n            };\n\n            // add drag and end events to window\n            SVG.on(window, 'mousemove.drag', function(e) { _this.drag(e); });\n            SVG.on(window, 'touchmove.drag', function(e) { _this.drag(e); });\n            SVG.on(window, 'mouseup.drag', function(e) { _this.end(e); });\n            SVG.on(window, 'touchend.drag', function(e) { _this.end(e); });\n\n            // fire dragstart event\n            this.el.fire('dragstart', { event: e, p: this.startPoints.point, m: this.m, handler: this });\n        };\n\n        // while dragging\n        DragHandler.prototype.drag = function(e) {\n\n            var box = this.getBBox(),\n                p = this.transformPoint(e),\n                x = this.startPoints.box.x + p.x - this.startPoints.point.x,\n                y = this.startPoints.box.y + p.y - this.startPoints.point.y,\n                c = this.constraint,\n                gx = p.x - this.startPoints.point.x,\n                gy = p.y - this.startPoints.point.y;\n\n            this.el.fire('dragmove', {\n                event: e,\n                p: p,\n                m: this.m,\n                handler: this\n            });\n\n            if (this.el.event().defaultPrevented) return p\n\n            // move the element to its new position, if possible by constraint\n            if (typeof c == 'function') {\n\n                var coord = c.call(this.el, x, y, this.m);\n\n                // bool, just show us if movement is allowed or not\n                if (typeof coord == 'boolean') {\n                    coord = {\n                        x: coord,\n                        y: coord\n                    };\n                }\n\n                // if true, we just move. If !false its a number and we move it there\n                if (coord.x === true) {\n                    this.el.x(x);\n                } else if (coord.x !== false) {\n                    this.el.x(coord.x);\n                }\n\n                if (coord.y === true) {\n                    this.el.y(y);\n                } else if (coord.y !== false) {\n                    this.el.y(coord.y);\n                }\n\n            } else if (typeof c == 'object') {\n\n                // keep element within constrained box\n                if (c.minX != null && x < c.minX) {\n                    x = c.minX;\n                    gx = x - this.startPoints.box.x;\n                } else if (c.maxX != null && x > c.maxX - box.width) {\n                    x = c.maxX - box.width;\n                    gx = x - this.startPoints.box.x;\n                }\n                if (c.minY != null && y < c.minY) {\n                    y = c.minY;\n                    gy = y - this.startPoints.box.y;\n                } else if (c.maxY != null && y > c.maxY - box.height) {\n                    y = c.maxY - box.height;\n                    gy = y - this.startPoints.box.y;\n                }\n\n                if (c.snapToGrid != null) {\n                    x = x - (x % c.snapToGrid);\n                    y = y - (y % c.snapToGrid);\n                    gx = gx - (gx % c.snapToGrid);\n                    gy = gy - (gy % c.snapToGrid);\n                }\n\n                if (this.el instanceof SVG.G)\n                    this.el.matrix(this.startPoints.transform).transform({ x: gx, y: gy }, true);\n                else\n                    this.el.move(x, y);\n            }\n\n            // so we can use it in the end-method, too\n            return p\n        };\n\n        DragHandler.prototype.end = function(e) {\n\n            // final drag\n            var p = this.drag(e);\n\n            // fire dragend event\n            this.el.fire('dragend', { event: e, p: p, m: this.m, handler: this });\n\n            // unbind events\n            SVG.off(window, 'mousemove.drag');\n            SVG.off(window, 'touchmove.drag');\n            SVG.off(window, 'mouseup.drag');\n            SVG.off(window, 'touchend.drag');\n\n        };\n\n        SVG.extend(SVG.Element, {\n            // Make element draggable\n            // Constraint might be an object (as described in readme.md) or a function in the form \"function (x, y)\" that gets called before every move.\n            // The function can return a boolean or an object of the form {x, y}, to which the element will be moved. \"False\" skips moving, true moves to raw x, y.\n            draggable: function(value, constraint) {\n\n                // Check the parameters and reassign if needed\n                if (typeof value == 'function' || typeof value == 'object') {\n                    constraint = value;\n                    value = true;\n                }\n\n                var dragHandler = this.remember('_draggable') || new DragHandler(this);\n\n                // When no parameter is given, value is true\n                value = typeof value === 'undefined' ? true : value;\n\n                if (value) dragHandler.init(constraint || {}, value);\n                else {\n                    this.off('mousedown.drag');\n                    this.off('touchstart.drag');\n                }\n\n                return this\n            }\n\n        });\n\n    }).call(undefined);\n\n    (function() {\n\n        function SelectHandler(el) {\n\n            this.el = el;\n            el.remember('_selectHandler', this);\n            this.pointSelection = { isSelected: false };\n            this.rectSelection = { isSelected: false };\n\n            // helper list with position settings of each type of point\n            this.pointsList = {\n                lt: [0, 0],\n                rt: ['width', 0],\n                rb: ['width', 'height'],\n                lb: [0, 'height'],\n                t: ['width', 0],\n                r: ['width', 'height'],\n                b: ['width', 'height'],\n                l: [0, 'height']\n            };\n\n            // helper function to get point coordinates based on settings above and an object (bbox in our case)\n            this.pointCoord = function(setting, object, isPointCentered) {\n                var coord = typeof setting !== 'string' ? setting : object[setting];\n                // Top, bottom, right and left points are placed in the center of element width/height\n                return isPointCentered ? coord / 2 : coord\n            };\n\n            this.pointCoords = function(point, object) {\n                var settings = this.pointsList[point];\n\n                return {\n                    x: this.pointCoord(settings[0], object, (point === 't' || point === 'b')),\n                    y: this.pointCoord(settings[1], object, (point === 'r' || point === 'l'))\n                }\n            };\n        }\n\n        SelectHandler.prototype.init = function(value, options) {\n\n            var bbox = this.el.bbox();\n            this.options = {};\n\n            // store defaults list of points in order to verify users config\n            var points = this.el.selectize.defaults.points;\n\n            // Merging the defaults and the options-object together\n            for (var i in this.el.selectize.defaults) {\n                this.options[i] = this.el.selectize.defaults[i];\n                if (options[i] !== undefined) {\n                    this.options[i] = options[i];\n                }\n            }\n\n            // prepare & validate list of points to be added (or excluded)\n            var pointsLists = ['points', 'pointsExclude'];\n\n            for (var i in pointsLists) {\n                var option = this.options[pointsLists[i]];\n\n                if (typeof option === 'string') {\n                    if (option.length > 0) {\n                        // if set as comma separated string list => convert it into an array\n                        option = option.split(/\\s*,\\s*/i);\n                    } else {\n                        option = [];\n                    }\n                } else if (typeof option === 'boolean' && pointsLists[i] === 'points') {\n                    // this is not needed, but let's have it for legacy support\n                    option = option ? points : [];\n                }\n\n                this.options[pointsLists[i]] = option;\n            }\n\n            // intersect correct all points options with users config (exclude unwanted points)\n            // ES5 -> NO arrow functions nor Array.includes()\n            this.options.points = [points, this.options.points].reduce(\n                function(a, b) {\n                    return a.filter(\n                        function(c) {\n                            return b.indexOf(c) > -1;\n                        }\n                    )\n                }\n            );\n\n            // exclude pointsExclude, if wanted\n            this.options.points = [this.options.points, this.options.pointsExclude].reduce(\n                function(a, b) {\n                    return a.filter(\n                        function(c) {\n                            return b.indexOf(c) < 0;\n                        }\n                    )\n                }\n            );\n\n            this.parent = this.el.parent();\n            this.nested = (this.nested || this.parent.group());\n            this.nested.matrix(new SVG.Matrix(this.el).translate(bbox.x, bbox.y));\n\n            // When deepSelect is enabled and the element is a line/polyline/polygon, draw only points for moving\n            if (this.options.deepSelect && ['line', 'polyline', 'polygon'].indexOf(this.el.type) !== -1) {\n                this.selectPoints(value);\n            } else {\n                this.selectRect(value);\n            }\n\n            this.observe();\n            this.cleanup();\n\n        };\n\n        SelectHandler.prototype.selectPoints = function(value) {\n\n            this.pointSelection.isSelected = value;\n\n            // When set is already there we dont have to create one\n            if (this.pointSelection.set) {\n                return this;\n            }\n\n            // Create our set of elements\n            this.pointSelection.set = this.parent.set();\n            // draw the points and mark the element as selected\n            this.drawPoints();\n\n            return this;\n\n        };\n\n        // create the point-array which contains the 2 points of a line or simply the points-array of polyline/polygon\n        SelectHandler.prototype.getPointArray = function() {\n            var bbox = this.el.bbox();\n\n            return this.el.array().valueOf().map(function(el) {\n                return [el[0] - bbox.x, el[1] - bbox.y];\n            });\n        };\n\n        // Draws a points\n        SelectHandler.prototype.drawPoints = function() {\n\n            var _this = this,\n                array = this.getPointArray();\n\n            // go through the array of points\n            for (var i = 0, len = array.length; i < len; ++i) {\n\n                var curriedEvent = (function(k) {\n                    return function(ev) {\n                        ev = ev || window.event;\n                        ev.preventDefault ? ev.preventDefault() : ev.returnValue = false;\n                        ev.stopPropagation();\n\n                        var x = ev.pageX || ev.touches[0].pageX;\n                        var y = ev.pageY || ev.touches[0].pageY;\n                        _this.el.fire('point', { x: x, y: y, i: k, event: ev });\n                    };\n                })(i);\n\n                // add every point to the set\n                // add css-classes and a touchstart-event which fires our event for moving points\n                var point = this.drawPoint(array[i][0], array[i][1])\n                    .addClass(this.options.classPoints)\n                    .addClass(this.options.classPoints + '_point')\n                    .on('touchstart', curriedEvent)\n                    .on('mousedown', curriedEvent);\n                this.pointSelection.set.add(point);\n            }\n        };\n\n        // The function to draw single point\n        SelectHandler.prototype.drawPoint = function(cx, cy) {\n            var pointType = this.options.pointType;\n\n            switch (pointType) {\n                case 'circle':\n                    return this.drawCircle(cx, cy);\n                case 'rect':\n                    return this.drawRect(cx, cy);\n                default:\n                    if (typeof pointType === 'function') {\n                        return pointType.call(this, cx, cy);\n                    }\n\n                    throw new Error('Unknown ' + pointType + ' point type!');\n            }\n        };\n\n        // The function to draw the circle point\n        SelectHandler.prototype.drawCircle = function(cx, cy) {\n            return this.nested.circle(this.options.pointSize)\n                .center(cx, cy);\n        };\n\n        // The function to draw the rect point\n        SelectHandler.prototype.drawRect = function(cx, cy) {\n            return this.nested.rect(this.options.pointSize, this.options.pointSize)\n                .center(cx, cy);\n        };\n\n        // every time a point is moved, we have to update the positions of our point\n        SelectHandler.prototype.updatePointSelection = function() {\n            var array = this.getPointArray();\n\n            this.pointSelection.set.each(function(i) {\n                if (this.cx() === array[i][0] && this.cy() === array[i][1]) {\n                    return;\n                }\n                this.center(array[i][0], array[i][1]);\n            });\n        };\n\n        SelectHandler.prototype.updateRectSelection = function() {\n            var _this = this,\n                bbox = this.el.bbox();\n\n            this.rectSelection.set.get(0).attr({\n                width: bbox.width,\n                height: bbox.height\n            });\n\n            // set.get(1) is always in the upper left corner. no need to move it\n            if (this.options.points.length) {\n                this.options.points.map(function(point, index) {\n                    var coords = _this.pointCoords(point, bbox);\n\n                    _this.rectSelection.set.get(index + 1).center(coords.x, coords.y);\n                });\n            }\n\n            if (this.options.rotationPoint) {\n                var length = this.rectSelection.set.length();\n\n                this.rectSelection.set.get(length - 1).center(bbox.width / 2, 20);\n            }\n        };\n\n        SelectHandler.prototype.selectRect = function(value) {\n\n            var _this = this,\n                bbox = this.el.bbox();\n\n            this.rectSelection.isSelected = value;\n\n            // when set is already p\n            this.rectSelection.set = this.rectSelection.set || this.parent.set();\n\n            // helperFunction to create a mouse-down function which triggers the event specified in `eventName`\n            function getMoseDownFunc(eventName) {\n                return function(ev) {\n                    ev = ev || window.event;\n                    ev.preventDefault ? ev.preventDefault() : ev.returnValue = false;\n                    ev.stopPropagation();\n\n                    var x = ev.pageX || ev.touches[0].pageX;\n                    var y = ev.pageY || ev.touches[0].pageY;\n                    _this.el.fire(eventName, { x: x, y: y, event: ev });\n                };\n            }\n\n            // create the selection-rectangle and add the css-class\n            if (!this.rectSelection.set.get(0)) {\n                this.rectSelection.set.add(this.nested.rect(bbox.width, bbox.height).addClass(this.options.classRect));\n            }\n\n            // Draw Points at the edges, if enabled\n            if (this.options.points.length && this.rectSelection.set.length() < 2) {\n                var ename = \"touchstart\",\n                    mname = \"mousedown\";\n\n                this.options.points.map(function(point, index) {\n                    var coords = _this.pointCoords(point, bbox);\n\n                    var pointElement = _this.drawPoint(coords.x, coords.y)\n                        .attr('class', _this.options.classPoints + '_' + point)\n                        .on(mname, getMoseDownFunc(point))\n                        .on(ename, getMoseDownFunc(point));\n                    _this.rectSelection.set.add(pointElement);\n                });\n\n                this.rectSelection.set.each(function() {\n                    this.addClass(_this.options.classPoints);\n                });\n            }\n\n            // draw rotationPint, if enabled\n            if (this.options.rotationPoint && ((this.options.points && !this.rectSelection.set.get(9)) || (!this.options.points && !this.rectSelection.set.get(1)))) {\n\n                var curriedEvent = function(ev) {\n                    ev = ev || window.event;\n                    ev.preventDefault ? ev.preventDefault() : ev.returnValue = false;\n                    ev.stopPropagation();\n\n                    var x = ev.pageX || ev.touches[0].pageX;\n                    var y = ev.pageY || ev.touches[0].pageY;\n                    _this.el.fire('rot', { x: x, y: y, event: ev });\n                };\n\n                var pointElement = this.drawPoint(bbox.width / 2, 20)\n                    .attr('class', this.options.classPoints + '_rot')\n                    .on(\"touchstart\", curriedEvent)\n                    .on(\"mousedown\", curriedEvent);\n                this.rectSelection.set.add(pointElement);\n            }\n\n        };\n\n        SelectHandler.prototype.handler = function() {\n\n            var bbox = this.el.bbox();\n            this.nested.matrix(new SVG.Matrix(this.el).translate(bbox.x, bbox.y));\n\n            if (this.rectSelection.isSelected) {\n                this.updateRectSelection();\n            }\n\n            if (this.pointSelection.isSelected) {\n                this.updatePointSelection();\n            }\n\n        };\n\n        SelectHandler.prototype.observe = function() {\n            var _this = this;\n\n            if (MutationObserver) {\n                if (this.rectSelection.isSelected || this.pointSelection.isSelected) {\n                    this.observerInst = this.observerInst || new MutationObserver(function() {\n                        _this.handler();\n                    });\n                    this.observerInst.observe(this.el.node, { attributes: true });\n                } else {\n                    try {\n                        this.observerInst.disconnect();\n                        delete this.observerInst;\n                    } catch (e) {}\n                }\n            } else {\n                this.el.off('DOMAttrModified.select');\n\n                if (this.rectSelection.isSelected || this.pointSelection.isSelected) {\n                    this.el.on('DOMAttrModified.select', function() {\n                        _this.handler();\n                    });\n                }\n            }\n        };\n\n        SelectHandler.prototype.cleanup = function() {\n\n            //var _this = this;\n\n            if (!this.rectSelection.isSelected && this.rectSelection.set) {\n                // stop watching the element, remove the selection\n                this.rectSelection.set.each(function() {\n                    this.remove();\n                });\n\n                this.rectSelection.set.clear();\n                delete this.rectSelection.set;\n            }\n\n            if (!this.pointSelection.isSelected && this.pointSelection.set) {\n                // Remove all points, clear the set, stop watching the element\n                this.pointSelection.set.each(function() {\n                    this.remove();\n                });\n\n                this.pointSelection.set.clear();\n                delete this.pointSelection.set;\n            }\n\n            if (!this.pointSelection.isSelected && !this.rectSelection.isSelected) {\n                this.nested.remove();\n                delete this.nested;\n\n            }\n        };\n\n\n        SVG.extend(SVG.Element, {\n            // Select element with mouse\n            selectize: function(value, options) {\n\n                // Check the parameters and reassign if needed\n                if (typeof value === 'object') {\n                    options = value;\n                    value = true;\n                }\n\n                var selectHandler = this.remember('_selectHandler') || new SelectHandler(this);\n\n                selectHandler.init(value === undefined ? true : value, options || {});\n\n                return this;\n\n            }\n        });\n\n        SVG.Element.prototype.selectize.defaults = {\n            points: ['lt', 'rt', 'rb', 'lb', 't', 'r', 'b', 'l'], // which points to draw, default all\n            pointsExclude: [], // easier option if to exclude few than rewrite all\n            classRect: 'svg_select_boundingRect', // Css-class added to the rect\n            classPoints: 'svg_select_points', // Css-class added to the points\n            pointSize: 7, // size of point\n            rotationPoint: true, // If true, rotation point is drawn. Needed for rotation!\n            deepSelect: false, // If true, moving of single points is possible (only line, polyline, polyon)\n            pointType: 'circle' // Point type: circle or rect, default circle\n        };\n    }());\n\n    (function() {\n        (function() {\n\n            function ResizeHandler(el) {\n\n                el.remember('_resizeHandler', this);\n\n                this.el = el;\n                this.parameters = {};\n                this.lastUpdateCall = null;\n                this.p = el.doc().node.createSVGPoint();\n            }\n\n            ResizeHandler.prototype.transformPoint = function(x, y, m) {\n\n                this.p.x = x - (this.offset.x - window.pageXOffset);\n                this.p.y = y - (this.offset.y - window.pageYOffset);\n\n                return this.p.matrixTransform(m || this.m);\n\n            };\n\n            ResizeHandler.prototype._extractPosition = function(event) {\n                // Extract a position from a mouse/touch event.\n                // Returns { x: .., y: .. }\n                return {\n                    x: event.clientX != null ? event.clientX : event.touches[0].clientX,\n                    y: event.clientY != null ? event.clientY : event.touches[0].clientY\n                }\n            };\n\n            ResizeHandler.prototype.init = function(options) {\n\n                var _this = this;\n\n                this.stop();\n\n                if (options === 'stop') {\n                    return;\n                }\n\n                this.options = {};\n\n                // Merge options and defaults\n                for (var i in this.el.resize.defaults) {\n                    this.options[i] = this.el.resize.defaults[i];\n                    if (typeof options[i] !== 'undefined') {\n                        this.options[i] = options[i];\n                    }\n                }\n\n                // We listen to all these events which are specifying different edges\n                this.el.on('lt.resize', function(e) { _this.resize(e || window.event); }); // Left-Top\n                this.el.on('rt.resize', function(e) { _this.resize(e || window.event); }); // Right-Top\n                this.el.on('rb.resize', function(e) { _this.resize(e || window.event); }); // Right-Bottom\n                this.el.on('lb.resize', function(e) { _this.resize(e || window.event); }); // Left-Bottom\n\n                this.el.on('t.resize', function(e) { _this.resize(e || window.event); }); // Top\n                this.el.on('r.resize', function(e) { _this.resize(e || window.event); }); // Right\n                this.el.on('b.resize', function(e) { _this.resize(e || window.event); }); // Bottom\n                this.el.on('l.resize', function(e) { _this.resize(e || window.event); }); // Left\n\n                this.el.on('rot.resize', function(e) { _this.resize(e || window.event); }); // Rotation\n\n                this.el.on('point.resize', function(e) { _this.resize(e || window.event); }); // Point-Moving\n\n                // This call ensures, that the plugin reacts to a change of snapToGrid immediately\n                this.update();\n\n            };\n\n            ResizeHandler.prototype.stop = function() {\n                this.el.off('lt.resize');\n                this.el.off('rt.resize');\n                this.el.off('rb.resize');\n                this.el.off('lb.resize');\n\n                this.el.off('t.resize');\n                this.el.off('r.resize');\n                this.el.off('b.resize');\n                this.el.off('l.resize');\n\n                this.el.off('rot.resize');\n\n                this.el.off('point.resize');\n\n                return this;\n            };\n\n            ResizeHandler.prototype.resize = function(event) {\n\n                var _this = this;\n\n                this.m = this.el.node.getScreenCTM().inverse();\n                this.offset = { x: window.pageXOffset, y: window.pageYOffset };\n\n                var txPt = this._extractPosition(event.detail.event);\n                this.parameters = {\n                    type: this.el.type, // the type of element\n                    p: this.transformPoint(txPt.x, txPt.y),\n                    x: event.detail.x, // x-position of the mouse when resizing started\n                    y: event.detail.y, // y-position of the mouse when resizing started\n                    box: this.el.bbox(), // The bounding-box of the element\n                    rotation: this.el.transform().rotation // The current rotation of the element\n                };\n\n                // Add font-size parameter if the element type is text\n                if (this.el.type === \"text\") {\n                    this.parameters.fontSize = this.el.attr()[\"font-size\"];\n                }\n\n                // the i-param in the event holds the index of the point which is moved, when using `deepSelect`\n                if (event.detail.i !== undefined) {\n\n                    // get the point array\n                    var array = this.el.array().valueOf();\n\n                    // Save the index and the point which is moved\n                    this.parameters.i = event.detail.i;\n                    this.parameters.pointCoords = [array[event.detail.i][0], array[event.detail.i][1]];\n                }\n\n                // Lets check which edge of the bounding-box was clicked and resize the this.el according to this\n                switch (event.type) {\n\n                    // Left-Top-Edge\n                    case 'lt':\n                        // We build a calculating function for every case which gives us the new position of the this.el\n                        this.calc = function(diffX, diffY) {\n                            // The procedure is always the same\n                            // First we snap the edge to the given grid (snapping to 1px grid is normal resizing)\n                            var snap = this.snapToGrid(diffX, diffY);\n\n                            // Now we check if the new height and width still valid (> 0)\n                            if (this.parameters.box.width - snap[0] > 0 && this.parameters.box.height - snap[1] > 0) {\n                                // ...if valid, we resize the this.el (which can include moving because the coord-system starts at the left-top and this edge is moving sometimes when resized)\n\n                                /*\n                                 * but first check if the element is text box, so we can change the font size instead of\n                                 * the width and height\n                                 */\n\n                                if (this.parameters.type === \"text\") {\n                                    this.el.move(this.parameters.box.x + snap[0], this.parameters.box.y);\n                                    this.el.attr(\"font-size\", this.parameters.fontSize - snap[0]);\n                                    return;\n                                }\n\n                                snap = this.checkAspectRatio(snap);\n\n                                this.el.move(this.parameters.box.x + snap[0], this.parameters.box.y + snap[1]).size(this.parameters.box.width - snap[0], this.parameters.box.height - snap[1]);\n                            }\n                        };\n                        break;\n\n                        // Right-Top\n                    case 'rt':\n                        // s.a.\n                        this.calc = function(diffX, diffY) {\n                            var snap = this.snapToGrid(diffX, diffY, 1 << 1);\n                            if (this.parameters.box.width + snap[0] > 0 && this.parameters.box.height - snap[1] > 0) {\n                                if (this.parameters.type === \"text\") {\n                                    this.el.move(this.parameters.box.x - snap[0], this.parameters.box.y);\n                                    this.el.attr(\"font-size\", this.parameters.fontSize + snap[0]);\n                                    return;\n                                }\n\n                                snap = this.checkAspectRatio(snap, true);\n\n                                this.el.move(this.parameters.box.x, this.parameters.box.y + snap[1]).size(this.parameters.box.width + snap[0], this.parameters.box.height - snap[1]);\n                            }\n                        };\n                        break;\n\n                        // Right-Bottom\n                    case 'rb':\n                        // s.a.\n                        this.calc = function(diffX, diffY) {\n                            var snap = this.snapToGrid(diffX, diffY, 0);\n                            if (this.parameters.box.width + snap[0] > 0 && this.parameters.box.height + snap[1] > 0) {\n                                if (this.parameters.type === \"text\") {\n                                    this.el.move(this.parameters.box.x - snap[0], this.parameters.box.y);\n                                    this.el.attr(\"font-size\", this.parameters.fontSize + snap[0]);\n                                    return;\n                                }\n\n                                snap = this.checkAspectRatio(snap);\n\n                                this.el.move(this.parameters.box.x, this.parameters.box.y).size(this.parameters.box.width + snap[0], this.parameters.box.height + snap[1]);\n                            }\n                        };\n                        break;\n\n                        // Left-Bottom\n                    case 'lb':\n                        // s.a.\n                        this.calc = function(diffX, diffY) {\n                            var snap = this.snapToGrid(diffX, diffY, 1);\n                            if (this.parameters.box.width - snap[0] > 0 && this.parameters.box.height + snap[1] > 0) {\n                                if (this.parameters.type === \"text\") {\n                                    this.el.move(this.parameters.box.x + snap[0], this.parameters.box.y);\n                                    this.el.attr(\"font-size\", this.parameters.fontSize - snap[0]);\n                                    return;\n                                }\n\n                                snap = this.checkAspectRatio(snap, true);\n\n                                this.el.move(this.parameters.box.x + snap[0], this.parameters.box.y).size(this.parameters.box.width - snap[0], this.parameters.box.height + snap[1]);\n                            }\n                        };\n                        break;\n\n                        // Top\n                    case 't':\n                        // s.a.\n                        this.calc = function(diffX, diffY) {\n                            var snap = this.snapToGrid(diffX, diffY, 1 << 1);\n                            if (this.parameters.box.height - snap[1] > 0) {\n                                // Disable the font-resizing if it is not from the corner of bounding-box\n                                if (this.parameters.type === \"text\") {\n                                    return;\n                                }\n\n                                this.el.move(this.parameters.box.x, this.parameters.box.y + snap[1]).height(this.parameters.box.height - snap[1]);\n                            }\n                        };\n                        break;\n\n                        // Right\n                    case 'r':\n                        // s.a.\n                        this.calc = function(diffX, diffY) {\n                            var snap = this.snapToGrid(diffX, diffY, 0);\n                            if (this.parameters.box.width + snap[0] > 0) {\n                                if (this.parameters.type === \"text\") {\n                                    return;\n                                }\n\n                                this.el.move(this.parameters.box.x, this.parameters.box.y).width(this.parameters.box.width + snap[0]);\n                            }\n                        };\n                        break;\n\n                        // Bottom\n                    case 'b':\n                        // s.a.\n                        this.calc = function(diffX, diffY) {\n                            var snap = this.snapToGrid(diffX, diffY, 0);\n                            if (this.parameters.box.height + snap[1] > 0) {\n                                if (this.parameters.type === \"text\") {\n                                    return;\n                                }\n\n                                this.el.move(this.parameters.box.x, this.parameters.box.y).height(this.parameters.box.height + snap[1]);\n                            }\n                        };\n                        break;\n\n                        // Left\n                    case 'l':\n                        // s.a.\n                        this.calc = function(diffX, diffY) {\n                            var snap = this.snapToGrid(diffX, diffY, 1);\n                            if (this.parameters.box.width - snap[0] > 0) {\n                                if (this.parameters.type === \"text\") {\n                                    return;\n                                }\n\n                                this.el.move(this.parameters.box.x + snap[0], this.parameters.box.y).width(this.parameters.box.width - snap[0]);\n                            }\n                        };\n                        break;\n\n                        // Rotation\n                    case 'rot':\n                        // s.a.\n                        this.calc = function(diffX, diffY) {\n\n                            // yes this is kinda stupid but we need the mouse coords back...\n                            var current = { x: diffX + this.parameters.p.x, y: diffY + this.parameters.p.y };\n\n                            // start minus middle\n                            var sAngle = Math.atan2((this.parameters.p.y - this.parameters.box.y - this.parameters.box.height / 2), (this.parameters.p.x - this.parameters.box.x - this.parameters.box.width / 2));\n\n                            // end minus middle\n                            var pAngle = Math.atan2((current.y - this.parameters.box.y - this.parameters.box.height / 2), (current.x - this.parameters.box.x - this.parameters.box.width / 2));\n\n                            var angle = this.parameters.rotation + (pAngle - sAngle) * 180 / Math.PI + this.options.snapToAngle / 2;\n\n                            // We have to move the element to the center of the box first and change the rotation afterwards\n                            // because rotation always works around a rotation-center, which is changed when moving the element\n                            // We also set the new rotation center to the center of the box.\n                            this.el.center(this.parameters.box.cx, this.parameters.box.cy).rotate(angle - (angle % this.options.snapToAngle), this.parameters.box.cx, this.parameters.box.cy);\n                        };\n                        break;\n\n                        // Moving one single Point (needed when an element is deepSelected which means you can move every single point of the object)\n                    case 'point':\n                        this.calc = function(diffX, diffY) {\n\n                            // Snapping the point to the grid\n                            var snap = this.snapToGrid(diffX, diffY, this.parameters.pointCoords[0], this.parameters.pointCoords[1]);\n\n                            // Get the point array\n                            var array = this.el.array().valueOf();\n\n                            // Changing the moved point in the array\n                            array[this.parameters.i][0] = this.parameters.pointCoords[0] + snap[0];\n                            array[this.parameters.i][1] = this.parameters.pointCoords[1] + snap[1];\n\n                            // And plot the new this.el\n                            this.el.plot(array);\n                        };\n                }\n\n                this.el.fire('resizestart', { dx: this.parameters.x, dy: this.parameters.y, event: event });\n                // When resizing started, we have to register events for...\n                // Touches.\n                SVG.on(window, 'touchmove.resize', function(e) {\n                    _this.update(e || window.event);\n                });\n                SVG.on(window, 'touchend.resize', function() {\n                    _this.done();\n                });\n                // Mouse.\n                SVG.on(window, 'mousemove.resize', function(e) {\n                    _this.update(e || window.event);\n                });\n                SVG.on(window, 'mouseup.resize', function() {\n                    _this.done();\n                });\n\n            };\n\n            // The update-function redraws the element every time the mouse is moving\n            ResizeHandler.prototype.update = function(event) {\n\n                if (!event) {\n                    if (this.lastUpdateCall) {\n                        this.calc(this.lastUpdateCall[0], this.lastUpdateCall[1]);\n                    }\n                    return;\n                }\n\n                // Calculate the difference between the mouseposition at start and now\n                var txPt = this._extractPosition(event);\n                var p = this.transformPoint(txPt.x, txPt.y);\n\n                var diffX = p.x - this.parameters.p.x,\n                    diffY = p.y - this.parameters.p.y;\n\n                this.lastUpdateCall = [diffX, diffY];\n\n                // Calculate the new position and height / width of the element\n                this.calc(diffX, diffY);\n\n                // Emit an event to say we have changed.\n                this.el.fire('resizing', { dx: diffX, dy: diffY, event: event });\n            };\n\n            // Is called on mouseup.\n            // Removes the update-function from the mousemove event\n            ResizeHandler.prototype.done = function() {\n                this.lastUpdateCall = null;\n                SVG.off(window, 'mousemove.resize');\n                SVG.off(window, 'mouseup.resize');\n                SVG.off(window, 'touchmove.resize');\n                SVG.off(window, 'touchend.resize');\n                this.el.fire('resizedone');\n            };\n\n            // The flag is used to determine whether the resizing is used with a left-Point (first bit) and top-point (second bit)\n            // In this cases the temp-values are calculated differently\n            ResizeHandler.prototype.snapToGrid = function(diffX, diffY, flag, pointCoordsY) {\n\n                var temp;\n\n                // If `pointCoordsY` is given, a single Point has to be snapped (deepSelect). That's why we need a different temp-value\n                if (typeof pointCoordsY !== 'undefined') {\n                    // Note that flag = pointCoordsX in this case\n                    temp = [(flag + diffX) % this.options.snapToGrid, (pointCoordsY + diffY) % this.options.snapToGrid];\n                } else {\n                    // We check if the flag is set and if not we set a default-value (both bits set - which means upper-left-edge)\n                    flag = flag == null ? 1 | 1 << 1 : flag;\n                    temp = [(this.parameters.box.x + diffX + (flag & 1 ? 0 : this.parameters.box.width)) % this.options.snapToGrid, (this.parameters.box.y + diffY + (flag & (1 << 1) ? 0 : this.parameters.box.height)) % this.options.snapToGrid];\n                }\n\n                if (diffX < 0) {\n                    temp[0] -= this.options.snapToGrid;\n                }\n                if (diffY < 0) {\n                    temp[1] -= this.options.snapToGrid;\n                }\n\n                diffX -= (Math.abs(temp[0]) < this.options.snapToGrid / 2 ?\n                    temp[0] :\n                    temp[0] - (diffX < 0 ? -this.options.snapToGrid : this.options.snapToGrid));\n                diffY -= (Math.abs(temp[1]) < this.options.snapToGrid / 2 ?\n                    temp[1] :\n                    temp[1] - (diffY < 0 ? -this.options.snapToGrid : this.options.snapToGrid));\n\n                return this.constraintToBox(diffX, diffY, flag, pointCoordsY);\n\n            };\n\n            // keep element within constrained box\n            ResizeHandler.prototype.constraintToBox = function(diffX, diffY, flag, pointCoordsY) {\n                //return [diffX, diffY]\n                var c = this.options.constraint || {};\n                var orgX, orgY;\n\n                if (typeof pointCoordsY !== 'undefined') {\n                    orgX = flag;\n                    orgY = pointCoordsY;\n                } else {\n                    orgX = this.parameters.box.x + (flag & 1 ? 0 : this.parameters.box.width);\n                    orgY = this.parameters.box.y + (flag & (1 << 1) ? 0 : this.parameters.box.height);\n                }\n\n                if (typeof c.minX !== 'undefined' && orgX + diffX < c.minX) {\n                    diffX = c.minX - orgX;\n                }\n\n                if (typeof c.maxX !== 'undefined' && orgX + diffX > c.maxX) {\n                    diffX = c.maxX - orgX;\n                }\n\n                if (typeof c.minY !== 'undefined' && orgY + diffY < c.minY) {\n                    diffY = c.minY - orgY;\n                }\n\n                if (typeof c.maxY !== 'undefined' && orgY + diffY > c.maxY) {\n                    diffY = c.maxY - orgY;\n                }\n\n                return [diffX, diffY];\n            };\n\n            ResizeHandler.prototype.checkAspectRatio = function(snap, isReverse) {\n                if (!this.options.saveAspectRatio) {\n                    return snap;\n                }\n\n                var updatedSnap = snap.slice();\n                var aspectRatio = this.parameters.box.width / this.parameters.box.height;\n                var newW = this.parameters.box.width + snap[0];\n                var newH = this.parameters.box.height - snap[1];\n                var newAspectRatio = newW / newH;\n\n                if (newAspectRatio < aspectRatio) {\n                    // Height is too big. Adapt it\n                    updatedSnap[1] = newW / aspectRatio - this.parameters.box.height;\n                    isReverse && (updatedSnap[1] = -updatedSnap[1]);\n                } else if (newAspectRatio > aspectRatio) {\n                    // Width is too big. Adapt it\n                    updatedSnap[0] = this.parameters.box.width - newH * aspectRatio;\n                    isReverse && (updatedSnap[0] = -updatedSnap[0]);\n                }\n\n                return updatedSnap;\n            };\n\n            SVG.extend(SVG.Element, {\n                // Resize element with mouse\n                resize: function(options) {\n\n                    (this.remember('_resizeHandler') || new ResizeHandler(this)).init(options || {});\n\n                    return this;\n\n                }\n\n            });\n\n            SVG.Element.prototype.resize.defaults = {\n                snapToAngle: 0.1, // Specifies the speed the rotation is happening when moving the mouse\n                snapToGrid: 1, // Snaps to a grid of `snapToGrid` Pixels\n                constraint: {}, // keep element within constrained box\n                saveAspectRatio: false // Save aspect ratio when resizing using lt, rt, rb or lb points\n            };\n\n        }).call(this);\n    }());\n\n    function styleInject(css, ref) {\n        if (ref === void 0) ref = {};\n        var insertAt = ref.insertAt;\n\n        if (!css || typeof document === 'undefined') { return; }\n\n        var head = document.head || document.getElementsByTagName('head')[0];\n        var style = document.createElement('style');\n        style.type = 'text/css';\n\n        if (insertAt === 'top') {\n            if (head.firstChild) {\n                head.insertBefore(style, head.firstChild);\n            } else {\n                head.appendChild(style);\n            }\n        } else {\n            head.appendChild(style);\n        }\n\n        if (style.styleSheet) {\n            style.styleSheet.cssText = css;\n        } else {\n            style.appendChild(document.createTextNode(css));\n        }\n    }\n\n    var css = \".apexcharts-canvas {\\n  position: relative;\\n  user-select: none;\\n  /* cannot give overflow: hidden as it will crop tooltips which overflow outside chart area */\\n}\\n\\n\\n/* scrollbar is not visible by default for legend, hence forcing the visibility */\\n.apexcharts-canvas ::-webkit-scrollbar {\\n  -webkit-appearance: none;\\n  width: 6px;\\n}\\n\\n.apexcharts-canvas ::-webkit-scrollbar-thumb {\\n  border-radius: 4px;\\n  background-color: rgba(0, 0, 0, .5);\\n  box-shadow: 0 0 1px rgba(255, 255, 255, .5);\\n  -webkit-box-shadow: 0 0 1px rgba(255, 255, 255, .5);\\n}\\n\\n\\n.apexcharts-inner {\\n  position: relative;\\n}\\n\\n.apexcharts-text tspan {\\n  font-family: inherit;\\n}\\n\\n.legend-mouseover-inactive {\\n  transition: 0.15s ease all;\\n  opacity: 0.20;\\n}\\n\\n.apexcharts-series-collapsed {\\n  opacity: 0;\\n}\\n\\n.apexcharts-tooltip {\\n  border-radius: 5px;\\n  box-shadow: 2px 2px 6px -4px #999;\\n  cursor: default;\\n  font-size: 14px;\\n  left: 62px;\\n  opacity: 0;\\n  pointer-events: none;\\n  position: absolute;\\n  top: 20px;\\n  display: flex;\\n  flex-direction: column;\\n  overflow: hidden;\\n  white-space: nowrap;\\n  z-index: 12;\\n  transition: 0.15s ease all;\\n}\\n\\n.apexcharts-tooltip.apexcharts-active {\\n  opacity: 1;\\n  transition: 0.15s ease all;\\n}\\n\\n.apexcharts-tooltip.apexcharts-theme-light {\\n  border: 1px solid #e3e3e3;\\n  background: rgba(255, 255, 255, 0.96);\\n}\\n\\n.apexcharts-tooltip.apexcharts-theme-dark {\\n  color: #fff;\\n  background: rgba(30, 30, 30, 0.8);\\n}\\n\\n.apexcharts-tooltip * {\\n  font-family: inherit;\\n}\\n\\n\\n.apexcharts-tooltip-title {\\n  padding: 6px;\\n  font-size: 15px;\\n  margin-bottom: 4px;\\n}\\n\\n.apexcharts-tooltip.apexcharts-theme-light .apexcharts-tooltip-title {\\n  background: #ECEFF1;\\n  border-bottom: 1px solid #ddd;\\n}\\n\\n.apexcharts-tooltip.apexcharts-theme-dark .apexcharts-tooltip-title {\\n  background: rgba(0, 0, 0, 0.7);\\n  border-bottom: 1px solid #333;\\n}\\n\\n.apexcharts-tooltip-text-y-value,\\n.apexcharts-tooltip-text-goals-value,\\n.apexcharts-tooltip-text-z-value {\\n  display: inline-block;\\n  font-weight: 600;\\n  margin-left: 5px;\\n}\\n\\n.apexcharts-tooltip-text-y-label:empty,\\n.apexcharts-tooltip-text-y-value:empty,\\n.apexcharts-tooltip-text-goals-label:empty,\\n.apexcharts-tooltip-text-goals-value:empty,\\n.apexcharts-tooltip-text-z-value:empty {\\n  display: none;\\n}\\n\\n.apexcharts-tooltip-text-y-value,\\n.apexcharts-tooltip-text-goals-value,\\n.apexcharts-tooltip-text-z-value {\\n  font-weight: 600;\\n}\\n\\n.apexcharts-tooltip-text-goals-label, \\n.apexcharts-tooltip-text-goals-value {\\n  padding: 6px 0 5px;\\n}\\n\\n.apexcharts-tooltip-goals-group, \\n.apexcharts-tooltip-text-goals-label, \\n.apexcharts-tooltip-text-goals-value {\\n  display: flex;\\n}\\n.apexcharts-tooltip-text-goals-label:not(:empty),\\n.apexcharts-tooltip-text-goals-value:not(:empty) {\\n  margin-top: -6px;\\n}\\n\\n.apexcharts-tooltip-marker {\\n  width: 12px;\\n  height: 12px;\\n  position: relative;\\n  top: 0px;\\n  margin-right: 10px;\\n  border-radius: 50%;\\n}\\n\\n.apexcharts-tooltip-series-group {\\n  padding: 0 10px;\\n  display: none;\\n  text-align: left;\\n  justify-content: left;\\n  align-items: center;\\n}\\n\\n.apexcharts-tooltip-series-group.apexcharts-active .apexcharts-tooltip-marker {\\n  opacity: 1;\\n}\\n\\n.apexcharts-tooltip-series-group.apexcharts-active,\\n.apexcharts-tooltip-series-group:last-child {\\n  padding-bottom: 4px;\\n}\\n\\n.apexcharts-tooltip-series-group-hidden {\\n  opacity: 0;\\n  height: 0;\\n  line-height: 0;\\n  padding: 0 !important;\\n}\\n\\n.apexcharts-tooltip-y-group {\\n  padding: 6px 0 5px;\\n}\\n\\n.apexcharts-tooltip-box, .apexcharts-custom-tooltip {\\n  padding: 4px 8px;\\n}\\n\\n.apexcharts-tooltip-boxPlot {\\n  display: flex;\\n  flex-direction: column-reverse;\\n}\\n\\n.apexcharts-tooltip-box>div {\\n  margin: 4px 0;\\n}\\n\\n.apexcharts-tooltip-box span.value {\\n  font-weight: bold;\\n}\\n\\n.apexcharts-tooltip-rangebar {\\n  padding: 5px 8px;\\n}\\n\\n.apexcharts-tooltip-rangebar .category {\\n  font-weight: 600;\\n  color: #777;\\n}\\n\\n.apexcharts-tooltip-rangebar .series-name {\\n  font-weight: bold;\\n  display: block;\\n  margin-bottom: 5px;\\n}\\n\\n.apexcharts-xaxistooltip {\\n  opacity: 0;\\n  padding: 9px 10px;\\n  pointer-events: none;\\n  color: #373d3f;\\n  font-size: 13px;\\n  text-align: center;\\n  border-radius: 2px;\\n  position: absolute;\\n  z-index: 10;\\n  background: #ECEFF1;\\n  border: 1px solid #90A4AE;\\n  transition: 0.15s ease all;\\n}\\n\\n.apexcharts-xaxistooltip.apexcharts-theme-dark {\\n  background: rgba(0, 0, 0, 0.7);\\n  border: 1px solid rgba(0, 0, 0, 0.5);\\n  color: #fff;\\n}\\n\\n.apexcharts-xaxistooltip:after,\\n.apexcharts-xaxistooltip:before {\\n  left: 50%;\\n  border: solid transparent;\\n  content: \\\" \\\";\\n  height: 0;\\n  width: 0;\\n  position: absolute;\\n  pointer-events: none;\\n}\\n\\n.apexcharts-xaxistooltip:after {\\n  border-color: rgba(236, 239, 241, 0);\\n  border-width: 6px;\\n  margin-left: -6px;\\n}\\n\\n.apexcharts-xaxistooltip:before {\\n  border-color: rgba(144, 164, 174, 0);\\n  border-width: 7px;\\n  margin-left: -7px;\\n}\\n\\n.apexcharts-xaxistooltip-bottom:after,\\n.apexcharts-xaxistooltip-bottom:before {\\n  bottom: 100%;\\n}\\n\\n.apexcharts-xaxistooltip-top:after,\\n.apexcharts-xaxistooltip-top:before {\\n  top: 100%;\\n}\\n\\n.apexcharts-xaxistooltip-bottom:after {\\n  border-bottom-color: #ECEFF1;\\n}\\n\\n.apexcharts-xaxistooltip-bottom:before {\\n  border-bottom-color: #90A4AE;\\n}\\n\\n.apexcharts-xaxistooltip-bottom.apexcharts-theme-dark:after {\\n  border-bottom-color: rgba(0, 0, 0, 0.5);\\n}\\n\\n.apexcharts-xaxistooltip-bottom.apexcharts-theme-dark:before {\\n  border-bottom-color: rgba(0, 0, 0, 0.5);\\n}\\n\\n.apexcharts-xaxistooltip-top:after {\\n  border-top-color: #ECEFF1\\n}\\n\\n.apexcharts-xaxistooltip-top:before {\\n  border-top-color: #90A4AE;\\n}\\n\\n.apexcharts-xaxistooltip-top.apexcharts-theme-dark:after {\\n  border-top-color: rgba(0, 0, 0, 0.5);\\n}\\n\\n.apexcharts-xaxistooltip-top.apexcharts-theme-dark:before {\\n  border-top-color: rgba(0, 0, 0, 0.5);\\n}\\n\\n.apexcharts-xaxistooltip.apexcharts-active {\\n  opacity: 1;\\n  transition: 0.15s ease all;\\n}\\n\\n.apexcharts-yaxistooltip {\\n  opacity: 0;\\n  padding: 4px 10px;\\n  pointer-events: none;\\n  color: #373d3f;\\n  font-size: 13px;\\n  text-align: center;\\n  border-radius: 2px;\\n  position: absolute;\\n  z-index: 10;\\n  background: #ECEFF1;\\n  border: 1px solid #90A4AE;\\n}\\n\\n.apexcharts-yaxistooltip.apexcharts-theme-dark {\\n  background: rgba(0, 0, 0, 0.7);\\n  border: 1px solid rgba(0, 0, 0, 0.5);\\n  color: #fff;\\n}\\n\\n.apexcharts-yaxistooltip:after,\\n.apexcharts-yaxistooltip:before {\\n  top: 50%;\\n  border: solid transparent;\\n  content: \\\" \\\";\\n  height: 0;\\n  width: 0;\\n  position: absolute;\\n  pointer-events: none;\\n}\\n\\n.apexcharts-yaxistooltip:after {\\n  border-color: rgba(236, 239, 241, 0);\\n  border-width: 6px;\\n  margin-top: -6px;\\n}\\n\\n.apexcharts-yaxistooltip:before {\\n  border-color: rgba(144, 164, 174, 0);\\n  border-width: 7px;\\n  margin-top: -7px;\\n}\\n\\n.apexcharts-yaxistooltip-left:after,\\n.apexcharts-yaxistooltip-left:before {\\n  left: 100%;\\n}\\n\\n.apexcharts-yaxistooltip-right:after,\\n.apexcharts-yaxistooltip-right:before {\\n  right: 100%;\\n}\\n\\n.apexcharts-yaxistooltip-left:after {\\n  border-left-color: #ECEFF1;\\n}\\n\\n.apexcharts-yaxistooltip-left:before {\\n  border-left-color: #90A4AE;\\n}\\n\\n.apexcharts-yaxistooltip-left.apexcharts-theme-dark:after {\\n  border-left-color: rgba(0, 0, 0, 0.5);\\n}\\n\\n.apexcharts-yaxistooltip-left.apexcharts-theme-dark:before {\\n  border-left-color: rgba(0, 0, 0, 0.5);\\n}\\n\\n.apexcharts-yaxistooltip-right:after {\\n  border-right-color: #ECEFF1;\\n}\\n\\n.apexcharts-yaxistooltip-right:before {\\n  border-right-color: #90A4AE;\\n}\\n\\n.apexcharts-yaxistooltip-right.apexcharts-theme-dark:after {\\n  border-right-color: rgba(0, 0, 0, 0.5);\\n}\\n\\n.apexcharts-yaxistooltip-right.apexcharts-theme-dark:before {\\n  border-right-color: rgba(0, 0, 0, 0.5);\\n}\\n\\n.apexcharts-yaxistooltip.apexcharts-active {\\n  opacity: 1;\\n}\\n\\n.apexcharts-yaxistooltip-hidden {\\n  display: none;\\n}\\n\\n.apexcharts-xcrosshairs,\\n.apexcharts-ycrosshairs {\\n  pointer-events: none;\\n  opacity: 0;\\n  transition: 0.15s ease all;\\n}\\n\\n.apexcharts-xcrosshairs.apexcharts-active,\\n.apexcharts-ycrosshairs.apexcharts-active {\\n  opacity: 1;\\n  transition: 0.15s ease all;\\n}\\n\\n.apexcharts-ycrosshairs-hidden {\\n  opacity: 0;\\n}\\n\\n.apexcharts-selection-rect {\\n  cursor: move;\\n}\\n\\n.svg_select_boundingRect, .svg_select_points_rot {\\n  pointer-events: none;\\n  opacity: 0;\\n  visibility: hidden;\\n}\\n.apexcharts-selection-rect + g .svg_select_boundingRect,\\n.apexcharts-selection-rect + g .svg_select_points_rot {\\n  opacity: 0;\\n  visibility: hidden;\\n}\\n\\n.apexcharts-selection-rect + g .svg_select_points_l,\\n.apexcharts-selection-rect + g .svg_select_points_r {\\n  cursor: ew-resize;\\n  opacity: 1;\\n  visibility: visible;\\n}\\n\\n.svg_select_points {\\n  fill: #efefef;\\n  stroke: #333;\\n  rx: 2;\\n}\\n\\n.apexcharts-svg.apexcharts-zoomable.hovering-zoom {\\n  cursor: crosshair\\n}\\n\\n.apexcharts-svg.apexcharts-zoomable.hovering-pan {\\n  cursor: move\\n}\\n\\n.apexcharts-zoom-icon,\\n.apexcharts-zoomin-icon,\\n.apexcharts-zoomout-icon,\\n.apexcharts-reset-icon,\\n.apexcharts-pan-icon,\\n.apexcharts-selection-icon,\\n.apexcharts-menu-icon,\\n.apexcharts-toolbar-custom-icon {\\n  cursor: pointer;\\n  width: 20px;\\n  height: 20px;\\n  line-height: 24px;\\n  color: #6E8192;\\n  text-align: center;\\n}\\n\\n.apexcharts-zoom-icon svg,\\n.apexcharts-zoomin-icon svg,\\n.apexcharts-zoomout-icon svg,\\n.apexcharts-reset-icon svg,\\n.apexcharts-menu-icon svg {\\n  fill: #6E8192;\\n}\\n\\n.apexcharts-selection-icon svg {\\n  fill: #444;\\n  transform: scale(0.76)\\n}\\n\\n.apexcharts-theme-dark .apexcharts-zoom-icon svg,\\n.apexcharts-theme-dark .apexcharts-zoomin-icon svg,\\n.apexcharts-theme-dark .apexcharts-zoomout-icon svg,\\n.apexcharts-theme-dark .apexcharts-reset-icon svg,\\n.apexcharts-theme-dark .apexcharts-pan-icon svg,\\n.apexcharts-theme-dark .apexcharts-selection-icon svg,\\n.apexcharts-theme-dark .apexcharts-menu-icon svg,\\n.apexcharts-theme-dark .apexcharts-toolbar-custom-icon svg {\\n  fill: #f3f4f5;\\n}\\n\\n.apexcharts-canvas .apexcharts-zoom-icon.apexcharts-selected svg,\\n.apexcharts-canvas .apexcharts-selection-icon.apexcharts-selected svg,\\n.apexcharts-canvas .apexcharts-reset-zoom-icon.apexcharts-selected svg {\\n  fill: #008FFB;\\n}\\n\\n.apexcharts-theme-light .apexcharts-selection-icon:not(.apexcharts-selected):hover svg,\\n.apexcharts-theme-light .apexcharts-zoom-icon:not(.apexcharts-selected):hover svg,\\n.apexcharts-theme-light .apexcharts-zoomin-icon:hover svg,\\n.apexcharts-theme-light .apexcharts-zoomout-icon:hover svg,\\n.apexcharts-theme-light .apexcharts-reset-icon:hover svg,\\n.apexcharts-theme-light .apexcharts-menu-icon:hover svg {\\n  fill: #333;\\n}\\n\\n.apexcharts-selection-icon,\\n.apexcharts-menu-icon {\\n  position: relative;\\n}\\n\\n.apexcharts-reset-icon {\\n  margin-left: 5px;\\n}\\n\\n.apexcharts-zoom-icon,\\n.apexcharts-reset-icon,\\n.apexcharts-menu-icon {\\n  transform: scale(0.85);\\n}\\n\\n.apexcharts-zoomin-icon,\\n.apexcharts-zoomout-icon {\\n  transform: scale(0.7)\\n}\\n\\n.apexcharts-zoomout-icon {\\n  margin-right: 3px;\\n}\\n\\n.apexcharts-pan-icon {\\n  transform: scale(0.62);\\n  position: relative;\\n  left: 1px;\\n  top: 0px;\\n}\\n\\n.apexcharts-pan-icon svg {\\n  fill: #fff;\\n  stroke: #6E8192;\\n  stroke-width: 2;\\n}\\n\\n.apexcharts-pan-icon.apexcharts-selected svg {\\n  stroke: #008FFB;\\n}\\n\\n.apexcharts-pan-icon:not(.apexcharts-selected):hover svg {\\n  stroke: #333;\\n}\\n\\n.apexcharts-toolbar {\\n  position: absolute;\\n  z-index: 11;\\n  max-width: 176px;\\n  text-align: right;\\n  border-radius: 3px;\\n  padding: 0px 6px 2px 6px;\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n}\\n\\n.apexcharts-menu {\\n  background: #fff;\\n  position: absolute;\\n  top: 100%;\\n  border: 1px solid #ddd;\\n  border-radius: 3px;\\n  padding: 3px;\\n  right: 10px;\\n  opacity: 0;\\n  min-width: 110px;\\n  transition: 0.15s ease all;\\n  pointer-events: none;\\n}\\n\\n.apexcharts-menu.apexcharts-menu-open {\\n  opacity: 1;\\n  pointer-events: all;\\n  transition: 0.15s ease all;\\n}\\n\\n.apexcharts-menu-item {\\n  padding: 6px 7px;\\n  font-size: 12px;\\n  cursor: pointer;\\n}\\n\\n.apexcharts-theme-light .apexcharts-menu-item:hover {\\n  background: #eee;\\n}\\n\\n.apexcharts-theme-dark .apexcharts-menu {\\n  background: rgba(0, 0, 0, 0.7);\\n  color: #fff;\\n}\\n\\n@media screen and (min-width: 768px) {\\n  .apexcharts-canvas:hover .apexcharts-toolbar {\\n    opacity: 1;\\n  }\\n}\\n\\n.apexcharts-datalabel.apexcharts-element-hidden {\\n  opacity: 0;\\n}\\n\\n.apexcharts-pie-label,\\n.apexcharts-datalabels,\\n.apexcharts-datalabel,\\n.apexcharts-datalabel-label,\\n.apexcharts-datalabel-value {\\n  cursor: default;\\n  pointer-events: none;\\n}\\n\\n.apexcharts-pie-label-delay {\\n  opacity: 0;\\n  animation-name: opaque;\\n  animation-duration: 0.3s;\\n  animation-fill-mode: forwards;\\n  animation-timing-function: ease;\\n}\\n\\n.apexcharts-canvas .apexcharts-element-hidden {\\n  opacity: 0;\\n}\\n\\n.apexcharts-hide .apexcharts-series-points {\\n  opacity: 0;\\n}\\n\\n.apexcharts-gridline,\\n.apexcharts-annotation-rect,\\n.apexcharts-tooltip .apexcharts-marker,\\n.apexcharts-area-series .apexcharts-area,\\n.apexcharts-line,\\n.apexcharts-zoom-rect,\\n.apexcharts-toolbar svg,\\n.apexcharts-area-series .apexcharts-series-markers .apexcharts-marker.no-pointer-events,\\n.apexcharts-line-series .apexcharts-series-markers .apexcharts-marker.no-pointer-events,\\n.apexcharts-radar-series path,\\n.apexcharts-radar-series polygon {\\n  pointer-events: none;\\n}\\n\\n\\n/* markers */\\n\\n.apexcharts-marker {\\n  transition: 0.15s ease all;\\n}\\n\\n@keyframes opaque {\\n  0% {\\n    opacity: 0;\\n  }\\n  100% {\\n    opacity: 1;\\n  }\\n}\\n\\n\\n/* Resize generated styles */\\n\\n@keyframes resizeanim {\\n  from {\\n    opacity: 0;\\n  }\\n  to {\\n    opacity: 0;\\n  }\\n}\\n\\n.resize-triggers {\\n  animation: 1ms resizeanim;\\n  visibility: hidden;\\n  opacity: 0;\\n}\\n\\n.resize-triggers,\\n.resize-triggers>div,\\n.contract-trigger:before {\\n  content: \\\" \\\";\\n  display: block;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  height: 100%;\\n  width: 100%;\\n  overflow: hidden;\\n}\\n\\n.resize-triggers>div {\\n  background: #eee;\\n  overflow: auto;\\n}\\n\\n.contract-trigger:before {\\n  width: 200%;\\n  height: 200%;\\n}\";\n    styleInject(css);\n\n    /**\n     * Detect Element Resize\n     *\n     * https://github.com/sdecima/javascript-detect-element-resize\n     * Sebastian Decima\n     *\n     * version: 0.5.3\n     **/\n\n    (function() {\n        function resetTriggers(element) {\n            var triggers = element.__resizeTriggers__,\n                expand = triggers.firstElementChild,\n                contract = triggers.lastElementChild,\n                expandChild = expand ? expand.firstElementChild : null;\n\n            if (contract) {\n                contract.scrollLeft = contract.scrollWidth;\n                contract.scrollTop = contract.scrollHeight;\n            }\n\n            if (expandChild) {\n                expandChild.style.width = expand.offsetWidth + 1 + 'px';\n                expandChild.style.height = expand.offsetHeight + 1 + 'px';\n            }\n\n            if (expand) {\n                expand.scrollLeft = expand.scrollWidth;\n                expand.scrollTop = expand.scrollHeight;\n            }\n        }\n\n        function checkTriggers(element) {\n            return element.offsetWidth != element.__resizeLast__.width || element.offsetHeight != element.__resizeLast__.height;\n        }\n\n        function scrollListener(e) {\n            var element = this;\n            resetTriggers(this);\n            if (this.__resizeRAF__) cancelFrame(this.__resizeRAF__);\n            this.__resizeRAF__ = requestFrame(function() {\n                if (checkTriggers(element)) {\n                    element.__resizeLast__.width = element.offsetWidth;\n                    element.__resizeLast__.height = element.offsetHeight;\n\n                    element.__resizeListeners__.forEach(function(fn) {\n                        fn.call(e);\n                    });\n                }\n            });\n        }\n\n        var requestFrame = function() {\n            var raf = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || function(fn) {\n                return window.setTimeout(fn, 20);\n            };\n\n            return function(fn) {\n                return raf(fn);\n            };\n        }();\n\n        var cancelFrame = function() {\n            var cancel = window.cancelAnimationFrame || window.mozCancelAnimationFrame || window.webkitCancelAnimationFrame || window.clearTimeout;\n            return function(id) {\n                return cancel(id);\n            };\n        }();\n        /* Detect CSS Animations support to detect element display/re-attach */\n\n\n        var animation = false,\n            animationstartevent = 'animationstart',\n            domPrefixes = 'Webkit Moz O ms'.split(' '),\n            startEvents = 'webkitAnimationStart animationstart oAnimationStart MSAnimationStart'.split(' '); {\n            var elm = document.createElement('fakeelement');\n\n            if (elm.style.animationName !== undefined) {\n                animation = true;\n            }\n\n            if (animation === false) {\n                for (var i = 0; i < domPrefixes.length; i++) {\n                    if (elm.style[domPrefixes[i] + 'AnimationName'] !== undefined) {\n                        animationstartevent = startEvents[i];\n                        break;\n                    }\n                }\n            }\n        }\n        var animationName = 'resizeanim';\n\n        window.addResizeListener = function(element, fn) {\n            if (!element.__resizeTriggers__) {\n                if (getComputedStyle(element).position == 'static') element.style.position = 'relative';\n                element.__resizeLast__ = {};\n                element.__resizeListeners__ = [];\n                (element.__resizeTriggers__ = document.createElement('div')).className = 'resize-triggers';\n                element.__resizeTriggers__.innerHTML = '<div class=\"expand-trigger\"><div></div></div>' + '<div class=\"contract-trigger\"></div>';\n                element.appendChild(element.__resizeTriggers__);\n                resetTriggers(element);\n                element.addEventListener('scroll', scrollListener, true);\n                /* Listen for a css animation to detect element display/re-attach */\n\n                animationstartevent && element.__resizeTriggers__.addEventListener(animationstartevent, function(e) {\n                    if (e.animationName == animationName) {\n                        resetTriggers(element);\n                    }\n                });\n            }\n\n            element.__resizeListeners__.push(fn);\n        };\n\n        window.removeResizeListener = function(element, fn) {\n            if (element) {\n                element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n\n                if (!element.__resizeListeners__.length) {\n                    element.removeEventListener('scroll', scrollListener);\n\n                    if (element.__resizeTriggers__.parentNode) {\n                        element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);\n                    }\n                }\n            }\n        };\n    })();\n\n    if (typeof window.Apex === 'undefined') {\n        window.Apex = {};\n    }\n\n    var InitCtxVariables = /*#__PURE__*/ function() {\n        function InitCtxVariables(ctx) {\n            _classCallCheck(this, InitCtxVariables);\n\n            this.ctx = ctx;\n            this.w = ctx.w;\n        }\n\n        _createClass(InitCtxVariables, [{\n            key: \"initModules\",\n            value: function initModules() {\n                this.ctx.publicMethods = ['updateOptions', 'updateSeries', 'appendData', 'appendSeries', 'toggleSeries', 'showSeries', 'hideSeries', 'setLocale', 'resetSeries', 'zoomX', 'toggleDataPointSelection', 'dataURI', 'addXaxisAnnotation', 'addYaxisAnnotation', 'addPointAnnotation', 'clearAnnotations', 'removeAnnotation', 'paper', 'destroy'];\n                this.ctx.eventList = ['click', 'mousedown', 'mousemove', 'mouseleave', 'touchstart', 'touchmove', 'touchleave', 'mouseup', 'touchend'];\n                this.ctx.animations = new Animations(this.ctx);\n                this.ctx.axes = new Axes(this.ctx);\n                this.ctx.core = new Core(this.ctx.el, this.ctx);\n                this.ctx.config = new Config({});\n                this.ctx.data = new Data(this.ctx);\n                this.ctx.grid = new Grid(this.ctx);\n                this.ctx.graphics = new Graphics(this.ctx);\n                this.ctx.coreUtils = new CoreUtils(this.ctx);\n                this.ctx.crosshairs = new Crosshairs(this.ctx);\n                this.ctx.events = new Events(this.ctx);\n                this.ctx.exports = new Exports(this.ctx);\n                this.ctx.localization = new Localization(this.ctx);\n                this.ctx.options = new Options();\n                this.ctx.responsive = new Responsive(this.ctx);\n                this.ctx.series = new Series(this.ctx);\n                this.ctx.theme = new Theme(this.ctx);\n                this.ctx.formatters = new Formatters(this.ctx);\n                this.ctx.titleSubtitle = new TitleSubtitle(this.ctx);\n                this.ctx.legend = new Legend(this.ctx);\n                this.ctx.toolbar = new Toolbar(this.ctx);\n                this.ctx.dimensions = new Dimensions(this.ctx);\n                this.ctx.updateHelpers = new UpdateHelpers(this.ctx);\n                this.ctx.zoomPanSelection = new ZoomPanSelection(this.ctx);\n                this.ctx.w.globals.tooltip = new Tooltip(this.ctx);\n            }\n        }]);\n\n        return InitCtxVariables;\n    }();\n\n    var Destroy = /*#__PURE__*/ function() {\n        function Destroy(ctx) {\n            _classCallCheck(this, Destroy);\n\n            this.ctx = ctx;\n            this.w = ctx.w;\n        }\n\n        _createClass(Destroy, [{\n            key: \"clear\",\n            value: function clear(_ref) {\n                var isUpdating = _ref.isUpdating;\n\n                if (this.ctx.zoomPanSelection) {\n                    this.ctx.zoomPanSelection.destroy();\n                }\n\n                if (this.ctx.toolbar) {\n                    this.ctx.toolbar.destroy();\n                }\n\n                this.ctx.animations = null;\n                this.ctx.axes = null;\n                this.ctx.annotations = null;\n                this.ctx.core = null;\n                this.ctx.data = null;\n                this.ctx.grid = null;\n                this.ctx.series = null;\n                this.ctx.responsive = null;\n                this.ctx.theme = null;\n                this.ctx.formatters = null;\n                this.ctx.titleSubtitle = null;\n                this.ctx.legend = null;\n                this.ctx.dimensions = null;\n                this.ctx.options = null;\n                this.ctx.crosshairs = null;\n                this.ctx.zoomPanSelection = null;\n                this.ctx.updateHelpers = null;\n                this.ctx.toolbar = null;\n                this.ctx.localization = null;\n                this.ctx.w.globals.tooltip = null;\n                this.clearDomElements({\n                    isUpdating: isUpdating\n                });\n            }\n        }, {\n            key: \"killSVG\",\n            value: function killSVG(draw) {\n                draw.each(function(i, children) {\n                    this.removeClass('*');\n                    this.off();\n                    this.stop();\n                }, true);\n                draw.ungroup();\n                draw.clear();\n            }\n        }, {\n            key: \"clearDomElements\",\n            value: function clearDomElements(_ref2) {\n                var _this = this;\n\n                var isUpdating = _ref2.isUpdating;\n                var elSVG = this.w.globals.dom.Paper.node; // fixes apexcharts.js#1654 & vue-apexcharts#256\n\n                if (elSVG.parentNode && elSVG.parentNode.parentNode && !isUpdating) {\n                    elSVG.parentNode.parentNode.style.minHeight = 'unset';\n                } // detach root event\n\n\n                var baseEl = this.w.globals.dom.baseEl;\n\n                if (baseEl) {\n                    // see https://github.com/apexcharts/vue-apexcharts/issues/275\n                    this.ctx.eventList.forEach(function(event) {\n                        baseEl.removeEventListener(event, _this.ctx.events.documentEvent);\n                    });\n                }\n\n                var domEls = this.w.globals.dom;\n\n                if (this.ctx.el !== null) {\n                    // remove all child elements - resetting the whole chart\n                    while (this.ctx.el.firstChild) {\n                        this.ctx.el.removeChild(this.ctx.el.firstChild);\n                    }\n                }\n\n                this.killSVG(domEls.Paper);\n                domEls.Paper.remove();\n                domEls.elWrap = null;\n                domEls.elGraphical = null;\n                domEls.elAnnotations = null;\n                domEls.elLegendWrap = null;\n                domEls.baseEl = null;\n                domEls.elGridRect = null;\n                domEls.elGridRectMask = null;\n                domEls.elGridRectMarkerMask = null;\n                domEls.elForecastMask = null;\n                domEls.elNonForecastMask = null;\n                domEls.elDefs = null;\n            }\n        }]);\n\n        return Destroy;\n    }();\n\n    /**\n     *\n     * @module ApexCharts\n     **/\n\n    var ApexCharts$1 = /*#__PURE__*/ function() {\n        function ApexCharts(el, opts) {\n            _classCallCheck(this, ApexCharts);\n\n            this.opts = opts;\n            this.ctx = this; // Pass the user supplied options to the Base Class where these options will be extended with defaults. The returned object from Base Class will become the config object in the entire codebase.\n\n            this.w = new Base(opts).init();\n            this.el = el;\n            this.w.globals.cuid = Utils.randomId();\n            this.w.globals.chartID = this.w.config.chart.id ? Utils.escapeString(this.w.config.chart.id) : this.w.globals.cuid;\n            var initCtx = new InitCtxVariables(this);\n            initCtx.initModules();\n            this.create = Utils.bind(this.create, this);\n            this.windowResizeHandler = this._windowResizeHandler.bind(this);\n            this.parentResizeHandler = this._parentResizeCallback.bind(this);\n        }\n        /**\n         * The primary method user will call to render the chart.\n         */\n\n\n        _createClass(ApexCharts, [{\n            key: \"render\",\n            value: function render() {\n                var _this = this;\n\n                // main method\n                return new Promise(function(resolve, reject) {\n                    // only draw chart, if element found\n                    if (_this.el !== null) {\n                        if (typeof Apex._chartInstances === 'undefined') {\n                            Apex._chartInstances = [];\n                        }\n\n                        if (_this.w.config.chart.id) {\n                            Apex._chartInstances.push({\n                                id: _this.w.globals.chartID,\n                                group: _this.w.config.chart.group,\n                                chart: _this\n                            });\n                        } // set the locale here\n\n\n                        _this.setLocale(_this.w.config.chart.defaultLocale);\n\n                        var beforeMount = _this.w.config.chart.events.beforeMount;\n\n                        if (typeof beforeMount === 'function') {\n                            beforeMount(_this, _this.w);\n                        }\n\n                        _this.events.fireEvent('beforeMount', [_this, _this.w]);\n\n                        window.addEventListener('resize', _this.windowResizeHandler);\n                        window.addResizeListener(_this.el.parentNode, _this.parentResizeHandler);\n\n                        var graphData = _this.create(_this.w.config.series, {});\n\n                        if (!graphData) return resolve(_this);\n\n                        _this.mount(graphData).then(function() {\n                            if (typeof _this.w.config.chart.events.mounted === 'function') {\n                                _this.w.config.chart.events.mounted(_this, _this.w);\n                            }\n\n                            _this.events.fireEvent('mounted', [_this, _this.w]);\n\n                            resolve(graphData);\n                        }).catch(function(e) {\n                            reject(e); // handle error in case no data or element not found\n                        });\n                    } else {\n                        reject(new Error('Element not found'));\n                    }\n                });\n            }\n        }, {\n            key: \"create\",\n            value: function create(ser, opts) {\n                var w = this.w;\n                var initCtx = new InitCtxVariables(this);\n                initCtx.initModules();\n                var gl = this.w.globals;\n                gl.noData = false;\n                gl.animationEnded = false;\n                this.responsive.checkResponsiveConfig(opts);\n\n                if (w.config.xaxis.convertedCatToNumeric) {\n                    var defaults = new Defaults(w.config);\n                    defaults.convertCatToNumericXaxis(w.config, this.ctx);\n                }\n\n                if (this.el === null) {\n                    gl.animationEnded = true;\n                    return null;\n                }\n\n                this.core.setupElements();\n\n                if (w.config.chart.type === 'treemap') {\n                    w.config.grid.show = false;\n                    w.config.yaxis[0].show = false;\n                }\n\n                if (gl.svgWidth === 0) {\n                    // if the element is hidden, skip drawing\n                    gl.animationEnded = true;\n                    return null;\n                }\n\n                var combo = CoreUtils.checkComboSeries(ser);\n                gl.comboCharts = combo.comboCharts;\n                gl.comboBarCount = combo.comboBarCount;\n                var allSeriesAreEmpty = ser.every(function(s) {\n                    return s.data && s.data.length === 0;\n                });\n\n                if (ser.length === 0 || allSeriesAreEmpty) {\n                    this.series.handleNoData();\n                }\n\n                this.events.setupEventHandlers(); // Handle the data inputted by user and set some of the global variables (for eg, if data is datetime / numeric / category). Don't calculate the range / min / max at this time\n\n                this.data.parseData(ser); // this is a good time to set theme colors first\n\n                this.theme.init(); // as markers accepts array, we need to setup global markers for easier access\n\n                var markers = new Markers(this);\n                markers.setGlobalMarkerSize(); // labelFormatters should be called before dimensions as in dimensions we need text labels width\n\n                this.formatters.setLabelFormatters();\n                this.titleSubtitle.draw(); // legend is calculated here before coreCalculations because it affects the plottable area\n                // if there is some data to show or user collapsed all series, then proceed drawing legend\n\n                if (!gl.noData || gl.collapsedSeries.length === gl.series.length || w.config.legend.showForSingleSeries) {\n                    this.legend.init();\n                } // check whether in multiple series, all series share the same X\n\n\n                this.series.hasAllSeriesEqualX(); // coreCalculations will give the min/max range and yaxis/axis values. It should be called here to set series variable from config to globals\n\n                if (gl.axisCharts) {\n                    this.core.coreCalculations();\n\n                    if (w.config.xaxis.type !== 'category') {\n                        // as we have minX and maxX values, determine the default DateTimeFormat for time series\n                        this.formatters.setLabelFormatters();\n                    }\n\n                    this.ctx.toolbar.minX = w.globals.minX;\n                    this.ctx.toolbar.maxX = w.globals.maxX;\n                } // we need to generate yaxis for heatmap separately as we are not showing numerics there, but seriesNames. There are some tweaks which are required for heatmap to align labels correctly which are done in below function\n                // Also we need to do this before calculating Dimensions plotCoords() method of Dimensions\n\n\n                this.formatters.heatmapLabelFormatters(); // We got plottable area here, next task would be to calculate axis areas\n\n                this.dimensions.plotCoords();\n                var xyRatios = this.core.xySettings();\n                this.grid.createGridMask();\n                var elGraph = this.core.plotChartType(ser, xyRatios);\n                var dataLabels = new DataLabels(this);\n                dataLabels.bringForward();\n\n                if (w.config.dataLabels.background.enabled) {\n                    dataLabels.dataLabelsBackground();\n                } // after all the drawing calculations, shift the graphical area (actual charts/bars) excluding legends\n\n\n                this.core.shiftGraphPosition();\n                var dim = {\n                    plot: {\n                        left: w.globals.translateX,\n                        top: w.globals.translateY,\n                        width: w.globals.gridWidth,\n                        height: w.globals.gridHeight\n                    }\n                };\n                return {\n                    elGraph: elGraph,\n                    xyRatios: xyRatios,\n                    elInner: w.globals.dom.elGraphical,\n                    dimensions: dim\n                };\n            }\n        }, {\n            key: \"mount\",\n            value: function mount() {\n                    var _this2 = this;\n\n                    var graphData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n                    var me = this;\n                    var w = me.w;\n                    return new Promise(function(resolve, reject) {\n                        // no data to display\n                        if (me.el === null) {\n                            return reject(new Error('Not enough data to display or target element not found'));\n                        } else if (graphData === null || w.globals.allSeriesCollapsed) {\n                            me.series.handleNoData();\n                        }\n\n                        if (w.config.chart.type !== 'treemap') {\n                            me.axes.drawAxis(w.config.chart.type, graphData.xyRatios);\n                        }\n\n                        me.grid = new Grid(me);\n                        var elgrid = me.grid.drawGrid();\n                        me.annotations = new Annotations(me);\n                        me.annotations.drawImageAnnos();\n                        me.annotations.drawTextAnnos();\n\n                        if (w.config.grid.position === 'back' && elgrid) {\n                            w.globals.dom.elGraphical.add(elgrid.el);\n                        }\n\n                        var xAxis = new XAxis(_this2.ctx);\n                        var yaxis = new YAxis(_this2.ctx);\n\n                        if (elgrid !== null) {\n                            xAxis.xAxisLabelCorrections(elgrid.xAxisTickWidth);\n                            yaxis.setYAxisTextAlignments();\n                            w.config.yaxis.map(function(yaxe, index) {\n                                if (w.globals.ignoreYAxisIndexes.indexOf(index) === -1) {\n                                    yaxis.yAxisTitleRotate(index, yaxe.opposite);\n                                }\n                            });\n                        }\n\n                        if (w.config.annotations.position === 'back') {\n                            w.globals.dom.Paper.add(w.globals.dom.elAnnotations);\n                            me.annotations.drawAxesAnnotations();\n                        }\n\n                        if (Array.isArray(graphData.elGraph)) {\n                            for (var g = 0; g < graphData.elGraph.length; g++) {\n                                w.globals.dom.elGraphical.add(graphData.elGraph[g]);\n                            }\n                        } else {\n                            w.globals.dom.elGraphical.add(graphData.elGraph);\n                        }\n\n                        if (w.config.grid.position === 'front' && elgrid) {\n                            w.globals.dom.elGraphical.add(elgrid.el);\n                        }\n\n                        if (w.config.xaxis.crosshairs.position === 'front') {\n                            me.crosshairs.drawXCrosshairs();\n                        }\n\n                        if (w.config.yaxis[0].crosshairs.position === 'front') {\n                            me.crosshairs.drawYCrosshairs();\n                        }\n\n                        if (w.config.annotations.position === 'front') {\n                            w.globals.dom.Paper.add(w.globals.dom.elAnnotations);\n                            me.annotations.drawAxesAnnotations();\n                        }\n\n                        if (!w.globals.noData) {\n                            // draw tooltips at the end\n                            if (w.config.tooltip.enabled && !w.globals.noData) {\n                                me.w.globals.tooltip.drawTooltip(graphData.xyRatios);\n                            }\n\n                            if (w.globals.axisCharts && (w.globals.isXNumeric || w.config.xaxis.convertedCatToNumeric || w.globals.isTimelineBar)) {\n                                if (w.config.chart.zoom.enabled || w.config.chart.selection && w.config.chart.selection.enabled || w.config.chart.pan && w.config.chart.pan.enabled) {\n                                    me.zoomPanSelection.init({\n                                        xyRatios: graphData.xyRatios\n                                    });\n                                }\n                            } else {\n                                var tools = w.config.chart.toolbar.tools;\n                                var toolsArr = ['zoom', 'zoomin', 'zoomout', 'selection', 'pan', 'reset'];\n                                toolsArr.forEach(function(t) {\n                                    tools[t] = false;\n                                });\n                            }\n\n                            if (w.config.chart.toolbar.show && !w.globals.allSeriesCollapsed) {\n                                me.toolbar.createToolbar();\n                            }\n                        }\n\n                        if (w.globals.memory.methodsToExec.length > 0) {\n                            w.globals.memory.methodsToExec.forEach(function(fn) {\n                                fn.method(fn.params, false, fn.context);\n                            });\n                        }\n\n                        if (!w.globals.axisCharts && !w.globals.noData) {\n                            me.core.resizeNonAxisCharts();\n                        }\n\n                        resolve(me);\n                    });\n                }\n                /**\n                 * Destroy the chart instance by removing all elements which also clean up event listeners on those elements.\n                 */\n\n        }, {\n            key: \"destroy\",\n            value: function destroy() {\n                    window.removeEventListener('resize', this.windowResizeHandler);\n                    window.removeResizeListener(this.el.parentNode, this.parentResizeHandler); // remove the chart's instance from the global Apex._chartInstances\n\n                    var chartID = this.w.config.chart.id;\n\n                    if (chartID) {\n                        Apex._chartInstances.forEach(function(c, i) {\n                            if (c.id === Utils.escapeString(chartID)) {\n                                Apex._chartInstances.splice(i, 1);\n                            }\n                        });\n                    }\n\n                    new Destroy(this.ctx).clear({\n                        isUpdating: false\n                    });\n                }\n                /**\n                 * Allows users to update Options after the chart has rendered.\n                 *\n                 * @param {object} options - A new config object can be passed which will be merged with the existing config object\n                 * @param {boolean} redraw - should redraw from beginning or should use existing paths and redraw from there\n                 * @param {boolean} animate - should animate or not on updating Options\n                 */\n\n        }, {\n            key: \"updateOptions\",\n            value: function updateOptions(options) {\n                    var _this3 = this;\n\n                    var redraw = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n                    var animate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n                    var updateSyncedCharts = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n                    var overwriteInitialConfig = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n                    var w = this.w; // when called externally, clear some global variables\n                    // fixes apexcharts.js#1488\n\n                    w.globals.selection = undefined;\n\n                    if (options.series) {\n                        this.series.resetSeries(false, true, false);\n\n                        if (options.series.length && options.series[0].data) {\n                            options.series = options.series.map(function(s, i) {\n                                return _this3.updateHelpers._extendSeries(s, i);\n                            });\n                        } // user updated the series via updateOptions() function.\n                        // Hence, we need to reset axis min/max to avoid zooming issues\n\n\n                        this.updateHelpers.revertDefaultAxisMinMax();\n                    } // user has set x-axis min/max externally - hence we need to forcefully set the xaxis min/max\n\n\n                    if (options.xaxis) {\n                        options = this.updateHelpers.forceXAxisUpdate(options);\n                    }\n\n                    if (options.yaxis) {\n                        options = this.updateHelpers.forceYAxisUpdate(options);\n                    }\n\n                    if (w.globals.collapsedSeriesIndices.length > 0) {\n                        this.series.clearPreviousPaths();\n                    }\n                    /* update theme mode#459 */\n\n\n                    if (options.theme) {\n                        options = this.theme.updateThemeOptions(options);\n                    }\n\n                    return this.updateHelpers._updateOptions(options, redraw, animate, updateSyncedCharts, overwriteInitialConfig);\n                }\n                /**\n                 * Allows users to update Series after the chart has rendered.\n                 *\n                 * @param {array} series - New series which will override the existing\n                 */\n\n        }, {\n            key: \"updateSeries\",\n            value: function updateSeries() {\n                    var newSeries = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n                    var animate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n                    var overwriteInitialSeries = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n                    this.series.resetSeries(false);\n                    this.updateHelpers.revertDefaultAxisMinMax();\n                    return this.updateHelpers._updateSeries(newSeries, animate, overwriteInitialSeries);\n                }\n                /**\n                 * Allows users to append a new series after the chart has rendered.\n                 *\n                 * @param {array} newSerie - New serie which will be appended to the existing series\n                 */\n\n        }, {\n            key: \"appendSeries\",\n            value: function appendSeries(newSerie) {\n                    var animate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n                    var overwriteInitialSeries = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n                    var newSeries = this.w.config.series.slice();\n                    newSeries.push(newSerie);\n                    this.series.resetSeries(false);\n                    this.updateHelpers.revertDefaultAxisMinMax();\n                    return this.updateHelpers._updateSeries(newSeries, animate, overwriteInitialSeries);\n                }\n                /**\n                 * Allows users to append Data to series.\n                 *\n                 * @param {array} newData - New data in the same format as series\n                 */\n\n        }, {\n            key: \"appendData\",\n            value: function appendData(newData) {\n                var overwriteInitialSeries = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n                var me = this;\n                me.w.globals.dataChanged = true;\n                me.series.getPreviousPaths();\n                var newSeries = me.w.config.series.slice();\n\n                for (var i = 0; i < newSeries.length; i++) {\n                    if (newData[i] !== null && typeof newData[i] !== 'undefined') {\n                        for (var j = 0; j < newData[i].data.length; j++) {\n                            newSeries[i].data.push(newData[i].data[j]);\n                        }\n                    }\n                }\n\n                me.w.config.series = newSeries;\n\n                if (overwriteInitialSeries) {\n                    me.w.globals.initialSeries = Utils.clone(me.w.config.series);\n                }\n\n                return this.update();\n            }\n        }, {\n            key: \"update\",\n            value: function update(options) {\n                    var _this4 = this;\n\n                    return new Promise(function(resolve, reject) {\n                        new Destroy(_this4.ctx).clear({\n                            isUpdating: true\n                        });\n\n                        var graphData = _this4.create(_this4.w.config.series, options);\n\n                        if (!graphData) return resolve(_this4);\n\n                        _this4.mount(graphData).then(function() {\n                            if (typeof _this4.w.config.chart.events.updated === 'function') {\n                                _this4.w.config.chart.events.updated(_this4, _this4.w);\n                            }\n\n                            _this4.events.fireEvent('updated', [_this4, _this4.w]);\n\n                            _this4.w.globals.isDirty = true;\n                            resolve(_this4);\n                        }).catch(function(e) {\n                            reject(e);\n                        });\n                    });\n                }\n                /**\n                 * Get all charts in the same \"group\" (including the instance which is called upon) to sync them when user zooms in/out or pan.\n                 */\n\n        }, {\n            key: \"getSyncedCharts\",\n            value: function getSyncedCharts() {\n                    var chartGroups = this.getGroupedCharts();\n                    var allCharts = [this];\n\n                    if (chartGroups.length) {\n                        allCharts = [];\n                        chartGroups.forEach(function(ch) {\n                            allCharts.push(ch);\n                        });\n                    }\n\n                    return allCharts;\n                }\n                /**\n                 * Get charts in the same \"group\" (excluding the instance which is called upon) to perform operations on the other charts of the same group (eg., tooltip hovering)\n                 */\n\n        }, {\n            key: \"getGroupedCharts\",\n            value: function getGroupedCharts() {\n                var _this5 = this;\n\n                return Apex._chartInstances.filter(function(ch) {\n                    if (ch.group) {\n                        return true;\n                    }\n                }).map(function(ch) {\n                    return _this5.w.config.chart.group === ch.group ? ch.chart : _this5;\n                });\n            }\n        }, {\n            key: \"toggleSeries\",\n            value: function toggleSeries(seriesName) {\n                return this.series.toggleSeries(seriesName);\n            }\n        }, {\n            key: \"showSeries\",\n            value: function showSeries(seriesName) {\n                this.series.showSeries(seriesName);\n            }\n        }, {\n            key: \"hideSeries\",\n            value: function hideSeries(seriesName) {\n                this.series.hideSeries(seriesName);\n            }\n        }, {\n            key: \"resetSeries\",\n            value: function resetSeries() {\n                    var shouldUpdateChart = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n                    var shouldResetZoom = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n                    this.series.resetSeries(shouldUpdateChart, shouldResetZoom);\n                } // Public method to add event listener on chart context\n\n        }, {\n            key: \"addEventListener\",\n            value: function addEventListener(name, handler) {\n                    this.events.addEventListener(name, handler);\n                } // Public method to remove event listener on chart context\n\n        }, {\n            key: \"removeEventListener\",\n            value: function removeEventListener(name, handler) {\n                this.events.removeEventListener(name, handler);\n            }\n        }, {\n            key: \"addXaxisAnnotation\",\n            value: function addXaxisAnnotation(opts) {\n                var pushToMemory = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n                var context = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n                var me = this;\n\n                if (context) {\n                    me = context;\n                }\n\n                me.annotations.addXaxisAnnotationExternal(opts, pushToMemory, me);\n            }\n        }, {\n            key: \"addYaxisAnnotation\",\n            value: function addYaxisAnnotation(opts) {\n                var pushToMemory = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n                var context = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n                var me = this;\n\n                if (context) {\n                    me = context;\n                }\n\n                me.annotations.addYaxisAnnotationExternal(opts, pushToMemory, me);\n            }\n        }, {\n            key: \"addPointAnnotation\",\n            value: function addPointAnnotation(opts) {\n                var pushToMemory = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n                var context = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n                var me = this;\n\n                if (context) {\n                    me = context;\n                }\n\n                me.annotations.addPointAnnotationExternal(opts, pushToMemory, me);\n            }\n        }, {\n            key: \"clearAnnotations\",\n            value: function clearAnnotations() {\n                var context = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n                var me = this;\n\n                if (context) {\n                    me = context;\n                }\n\n                me.annotations.clearAnnotations(me);\n            }\n        }, {\n            key: \"removeAnnotation\",\n            value: function removeAnnotation(id) {\n                var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n                var me = this;\n\n                if (context) {\n                    me = context;\n                }\n\n                me.annotations.removeAnnotation(me, id);\n            }\n        }, {\n            key: \"getChartArea\",\n            value: function getChartArea() {\n                var el = this.w.globals.dom.baseEl.querySelector('.apexcharts-inner');\n                return el;\n            }\n        }, {\n            key: \"getSeriesTotalXRange\",\n            value: function getSeriesTotalXRange(minX, maxX) {\n                return this.coreUtils.getSeriesTotalsXRange(minX, maxX);\n            }\n        }, {\n            key: \"getHighestValueInSeries\",\n            value: function getHighestValueInSeries() {\n                var seriesIndex = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n                var range = new Range$1(this.ctx);\n                return range.getMinYMaxY(seriesIndex).highestY;\n            }\n        }, {\n            key: \"getLowestValueInSeries\",\n            value: function getLowestValueInSeries() {\n                var seriesIndex = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n                var range = new Range$1(this.ctx);\n                return range.getMinYMaxY(seriesIndex).lowestY;\n            }\n        }, {\n            key: \"getSeriesTotal\",\n            value: function getSeriesTotal() {\n                return this.w.globals.seriesTotals;\n            }\n        }, {\n            key: \"toggleDataPointSelection\",\n            value: function toggleDataPointSelection(seriesIndex, dataPointIndex) {\n                return this.updateHelpers.toggleDataPointSelection(seriesIndex, dataPointIndex);\n            }\n        }, {\n            key: \"zoomX\",\n            value: function zoomX(min, max) {\n                this.ctx.toolbar.zoomUpdateOptions(min, max);\n            }\n        }, {\n            key: \"setLocale\",\n            value: function setLocale(localeName) {\n                this.localization.setCurrentLocaleValues(localeName);\n            }\n        }, {\n            key: \"dataURI\",\n            value: function dataURI(options) {\n                var exp = new Exports(this.ctx);\n                return exp.dataURI(options);\n            }\n        }, {\n            key: \"paper\",\n            value: function paper() {\n                return this.w.globals.dom.Paper;\n            }\n        }, {\n            key: \"_parentResizeCallback\",\n            value: function _parentResizeCallback() {\n                    if (this.w.globals.animationEnded && this.w.config.chart.redrawOnParentResize) {\n                        this._windowResize();\n                    }\n                }\n                /**\n                 * Handle window resize and re-draw the whole chart.\n                 */\n\n        }, {\n            key: \"_windowResize\",\n            value: function _windowResize() {\n                var _this6 = this;\n\n                clearTimeout(this.w.globals.resizeTimer);\n                this.w.globals.resizeTimer = window.setTimeout(function() {\n                    _this6.w.globals.resized = true;\n                    _this6.w.globals.dataChanged = false; // we need to redraw the whole chart on window resize (with a small delay).\n\n                    _this6.ctx.update();\n                }, 150);\n            }\n        }, {\n            key: \"_windowResizeHandler\",\n            value: function _windowResizeHandler() {\n                var redraw = this.w.config.chart.redrawOnWindowResize;\n\n                if (typeof redraw === 'function') {\n                    redraw = redraw();\n                }\n\n                redraw && this._windowResize();\n            }\n        }], [{\n            key: \"getChartByID\",\n            value: function getChartByID(id) {\n                    var chartId = Utils.escapeString(id);\n\n                    var c = Apex._chartInstances.filter(function(ch) {\n                        return ch.id === chartId;\n                    })[0];\n\n                    return c && c.chart;\n                }\n                /**\n                 * Allows the user to provide data attrs in the element and the chart will render automatically when this method is called by searching for the elements containing 'data-apexcharts' attribute\n                 */\n\n        }, {\n            key: \"initOnLoad\",\n            value: function initOnLoad() {\n                    var els = document.querySelectorAll('[data-apexcharts]');\n\n                    for (var i = 0; i < els.length; i++) {\n                        var el = els[i];\n                        var options = JSON.parse(els[i].getAttribute('data-options'));\n                        var apexChart = new ApexCharts(el, options);\n                        apexChart.render();\n                    }\n                }\n                /**\n                 * This static method allows users to call chart methods without necessarily from the\n                 * instance of the chart in case user has assigned chartID to the targeted chart.\n                 * The chartID is used for mapping the instance stored in Apex._chartInstances global variable\n                 *\n                 * This is helpful in cases when you don't have reference of the chart instance\n                 * easily and need to call the method from anywhere.\n                 * For eg, in React/Vue applications when you have many parent/child components,\n                 * and need easy reference to other charts for performing dynamic operations\n                 *\n                 * @param {string} chartID - The unique identifier which will be used to call methods\n                 * on that chart instance\n                 * @param {function} fn - The method name to call\n                 * @param {object} opts - The parameters which are accepted in the original method will be passed here in the same order.\n                 */\n\n        }, {\n            key: \"exec\",\n            value: function exec(chartID, fn) {\n                var chart = this.getChartByID(chartID);\n                if (!chart) return; // turn on the global exec flag to indicate this method was called\n\n                chart.w.globals.isExecCalled = true;\n                var ret = null;\n\n                if (chart.publicMethods.indexOf(fn) !== -1) {\n                    for (var _len = arguments.length, opts = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n                        opts[_key - 2] = arguments[_key];\n                    }\n\n                    ret = chart[fn].apply(chart, opts);\n                }\n\n                return ret;\n            }\n        }, {\n            key: \"merge\",\n            value: function merge(target, source) {\n                return Utils.extend(target, source);\n            }\n        }]);\n\n        return ApexCharts;\n    }();\n\n    return ApexCharts$1;\n\n});"],"file":"apexcharts.min.js"}